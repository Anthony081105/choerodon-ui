(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{1771:function(n,s,a){"use strict";function t(n){return n.replace(/\s*\n\s*/g,"")}a.d(s,"a",(function(){return t}))},2301:function(n,s,a){n.exports={content:{"zh-CN":[["p","基本使用。"]],"en-US":[["p","Basic usage example."]]},meta:{order:0,title:{"zh-CN":"基本使用","en-US":"Basic usage"},filename:"components-pro/code-area/demo/basic.md",id:"components-pro-code-area-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Row<span class="token punctuation">,</span> Col <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span> readOnly<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> disabled<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleChange <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> readOnly<span class="token punctuation">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleDisabledChange <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> disabled<span class="token punctuation">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> readOnly<span class="token punctuation">,</span> disabled <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span> <span class="token attr-name">gutter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span> <span class="token attr-name">readOnly</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>readOnly<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ReadOnly<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>readOnly<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>只读<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Switch</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Disabled<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleDisabledChange<span class="token punctuation">}</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>禁用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Switch</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Row<span class="token punctuation">,</span> Col <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span> readOnly<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> disabled<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> readOnly<span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleDisabledChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> disabled<span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> readOnly<span class="token punctuation">,</span> disabled <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span></span> <span class="token attr-name">gutter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span> <span class="token attr-name">readOnly</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>readOnly<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ReadOnly<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>readOnly<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>只读<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Switch</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Disabled<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleDisabledChange<span class="token punctuation">}</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>禁用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Switch</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Row</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(9),a(162));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function e(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function o(n,s){return(o=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function c(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function u(n){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}var l={height:30},i=function(a){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&o(n,s)}(d,a);var t,i,r,k=function(n){function s(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}return function(){var a,t=u(n);if(s()){var p=u(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return c(this,a)}}(d);function d(){var n;p(this,d);for(var s=arguments.length,a=new Array(s),t=0;t<s;t++)a[t]=arguments[t];return(n=k.call.apply(k,[this].concat(a))).state={readOnly:!0,disabled:!0},n.handleChange=function(s){n.setState({readOnly:s})},n.handleDisabledChange=function(s){n.setState({disabled:s})},n}return t=d,(i=[{key:"render",value:function(){var a=this.state,t=a.readOnly,p=a.disabled;return n.createElement(s.Row,{gutter:10},n.createElement(s.Col,{span:8},n.createElement(s.CodeArea,{style:l})),n.createElement(s.Col,{span:8},n.createElement(s.CodeArea,{readOnly:t,style:l,defaultValue:"ReadOnly"}),n.createElement(s.Switch,{onChange:this.handleChange,checked:t},"只读")),n.createElement(s.Col,{span:8},n.createElement(s.CodeArea,{disabled:p,style:l,defaultValue:"Disabled"}),n.createElement(s.Switch,{onChange:this.handleDisabledChange,checked:p},"禁用")))}}])&&e(t.prototype,i),r&&e(t,r),d}(n.Component);return n.createElement(i,null)}}},2302:function(n,s,a){n.exports={content:{"zh-CN":[["p","受控代码框。"]],"en-US":[["p","Controlled Code Area."]]},meta:{order:1,title:{"zh-CN":"受控代码框","en-US":"Controlled Code Area"},filename:"components-pro/code-area/demo/controlled.md",id:"components-pro-code-area-demo-controlled"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    value<span class="token punctuation">:</span> <span class="token string">\'Controlled Value\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n\n  handleChange <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    value<span class="token operator">:</span> <span class="token string">\'Controlled Value\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(9),a(162));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function e(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function o(n,s){return(o=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function c(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function u(n){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}var l={height:30},i=function(a){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&o(n,s)}(d,a);var t,i,r,k=function(n){function s(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}return function(){var a,t=u(n);if(s()){var p=u(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return c(this,a)}}(d);function d(){var n;p(this,d);for(var s=arguments.length,a=new Array(s),t=0;t<s;t++)a[t]=arguments[t];return(n=k.call.apply(k,[this].concat(a))).state={value:"Controlled Value"},n.handleChange=function(s){n.setState({value:s})},n}return t=d,(i=[{key:"render",value:function(){return n.createElement(s.CodeArea,{value:this.state.value,style:l,onChange:this.handleChange})}}])&&e(t.prototype,i),r&&e(t,r),d}(n.Component);return n.createElement(i,null)}}},2303:function(n,s,a){n.exports={content:{"zh-CN":[["p","数据绑定"]],"en-US":[["p","Dataset."]]},meta:{order:2,title:{"zh-CN":"数据绑定","en-US":"Dataset"},filename:"components-pro/code-area/demo/dataset.md",id:"components-pro-code-area-demo-dataset"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">550</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> jsonText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> readOnly<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span> <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">550</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> jsonText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> readOnly<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span> <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(9),a(162));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function e(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function o(n,s){return(o=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function c(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function u(n){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}var l='{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n',i={height:550},r=function(a){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&o(n,s)}(m,a);var t,r,k,d=function(n){function s(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}return function(){var a,t=u(n);if(s()){var p=u(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return c(this,a)}}(m);function m(){var n;p(this,m);for(var a=arguments.length,t=new Array(a),e=0;e<a;e++)t[e]=arguments[e];return(n=d.call.apply(d,[this].concat(t))).ds=new s.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:l,required:!0,readOnly:!0}]}),n}return t=m,(r=[{key:"render",value:function(){return n.createElement(s.CodeArea,{dataSet:this.ds,name:"content",style:i})}}])&&e(t.prototype,r),k&&e(t,k),m}(n.Component);return n.createElement(r,null)}}},2304:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用快捷键格式化代码，要传入一个 formatter 对象。默认的格式化快捷键是",["code","Alt + F"],"，去格式化快捷键是",["code","Alt + R"],"，可以通过属性手动配置。"]],"en-US":[["p","Use hotkey to format code."]]},meta:{order:6,title:{"zh-CN":"HTML格式化","en-US":"HTML Format"},filename:"components-pro/code-area/demo/html-format.md",id:"components-pro-code-area-demo-html-format"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入格式化器</span>\n<span class="token keyword">import</span> HTMLFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/HTMLFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入 html lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/html\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/htmlmixed/htmlmixed\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token string">\'htmlmixed\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> htmlText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`&lt;div class="demo-wrapper">\n    &lt;span id="demo">Demo&lt;/span>\n&lt;/div>\n&lt;script>\nvar demo = document.getElementById(\'demo\');\ndemo.style.cssText = \'color: red;\';\n&lt;/script>\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> htmlStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> htmlText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>HTML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>htmlStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>HTMLFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入格式化器</span>\n<span class="token keyword">import</span> HTMLFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/HTMLFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入 html lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/html\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/htmlmixed/htmlmixed\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token operator">:</span> <span class="token string">\'htmlmixed\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> htmlText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="demo-wrapper">\n    &lt;span id="demo">Demo&lt;/span>\n&lt;/div>\n&lt;script>\nvar demo = document.getElementById(\'demo\');\ndemo.style.cssText = \'color: red;\';\n&lt;/script>\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> htmlStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> htmlText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span><span class="token constant">HTML</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>htmlStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>HTMLFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n,s=a(0),t=(a(9),a(162)),p=(n=a(2305))&&n.__esModule?n:{default:n};function e(n){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function o(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function c(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function u(n,s){return(u=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function l(n,s){return!s||"object"!==e(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function i(n){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}a(2307),"undefined"!=typeof window&&a(2340);var r={mode:"htmlmixed"},k="<div class=\"demo-wrapper\">\n    <span id=\"demo\">Demo</span>\n</div>\n<script>\nvar demo = document.getElementById('demo');\ndemo.style.cssText = 'color: red;';\n<\/script>\n",d={height:200},m=function(n){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&u(n,s)}(g,n);var a,e,m,f=function(n){function s(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}return function(){var a,t=i(n);if(s()){var p=i(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return l(this,a)}}(g);function g(){var n;o(this,g);for(var s=arguments.length,a=new Array(s),p=0;p<s;p++)a[p]=arguments[p];return(n=f.call.apply(f,[this].concat(a))).ds=new t.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:k,required:!0}]}),n}return a=g,(e=[{key:"render",value:function(){return s.createElement("div",null,s.createElement("h4",null,"HTML"),s.createElement(t.CodeArea,{dataSet:this.ds,name:"content",style:d,formatter:p.default,options:r}))}}])&&c(a.prototype,e),m&&c(a,m),g}(s.Component);return s.createElement(m,null)}}},2305:function(n,s,a){"use strict";a.r(s),a.d(s,"HTMLFormatter",(function(){return l}));var t=a(1758),p=a.n(t),e=a(2306),o=a.n(e),c=a(1771);function u(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}var l=function(){function n(){!function(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}(this,n)}var s,a,t;return s=n,(a=[{key:"getFormatted",value:function(s){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.defaultOptions,t=s;try{t=p.a.format(s,a)}catch(n){}return t}},{key:"getRaw",value:function(n){return Object(c.a)(n)}}])&&u(s.prototype,a),t&&u(s,t),n}();l.defaultOptions={parser:"html",plugins:[o.a]},s.default=new l},2307:function(n,s,a){"undefined"!=typeof window&&(a(1759),a(1760),a(2308))},2343:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用快捷键格式化代码，要传入一个 formatter 对象。默认的格式化快捷键是",["code","Alt + F"],"，去格式化快捷键是",["code","Alt + R"],"，可以通过属性手动配置。"]],"en-US":[["p","Use hotkey to format code."]]},meta:{order:4,title:{"zh-CN":"Javascript格式化","en-US":"Javascript Format"},filename:"components-pro/code-area/demo/js-format.md",id:"components-pro-code-area-demo-js-format"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入格式化器</span>\n<span class="token keyword">import</span> JSFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/JSFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入 javascript lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/javascript\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/javascript/javascript\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token string">\'javascript\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`function getOptions() {\n  var options = {\n    "compilerOptions": {\n      "strictNullChecks": true,\n      "moduleResolution": "node",\n      "allowSyntheticDefaultImports": true,\n      "experimentalDecorators": true,\n      "jsx": "preserve",\n      "noUnusedParameters": true,\n      "noUnusedLocals": true,\n      "declaration": true,\n      "target": "es6",\n      "lib": [\n        "dom",\n        "dom.iterable",\n        "es7",\n        "es2017.object"\n      ]\n    },\n    "exclude": [\n      "node_modules",\n      "lib",\n      "es"\n    ]\n  };\n\n  return options;\n}\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">500</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> jsText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Javascript<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>jsStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>JSFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入格式化器</span>\n<span class="token keyword">import</span> JSFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/JSFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入 javascript lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/javascript\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/javascript/javascript\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token operator">:</span> <span class="token string">\'javascript\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">function getOptions() {\n  var options = {\n    "compilerOptions": {\n      "strictNullChecks": true,\n      "moduleResolution": "node",\n      "allowSyntheticDefaultImports": true,\n      "experimentalDecorators": true,\n      "jsx": "preserve",\n      "noUnusedParameters": true,\n      "noUnusedLocals": true,\n      "declaration": true,\n      "target": "es6",\n      "lib": [\n        "dom",\n        "dom.iterable",\n        "es7",\n        "es2017.object"\n      ]\n    },\n    "exclude": [\n      "node_modules",\n      "lib",\n      "es"\n    ]\n  };\n\n  return options;\n}\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">500</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> jsText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Javascript<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>jsStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>JSFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n,s=a(0),t=(a(9),a(162)),p=(n=a(2344))&&n.__esModule?n:{default:n};function e(n){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function o(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function c(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function u(n,s){return(u=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function l(n,s){return!s||"object"!==e(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function i(n){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}a(2345),"undefined"!=typeof window&&a(1778);var r={mode:"javascript"},k='function getOptions() {\n  var options = {\n    "compilerOptions": {\n      "strictNullChecks": true,\n      "moduleResolution": "node",\n      "allowSyntheticDefaultImports": true,\n      "experimentalDecorators": true,\n      "jsx": "preserve",\n      "noUnusedParameters": true,\n      "noUnusedLocals": true,\n      "declaration": true,\n      "target": "es6",\n      "lib": [\n        "dom",\n        "dom.iterable",\n        "es7",\n        "es2017.object"\n      ]\n    },\n    "exclude": [\n      "node_modules",\n      "lib",\n      "es"\n    ]\n  };\n\n  return options;\n}\n',d={height:500},m=function(n){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&u(n,s)}(g,n);var a,e,m,f=function(n){function s(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}return function(){var a,t=i(n);if(s()){var p=i(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return l(this,a)}}(g);function g(){var n;o(this,g);for(var s=arguments.length,a=new Array(s),p=0;p<s;p++)a[p]=arguments[p];return(n=f.call.apply(f,[this].concat(a))).ds=new t.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:k,required:!0}]}),n}return a=g,(e=[{key:"render",value:function(){return s.createElement("div",null,s.createElement("h4",null,"Javascript"),s.createElement(t.CodeArea,{dataSet:this.ds,name:"content",style:d,formatter:p.default,options:r}))}}])&&c(a.prototype,e),m&&c(a,m),g}(s.Component);return s.createElement(m,null)}}},2344:function(n,s,a){"use strict";a.r(s),a.d(s,"JSFormatter",(function(){return l}));var t=a(1758),p=a.n(t),e=a(1815),o=a.n(e),c=a(1771);function u(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}var l=function(){function n(){!function(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}(this,n)}var s,a,t;return s=n,(a=[{key:"getFormatted",value:function(s){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.defaultOptions,t=s;try{t=p.a.format(s,a)}catch(n){}return t}},{key:"getRaw",value:function(n){return Object(c.a)(n)}}])&&u(s.prototype,a),t&&u(s,t),n}();l.defaultOptions={parser:"babel",plugins:[o.a]},s.default=new l},2345:function(n,s,a){"use strict";a.r(s);var t=a(1811);if("undefined"!=typeof window){a(1759),a(1760);var p=a(667);p.registerHelper("lint","javascript",(function(n,s){s.indent||(s.indent=1),Object(t.JSHINT)(n,s,s.globals);var a=t.JSHINT.data().errors,e=[];return a&&function(n,s){for(var a=0;a<n.length;a++){var t=n[a];if(t){if(t.line<=0){window.console&&window.console.warn("Cannot display JSHint error (invalid line ".concat(t.line,")"),t);continue}var e=t.character-1,o=e+1;if(t.evidence){var c=t.evidence.substring(e).search(/.\b/);c>-1&&(o+=c)}var u={message:t.reason,severity:t.code&&t.code.startsWith("W")?"warning":"error",from:p.Pos(t.line-1,e),to:p.Pos(t.line-1,o)};s.push(u)}}}(a,e),e}))}},2346:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用快捷键格式化代码，要传入一个 formatter 对象。默认的格式化快捷键是",["code","Alt + F"],"，去格式化快捷键是",["code","Alt + R"],"，可以通过属性手动配置。"]],"en-US":[["p","Use hotkey to format code."]]},meta:{order:5,title:{"zh-CN":"JSON格式化","en-US":"JSON Format"},filename:"components-pro/code-area/demo/json-format.md",id:"components-pro-code-area-demo-json-format"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入格式化器</span>\n<span class="token keyword">import</span> JSONFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/JSONFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入 json lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/json\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/javascript/javascript\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'javascript\'</span><span class="token punctuation">,</span> json<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"\n    ]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">500</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> jsonText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>JSON<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>jsonStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>JSONFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入格式化器</span>\n<span class="token keyword">import</span> JSONFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/JSONFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入 json lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/json\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/javascript/javascript\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'javascript\'</span><span class="token punctuation">,</span> json<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"\n    ]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">500</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> jsonText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span><span class="token constant">JSON</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>jsonStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>JSONFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n,s=a(0),t=(a(9),a(162)),p=(n=a(2347))&&n.__esModule?n:{default:n};function e(n){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function o(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function c(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function u(n,s){return(u=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function l(n,s){return!s||"object"!==e(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function i(n){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}a(2348),"undefined"!=typeof window&&a(1778);var r={mode:{name:"javascript",json:!0}},k='{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"\n    ]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n',d={height:500},m=function(n){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&u(n,s)}(g,n);var a,e,m,f=function(n){function s(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}return function(){var a,t=i(n);if(s()){var p=i(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return l(this,a)}}(g);function g(){var n;o(this,g);for(var s=arguments.length,a=new Array(s),p=0;p<s;p++)a[p]=arguments[p];return(n=f.call.apply(f,[this].concat(a))).ds=new t.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:k,required:!0}]}),n}return a=g,(e=[{key:"render",value:function(){return s.createElement("div",null,s.createElement("h4",null,"JSON"),s.createElement(t.CodeArea,{dataSet:this.ds,name:"content",style:d,formatter:p.default,options:r}))}}])&&c(a.prototype,e),m&&c(a,m),g}(s.Component);return s.createElement(m,null)}}},2347:function(n,s,a){"use strict";a.r(s),a.d(s,"JSONFormatter",(function(){return l}));var t=a(1758),p=a.n(t),e=a(1815),o=a.n(e),c=a(1771);function u(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}var l=function(){function n(){!function(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}(this,n)}var s,a,t;return s=n,(a=[{key:"getFormatted",value:function(s){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.defaultOptions,t=s;try{t=p.a.format(s,a)}catch(n){}return t}},{key:"getRaw",value:function(n){return Object(c.a)(n)}}])&&u(s.prototype,a),t&&u(s,t),n}();l.defaultOptions={parser:"json",plugins:[o.a]},s.default=new l},2348:function(n,s,a){"use strict";a.r(s);var t=a(2349),p=a.n(t);if("undefined"!=typeof window){a(1759),a(1760);var e=a(667);e.registerHelper("lint","json",(function(n){var s=[],a=p.a.parser||p.a;a.parseError=function(n,a){var t=a.loc;s.push({from:e.Pos(t.first_line-1,t.first_column),to:e.Pos(t.last_line-1,t.last_column),message:n})};try{a.parse(n)}catch(n){}return s}))}},2350:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用不同主题。"]],"en-US":[["p","Using different themes."]]},meta:{order:3,title:{"zh-CN":"主题","en-US":"Theme"},filename:"components-pro/code-area/demo/theme.md",id:"components-pro-code-area-demo-theme"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 这两个主题不是组件内置的主题，需要手动引入</span>\n<span class="token keyword">import</span> <span class="token string">\'codemirror/theme/material.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'codemirror/theme/idea.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">525</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    theme<span class="token punctuation">:</span> <span class="token string">\'idea\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> jsonText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  handleThemeChange <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> theme<span class="token punctuation">:</span> value <span class="token operator">?</span> <span class="token string">\'material\'</span> <span class="token punctuation">:</span> <span class="token string">\'idea\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> theme<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>theme <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleThemeChange<span class="token punctuation">}</span></span> <span class="token attr-name">unCheckedChildren</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>idea<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>material<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Switch</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 这两个主题不是组件内置的主题，需要手动引入</span>\n<span class="token keyword">import</span> <span class="token string">\'codemirror/theme/material.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'codemirror/theme/idea.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">525</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    theme<span class="token operator">:</span> <span class="token string">\'idea\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> jsonText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleThemeChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> theme<span class="token operator">:</span> value <span class="token operator">?</span> <span class="token string">\'material\'</span> <span class="token operator">:</span> <span class="token string">\'idea\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> theme<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>theme <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleThemeChange<span class="token punctuation">}</span></span> <span class="token attr-name">unCheckedChildren</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>idea<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>material<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Switch</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(9),a(162));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function e(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function o(n,s){return(o=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function c(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function u(n){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}a(2351),a(2352);var l='{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n',i={height:525},r=function(a){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&o(n,s)}(m,a);var t,r,k,d=function(n){function s(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}return function(){var a,t=u(n);if(s()){var p=u(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return c(this,a)}}(m);function m(){var n;p(this,m);for(var a=arguments.length,t=new Array(a),e=0;e<a;e++)t[e]=arguments[e];return(n=d.call.apply(d,[this].concat(t))).state={theme:"idea"},n.ds=new s.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:l,required:!0}]}),n.handleThemeChange=function(s){n.setState({theme:s?"material":"idea"})},n}return t=m,(r=[{key:"render",value:function(){return n.createElement("div",null,n.createElement(s.CodeArea,{dataSet:this.ds,name:"content",options:{theme:this.state.theme},style:i}),n.createElement(s.Switch,{onChange:this.handleThemeChange,unCheckedChildren:"idea"},"material"))}}])&&e(t.prototype,r),k&&e(t,k),m}(n.Component);return n.createElement(r,null)}}},2353:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用快捷键格式化代码，要传入一个 formatter 对象。默认的格式化快捷键是",["code","Alt + F"],"，去格式化快捷键是",["code","Alt + R"],"，可以通过属性手动配置。"]],"en-US":[["p","Use hotkey to format code."]]},meta:{order:7,title:{"zh-CN":"YAML格式化","en-US":"YAML Format"},filename:"components-pro/code-area/demo/yaml-format.md",id:"components-pro-code-area-demo-yaml-format"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入格式化器，注意使用模块的默认导出</span>\n<span class="token keyword">import</span> YAMLFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/YAMLFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入 yaml lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/yaml\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/yaml/yaml\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token string">\'yaml\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> yamlText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`YAML:\n  - A human-readable data serialization language\n  - https://en.wikipedia.org/wiki/YAML\nyaml:\n  - A complete JavaScript implementation\n  - https://www.npmjs.com/package/yaml\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> yamlStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> yamlText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>YAML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>yamlStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>YAMLFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入格式化器，注意使用模块的默认导出</span>\n<span class="token keyword">import</span> YAMLFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/YAMLFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入 yaml lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/yaml\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/yaml/yaml\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token operator">:</span> <span class="token string">\'yaml\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> yamlText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">YAML:\n  - A human-readable data serialization language\n  - https://en.wikipedia.org/wiki/YAML\nyaml:\n  - A complete JavaScript implementation\n  - https://www.npmjs.com/package/yaml\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> yamlStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> yamlText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span><span class="token constant">YAML</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yamlStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>YAMLFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n,s=a(0),t=(a(9),a(162)),p=(n=a(2354))&&n.__esModule?n:{default:n};function e(n){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function o(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function c(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function u(n,s){return(u=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function l(n,s){return!s||"object"!==e(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function i(n){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}a(2356),"undefined"!=typeof window&&a(2379);var r={mode:"yaml"},k="YAML:\n  - A human-readable data serialization language\n  - https://en.wikipedia.org/wiki/YAML\nyaml:\n  - A complete JavaScript implementation\n  - https://www.npmjs.com/package/yaml\n",d={height:200},m=function(n){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&u(n,s)}(g,n);var a,e,m,f=function(n){function s(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}return function(){var a,t=i(n);if(s()){var p=i(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return l(this,a)}}(g);function g(){var n;o(this,g);for(var s=arguments.length,a=new Array(s),p=0;p<s;p++)a[p]=arguments[p];return(n=f.call.apply(f,[this].concat(a))).ds=new t.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:k,required:!0}]}),n}return a=g,(e=[{key:"render",value:function(){return s.createElement("div",null,s.createElement("h4",null,"YAML"),s.createElement(t.CodeArea,{dataSet:this.ds,name:"content",style:d,formatter:p.default,options:r}))}}])&&c(a.prototype,e),m&&c(a,m),g}(s.Component);return s.createElement(m,null)}}},2354:function(n,s,a){"use strict";a.r(s),a.d(s,"YAMLFormatter",(function(){return u}));var t=a(1758),p=a.n(t),e=a(2355),o=a.n(e);function c(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}var u=function(){function n(){!function(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}(this,n)}var s,a,t;return s=n,(a=[{key:"getFormatted",value:function(s){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.defaultOptions,t=s;try{t=p.a.format(s,a)}catch(n){}return t}},{key:"getRaw",value:function(n){return n}}])&&c(s.prototype,a),t&&c(s,t),n}();u.defaultOptions={parser:"yaml",plugins:[o.a]},s.default=new u},2356:function(n,s,a){"use strict";a.r(s);var t=a(2357),p=a.n(t);if("undefined"!=typeof window){a(1759),a(1760);var e=a(667);e.registerHelper("lint","yaml",(function(n){var s=[];try{p.a.loadAll(n)}catch(n){var a=n.mark,t=n.message,o=a?e.Pos(a.line,a.column):e.Pos(0,0),c=o;s.push({from:o,to:c,message:t})}return s}))}}}]);