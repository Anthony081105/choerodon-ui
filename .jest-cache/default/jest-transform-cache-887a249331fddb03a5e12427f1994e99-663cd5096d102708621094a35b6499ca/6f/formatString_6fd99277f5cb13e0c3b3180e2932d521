d7a57240a6091981eb3dfac22fc0f4fa
"use strict";

/* istanbul ignore next */
function cov_2cccj5ox7q() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/formatter/formatString.tsx";
  var hash = "4df180ca3a8f517ab1619e761a988eee2b8cebee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/formatter/formatString.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 34
        }
      },
      "3": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 66
        }
      },
      "4": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "5": {
        start: {
          line: 15,
          column: 13
        },
        end: {
          line: 15,
          column: 22
        }
      },
      "6": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "7": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 84
        }
      },
      "9": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 22,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "formatString",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 21
          }
        },
        loc: {
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        }, {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4df180ca3a8f517ab1619e761a988eee2b8cebee"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2cccj5ox7q = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2cccj5ox7q();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2cccj5ox7q().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_2cccj5ox7q().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2cccj5ox7q().s[2]++;
exports["default"] = formatString;

var _isString =
/* istanbul ignore next */
(cov_2cccj5ox7q().s[3]++, _interopRequireDefault(require("lodash/isString")));

var _utils =
/* istanbul ignore next */
(cov_2cccj5ox7q().s[4]++, require("./utils"));

function formatString(value, _ref) {
  /* istanbul ignore next */
  cov_2cccj5ox7q().f[0]++;
  var trim =
  /* istanbul ignore next */
  (cov_2cccj5ox7q().s[5]++, _ref.trim),
      format =
  /* istanbul ignore next */
  (cov_2cccj5ox7q().s[6]++, _ref.format);

  /* istanbul ignore next */
  cov_2cccj5ox7q().s[7]++;

  if ((0, _isString["default"])(value)) {
    /* istanbul ignore next */
    cov_2cccj5ox7q().b[0][0]++;
    cov_2cccj5ox7q().s[8]++;
    return (0, _utils.transformString)((0, _utils.trimString)(value, trim), format);
  } else
  /* istanbul ignore next */
  {
    cov_2cccj5ox7q().b[0][1]++;
  }

  cov_2cccj5ox7q().s[9]++;
  return value;
}