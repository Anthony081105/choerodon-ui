{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/currency/Currency.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAqB,QAArB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mCAKc;AACV,aAAA;AAAA;AAAA;AACD;AAPH;AAAA;AAAA,mCASc;AACV,aAAO,0BAAP;AACD;AAXH;AAAA;AAAA,uCAakB;AACd,aAAO;AACL,QAAA,QAAQ,EAAE,KAAK,OAAL,CAAa,UAAb;AADL,OAAP;AAGD;AAjBH;AAAA;AAAA,EAAsC,yBAAtC,CAAA;;AACS,QAAA,CAAA,WAAA,GAAc,UAAd;AAEA,QAAA,CAAA,MAAA,GAAS,0BAAT;AAHY,QAAQ,GAAA,uBAAA,CAD5B,mBAC4B,CAAA,EAAR,QAAQ,CAAR;eAAA,Q","sourcesContent":["import { observer } from 'mobx-react';\nimport { NumberField, NumberFieldProps } from '../number-field/NumberField';\nimport { FieldType } from '../data-set/enum';\nimport formatCurrency from '../formatter/formatCurrency';\n\nexport interface CurrencyProps extends NumberFieldProps {\n  currency?: string;\n}\n\n@observer\nexport default class Currency extends NumberField<CurrencyProps> {\n  static displayName = 'Currency';\n\n  static format = formatCurrency;\n\n  getFieldType(): FieldType {\n    return FieldType.currency;\n  }\n\n  getFormatter() {\n    return formatCurrency;\n  }\n\n  getFormatOptions(): Intl.NumberFormatOptions | undefined {\n    return {\n      currency: this.getProp('currency'),\n    };\n  }\n}\n"]}