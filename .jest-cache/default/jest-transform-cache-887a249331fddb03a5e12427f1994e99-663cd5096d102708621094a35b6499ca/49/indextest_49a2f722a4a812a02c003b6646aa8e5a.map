{"version":3,"sources":["index.test.js"],"names":["describe","it","wrapper","expect","hasClass","toBe","process","env","REACT","spy","jest","spyOn","console","mockImplementation","TestForm","Wrapped","Form","create","toHaveBeenCalled","mockReset","mockRestore","React","Component","form","node","toBeInstanceOf"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEAA,QAAQ,CAAC,MAAD,EAAS,YAAM;AACrBC,EAAAA,EAAE,CAAC,kBAAD,EAAqB,YAAM;AAC3B,QAAMC,OAAO,GAAG,qBAAQ,gCAAC,YAAD;AAAM,MAAA,gBAAgB;AAAtB,MAAR,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAO,CAACE,QAAR,CAAiB,6BAAjB,CAAD,CAAN,CAAwDC,IAAxD,CAA6D,IAA7D;AACD,GAHC,CAAF;AAKAL,EAAAA,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AACpCC,IAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACxC,UAAIK,OAAO,CAACC,GAAR,CAAYC,KAAZ,KAAsB,IAA1B,EAAgC;AAC9B;AACD;;AACD,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,OAAX,EAAoB,OAApB,EAA6BC,kBAA7B,CAAgD,YAAM,CAAE,CAAxD,CAAZ;;AACA,UAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,eAAM,gCAAC,YAAD,OAAN;AAAA,OAAjB;;AACA,UAAMC,OAAO,GAAGC,aAAKC,MAAL,GAAcH,QAAd,CAAhB;;AACA,yBAAM,gCAAC,OAAD;AAAS,QAAA,mBAAmB,EAAE,+BAAM,CAAE;AAAtC,QAAN;AACAX,MAAAA,MAAM,CAACM,GAAD,CAAN,CAAYS,gBAAZ;AACAT,MAAAA,GAAG,CAACU,SAAJ;AACAV,MAAAA,GAAG,CAACW,WAAJ;AACD,KAXC,CAAF;AAaAnB,IAAAA,EAAE,CAAC,mBAAD,EAAsB,YAAM;AAC5B;AAD4B,UAEtBa,QAFsB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mCAGjB;AACP,mBAAO,gCAAC,YAAD,OAAP;AACD;AALyB;AAAA;AAAA,QAELO,kBAAMC,SAFD;;AAO5B,UAAMP,OAAO,GAAGC,aAAKC,MAAL,GAAcH,QAAd,CAAhB;;AACA,UAAIS,IAAJ;AACA,yBAAM,gCAAC,OAAD;AAAS,QAAA,mBAAmB,EAAE,6BAAAC,IAAI;AAAA,iBAAKD,IAAI,GAAGC,IAAZ;AAAA;AAAlC,QAAN;AACArB,MAAAA,MAAM,CAACoB,IAAD,CAAN,CAAaE,cAAb,CAA4BX,QAA5B;AACD,KAXC,CAAF;AAYD,GA1BO,CAAR;AA2BD,CAjCO,CAAR","sourcesContent":["import React from 'react';\nimport { shallow, mount } from 'enzyme';\nimport Form from '..';\n\ndescribe('Form', () => {\n  it('hideRequiredMark', () => {\n    const wrapper = shallow(<Form hideRequiredMark />);\n    expect(wrapper.hasClass('c7n-form-hide-required-mark')).toBe(true);\n  });\n\n  describe('wrappedComponentRef', () => {\n    it('warns on functional component', () => {\n      if (process.env.REACT === '15') {\n        return;\n      }\n      const spy = jest.spyOn(console, 'error').mockImplementation(() => {});\n      const TestForm = () => <Form />;\n      const Wrapped = Form.create()(TestForm);\n      mount(<Wrapped wrappedComponentRef={() => {}} />);\n      expect(spy).toHaveBeenCalled();\n      spy.mockReset();\n      spy.mockRestore();\n    });\n\n    it('get component ref', () => {\n      // eslint-disable-next-line\n      class TestForm extends React.Component {\n        render() {\n          return <Form />;\n        }\n      }\n      const Wrapped = Form.create()(TestForm);\n      let form;\n      mount(<Wrapped wrappedComponentRef={node => (form = node)} />);\n      expect(form).toBeInstanceOf(TestForm);\n    });\n  });\n});\n"]}