95d3b5fbc6f2e5f9000cec149f14ae7f
"use strict";

/* istanbul ignore next */
function cov_eiff5n3rq() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/radio/index.tsx";
  var hash = "ca83d700cbd3745730178503c8a24946b1fd740a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/radio/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "3": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 29
        }
      },
      "4": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "5": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "6": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 28
        }
      },
      "7": {
        start: {
          line: 22,
          column: 13
        },
        end: {
          line: 22,
          column: 55
        }
      },
      "8": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 55
        }
      },
      "9": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 67
        }
      },
      "10": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "11": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 44
        }
      },
      "12": {
        start: {
          line: 30,
          column: 15
        },
        end: {
          line: 30,
          column: 32
        }
      },
      "13": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 31,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "get",
        decl: {
          start: {
            line: 10,
            column: 16
          },
          end: {
            line: 10,
            column: 19
          }
        },
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        line: 10
      },
      "1": {
        name: "get",
        decl: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 19
          }
        },
        loc: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 18,
            column: 3
          }
        },
        line: 16
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ca83d700cbd3745730178503c8a24946b1fd740a"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_eiff5n3rq = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_eiff5n3rq();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_eiff5n3rq().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_eiff5n3rq().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_eiff5n3rq().s[2]++;
Object.defineProperty(exports, "Group", {
  enumerable: true,
  get: function get() {
    /* istanbul ignore next */
    cov_eiff5n3rq().f[0]++;
    cov_eiff5n3rq().s[3]++;
    return _group["default"];
  }
});

/* istanbul ignore next */
cov_eiff5n3rq().s[4]++;
Object.defineProperty(exports, "Button", {
  enumerable: true,
  get: function get() {
    /* istanbul ignore next */
    cov_eiff5n3rq().f[1]++;
    cov_eiff5n3rq().s[5]++;
    return _radioButton["default"];
  }
});

/* istanbul ignore next */
cov_eiff5n3rq().s[6]++;
exports["default"] = void 0;

var _radio =
/* istanbul ignore next */
(cov_eiff5n3rq().s[7]++, _interopRequireDefault(require("./radio")));

var _group =
/* istanbul ignore next */
(cov_eiff5n3rq().s[8]++, _interopRequireDefault(require("./group")));

var _radioButton =
/* istanbul ignore next */
(cov_eiff5n3rq().s[9]++, _interopRequireDefault(require("./radioButton")));

/* istanbul ignore next */
cov_eiff5n3rq().s[10]++;
_radio["default"].Button = _radioButton["default"];

/* istanbul ignore next */
cov_eiff5n3rq().s[11]++;
_radio["default"].Group = _group["default"];

var _default =
/* istanbul ignore next */
(cov_eiff5n3rq().s[12]++, _radio["default"]);

/* istanbul ignore next */
cov_eiff5n3rq().s[13]++;
exports["default"] = _default;