b35fc9a953811a5c10888d7a669a0196
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _AjaxUploader = _interopRequireDefault(require("./AjaxUploader"));

var _IframeUploader = _interopRequireDefault(require("./IframeUploader"));

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = (0, _getPrototypeOf2["default"])(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0, _possibleConstructorReturn2["default"])(this, result);
  };
}

function empty() {}

var Upload =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(Upload, _Component);

  var _super = _createSuper(Upload);

  function Upload() {
    var _this;

    (0, _classCallCheck2["default"])(this, Upload);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      Component: null
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "saveUploader", function (node) {
      _this.uploader = node;
    });
    return _this;
  }

  (0, _createClass2["default"])(Upload, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.supportServerRender) {
        /* eslint react/no-did-mount-set-state:0 */
        this.setState({
          Component: this.getComponent()
        }, this.props.onReady);
      }
    }
  }, {
    key: "getComponent",
    value: function getComponent() {
      return typeof File !== 'undefined' ? _AjaxUploader["default"] : _IframeUploader["default"];
    }
  }, {
    key: "abort",
    value: function abort(file) {
      this.uploader.abort(file);
    }
  }, {
    key: "render",
    value: function render() {
      if (this.props.supportServerRender) {
        var _ComponentUploader = this.state.Component;

        if (_ComponentUploader) {
          return _react["default"].createElement(_ComponentUploader, (0, _extends2["default"])({}, this.props, {
            ref: this.saveUploader
          }));
        }

        return null;
      }

      var ComponentUploader = this.getComponent();
      return _react["default"].createElement(ComponentUploader, (0, _extends2["default"])({}, this.props, {
        ref: this.saveUploader
      }));
    }
  }]);
  return Upload;
}(_react.Component);

(0, _defineProperty2["default"])(Upload, "propTypes", {
  component: _propTypes["default"].string,
  style: _propTypes["default"].object,
  prefixCls: _propTypes["default"].string,
  action: _propTypes["default"].string,
  name: _propTypes["default"].string,
  multipart: _propTypes["default"].bool,
  onError: _propTypes["default"].func,
  onSuccess: _propTypes["default"].func,
  onProgress: _propTypes["default"].func,
  onStart: _propTypes["default"].func,
  data: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  headers: _propTypes["default"].object,
  accept: _propTypes["default"].string,
  multiple: _propTypes["default"].bool,
  disabled: _propTypes["default"].bool,
  beforeUpload: _propTypes["default"].func,
  customRequest: _propTypes["default"].func,
  onReady: _propTypes["default"].func,
  withCredentials: _propTypes["default"].bool,
  supportServerRender: _propTypes["default"].bool
});
(0, _defineProperty2["default"])(Upload, "defaultProps", {
  component: 'span',
  prefixCls: 'rc-upload',
  data: {},
  headers: {},
  name: 'file',
  multipart: false,
  onReady: empty,
  onStart: empty,
  onError: empty,
  onSuccess: empty,
  supportServerRender: false,
  multiple: false,
  beforeUpload: null,
  customRequest: null,
  withCredentials: false
});
var _default = Upload;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVwbG9hZC5qc3giXSwibmFtZXMiOlsiZW1wdHkiLCJVcGxvYWQiLCJDb21wb25lbnQiLCJub2RlIiwidXBsb2FkZXIiLCJwcm9wcyIsInN1cHBvcnRTZXJ2ZXJSZW5kZXIiLCJzZXRTdGF0ZSIsImdldENvbXBvbmVudCIsIm9uUmVhZHkiLCJGaWxlIiwiQWpheFVwbG9hZCIsIklmcmFtZVVwbG9hZCIsImZpbGUiLCJhYm9ydCIsIkNvbXBvbmVudFVwbG9hZGVyIiwic3RhdGUiLCJzYXZlVXBsb2FkZXIiLCJjb21wb25lbnQiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJzdHlsZSIsIm9iamVjdCIsInByZWZpeENscyIsImFjdGlvbiIsIm5hbWUiLCJtdWx0aXBhcnQiLCJib29sIiwib25FcnJvciIsImZ1bmMiLCJvblN1Y2Nlc3MiLCJvblByb2dyZXNzIiwib25TdGFydCIsImRhdGEiLCJvbmVPZlR5cGUiLCJoZWFkZXJzIiwiYWNjZXB0IiwibXVsdGlwbGUiLCJkaXNhYmxlZCIsImJlZm9yZVVwbG9hZCIsImN1c3RvbVJlcXVlc3QiLCJ3aXRoQ3JlZGVudGlhbHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsU0FBU0EsS0FBVCxHQUFpQixDQUNoQjs7SUFFS0MsTTs7Ozs7Ozs7Ozs7Ozs7Ozs7OEZBNkNJO0FBQ05DLE1BQUFBLFNBQVMsRUFBRTtBQURMLEs7cUdBcUJPLFVBQUNDLElBQUQsRUFBVTtBQUN2QixZQUFLQyxRQUFMLEdBQWdCRCxJQUFoQjtBQUNELEs7Ozs7Ozt3Q0FuQm1CO0FBQ2xCLFVBQUksS0FBS0UsS0FBTCxDQUFXQyxtQkFBZixFQUFvQztBQUNsQztBQUNBLGFBQUtDLFFBQUwsQ0FBYztBQUNaTCxVQUFBQSxTQUFTLEVBQUUsS0FBS00sWUFBTDtBQURDLFNBQWQsRUFFRyxLQUFLSCxLQUFMLENBQVdJLE9B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b3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBBamF4VXBsb2FkIGZyb20gJy4vQWpheFVwbG9hZGVyJztcbmltcG9ydCBJZnJhbWVVcGxvYWQgZnJvbSAnLi9JZnJhbWVVcGxvYWRlcic7XG5cbmZ1bmN0aW9uIGVtcHR5KCkge1xufVxuXG5jbGFzcyBVcGxvYWQgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGNvbXBvbmVudDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBwcmVmaXhDbHM6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgYWN0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgbXVsdGlwYXJ0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBvbkVycm9yOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvblN1Y2Nlc3M6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uUHJvZ3Jlc3M6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uU3RhcnQ6IFByb3BUeXBlcy5mdW5jLFxuICAgIGRhdGE6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgUHJvcFR5cGVzLm9iamVjdCxcbiAgICAgIFByb3BUeXBlcy5mdW5jLFxuICAgIF0pLFxuICAgIGhlYWRlcnM6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgYWNjZXB0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIG11bHRpcGxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgYmVmb3JlVXBsb2FkOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBjdXN0b21SZXF1ZXN0OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvblJlYWR5OiBQcm9wVHlwZXMuZnVuYyxcbiAgICB3aXRoQ3JlZGVudGlhbHM6IFByb3BUeXBlcy5ib29sLFxuICAgIHN1cHBvcnRTZXJ2ZXJSZW5kZXI6IFByb3BUeXBlcy5ib29sLFxuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBjb21wb25lbnQ6ICdzcGFuJyxcbiAgICBwcmVmaXhDbHM6ICdyYy11cGxvYWQnLFxuICAgIGRhdGE6IHt9LFxuICAgIGhlYWRlcnM6IHt9LFxuICAgIG5hbWU6ICdmaWxlJyxcbiAgICBtdWx0aXBhcnQ6IGZhbHNlLFxuICAgIG9uUmVhZHk6IGVtcHR5LFxuICAgIG9uU3RhcnQ6IGVtcHR5LFxuICAgIG9uRXJyb3I6IGVtcHR5LFxuICAgIG9uU3VjY2VzczogZW1wdHksXG4gICAgc3VwcG9ydFNlcnZlclJlbmRlcjogZmFsc2UsXG4gICAgbXVsdGlwbGU6IGZhbHNlLFxuICAgIGJlZm9yZVVwbG9hZDogbnVsbCxcbiAgICBjdXN0b21SZXF1ZXN0OiBudWxsLFxuICAgIHdpdGhDcmVkZW50aWFsczogZmFsc2UsXG4gIH1cblxuICBzdGF0ZSA9IHtcbiAgICBDb21wb25lbnQ6IG51bGwsXG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5zdXBwb3J0U2VydmVyUmVuZGVyKSB7XG4gICAgICAvKiBlc2xpbnQgcmVhY3Qvbm8tZGlkLW1vdW50LXNldC1zdGF0ZTowICovXG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgQ29tcG9uZW50OiB0aGlzLmdldENvbXBvbmVudCgpLFxuICAgICAgfSwgdGhpcy5wcm9wcy5vblJlYWR5KTtcbiAgICB9XG4gIH1cblxuICBnZXRDb21wb25lbnQoKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBGaWxlICE9PSAndW5kZWZpbmVkJyA/IEFqYXhVcGxvYWQgOiBJZnJhbWVVcGxvYWQ7XG4gIH1cblxuICBhYm9ydChmaWxlKSB7XG4gICAgdGhpcy51cGxvYWRlci5hYm9ydChmaWxlKTtcbiAgfVxuXG4gIHNhdmVVcGxvYWRlciA9IChub2RlKSA9PiB7XG4gICAgdGhpcy51cGxvYWRlciA9IG5vZGU7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuc3VwcG9ydFNlcnZlclJlbmRlcikge1xuICAgICAgY29uc3QgQ29tcG9uZW50VXBsb2FkZXIgPSB0aGlzLnN0YXRlLkNvbXBvbmVudDtcbiAgICAgIGlmIChDb21wb25lbnRVcGxvYWRlcikge1xuICAgICAgICByZXR1cm4gPENvbXBvbmVudFVwbG9hZGVyIHsuLi50aGlzLnByb3BzfSByZWY9e3RoaXMuc2F2ZVVwbG9hZGVyfSAvPjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBjb25zdCBDb21wb25lbnRVcGxvYWRlciA9IHRoaXMuZ2V0Q29tcG9uZW50KCk7XG4gICAgcmV0dXJuIDxDb21wb25lbnRVcGxvYWRlciB7Li4udGhpcy5wcm9wc30gcmVmPXt0aGlzLnNhdmVVcGxvYWRlcn0gLz47XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXBsb2FkO1xuIl19