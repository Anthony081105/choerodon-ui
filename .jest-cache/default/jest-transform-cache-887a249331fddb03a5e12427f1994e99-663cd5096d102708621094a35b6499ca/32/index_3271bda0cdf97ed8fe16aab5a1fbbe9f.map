{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/time-picker/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, CSSProperties, ReactElement } from 'react';\nimport moment, { Moment } from 'moment';\nimport classNames from 'classnames';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from './locale/en_US';\nimport interopDefault from '../_util/interopDefault';\nimport RcTimePicker from '../rc-components/time-picker';\nimport { Size } from '../_util/enum';\nimport { getPrefixCls } from '../configure';\n\nexport function generateShowHourMinuteSecond(format: string) {\n  // Ref: http://momentjs.com/docs/#/parsing/string-format/\n  return {\n    showHour: format.indexOf('H') > -1 || format.indexOf('h') > -1 || format.indexOf('k') > -1,\n    showMinute: format.indexOf('m') > -1,\n    showSecond: format.indexOf('s') > -1,\n  };\n}\n\nexport interface TimePickerProps {\n  className?: string;\n  size?: Size;\n  value?: Moment;\n  defaultValue?: Moment | Moment[];\n  open?: boolean;\n  format?: string;\n  onChange?: (time: Moment, timeString: string) => void;\n  onOpenChange?: (open: boolean) => void;\n  disabled?: boolean;\n  placeholder?: string;\n  prefixCls?: string;\n  hideDisabledOptions?: boolean;\n  disabledHours?: () => number[];\n  disabledMinutes?: (selectedHour: number) => number[];\n  disabledSeconds?: (selectedHour: number, selectedMinute: number) => number[];\n  style?: CSSProperties;\n  getPopupContainer?: (triggerNode: Element) => HTMLElement;\n  addon?: Function;\n  use12Hours?: boolean;\n  focusOnOpen?: boolean;\n  hourStep?: number;\n  minuteStep?: number;\n  secondStep?: number;\n  allowEmpty?: boolean;\n  inputReadOnly?: boolean;\n  clearText?: string;\n  defaultOpenValue?: Moment;\n  popupClassName?: string;\n  label?: any;\n}\n\nexport interface TimePickerLocale {\n  placeholder: string;\n}\n\nexport default class TimePicker extends Component<TimePickerProps, any> {\n  static displayName = 'TimePicker';\n\n  static defaultProps = {\n    align: {\n      offset: [0, -2],\n    },\n    disabled: false,\n    disabledHours: undefined,\n    disabledMinutes: undefined,\n    disabledSeconds: undefined,\n    hideDisabledOptions: false,\n    placement: 'bottomLeft',\n    transitionName: 'slide-up',\n    focusOnOpen: true,\n  };\n\n  private timePickerRef: any;\n\n  constructor(props: TimePickerProps) {\n    super(props);\n    const value = props.value || props.defaultValue;\n    if (value && !interopDefault(moment).isMoment(value)) {\n      throw new Error('The value/defaultValue of TimePicker must be a moment object');\n    }\n    this.state = {\n      value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps: TimePickerProps) {\n    if ('value' in nextProps) {\n      this.setState({ value: nextProps.value });\n    }\n  }\n\n  handleChange = (value: Moment) => {\n    if (!('value' in this.props)) {\n      this.setState({ value });\n    }\n    const { onChange, format = 'HH:mm:ss' } = this.props;\n    if (onChange) {\n      onChange(value, (value && value.format(format)) || '');\n    }\n  };\n\n  handleOpenClose = ({ open }: { open: boolean }) => {\n    const { onOpenChange } = this.props;\n    if (onOpenChange) {\n      onOpenChange(open);\n    }\n  };\n\n  saveTimePicker = (timePickerRef: RcTimePicker | null) => {\n    this.timePickerRef = timePickerRef;\n  };\n\n  focus() {\n    this.timePickerRef.focus();\n  }\n\n  blur() {\n    this.timePickerRef.blur();\n  }\n\n  getDefaultFormat() {\n    const { format, use12Hours } = this.props;\n    if (format) {\n      return format;\n    }\n    if (use12Hours) {\n      return 'h:mm:ss a';\n    }\n    return 'HH:mm:ss';\n  }\n\n  renderTimePicker = (locale: TimePickerLocale) => {\n    const props: TimePickerProps & { children?: any } = {\n      ...this.props,\n    };\n    const { value } = this.state;\n    delete props.defaultValue;\n    const prefixCls = getPrefixCls('time-picker', props.prefixCls);\n    const format = this.getDefaultFormat();\n    const className = classNames(props.className, {\n      [`${prefixCls}-${props.size}`]: !!props.size,\n    });\n\n    const addon = (panel: ReactElement<any>) =>\n      props.addon ? <div className={`${prefixCls}-panel-addon`}>{props.addon(panel)}</div> : null;\n\n    return (\n      <RcTimePicker\n        {...generateShowHourMinuteSecond(format)}\n        {...props}\n        prefixCls={prefixCls}\n        ref={this.saveTimePicker}\n        format={format}\n        className={className}\n        value={value}\n        placeholder={props.placeholder === undefined ? locale.placeholder : props.placeholder}\n        onChange={this.handleChange}\n        onOpen={this.handleOpenClose}\n        onClose={this.handleOpenClose}\n        addon={addon}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <LocaleReceiver componentName=\"TimePicker\" defaultLocale={defaultLocale}>\n        {this.renderTimePicker}\n      </LocaleReceiver>\n    );\n  }\n}\n"]}