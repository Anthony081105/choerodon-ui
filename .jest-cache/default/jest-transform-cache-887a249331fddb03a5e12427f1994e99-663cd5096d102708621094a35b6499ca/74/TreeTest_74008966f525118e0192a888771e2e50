90b9ad1ea821e9d710eb841568880792
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _ = _interopRequireDefault(require(".."));

var _dataSet = _interopRequireDefault(require("../../data-set"));

var _numberField = _interopRequireDefault(require("../../number-field"));

function nodeRenderer(_ref) {
  var record = _ref.record;
  return record.get('text');
}

var dataSetData = [{
  expand: false,
  functionCode: 'HR',
  icon: 'fa fa-cubes',
  id: 2,
  ischecked: null,
  score: 10,
  shortcutId: null,
  text: '组织架构',
  url: null,
  symbol: '0'
}, {
  expand: false,
  functionCode: 'EMPLOYEE_REACT',
  icon: 'record_test',
  id: 7,
  ischecked: true,
  score: 10,
  shortcutId: null,
  text: '员工管理(react)',
  url: 'hap-core/hr/employee',
  symbol: '1',
  parentId: 2
}, {
  expand: false,
  functionCode: 'HR_UNIT',
  icon: 'fa fa-cube',
  id: 73,
  ischecked: true,
  score: 10,
  shortcutId: null,
  text: '组织管理',
  url: 'hr/org_unit.html',
  symbol: '0',
  parentId: 2
}, {
  expand: false,
  functionCode: 'COMPANY_REACT',
  icon: 'mail_set',
  id: 12,
  ischecked: true,
  score: 10,
  shortcutId: null,
  text: '公司管理(react)',
  url: 'hap-core/hr/company',
  symbol: '1',
  parentId: 2
}];

var TreeTest =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(TreeTest, _React$Component);

  function TreeTest() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, TreeTest);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(TreeTest)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      count: 0
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "ds", new _dataSet["default"]({
      primaryKey: 'id',
      data: dataSetData,
      parentField: 'parentId',
      expandField: 'expand',
      idField: 'id',
      fields: [{
        name: 'id',
        type: 'number'
      }, {
        name: 'expand',
        type: 'boolean'
      }, {
        name: 'parentId',
        type: 'number'
      }],
      events: {
        select: function select(_ref2) {
          var dataSet = _ref2.dataSet;

          _this.setCount(dataSet);
        },
        unSelect: function unSelect(_ref3) {
          var dataSet = _ref3.dataSet;

          _this.setCount(dataSet);
        }
      }
    }));
    return _this;
  }

  (0, _createClass2["default"])(TreeTest, [{
    key: "setCount",
    value: function setCount(dataSetValue) {
      if (dataSetValue) {
        this.setState({
          count: dataSetValue.selected.length
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var count = this.state.count;
      return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_numberField["default"], {
        value: count
      }), _react["default"].createElement(_["default"], {
        dataSet: this.ds,
        checkable: true,
        renderer: nodeRenderer
      }));
    }
  }]);
  return TreeTest;
}(_react["default"].Component);

exports["default"] = TreeTest;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRyZWVUZXN0LmpzIl0sIm5hbWVzIjpbIm5vZGVSZW5kZXJlciIsInJlY29yZCIsImdldCIsImRhdGFTZXREYXRhIiwiZXhwYW5kIiwiZnVuY3Rpb25Db2RlIiwiaWNvbiIsImlkIiwiaXNjaGVja2VkIiwic2NvcmUiLCJzaG9ydGN1dElkIiwidGV4dCIsInVybCIsInN5bWJvbCIsInBhcmVudElkIiwiVHJlZVRlc3QiLCJjb3VudCIsIkRhdGFTZXQiLCJwcmltYXJ5S2V5IiwiZGF0YSIsInBhcmVudEZpZWxkIiwiZXhwYW5kRmllbGQiLCJpZEZpZWxkIiwiZmllbGRzIiwibmFtZSIsInR5cGUiLCJldmVudHMiLCJzZWxlY3QiLCJkYXRhU2V0Iiwic2V0Q291bnQiLCJ1blNlbGVjdCIsImRhdGFTZXRWYWx1ZSIsInNldFN0YXRlIiwic2VsZWN0ZWQiLCJsZW5ndGgiLCJzdGF0ZSIsImRzIiwiUmVhY3QiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsU0FBU0EsWUFBVCxPQUFrQztBQUFBLE1BQVZDLE1BQVUsUUFBVkEsTUFBVTtBQUNoQyxTQUFPQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxNQUFYLENBQVA7QUFDRDs7QUFDRCxJQUFNQyxXQUFXLEdBQUcsQ0FDbEI7QUFDRUMsRUFBQUEsTUFBTSxFQUFFLEtBRFY7QUFFRUMsRUFBQUEsWUFBWSxFQUFFLElBRmhCO0FBR0VDLEVBQUFBLElBQUksRUFBRSxhQUhSO0FBSUVDLEVBQUFBLEVBQUUsRUFBRSxDQUpOO0FBS0VDLEVBQUFBLFNBQVMsRUFBRSxJQUxiO0FBTUVDLEVBQUFBLEtBQUssRUFBRSxFQU5UO0FBT0VDLEVBQUFBLFVBQVUsRUFBRSxJQVBkO0FBUUVDLEVBQUFBLElBQUksRUFBRSxNQVJSO0FBU0VDLEVBQUFBLEdBQUcsRUFBRSxJQVRQO0FBVUVDLEVBQUFBLE1BQU0sRUFBRTtBQVZWLENBRGtCLEVBYWxC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QUFFUCxhQUNFLGtFQUNFLGdDQUFDLHVCQUFEO0FBQWEsUUFBQSxLQUFLLEVBQUVBO0FBQXBCLFFBREYsRUFFRSxnQ0FBQyxZQUFEO0FBQU0sUUFBQSxPQUFPLEVBQUUsS0FBS29CLEVBQXBCO0FBQXdCLFFBQUEsU0FBUyxNQUFqQztBQUFrQyxRQUFBLFFBQVEsRUFBRXBDO0FBQTVDLFFBRkYsQ0FERjtBQU1EOzs7RUF4Q21DcUMsa0JBQU1DLFMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRyZWUgZnJvbSAnLi4nO1xuaW1wb3J0IERhdGFTZXQgZnJvbSAnLi4vLi4vZGF0YS1zZXQnO1xuaW1wb3J0IE51bWJlckZpZWxkIGZyb20gJy4uLy4uL251bWJlci1maWVsZCc7XG5cbmZ1bmN0aW9uIG5vZGVSZW5kZXJlcih7IHJlY29yZCB9KSB7XG4gIHJldHVybiByZWNvcmQuZ2V0KCd0ZXh0Jyk7XG59XG5jb25zdCBkYXRhU2V0RGF0YSA9IFtcbiAge1xuICAgIGV4cGFuZDogZmFsc2UsXG4gICAgZnVuY3Rpb25Db2RlOiAnSFInLFxuICAgIGljb246ICdmYSBmYS1jdWJlcycsXG4gICAgaWQ6IDIsXG4gICAgaXNjaGVja2VkOiBudWxsLFxuICAgIHNjb3JlOiAxMCxcbiAgICBzaG9ydGN1dElkOiBudWxsLFxuICAgIHRleHQ6ICfnu4Tnu4fmnrbmnoQnLFxuICAgIHVybDogbnVsbCxcbiAgICBzeW1ib2w6ICcwJyxcbiAgfSxcbiAge1xuICAgIGV4cGFuZDogZmFsc2UsXG4gICAgZnVuY3Rpb25Db2RlOiAnRU1QTE9ZRUVfUkVBQ1QnLFxuICAgIGljb246ICdyZWNvcmRfdGVzdCcsXG4gICAgaWQ6IDcsXG4gICAgaXNjaGVja2VkOiB0cnVlLFxuICAgIHNjb3JlOiAxMCxcbiAgICBzaG9ydGN1dElkOiBudWxsLFxuICAgIHRleHQ6ICflkZjlt6XnrqHnkIYocmVhY3QpJyxcbiAgICB1cmw6ICdoYXAtY29yZS9oci9lbXBsb3llZScsXG4gICAgc3ltYm9sOiAnMScsXG4gICAgcGFyZW50SWQ6IDIsXG4gIH0sXG4gIHtcbiAgICBleHBhbmQ6IGZhbHNlLFxuICAgIGZ1bmN0aW9uQ29kZTogJ0hSX1VOSVQnLFxuICAgIGljb246ICdmYSBmYS1jdWJlJyxcbiAgICBpZDogNzMsXG4gICAgaXNjaGVja2VkOiB0cnVlLFxuICAgIHNjb3JlOiAxMCxcbiAgICBzaG9ydGN1dElkOiBudWxsLFxuICAgIHRleHQ6ICfnu4Tnu4fnrqHnkIYnLFxuICAgIHVybDogJ2hyL29yZ191bml0Lmh0bWwnLFxuICAgIHN5bWJvbDogJzAnLFxuICAgIHBhcmVudElkOiAyLFxuICB9LFxuICB7XG4gICAgZXhwYW5kOiBmYWxzZSxcbiAgICBmdW5jdGlvbkNvZGU6ICdDT01QQU5ZX1JFQUNUJyxcbiAgICBpY29uOiAnbWFpbF9zZXQnLFxuICAgIGlkOiAxMixcbiAgICBpc2NoZWNrZWQ6IHRydWUsXG4gICAgc2NvcmU6IDEwLFxuICAgIHNob3J0Y3V0SWQ6IG51bGwsXG4gICAgdGV4dDogJ+WFrOWPuOeuoeeQhihyZWFjdCknLFxuICAgIHVybDogJ2hhcC1jb3JlL2hyL2NvbXBhbnknLFxuICAgIHN5bWJvbDogJzEnLFxuICAgIHBhcmVudElkOiAyLFxuICB9LFxuXTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHJlZVRlc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0ZSA9IHtcbiAgICBjb3VudDogMCxcbiAgfTtcblxuICBkcyA9IG5ldyBEYXRhU2V0KHtcbiAgICBwcmltYXJ5S2V5OiAnaWQnLFxuICAgIGRhdGE6IGRhdGFTZXREYXRhLFxuICAgIHBhcmVudEZpZWxkOiAncGFyZW50SWQnLFxuICAgIGV4cGFuZEZpZWxkOiAnZXhwYW5kJyxcbiAgICBpZEZpZWxkOiAnaWQnLFxuICAgIGZpZWxkczogW1xuICAgICAgeyBuYW1lOiAnaWQnLCB0eXBlOiAnbnVtYmVyJyB9LFxuICAgICAgeyBuYW1lOiAnZXhwYW5kJywgdHlwZTogJ2Jvb2xlYW4nIH0sXG4gICAgICB7IG5hbWU6ICdwYXJlbnRJZCcsIHR5cGU6ICdudW1iZXInIH0sXG4gICAgXSxcbiAgICBldmVudHM6IHtcbiAgICAgIHNlbGVjdDogKHsgZGF0YVNldCB9KSA9PiB7XG4gICAgICAgIHRoaXMuc2V0Q291bnQoZGF0YVNldCk7XG4gICAgICB9LFxuICAgICAgdW5TZWxlY3Q6ICh7IGRhdGFTZXQgfSkgPT4ge1xuICAgICAgICB0aGlzLnNldENvdW50KGRhdGFTZXQpO1xuICAgICAgfSxcbiAgICB9LFxuICB9KTtcblxuICBzZXRDb3VudChkYXRhU2V0VmFsdWUpIHtcbiAgICBpZiAoZGF0YVNldFZhbHVlKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgY291bnQ6IGRhdGFTZXRWYWx1ZS5zZWxlY3RlZC5sZW5ndGggfSk7XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY291bnQgfSA9IHRoaXMuc3RhdGU7XG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxOdW1iZXJGaWVsZCB2YWx1ZT17Y291bnR9IC8+XG4gICAgICAgIDxUcmVlIGRhdGFTZXQ9e3RoaXMuZHN9IGNoZWNrYWJsZSByZW5kZXJlcj17bm9kZVJlbmRlcmVyfSAvPlxuICAgICAgPC8+XG4gICAgKTtcbiAgfVxufVxuIl19