{"version":3,"sources":["index.test.js"],"names":["describe","it","wrapper","expect","toMatchSnapshot","type","__Pro_BUTTON","toBe","wrapper1","wrapper2","props","color","toEqual","funcType","render"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,QAAD,EAAW,YAAM;AACvBC,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3C,QAAMC,OAAO,GAAG,oBAAO,gCAAC,YAAD,uBAAP,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,eAAhB;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,wDAAD,EAA2D,YAAM;AACjE,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD,0BAAN,CAAhB,CADiE,CAEjE;;AACAC,IAAAA,MAAM,CAACD,OAAO,CAACG,IAAR,GAAeC,YAAhB,CAAN,CAAoCC,IAApC,CAAyC,IAAzC;AACD,GAJC,CAAF;AAMAN,EAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC/C,QAAMC,OAAO,GAAG,oBAAO,gCAAC,YAAD,uBAAP,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,eAAhB,GAF+C,CAG/C;;AACA,QAAMI,QAAQ,GAAG,oBAAO,gCAAC,YAAD;AAAQ,MAAA,IAAI,EAAC;AAAb,sBAAP,CAAjB;AACAL,IAAAA,MAAM,CAACK,QAAD,CAAN,CAAiBJ,eAAjB,GAL+C,CAM/C;;AACA,QAAMK,QAAQ,GAAG,oBACf,gCAAC,YAAD,QACE,gCAAC,gBAAD;AAAM,MAAA,IAAI,EAAC;AAAX,MADF,iBADe,CAAjB;AAMAN,IAAAA,MAAM,CAACM,QAAD,CAAN,CAAiBL,eAAjB;AACD,GAdC,CAAF;AAgBAH,EAAAA,EAAE,CAAC,2DAAD,EAA8D,YAAM;AACpE,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAQ,MAAA,KAAK,EAAC;AAAd,aAAN,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAO,CAACQ,KAAR,GAAgBC,KAAjB,CAAN,CAA8BC,OAA9B,CAAsC,KAAtC;AAEA,QAAMJ,QAAQ,GAAG,mBACf,gCAAC,YAAD;AAAQ,MAAA,QAAQ,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAC;AAA9B,cADe,CAAjB;AAKAL,IAAAA,MAAM,CAACK,QAAQ,CAACE,KAAT,GAAiBG,QAAlB,CAAN,CAAkCD,OAAlC,CAA0C,MAA1C;AACD,GAVC,CAAF;AAYAX,EAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAM;AAChD,QAAMC,OAAO,GAAG,mBACd,gCAAC,YAAD;AAAQ,MAAA,MAAM,EAAC,QAAf;AAAwB,MAAA,IAAI,EAAC;AAA7B,yBADc,CAAhB;AAKAC,IAAAA,MAAM,CAACD,OAAO,CAACY,MAAR,EAAD,CAAN,CAAyBV,eAAzB;AACD,GAPC,CAAF;AAQD,CAhDO,CAAR","sourcesContent":["import React from 'react';\nimport { render, mount } from 'enzyme';\nimport Button from '..';\nimport Icon from '../../icon';\n\ndescribe('Button', () => {\n  it('renders components-pro correctly', () => {\n    const wrapper = render(<Button> Button-Pro </Button>);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  it('have static property for components-pro type detecting', () => {\n    const wrapper = mount(<Button>Button-Pro Text</Button>);\n    // eslint-disable-next-line\n    expect(wrapper.type().__Pro_BUTTON).toBe(true);\n  });\n\n  it('renders Chinese characters correctly', () => {\n    const wrapper = render(<Button>按钮</Button>);\n    expect(wrapper).toMatchSnapshot();\n    // should not insert space when there is icon\n    const wrapper1 = render(<Button icon=\"search\">按钮</Button>);\n    expect(wrapper1).toMatchSnapshot();\n    // should not insert space when there is icon\n    const wrapper2 = render(\n      <Button>\n        <Icon type=\"search\" />\n        按钮\n      </Button>,\n    );\n    expect(wrapper2).toMatchSnapshot();\n  });\n\n  it('renders funcType of button color and background correctly', () => {\n    const wrapper = mount(<Button color=\"red\">Red</Button>);\n    expect(wrapper.props().color).toEqual('red');\n\n    const wrapper1 = mount(\n      <Button funcType=\"flat\" color=\"primary\">\n        Blue\n      </Button>,\n    );\n    expect(wrapper1.props().funcType).toEqual('flat');\n  });\n\n  it('button-pro should support link button', () => {\n    const wrapper = mount(\n      <Button target=\"_blank\" href=\"https://choerodon.github.io/choerodon-ui/\">\n        button-pro link\n      </Button>,\n    );\n    expect(wrapper.render()).toMatchSnapshot();\n  });\n});\n"]}