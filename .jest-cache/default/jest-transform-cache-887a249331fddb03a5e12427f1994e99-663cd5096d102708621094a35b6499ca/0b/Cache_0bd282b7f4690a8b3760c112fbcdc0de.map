{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/_util/Cache.tsx"],"names":[],"mappings":"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","sourcesContent":["import { IReactionDisposer, reaction } from 'mobx';\nimport { getConfig } from 'choerodon-ui/lib/configure';\nimport Yallist from './Yallist'; // 双向链表 -> 缓存更新性能优化\n\nconst MAX = Symbol('max'); // 最大值\nconst LENGTH = Symbol('length'); // 长度\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator'); // 长度计算\nconst ALLOW_STALE = Symbol('allowStale'); // 允许过时\nconst MAX_AGE = Symbol('maxAge'); // 最大时效（缓存时长）\nconst DISPOSE = Symbol('dispose'); // 处置 处理\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet'); // 不可处理\nconst LIST = Symbol('list'); // 列表\nconst CACHE = Symbol('cache'); // 缓存\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet'); // 获取更新时效\n\nconst naiveLength = () => 1;\n\n/**\n * 是否过时\n * @param self\n * @param hit\n */\nfunction isStale(self, hit): boolean {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE])) return false;\n\n  const diff = Date.now() - hit.now;\n  return hit.maxAge ? diff > hit.maxAge : self[MAX_AGE] && diff > self[MAX_AGE];\n}\n\n/**\n * 删除\n * @param self\n * @param node\n */\nfunction del(self, node) {\n  if (node) {\n    const hit = node.value;\n    if (self[DISPOSE]) self[DISPOSE](hit.key, hit.value);\n\n    self[LENGTH] -= hit.length;\n    self[CACHE].delete(hit.key);\n    self[LIST].removeNode(node);\n  }\n}\n\n/**\n * 获取\n * @param self\n * @param key\n * @param doUse\n */\nfunction get(self, key, doUse) {\n  const node = self[CACHE].get(key);\n  if (node) {\n    const hit = node.value;\n    if (isStale(self, hit)) {\n      del(self, node);\n      if (!self[ALLOW_STALE]) return undefined;\n    } else if (doUse) {\n      if (self[UPDATE_AGE_ON_GET]) node.value.now = Date.now();\n      self[LIST].unshiftNode(node);\n    }\n    return hit.value;\n  }\n}\n\n/**\n * 修整\n * @param self\n */\nfunction trim(self) {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LIST].tail; self[LENGTH] > self[MAX] && walker !== null; ) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev;\n      del(self, walker);\n      walker = prev;\n    }\n  }\n}\n\n/**\n * 遍历步骤\n * @param self\n * @param fn\n * @param node\n * @param thisp\n */\nfunction forEachStep(self, fn, node, thisp) {\n  let hit = node.value;\n  if (isStale(self, hit)) {\n    del(self, node);\n    if (!self[ALLOW_STALE]) hit = undefined;\n  }\n  if (hit) fn.call(thisp, hit.value, hit.key, self);\n}\n\n/**\n * 构造 Entry 类\n */\nclass Entry<K, V> {\n  key: K;\n\n  value: V;\n\n  length: number;\n\n  now: number;\n\n  maxAge: number;\n\n  constructor(key: K, value: V, length: number, now: number, maxAge: number = 0) {\n    this.key = key;\n    this.value = value;\n    this.length = length;\n    this.now = now;\n    this.maxAge = maxAge;\n  }\n}\n\n/**\n * 声明缓存类型\n */\nexport type CacheOptions<K, V> = {\n  max?: number;\n  maxAge?: number;\n  length?: (value: V, key: K) => number;\n  stale?: boolean;\n  dispose?: (key: K, value: V) => void;\n  noDisposeOnSet?: boolean;\n  updateAgeOnGet?: boolean;\n};\n\n/**\n * 导出 Cache 类\n */\nexport default class Cache<K, V> {\n  constructor(options) {\n    if (typeof options === 'number') options = { max: options };\n\n    if (!options) options = {};\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number');\n    this[MAX] = options.max || Infinity;\n\n    const lc = options.length || naiveLength;\n    this[LENGTH_CALCULATOR] = typeof lc !== 'function' ? naiveLength : lc;\n    this[ALLOW_STALE] = options.stale || false;\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number');\n    this[MAX_AGE] = options.maxAge || 0;\n    this[DISPOSE] = options.dispose;\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;\n    this.reset();\n  }\n\n  // resize the cache when the max changes.\n  set max(mL) {\n    if (typeof mL !== 'number' || mL < 0) throw new TypeError('max must be a non-negative number');\n\n    this[MAX] = mL || Infinity;\n    trim(this);\n  }\n\n  get max() {\n    return this[MAX];\n  }\n\n  set allowStale(allowStale) {\n    this[ALLOW_STALE] = !!allowStale;\n  }\n\n  get allowStale() {\n    return this[ALLOW_STALE];\n  }\n\n  set maxAge(mA) {\n    if (typeof mA !== 'number') throw new TypeError('maxAge must be a non-negative number');\n\n    this[MAX_AGE] = mA;\n    trim(this);\n  }\n\n  get maxAge() {\n    return this[MAX_AGE];\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator(lC) {\n    if (typeof lC !== 'function') lC = naiveLength;\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC;\n      this[LENGTH] = 0;\n      this[LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);\n        this[LENGTH] += hit.length;\n      });\n    }\n    trim(this);\n  }\n\n  get lengthCalculator() {\n    return this[LENGTH_CALCULATOR];\n  }\n\n  get length() {\n    return this[LENGTH];\n  }\n\n  get itemCount() {\n    return this[LIST].length;\n  }\n\n  rforEach(fn, thisp) {\n    thisp = thisp || this;\n    for (let walker = this[LIST].tail; walker !== null; ) {\n      const prev = walker.prev;\n      forEachStep(this, fn, walker, thisp);\n      walker = prev;\n    }\n  }\n\n  forEach(fn, thisp) {\n    thisp = thisp || this;\n    for (let walker = this[LIST].head; walker !== null; ) {\n      const next = walker.next;\n      forEachStep(this, fn, walker, thisp);\n      walker = next;\n    }\n  }\n\n  keys(): K[] {\n    return this[LIST].toArray().map(k => k.key);\n  }\n\n  values(): V[] {\n    return this[LIST].toArray().map(k => k.value);\n  }\n\n  reset() {\n    if (this[DISPOSE] && this[LIST] && this[LIST].length) {\n      this[LIST].forEach(hit => this[DISPOSE](hit.key, hit.value));\n    }\n\n    this[CACHE] = new Map<K, V>(); // hash of items by key\n    this[LIST] = new Yallist(); // list of items in order of use recency\n    this[LENGTH] = 0; // length of items in the list\n  }\n\n  dump() {\n    return this[LIST].map(hit =>\n      isStale(this, hit)\n        ? false\n        : {\n            k: hit.key,\n            v: hit.value,\n            e: hit.now + (hit.maxAge || 0),\n          },\n    )\n      .toArray()\n      .filter(h => h);\n  }\n\n  dumpLru() {\n    return this[LIST];\n  }\n\n  set(key: K, value: V, maxAge?: number) {\n    maxAge = maxAge || this[MAX_AGE];\n\n    if (maxAge && typeof maxAge !== 'number') throw new TypeError('maxAge must be a number');\n\n    const now = maxAge ? Date.now() : 0;\n    const len = this[LENGTH_CALCULATOR](value, key);\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key));\n        return false;\n      }\n\n      const node = this[CACHE].get(key);\n      const item = node.value;\n\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET]) this[DISPOSE](key, item.value);\n      }\n\n      item.now = now;\n      item.maxAge = maxAge;\n      item.value = value;\n      this[LENGTH] += len - item.length;\n      item.length = len;\n      this.get(key);\n      trim(this);\n      return true;\n    }\n\n    const hit = new Entry<K, V>(key, value, len, now, maxAge);\n\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE]) this[DISPOSE](key, value);\n\n      return false;\n    }\n\n    this[LENGTH] += hit.length;\n    this[LIST].unshift(hit);\n    this[CACHE].set(key, this[LIST].head);\n    trim(this);\n    return true;\n  }\n\n  has(key: K): boolean {\n    if (!this[CACHE].has(key)) return false;\n    const hit = this[CACHE].get(key).value;\n    return !isStale(this, hit);\n  }\n\n  get(key: K): V {\n    return get(this, key, true);\n  }\n\n  peek(key: K): V {\n    return get(this, key, false);\n  }\n\n  pop(): V | null {\n    const node = this[LIST].tail;\n    if (!node) return null;\n\n    del(this, node);\n    return node.value;\n  }\n\n  del(key: K) {\n    del(this, this[CACHE].get(key));\n  }\n\n  load(arr) {\n    this.reset();\n\n    const now = Date.now();\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l];\n      const expiresAt = hit.e || 0;\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v);\n      else {\n        const maxAge = expiresAt - now;\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge);\n        }\n      }\n    }\n  }\n\n  prune() {\n    this[CACHE].forEach((_value, key) => get(this, key, false));\n  }\n}\n\nexport function refreshCacheOptions(cache: Cache<any, any>): IReactionDisposer {\n  return reaction(\n    () => getConfig('lookupCache'),\n    (lookupCache = {}) => {\n      if ('max' in lookupCache) {\n        cache.max = lookupCache.max;\n      }\n      if ('maxAge' in lookupCache) {\n        cache.maxAge = lookupCache.maxAge;\n      }\n      if ('stale' in lookupCache) {\n        cache.allowStale = lookupCache.stale;\n      }\n      if ('length' in lookupCache) {\n        cache.lengthCalculator = lookupCache.length;\n      }\n    },\n  );\n}\n"]}