{"version":3,"sources":["RangePicker.test.js"],"names":["RangePicker","DatePicker","describe","beforeEach","afterEach","it","birthday","locale","wrapper","trigger","setProps","value","expect","find","instance","getComponent","toMatchSnapshot","rangeCalendarWrapper","simulate","startOf","endOf","length","toBe","onCalendarChangeFn","jest","fn","at","toHaveBeenCalled","not","toThrow","update","hostNodes","useFakeTimers","add","document","dispatchEvent","MouseEvent","runAllTimers","hasClass","range","subtract","format","first","getDOMNode","last","dateString","input","target","handleOk","toHaveBeenCalledWith"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount, render } from 'enzyme';\nimport moment from 'moment';\nimport DatePicker from '..';\nimport { setMockDate, resetMockDate } from '../../../tests/utils';\nimport { selectDate } from './utils';\nimport focusTest from '../../../tests/shared/focusTest';\n\nconst { RangePicker } = DatePicker;\n\ndescribe('RangePicker', () => {\n  focusTest(RangePicker);\n\n  beforeEach(() => {\n    setMockDate();\n  });\n\n  afterEach(() => {\n    resetMockDate();\n  });\n\n  it('show month panel according to value', () => {\n    const birthday = moment('2000-01-01', 'YYYY-MM-DD').locale('zh-cn');\n    const wrapper = mount(\n      <RangePicker getCalendarContainer={trigger => trigger} format=\"YYYY/MM/DD\" showTime open />,\n    );\n\n    wrapper.setProps({ value: [birthday, birthday] });\n    expect(\n      render(\n        wrapper\n          .find('Trigger')\n          .instance()\n          .getComponent(),\n      ),\n    ).toMatchSnapshot();\n  });\n\n  it('switch to corresponding month panel when click presetted ranges', () => {\n    const birthday = moment('2000-01-01', 'YYYY-MM-DD').locale('zh-cn');\n    const wrapper = mount(\n      <RangePicker\n        ranges={{\n          'My Birthday': [birthday, birthday],\n        }}\n        getCalendarContainer={trigger => trigger}\n        format=\"YYYY/MM/DD\"\n        showTime\n        open\n      />,\n    );\n\n    const rangeCalendarWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    rangeCalendarWrapper.find('.c7n-calendar-range-quick-selector a').simulate('click');\n    expect(\n      render(\n        wrapper\n          .find('Trigger')\n          .instance()\n          .getComponent(),\n      ),\n    ).toMatchSnapshot();\n  });\n\n  it('highlight range when hover presetted range', () => {\n    const wrapper = mount(\n      <RangePicker\n        ranges={{\n          'This Month': [moment().startOf('month'), moment().endOf('month')],\n        }}\n        getCalendarContainer={trigger => trigger}\n        format=\"YYYY/MM/DD\"\n        open\n      />,\n    );\n\n    let rangeCalendarWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    rangeCalendarWrapper.find('.c7n-calendar-range-quick-selector a').simulate('mouseEnter');\n    rangeCalendarWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    expect(rangeCalendarWrapper.find('.c7n-calendar-selected-day').length).toBe(2);\n  });\n\n  it('should trigger onCalendarChange when change value', () => {\n    const onCalendarChangeFn = jest.fn();\n    const wrapper = mount(\n      <RangePicker\n        getCalendarContainer={trigger => trigger}\n        onCalendarChange={onCalendarChangeFn}\n        open\n      />,\n    );\n    const rangeCalendarWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    rangeCalendarWrapper\n      .find('.c7n-calendar-cell')\n      .at(15)\n      .simulate('click');\n    expect(onCalendarChangeFn).toHaveBeenCalled();\n  });\n\n  it('should not throw error when value is reset to `[]`', () => {\n    const birthday = moment('2000-01-01', 'YYYY-MM-DD');\n    const wrapper = mount(\n      <RangePicker getCalendarContainer={trigger => trigger} value={[birthday, birthday]} open />,\n    );\n    wrapper.setProps({ value: [] });\n    const rangeCalendarWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    expect(() =>\n      rangeCalendarWrapper\n        .find('.c7n-calendar-cell')\n        .at(15)\n        .simulate('click')\n        .simulate('click'),\n    ).not.toThrow();\n  });\n\n  it('should not throw error when select after clear', () => {\n    const wrapper = mount(<RangePicker getCalendarContainer={trigger => trigger} open />);\n    let rangeCalendarWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    rangeCalendarWrapper\n      .find('.c7n-calendar-cell')\n      .at(15)\n      .simulate('click')\n      .simulate('click');\n    wrapper.update();\n    wrapper\n      .find('.c7n-calendar-picker-clear')\n      .hostNodes()\n      .simulate('click');\n    wrapper.find('.c7n-calendar-picker-input').simulate('click');\n    rangeCalendarWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    expect(() =>\n      rangeCalendarWrapper\n        .find('.c7n-calendar-cell')\n        .at(15)\n        .simulate('click')\n        .simulate('click'),\n    ).not.toThrow();\n  });\n\n  it('clear hover value after panel close', () => {\n    jest.useFakeTimers();\n    const wrapper = mount(\n      <div>\n        <RangePicker value={[moment(), moment().add(2, 'day')]} />\n      </div>,\n    );\n    wrapper.find('.c7n-calendar-picker-input').simulate('click');\n    wrapper\n      .find('.c7n-calendar-cell')\n      .at(25)\n      .simulate('click');\n    wrapper\n      .find('.c7n-calendar-cell')\n      .at(27)\n      .simulate('mouseEnter');\n    document.dispatchEvent(new MouseEvent('mousedown'));\n    jest.runAllTimers();\n    wrapper.find('.c7n-calendar-picker-input').simulate('click');\n    expect(\n      wrapper\n        .find('.c7n-calendar-cell')\n        .at(23)\n        .hasClass('c7n-calendar-in-range-cell'),\n    ).toBe(true);\n  });\n\n  describe('preset range', () => {\n    it('static range', () => {\n      const range = [moment().subtract(2, 'd'), moment()];\n      const format = 'YYYY-MM-DD HH:mm:ss';\n      const wrapper = mount(<RangePicker ranges={{ 'recent two days': range }} format={format} />);\n      wrapper.find('.c7n-calendar-picker-input').simulate('click');\n      wrapper.find('.c7n-calendar-range-quick-selector a').simulate('click');\n      expect(\n        wrapper\n          .find('.c7n-calendar-range-picker-input')\n          .first()\n          .getDOMNode().value,\n      ).toBe(range[0].format(format));\n      expect(\n        wrapper\n          .find('.c7n-calendar-range-picker-input')\n          .last()\n          .getDOMNode().value,\n      ).toBe(range[1].format(format));\n    });\n\n    it('function range', () => {\n      const range = [moment().subtract(2, 'd'), moment()];\n      const format = 'YYYY-MM-DD HH:mm:ss';\n      const wrapper = mount(\n        <RangePicker ranges={{ 'recent two days': () => range }} format={format} />,\n      );\n      wrapper.find('.c7n-calendar-picker-input').simulate('click');\n      wrapper.find('.c7n-calendar-range-quick-selector a').simulate('click');\n      expect(\n        wrapper\n          .find('.c7n-calendar-range-picker-input')\n          .first()\n          .getDOMNode().value,\n      ).toBe(range[0].format(format));\n      expect(\n        wrapper\n          .find('.c7n-calendar-range-picker-input')\n          .last()\n          .getDOMNode().value,\n      ).toBe(range[1].format(format));\n    });\n  });\n\n  it('input date manually', () => {\n    const wrapper = mount(<RangePicker open />);\n    const dateString = '2008-12-31';\n    const input = wrapper.find('.c7n-calendar-input').first();\n    input.simulate('change', { target: { value: dateString } });\n    expect(input.getDOMNode().value).toBe(dateString);\n  });\n\n  it('triggers onOk when click on preset range', () => {\n    const handleOk = jest.fn();\n    const range = [moment().subtract(2, 'd'), moment()];\n    const wrapper = mount(<RangePicker ranges={{ 'recent two days': range }} onOk={handleOk} />);\n    wrapper.find('.c7n-calendar-picker-input').simulate('click');\n    wrapper.find('.c7n-calendar-range-quick-selector a').simulate('click');\n    expect(handleOk).toHaveBeenCalledWith(range);\n  });\n\n  it('invali end date not throw error', () => {\n    const wrapper = mount(<RangePicker />);\n    wrapper.find('.c7n-calendar-picker-input').simulate('click');\n    selectDate(wrapper, moment('2017-09-18'), 0);\n    selectDate(wrapper, moment('2017-10-18'), 1);\n    wrapper.find('.c7n-calendar-picker-input').simulate('click');\n    expect(() =>\n      wrapper\n        .find('.c7n-calendar-input')\n        .at(1)\n        .simulate('change', { target: { value: '2016-01-01' } }),\n    ).not.toThrow();\n  });\n});\n"]}