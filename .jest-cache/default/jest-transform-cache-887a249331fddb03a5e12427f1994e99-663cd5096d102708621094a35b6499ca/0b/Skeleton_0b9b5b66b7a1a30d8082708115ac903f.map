{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/skeleton/Skeleton.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAqB,QAArB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,oCAae;AACX,UAAM,UAAU,GAAG,qIAA4B,CAC7C,eAD6C,CAA5B,CAAnB;AAGA,aAAO,UAAP;AACD;AAlBH;AAAA;AAAA,6BAoBQ;AAAA,wBAC8C,KAAK,KADnD;AAAA,UACI,OADJ,eACI,OADJ;AAAA,UACa,aADb,eACa,aADb;AAAA,UAC+B,UAD/B;AAEJ,UAAM,KAAK,GAAqB;AAC9B,QAAA,KAAK,EAAE;AADuB,OAAhC;AAGA,UAAM,SAAS,GAAG,sBAAK,UAAL,EAAiB,OAAjB,CAAlB;;AAEA,UAAI,OAAJ,EAAa;AACX;AACA,QAAA,KAAK,CAAC,OAAN,GAAgB,OAAO,CAAC,MAAR,KAAc;AAAA;AAA9B;AACD;;AAED,aAAO,kBAAA,aAAA,CAAC,oBAAD,EAAY,0BAAA,EAAA,EAAK,SAAL,EAAoB,KAApB,CAAZ,CAAP;AACD;AAjCH;AAAA;AAAA,EAAsC,6BAAtC,CAAA;;AACS,QAAA,CAAA,WAAA,GAAc,YAAd;AAEA,QAAA,CAAA,MAAA,GAAS,kBAAT;AAEA,QAAA,CAAA,KAAA,GAAQ,iBAAR;AAEA,QAAA,CAAA,MAAA,GAAS,kBAAT;AAEA,QAAA,CAAA,YAAA,GAAuC;AAC5C,EAAA,aAAa,EAAE;AAD6B,CAAvC;AATY,QAAQ,GAAA,uBAAA,CAD5B,mBAC4B,CAAA,EAAR,QAAQ,CAAR;eAAA,Q","sourcesContent":["import C7nSkeleton, { SkeletonProps as C7nSkeletonProps } from 'choerodon-ui/lib/skeleton';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport omit from 'lodash/omit';\nimport { DataSetStatus } from '../data-set/enum';\nimport DataSetComponent, { DataSetComponentProps } from '../data-set/DataSetComponent';\nimport SkeletonButton from './Button';\nimport SkeletonInput from './Input';\nimport Avatar from './Avatar';\n\nexport interface SkeletonProps extends DataSetComponentProps, Omit<C7nSkeletonProps, 'title'> {\n  skeletonTitle?: boolean,\n}\n\n\n@observer\nexport default class Skeleton extends DataSetComponent<SkeletonProps> {\n  static displayName = 'Skeletions';\n\n  static Button = SkeletonButton;\n\n  static Input = SkeletonInput;\n\n  static Avatar = Avatar;\n\n  static defaultProps: Partial<SkeletonProps> = {\n    skeletonTitle: true,\n  };\n\n  getOtherProps() {\n    const otherProps = omit(super.getOtherProps(), [\n      'skeletonTitle',\n    ]);\n    return otherProps;\n  }\n\n  render() {\n    const { dataSet, skeletonTitle, ...otherProps } = this.props;\n    const props: C7nSkeletonProps = {\n      title: skeletonTitle,\n    };\n    const omitProps = omit(otherProps, 'title');\n\n    if (dataSet) {\n      // @ts-ignore\n      props.loading = dataSet.status !== DataSetStatus.ready;\n    }\n\n    return <C7nSkeleton {...omitProps} {...props} />;\n  }\n}\n\n\n\n"]}