{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/Column.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, ComponentState, CSSProperties, ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'mobx';\nimport DataSet from '../data-set/DataSet';\nimport Record from '../data-set/Record';\nimport { FormFieldProps, Renderer } from '../field/FormField';\nimport { ElementProps } from '../core/ViewComponent';\nimport { ColumnAlign, ColumnLock, TableColumnTooltip } from './enum';\nimport { ShowHelp } from '../field/enum';\nimport { Commands } from './Table';\n\nexport const defaultMinWidth = 100;\n\nexport type onCellProps = { dataSet: DataSet; record: Record; column: ColumnProps; };\nexport type commandProps = { dataSet: DataSet; record: Record; };\n\nexport interface ColumnPropsBase extends ElementProps {\n  /**\n   * 列对照的字段名\n   */\n  name?: string;\n  /**\n   * 列宽\n   * 不推荐给所有列设置宽度，而是给某一列不设置宽度达到自动宽度的效果\n   */\n  width?: number;\n  /**\n   * 最小列宽\n   */\n  minWidth?: number;\n  /**\n   * 内部最大宽度\n   */\n  innerMaxWidth?: number;\n  /**\n   * 列头\n   */\n  header?: ReactNode | ((dataSet: DataSet, name?: string) => ReactNode);\n  /**\n   * 列脚\n   */\n  footer?: ReactNode | ((dataSet: DataSet, name?: string) => ReactNode);\n  /**\n   * 单元格渲染回调\n   */\n  renderer?: Renderer;\n  /**\n   * 编辑器\n   */\n  editor?:\n  | ReactElement<FormFieldProps>\n  | ((record: Record, name?: string) => ReactElement<FormFieldProps> | boolean)\n  | boolean;\n  /**\n   * 是否锁定\n   * 可选值： false | true | 'left' | 'right'\n   * @default false\n   */\n  lock?: ColumnLock | boolean;\n  /**\n   * 文字对齐方式\n   * 可选值： 'left' | 'center' | 'right'\n   */\n  align?: ColumnAlign;\n  /**\n   * 是否可调整宽度\n   * @default true\n   */\n  resizable?: boolean;\n  /**\n   * 是否可排序\n   * @default false\n   */\n  sortable?: boolean;\n  /**\n   * 是否可隐藏，设为false时不会出现在列过滤选项中\n   * @default true\n   */\n  hideable?: boolean;\n  /**\n   * 列头内链样式\n   */\n  headerStyle?: CSSProperties;\n  /**\n   * 列头样式名\n   */\n  headerClassName?: string;\n  /**\n   * 列脚内链样式\n   */\n  footerStyle?: CSSProperties;\n  /**\n   * 列脚样式名\n   */\n  footerClassName?: string;\n  /**\n   * 列头提示信息\n   */\n  help?: string;\n  /**\n   * 显示提示信息的方式\n   *\n   */\n  showHelp?: ShowHelp;\n  /**\n   * 用tooltip显示单元格内容\n   * 可选值：`none` `always` `overflow`\n   */\n  tooltip?: TableColumnTooltip;\n  /**\n   * 设置单元格属性\n   * @param {onCellProps} props\n   * @return {Object} 单元格属性\n   */\n  onCell?: (props: onCellProps) => object;\n  /**\n   * 行操作按钮\n   * 可选值：`edit` `delete` 或 自定义按钮\n   * 给内置按钮加属性：command={[['edit', { color: 'red' }], ...]}\n   */\n  command?: Commands[] | ((props: commandProps) => Commands[]);\n}\n\nexport interface ColumnProps extends ColumnPropsBase {\n  children?: ColumnProps[];\n}\n\nexport interface ColumnPropsInner extends ColumnPropsBase {\n  children?: ReactElement<ColumnProps>[] | ReactElement<ColumnProps>;\n}\n\n/* eslint-disable react/prefer-stateless-function,react/no-unused-prop-types */\nexport default class Column extends Component<ColumnPropsInner, ComponentState> {\n\n  static propTypes = {\n    /**\n     * 列对照的字段名\n     */\n    name: PropTypes.string,\n    /**\n     * 列宽\n     * 不推荐给所有列设置宽度，而是给某一列不设置宽度达到自动宽度的效果\n     */\n    width: PropTypes.number,\n    /**\n     * 最小列宽\n     */\n    minWidth: PropTypes.number,\n    /**\n     * 列内部中最大能撑开的宽度\n     */\n    innerMaxWidth: PropTypes.number,\n    /**\n     * 列头\n     */\n    header: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.func]),\n    /**\n     * 列脚\n     */\n    footer: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.func]),\n    /**\n     * 单元格渲染回调\n     */\n    renderer: PropTypes.func,\n    /**\n     * 编辑器\n     */\n    editor: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.bool]),\n    /**\n     * 是否锁定\n     * 可选值： false | true | 'left' | 'right'\n     * @default false\n     */\n    lock: PropTypes.oneOf([ColumnLock.left, ColumnLock.right, true, false]),\n    /**\n     * 文字对齐方式\n     * 可选值： 'left' | 'center' | 'right'\n     */\n    align: PropTypes.oneOf([ColumnAlign.left, ColumnAlign.center, ColumnAlign.right]),\n    /**\n     * 是否可调整宽度\n     * @default true\n     */\n    resizable: PropTypes.bool,\n    /**\n     * 是否可排序\n     * @default false\n     */\n    sortable: PropTypes.bool,\n    /**\n     * 是否可隐藏，设为false时不会出现在列过滤选项中\n     * @default true\n     */\n    hideable: PropTypes.bool,\n    /**\n     * 是否可排序\n     * @default false\n     */\n    /**\n     * 列头提示信息\n     */\n    help: PropTypes.string,\n    /**\n     * 显示提示信息的方式\n     *\n     */\n    showHelp: PropTypes.oneOf([ShowHelp.tooltip, ShowHelp.newLine, ShowHelp.none]),\n    hidden: PropTypes.bool,\n    colSpan: PropTypes.number,\n    rowSpan: PropTypes.number,\n    children: PropTypes.array,\n  };\n\n  static defaultProps = {\n    hidden: false,\n    lock: false,\n    resizable: true,\n    sortable: false,\n    hideable: true,\n    minWidth: defaultMinWidth,\n    showHelp: ShowHelp.tooltip,\n  };\n}\n\nexport function minColumnWidth(col) {\n  const hidden = get(col, 'hidden');\n  if (hidden) {\n    return 0;\n  }\n  const width = get(col, 'width');\n  const min = get(col, 'minWidth');\n  const minWidth = min === undefined ? defaultMinWidth : min;\n  if (width === undefined) {\n    return minWidth;\n  }\n  return Math.min(width, minWidth);\n}\n\nexport function columnWidth(col) {\n  const hidden = get(col, 'hidden');\n  if (hidden) {\n    return 0;\n  }\n  const width = get(col, 'width');\n  if (width === undefined) {\n    const minWidth = get(col, 'minWidth');\n    if (minWidth === undefined) {\n      return defaultMinWidth;\n    }\n    return minWidth;\n  }\n  return width;\n}\n"]}