0d2ebd2b46b1381d8364c80ecd52ce48
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _modalProviderTest = _interopRequireDefault(require("./modalProviderTest"));

describe('ModalProvider', function () {
  beforeEach(function () {
    jest.useFakeTimers();
  });
  afterEach(function () {
    jest.useRealTimers();
  });
  it('the hidden property change show when click the button', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_modalProviderTest["default"], null));
    expect(wrapper.find('.c7n-pro-mask-wrapper').toHaveLength(1));
    wrapper.find('button').at(1).simulate('click');
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-pro-mask-wrapper').toHaveLength(0));
  });
  it('the modal show when click the button', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_modalProviderTest["default"], null));
    expect(wrapper.find('.c7n-pro-modal')).toHaveLength(0);
    wrapper.find('button').at(1).simulate('click');
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-pro-modal')).toHaveLength(1);
  });
  it('the modal hidden when click the button cancel', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_modalProviderTest["default"], null));
    wrapper.find('button').at(1).simulate('click');
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-pro-modal')).toHaveLength(1);
    expect(wrapper.find('.c7n-pro-modal').hostNodes().find('button').at(1)).toHaveLength(1);
    wrapper.find('.c7n-pro-modal').hostNodes().find('button').at(1).simulate('click');
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-pro-mask-wrapper').prop('hidden')).toBe(false);
    wrapper.find('.c7n-pro-modal').hostNodes().find('button').at(0).simulate('click');
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-pro-modal')).toHaveLength(2);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiamVzdCIsInVzZUZha2VUaW1lcnMiLCJhZnRlckVhY2giLCJ1c2VSZWFsVGltZXJzIiwiaXQiLCJ3cmFwcGVyIiwiZXhwZWN0IiwiZmluZCIsInRvSGF2ZUxlbmd0aCIsImF0Iiwic2ltdWxhdGUiLCJydW5BbGxUaW1lcnMiLCJ1cGRhdGUiLCJob3N0Tm9kZXMiLCJwcm9wIiwidG9CZSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBQSxRQUFRLENBQUMsZUFBRCxFQUFrQixZQUFNO0FBQzlCQyxFQUFBQSxVQUFVLENBQUMsWUFBTTtBQUNmQyxJQUFBQSxJQUFJLENBQUNDLGFBQUw7QUFDRCxHQUZTLENBQVY7QUFJQUMsRUFBQUEsU0FBUyxDQUFDLFlBQU07QUFDZEYsSUFBQUEsSUFBSSxDQUFDRyxhQUFMO0FBQ0QsR0FGUSxDQUFUO0FBSUFDLEVBQUFBLEVBQUUsQ0FBQyx1REFBRCxFQUEwRCxZQUFNO0FBQ2hFLFFBQU1DLE9BQU8sR0FBRyxtQkFBTSxnQ0FBQyw2QkFBRCxPQUFOLENBQWhCO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0QsT0FBTyxDQUFDRSxJQUFSLENBQWEsdUJBQWIsRUFBc0NDLFlBQXRDLENBQW1ELENBQW5ELENBQUQsQ0FBTjtBQUNBSCxJQUFBQSxPQUFPLENBQ0pFLElBREgsQ0FDUSxRQURSLEVBRUdFLEVBRkgsQ0FFTSxDQUZOLEVBR0dDLFFBSEgsQ0FHWSxPQUhaO0FBSUFWLElBQUFBLElBQUksQ0FBQ1csWUFBTDtBQUNBTixJQUFBQSxPQUFPLENBQUNPLE1BQVI7QUFDQU4sSUFBQUEsTUFBTSxDQUFDRCxPQUFPLENBQUNFLElBQVIsQ0FBYSx1QkFBYixFQUFzQ0MsWUFBdEMsQ0FBbUQsQ0FBbkQsQ0FBRCxDQUFOO0FBQ0QsR0FWQyxDQUFGO0FBWUFKLEVBQUFBLEVBQUUsQ0FBQyxzQ0FBRCxFQUF5QyxZQUFNO0FBQy9DLFFBQU1DLE9BQU8sR0FBRyxtQkFBTSxnQ0FBQyw2QkFBRCxPQUFOLENBQWhCO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0QsT0FBTyxDQUFDRSxJQUFSLENBQWEsZ0JBQWIsQ0FBRCxDQUFOLENBQXVDQyxZQUF2QyxDQUFvRCxDQUFwRDtBQUNBSCxJQUFBQSxPQUFPLENBQ0pFLElBREgsQ0FDUSxRQURSLEVBRUdFLEVBRkgsQ0FFTSxDQUZOLEVBR0dDLFFBSEgsQ0FHWSxPQUhaO0FBSUFWLElBQUFBLElBQUksQ0FBQ1csWUFBTDtBQUNBTixJQUFBQSxPQUFPLENBQUNPLE1BQVI7QUFDQU4sSUFBQUEsTUFBTSxDQUFDRCxPQUFPLENBQUNFLElBQVIsQ0FBYSxnQkFBYixDQUFELENBQU4sQ0FBdUNDLFlBQXZDLENBQW9ELENBQXBEO0FBQ0QsR0FWQyxDQUFGO0FBWUFKLEVBQUFBLEVBQUUsQ0FBQywrQ0FBRCxFQUFrRCxZQUFNO0FBQ3hELFFBQU1DLE9BQU8sR0FBRyxtQkFBTSxnQ0FBQyw2QkFBRCxPQUFOLENBQWhCO0FBQ0FBLElBQUFBLE9BQU8sQ0FDSkUsSUFESCxDQUNRLFFBRFIsRUFFR0UsRUFGSCxDQUVNLENBRk4sRUFHR0MsUUFISCxDQUdZLE9BSFo7QUFJQVYsSUFBQUEsSUFBSSxDQUFDVyxZQUFMO0FBQ0FOLElBQUFBLE9BQU8sQ0FBQ08sTUFBUjtBQUNBTixJQUFBQSxNQUFNLENBQUNELE9BQU8sQ0FBQ0UsSUFBUixDQUFhLGdCQUFiLENBQUQsQ0FBTixDQUF1Q0MsWUFBdkMsQ0FBb0QsQ0FBcEQ7QUFDQUYsSUFBQUEsTUFBTSxDQUNKRCxPQUFPLENBQ0pFLElBREgsQ0FDUSxnQkFEUixFQUVHTSxTQUZILEdBR0dOLElBSEgsQ0FHUSxRQUhSLEVBSUdFLEVBSkgsQ0FJTSxDQUpOLENBREksQ0FBTixDQU1FRCxZQU5GLENBTWUsQ0FOZjtBQU9BSCxJQUFBQSxPQUFPLENBQ0pFLElBREgsQ0FDUSxnQkFEUixFQUVHTSxTQUZILEdBR0dOLElBSEgsQ0FHUSxRQUhSLEVBSUdFLEVBSkgsQ0FJTSxDQUpOLEVBS0dDLFFBTEgsQ0FLWSxPQUxaO0FBTUFWLElBQUFBLElBQUksQ0FBQ1csWUFBTDtBQUNBTixJQUFBQSxPQUFPLENBQUNPLE1BQVI7QUFDQU4sSUFBQUEsTUFBTSxDQUFDRCxPQUFPLENBQUNFLElBQVIsQ0FBYSx1QkFBYixFQUFzQ08sSUFBdEMsQ0FBMkMsUUFBM0MsQ0FBRCxDQUFOLENBQTZEQyxJQUE3RCxDQUFrRSxLQUFsRTtBQUVBVixJQUFBQSxPQUFPLENBQ0pFLElBREgsQ0FDUSxnQkFEUixFQUVHTSxTQUZILEdBR0dOLElBSEgsQ0FHUSxRQUhSLEVBSUdFLEVBSkgsQ0FJTSxDQUpOLEVBS0dDLFFBTEgsQ0FLWSxPQUxaO0FBTUFWLElBQUFBLElBQUksQ0FBQ1csWUFBTDtBQUNBTixJQUFBQSxPQUFPLENBQUNPLE1BQVI7QUFDQU4sSUFBQUEsTUFBTSxDQUFDRCxPQUFPLENBQUNFLElBQVIsQ0FBYSxnQkFBYixDQUFELENBQU4sQ0FBdUNDLFlBQXZDLENBQW9ELENBQXBEO0FBQ0QsR0FuQ0MsQ0FBRjtBQW9DRCxDQXJFTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1vdW50IH0gZnJvbSAnZW56eW1lJztcbmltcG9ydCBNb2RhbFByb3ZpZGVyVGVzdCBmcm9tICcuL21vZGFsUHJvdmlkZXJUZXN0JztcblxuZGVzY3JpYmUoJ01vZGFsUHJvdmlkZXInLCAoKSA9PiB7XG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIGplc3QudXNlRmFrZVRpbWVycygpO1xuICB9KTtcblxuICBhZnRlckVhY2goKCkgPT4ge1xuICAgIGplc3QudXNlUmVhbFRpbWVycygpO1xuICB9KTtcblxuICBpdCgndGhlIGhpZGRlbiBwcm9wZXJ0eSBjaGFuZ2Ugc2hvdyB3aGVuIGNsaWNrIHRoZSBidXR0b24nLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KDxNb2RhbFByb3ZpZGVyVGVzdCAvPik7XG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnLmM3bi1wcm8tbWFzay13cmFwcGVyJykudG9IYXZlTGVuZ3RoKDEpKTtcbiAgICB3cmFwcGVyXG4gICAgICAuZmluZCgnYnV0dG9uJylcbiAgICAgIC5hdCgxKVxuICAgICAgLnNpbXVsYXRlKCdjbGljaycpO1xuICAgIGplc3QucnVuQWxsVGltZXJzKCk7XG4gICAgd3JhcHBlci51cGRhdGUoKTtcbiAgICBleHBlY3Qod3JhcHBlci5maW5kKCcuYzduLXByby1tYXNrLXdyYXBwZXInKS50b0hhdmVMZW5ndGgoMCkpO1xuICB9KTtcblxuICBpdCgndGhlIG1vZGFsIHNob3cgd2hlbiBjbGljayB0aGUgYnV0dG9uJywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudCg8TW9kYWxQcm92aWRlclRlc3QgLz4pO1xuICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJy5jN24tcHJvLW1vZGFsJykpLnRvSGF2ZUxlbmd0aCgwKTtcbiAgICB3cmFwcGVyXG4gICAgICAuZmluZCgnYnV0dG9uJylcbiAgICAgIC5hdCgxKVxuICAgICAgLnNpbXVsYXRlKCdjbGljaycpO1xuICAgIGplc3QucnVuQWxsVGltZXJzKCk7XG4gICAgd3JhcHBlci51cGRhdGUoKTtcbiAgICBleHBlY3Qod3JhcHBlci5maW5kKCcuYzduLXByby1tb2RhbCcpKS50b0hhdmVMZW5ndGgoMSk7XG4gIH0pO1xuXG4gIGl0KCd0aGUgbW9kYWwgaGlkZGVuIHdoZW4gY2xpY2sgdGhlIGJ1dHRvbiBjYW5jZWwnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KDxNb2RhbFByb3ZpZGVyVGVzdCAvPik7XG4gICAgd3JhcHBlclxuICAgICAgLmZpbmQoJ2J1dHRvbicpXG4gICAgICAuYXQoMSlcbiAgICAgIC5zaW11bGF0ZSgnY2xpY2snKTtcbiAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgIHdyYXBwZXIudXBkYXRlKCk7XG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnLmM3bi1wcm8tbW9kYWwnKSkudG9IYXZlTGVuZ3RoKDEpO1xuICAgIGV4cGVjdChcbiAgICAgIHdyYXBwZXJcbiAgICAgICAgLmZpbmQoJy5jN24tcHJvLW1vZGFsJylcbiAgICAgICAgLmhvc3ROb2RlcygpXG4gICAgICAgIC5maW5kKCdidXR0b24nKVxuICAgICAgICAuYXQoMSksXG4gICAgKS50b0hhdmVMZW5ndGgoMSk7XG4gICAgd3JhcHBlclxuICAgICAgLmZpbmQoJy5jN24tcHJvLW1vZGFsJylcbiAgICAgIC5ob3N0Tm9kZXMoKVxuICAgICAgLmZpbmQoJ2J1dHRvbicpXG4gICAgICAuYXQoMSlcbiAgICAgIC5zaW11bGF0ZSgnY2xpY2snKTtcbiAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgIHdyYXBwZXIudXBkYXRlKCk7XG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnLmM3bi1wcm8tbWFzay13cmFwcGVyJykucHJvcCgnaGlkZGVuJykpLnRvQmUoZmFsc2UpO1xuXG4gICAgd3JhcHBlclxuICAgICAgLmZpbmQoJy5jN24tcHJvLW1vZGFsJylcbiAgICAgIC5ob3N0Tm9kZXMoKVxuICAgICAgLmZpbmQoJ2J1dHRvbicpXG4gICAgICAuYXQoMClcbiAgICAgIC5zaW11bGF0ZSgnY2xpY2snKTtcbiAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgIHdyYXBwZXIudXBkYXRlKCk7XG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnLmM3bi1wcm8tbW9kYWwnKSkudG9IYXZlTGVuZ3RoKDIpO1xuICB9KTtcbn0pO1xuIl19