{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/Row.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGM,G;;;;;;;;;;;;;;6BAkBE;AAAA,wBAYA,KAAK,KAZL;AAAA,UAEF,SAFE,eAEF,SAFE;AAAA,UAGF,KAHE,eAGF,KAHE;AAAA,UAIF,MAJE,eAIF,MAJE;AAAA,UAKF,GALE,eAKF,GALE;AAAA,UAMF,KANE,eAMF,KANE;AAAA,UAOF,WAPE,eAOF,WAPE;AAAA,UAQF,YARE,eAQF,YARE;AAAA,UASF,MATE,eASF,MATE;AAAA,UAUF,WAVE,eAUF,WAVE;AAAA,UAWC,IAXD;AAcJ,UAAM,SAAS,GAAG,mBAAO,WAAP,CAAlB;AACA,UAAM,OAAO,GAAG,4BAAW,WAAX,EAAwB,SAAxB,uCACb,SAAS,CAAC,QAAD,CADI,EACS,WADT,EAAhB;AAIA,UAAM,MAAM;AACV,QAAA,QAAQ,EAAE,KADA;AAEV,QAAA,MAAM,EAAE,WAAW,GAAG,YAAH,GAAkB;AAF3B,SAGP,KAHO,CAAZ;AAMA,UAAM,cAAc,GAAG,8BAAkB,GAAlB,EAAuB,IAAvB,CAAvB;AAEA,aACE,KAAA,CAAA,aAAA,CAAC,yBAAa,QAAd,EAAsB,IAAtB,EACG,gBAA+B;AAAA,YAA5B,sBAA4B,QAA5B,sBAA4B;AAC9B,QAAA,sBAAsB,SAAtB,IAAA,sBAAsB,WAAtB,YAAA,sBAAsB,CAAG,MAAH,EAAW,CAAX,EAAc,GAAd,CAAtB;AACA,eAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,0BAAA,EAAA,EAAS,cAAT,EAAuB;AAAE,UAAA,GAAG,EAAE,MAAP;AAAe,UAAA,SAAS,EAAE,OAA1B;AAAmC,UAAA,KAAK,EAAE;AAA1C,SAAvB,CAAA,CAAP;AACD,OAJH,CADF;AAQD;;;EArDe,KAAK,CAAC,a;;AACf,GAAA,CAAA,SAAA,GAAY;AACjB,EAAA,KAAK,EAAE,sBAAU,MADA;AAEjB,EAAA,MAAM,EAAE,sBAAU,MAFD;AAGjB,EAAA,YAAY,EAAE,sBAAU,MAHP;AAIjB,EAAA,GAAG,EAAE,sBAAU,MAJE;AAKjB,EAAA,WAAW,EAAE,sBAAU,IALN;AAMjB,EAAA,MAAM,EAAE,sBAAU,SAAV,CAAoB,CAAC,sBAAU,IAAX,EAAiB,sBAAU,MAA3B,CAApB,CANS;AAOjB,EAAA,SAAS,EAAE,sBAAU,MAPJ;AAQjB,EAAA,WAAW,EAAE,sBAAU,MARN;AASjB,EAAA,KAAK,EAAE,sBAAU;AATA,CAAZ;AAWA,GAAA,CAAA,YAAA,GAAe;AACpB,EAAA,WAAW,EAAE,+BAAmB,uBAAnB,CADO;AAEpB,EAAA,MAAM,EAAE,EAFY;AAGpB,EAAA,YAAY,EAAE;AAHM,CAAf;eA4CM,G","sourcesContent":["// @ts-nocheck\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { defaultClassPrefix, getUnhandledProps, prefix } from './utils';\nimport TableContext from './TableContext';\nimport { RowProps } from './Row.d';\n\nclass Row extends React.PureComponent<RowProps> {\n  static propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    headerHeight: PropTypes.number,\n    top: PropTypes.number,\n    isHeaderRow: PropTypes.bool,\n    rowRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    className: PropTypes.string,\n    classPrefix: PropTypes.string,\n    style: PropTypes.object,\n  };\n  static defaultProps = {\n    classPrefix: defaultClassPrefix('performance-table-row'),\n    height: 46,\n    headerHeight: 40,\n  };\n\n  render() {\n    const {\n      className,\n      width,\n      height,\n      top,\n      style,\n      isHeaderRow,\n      headerHeight,\n      rowRef,\n      classPrefix,\n      ...rest\n    } = this.props;\n\n    const addPrefix = prefix(classPrefix);\n    const classes = classNames(classPrefix, className, {\n      [addPrefix('header')]: isHeaderRow,\n    });\n\n    const styles = {\n      minWidth: width,\n      height: isHeaderRow ? headerHeight : height,\n      ...style,\n    };\n\n    const unhandledProps = getUnhandledProps(Row, rest);\n\n    return (\n      <TableContext.Consumer>\n        {({ translateDOMPositionXY }) => {\n          translateDOMPositionXY?.(styles, 0, top);\n          return <div {...unhandledProps} ref={rowRef} className={classes} style={styles} />;\n        }}\n      </TableContext.Consumer>\n    );\n  }\n}\n\nexport default Row;\n"]}