4298de01e94fed7a8984239565a61142
"use strict";

/* istanbul ignore next */
function cov_2qpd10169f() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/Column.tsx";
  var hash = "dc41db2e38ca6c28db22c266f5089b8753f0752f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/Column.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "4": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 14,
          column: 14
        }
      },
      "5": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 19,
          column: 2
        }
      },
      "6": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 33,
          column: 2
        }
      },
      "7": {
        start: {
          line: 34,
          column: 15
        },
        end: {
          line: 34,
          column: 21
        }
      },
      "8": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "Column",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 15
          }
        },
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dc41db2e38ca6c28db22c266f5089b8753f0752f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2qpd10169f = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2qpd10169f();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2qpd10169f().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_2qpd10169f().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2qpd10169f().s[2]++;
exports["default"] = void 0;

var _propTypes =
/* istanbul ignore next */
(cov_2qpd10169f().s[3]++, _interopRequireDefault(require("prop-types"))); // eslint-disable-next-line @typescript-eslint/no-unused-vars


function Column(_props) {
  /* istanbul ignore next */
  cov_2qpd10169f().f[0]++;
  cov_2qpd10169f().s[4]++;
  return null;
}

/* istanbul ignore next */
cov_2qpd10169f().s[5]++;
Column.defaultProps = {
  width: 100
};

/* istanbul ignore next */
cov_2qpd10169f().s[6]++;
Column.propTypes = {
  align: _propTypes["default"].oneOf(['left', 'center', 'right']),
  verticalAlign: _propTypes["default"].oneOf(['top', 'middle', 'bottom']),
  width: _propTypes["default"].number,
  fixed: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].oneOf(['left', 'right'])]),
  resizable: _propTypes["default"].bool,
  sortable: _propTypes["default"].bool,
  flexGrow: _propTypes["default"].number,
  minWidth: _propTypes["default"].number,
  colSpan: _propTypes["default"].number,
  treeCol: _propTypes["default"].bool,
  onResize: _propTypes["default"].func,
  render: _propTypes["default"].func
};

var _default =
/* istanbul ignore next */
(cov_2qpd10169f().s[7]++, Column);

/* istanbul ignore next */
cov_2qpd10169f().s[8]++;
exports["default"] = _default;