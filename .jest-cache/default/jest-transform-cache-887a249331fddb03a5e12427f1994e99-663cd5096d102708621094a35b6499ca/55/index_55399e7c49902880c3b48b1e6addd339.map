{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/tooltip/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {\n  cloneElement,\n  Component,\n  CSSProperties,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport classNames from 'classnames';\nimport getPlacements, { AdjustOverflow, PlacementsConfig } from './placements';\nimport Button from '../button/index';\nimport RcTooltip from '../rc-components/tooltip';\nimport { getPrefixCls } from '../configure';\n\nexport { AdjustOverflow, PlacementsConfig };\n\nexport type TooltipPlacement =\n  | 'top'\n  | 'left'\n  | 'right'\n  | 'bottom'\n  | 'topLeft'\n  | 'topRight'\n  | 'bottomLeft'\n  | 'bottomRight'\n  | 'leftTop'\n  | 'leftBottom'\n  | 'rightTop'\n  | 'rightBottom';\n\nexport interface AbstractTooltipProps {\n  prefixCls?: string;\n  overlayClassName?: string;\n  style?: CSSProperties;\n  overlayStyle?: CSSProperties;\n  placement?: TooltipPlacement;\n  builtinPlacements?: Object;\n  defaultVisible?: boolean;\n  visible?: boolean;\n  onVisibleChange?: (visible: boolean) => void;\n  mouseEnterDelay?: number;\n  mouseLeaveDelay?: number;\n  transitionName?: string;\n  trigger?: 'hover' | 'focus' | 'click' | 'contextMenu';\n  openClassName?: string;\n  arrowPointAtCenter?: boolean;\n  autoAdjustOverflow?: boolean | AdjustOverflow;\n  // getTooltipContainer had been rename to getPopupContainer\n  getTooltipContainer?: (triggerNode: Element) => HTMLElement;\n  getPopupContainer?: (triggerNode: Element) => HTMLElement;\n  children?: ReactNode;\n}\n\nexport type RenderFunction = () => ReactNode;\n\nexport interface TooltipProps extends AbstractTooltipProps {\n  title?: ReactNode | RenderFunction;\n  overlay?: ReactNode | RenderFunction;\n}\n\nconst splitObject = (obj: any, keys: string[]) => {\n  const picked: any = {};\n  const omited: any = { ...obj };\n  keys.forEach(key => {\n    if (obj && key in obj) {\n      picked[key] = obj[key];\n      delete omited[key];\n    }\n  });\n  return { picked, omited };\n};\n\nexport default class Tooltip extends Component<TooltipProps, any> {\n  static displayName = 'Tooltip';\n\n  static defaultProps = {\n    placement: 'top',\n    transitionName: 'zoom-big-fast',\n    mouseEnterDelay: 0.1,\n    mouseLeaveDelay: 0.1,\n    arrowPointAtCenter: false,\n    autoAdjustOverflow: true,\n  };\n\n  private tooltip: any;\n\n  constructor(props: TooltipProps) {\n    super(props);\n\n    this.state = {\n      visible: !!props.visible || !!props.defaultVisible,\n    };\n  }\n\n  componentWillReceiveProps(nextProps: TooltipProps) {\n    if ('visible' in nextProps) {\n      this.setState({ visible: nextProps.visible });\n    }\n  }\n\n  onVisibleChange = (visible: boolean) => {\n    const { onVisibleChange } = this.props;\n    if (!('visible' in this.props)) {\n      this.setState({ visible: this.isNoTitle() ? false : visible });\n    }\n    if (onVisibleChange && !this.isNoTitle()) {\n      onVisibleChange(visible);\n    }\n  };\n\n  getPopupDomNode() {\n    return this.tooltip.getPopupDomNode();\n  }\n\n  getPlacements() {\n    const { builtinPlacements, arrowPointAtCenter, autoAdjustOverflow } = this.props;\n    return (\n      builtinPlacements ||\n      getPlacements({\n        arrowPointAtCenter,\n        verticalArrowShift: 8,\n        autoAdjustOverflow,\n      })\n    );\n  }\n\n  isHoverTrigger() {\n    const { trigger } = this.props;\n    if (!trigger || trigger === 'hover') {\n      return true;\n    }\n    if (Array.isArray(trigger)) {\n      return trigger.indexOf('hover') >= 0;\n    }\n    return false;\n  }\n\n  // Fix Tooltip won't hide at disabled button\n  // mouse events don't trigger at disabled button in Chrome\n  // https://github.com/react-component/tooltip/issues/18\n  getDisabledCompatibleChildren(element: ReactElement<any>) {\n    if (\n      ((element.type as typeof Button).__ANT_BUTTON || element.type === 'button') &&\n      element.props.disabled &&\n      this.isHoverTrigger()\n    ) {\n      // Pick some layout related style properties up to span\n\n      const { picked, omited } = splitObject(element.props.style, [\n        'position',\n        'left',\n        'right',\n        'top',\n        'bottom',\n        'float',\n        'display',\n        'zIndex',\n      ]);\n      const spanStyle = {\n        display: 'inline-block', // default inline-block is important\n        ...picked,\n        cursor: 'not-allowed',\n      };\n      const buttonStyle = {\n        ...omited,\n        pointerEvents: 'none',\n      };\n      const child = cloneElement(element, {\n        style: buttonStyle,\n        className: null,\n      });\n      return (\n        <span style={spanStyle} className={element.props.className}>\n          {child}\n        </span>\n      );\n    }\n    return element;\n  }\n\n  isNoTitle() {\n    const { title, overlay } = this.props;\n    return !title && !overlay; // overlay for old version compatibility\n  }\n\n  // 动态设置动画点\n  onPopupAlign = (domNode: HTMLElement, align: any) => {\n    const placements: any = this.getPlacements();\n    // 当前返回的位置\n    const placement = Object.keys(placements).filter(\n      key =>\n        placements[key].points[0] === align.points[0] &&\n        placements[key].points[1] === align.points[1],\n    )[0];\n    if (!placement) {\n      return;\n    }\n    // 根据当前坐标设置动画点\n    const rect = domNode.getBoundingClientRect();\n    const transformOrigin = {\n      top: '50%',\n      left: '50%',\n    };\n    if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {\n      transformOrigin.top = `${rect.height - align.offset[1]}px`;\n    } else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {\n      transformOrigin.top = `${-align.offset[1]}px`;\n    }\n    if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {\n      transformOrigin.left = `${rect.width - align.offset[0]}px`;\n    } else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {\n      transformOrigin.left = `${-align.offset[0]}px`;\n    }\n    domNode.style.transformOrigin = `${transformOrigin.left} ${transformOrigin.top}`;\n  };\n\n  saveTooltip = (node: RcTooltip | null) => {\n    this.tooltip = node;\n  };\n\n  render() {\n    const { props, state } = this;\n    const {\n      prefixCls: customizePrefixCls,\n      title,\n      overlay,\n      openClassName,\n      getPopupContainer,\n      getTooltipContainer,\n    } = props;\n    const prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n    const children = props.children as ReactElement<any>;\n    let visible = state.visible;\n    // Hide tooltip when there is no title\n    if (!('visible' in props) && this.isNoTitle()) {\n      visible = false;\n    }\n\n    const child = this.getDisabledCompatibleChildren(\n      isValidElement(children) ? children : <span>{children}</span>,\n    );\n    const childProps = child.props;\n    const childCls = classNames(childProps.className, {\n      [openClassName || `${prefixCls}-open`]: true,\n    });\n\n    return (\n      <RcTooltip\n        {...this.props}\n        prefixCls={prefixCls}\n        getTooltipContainer={getPopupContainer || getTooltipContainer}\n        ref={this.saveTooltip}\n        builtinPlacements={this.getPlacements()}\n        overlay={overlay || title || ''}\n        visible={visible}\n        onVisibleChange={this.onVisibleChange}\n        onPopupAlign={this.onPopupAlign}\n      >\n        {visible ? cloneElement(child, { className: childCls }) : child}\n      </RcTooltip>\n    );\n  }\n}\n"]}