{"version":3,"sources":["placements.jsx"],"names":["autoAdjustOverflow","adjustX","adjustY","targetOffset","placements","bottomLeft","points","overflow","offset","bottomRight","topRight","topLeft","getPlacements","placement","copyPlacements"],"mappings":";;;;;;;;;;;AAAA;;AAEA,IAAMA,kBAAkB,GAAG;AACzBC,EAAAA,OAAO,EAAE,CADgB;AAEzBC,EAAAA,OAAO,EAAE;AAFgB,CAA3B;AAKA,IAAMC,YAAY,GAAG,CAAC,CAAD,EAAI,CAAJ,CAArB;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,CADE;AAEVC,IAAAA,QAAQ,EAAEP,kBAFA;AAGVQ,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,CAHE;AAIVL,IAAAA,YAAY,EAAZA;AAJU,GADK;AAOjBM,EAAAA,WAAW,EAAE;AACXH,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,CADG;AAEXC,IAAAA,QAAQ,EAAEP,kBAFC;AAGXQ,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,CAHG;AAIXL,IAAAA,YAAY,EAAZA;AAJW,GAPI;AAajBO,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,CADA;AAERC,IAAAA,QAAQ,EAAEP,kBAFF;AAGRQ,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHA;AAIRL,IAAAA,YAAY,EAAZA;AAJQ,GAbO;AAmBjBQ,EAAAA,OAAO,EAAE;AACPL,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,CADD;AAEPC,IAAAA,QAAQ,EAAEP,kBAFH;AAGPQ,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHD;AAIPL,IAAAA,YAAY,EAAZA;AAJO;AAnBQ,CAAnB;;AA2BO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAe;AAC1C,MAAMC,cAAc,GAAG,2BAAUV,UAAV,CAAvB;;AACA,MAAI,yBAAOS,SAAP,MAAqB,QAAzB,EAAmC;AACjC,SAAK,IAAIL,MAAT,IAAmBK,SAAnB,EAA8B;AAC5B,UAAIC,cAAc,CAACN,MAAD,CAAlB,EAA4B;AAC1BM,QAAAA,cAAc,CAACN,MAAD,CAAd,CAAuBL,YAAvB,GAAsCU,SAAS,CAACL,MAAD,CAA/C;AACD;AACF;AACF;;AACD,SAAOM,cAAP;AACD,CAVM;;;eAYQV,U","sourcesContent":["import cloneDeep from 'lodash/cloneDeep';\n\nconst autoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1,\n};\n\nconst targetOffset = [0, 0];\n\nconst placements = {\n  bottomLeft: {\n    points: ['tl', 'tl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -3],\n    targetOffset,\n  },\n  bottomRight: {\n    points: ['tr', 'tr'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -3],\n    targetOffset,\n  },\n  topRight: {\n    points: ['br', 'br'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 3],\n    targetOffset,\n  },\n  topLeft: {\n    points: ['bl', 'bl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 3],\n    targetOffset,\n  },\n};\n\nexport const getPlacements = (placement) => {\n  const copyPlacements = cloneDeep(placements);\n  if (typeof placement === 'object') {\n    for (let offset in placement) {\n      if (copyPlacements[offset]) {\n        copyPlacements[offset].targetOffset = placement[offset];\n      }\n    }\n  }\n  return copyPlacements;\n}\n\nexport default placements;\n"]}