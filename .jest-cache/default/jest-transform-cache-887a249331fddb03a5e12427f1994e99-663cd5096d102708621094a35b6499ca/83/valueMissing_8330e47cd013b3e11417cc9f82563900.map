{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/rules/valueMissing.tsx"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AAEA,SAAS,YAAT,CAAsB,KAAtB,EAAgC;AAC9B,SAAO,yBAAQ,KAAR,KAAmB,uBAAY,KAAZ,MAAuB,KAAK,CAAC,MAAN,KAAiB,CAAjB,IAAsB,KAAK,CAAC,KAAN,CAAY,UAAA,IAAI;AAAA,WAAI,YAAY,CAAC,IAAD,CAAhB;AAAA,GAAhB,CAA7C,CAA1B;AACD;;AAEa,SAAU,YAAV,CAAuB,KAAvB,EAAmC,KAAnC,EAAwD;AAAA,MAC5D,QAD4D,GACI,KADJ,CAC5D,QAD4D;AAAA,MAClD,KADkD,GACI,KADJ,CAClD,KADkD;AAAA,MAC3C,QAD2C,GACI,KADJ,CAC3C,QAD2C;AAAA,MACjC,KADiC,GACI,KADJ,CACjC,KADiC;AAAA,MAC1B,yBAD0B,GACI,KADJ,CAC1B,yBAD0B;;AAEpE,MACE,QAAQ,KACP,YAAY,CAAC,KAAD,CAAZ,IAAwB,QAAQ,IAAI,KAAZ,IAAqB,KAAK,CAAC,KAAN,CAAY,UAAA,IAAI;AAAA,WAAI,YAAY,CAAC,IAAD,CAAhB;AAAA,GAAhB,CADtC,CADV,EAGE;AACA,QAAM,gBAAgB,GAAG;AAAE,MAAA,KAAK,EAAL;AAAF,KAAzB;AACA,QAAM,GAAG,GAAG,KAAK,GAAG,eAAH,GAAqB,wBAAtC;AACA,QAAM,QAAQ,GAAG,KAAK,GAAG,cAAH,GAAoB,qBAA1C;AAHA,gCAIiE,yBAJjE,CAIS,QAJT;AAAA,QAIoB,iBAJpB,sCAIwC,uBAAG,WAAH,EAAgB,GAAhB,CAJxC;AAKA,WAAO,IAAI,4BAAJ,CAAqB;AAC1B,MAAA,iBAAiB,EAAE,qCAAoB,iBAApB,EAAuC,gBAAvC,CADO;AAE1B,MAAA,gBAAgB,EAAhB,gBAF0B;AAG1B,MAAA,KAAK,EAAL,KAH0B;AAI1B,MAAA,QAAQ,EAAR;AAJ0B,KAArB,CAAP;AAMD;;AACD,SAAO,IAAP;AACD","sourcesContent":["import { isArrayLike } from 'mobx';\nimport isEmpty from '../../_util/isEmpty';\nimport ValidationResult from '../ValidationResult';\nimport { $l } from '../../locale-context';\nimport { methodReturn, ValidatorProps } from '.';\nimport formatReactTemplate from '../../formatter/formatReactTemplate';\n\nfunction isEmptyArray(value: any): boolean {\n  return isEmpty(value) || (isArrayLike(value) && (value.length === 0 || value.every(item => isEmptyArray(item))));\n}\n\nexport default function valueMissing(value: any, props: ValidatorProps): methodReturn {\n  const { required, label, multiple, range, defaultValidationMessages } = props;\n  if (\n    required &&\n    (isEmptyArray(value) || (multiple && range && value.every(item => isEmptyArray(item))))\n  ) {\n    const injectionOptions = { label };\n    const key = label ? 'value_missing' : 'value_missing_no_label';\n    const ruleName = label ? 'valueMissing' : 'valueMissingNoLabel';\n    const { [ruleName]: validationMessage = $l('Validator', key) } = defaultValidationMessages;\n    return new ValidationResult({\n      validationMessage: formatReactTemplate(validationMessage, injectionOptions),\n      injectionOptions,\n      value,\n      ruleName,\n    });\n  }\n  return true;\n}\n"]}