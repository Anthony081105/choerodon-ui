{"version":3,"sources":["Range.jsx"],"names":["Range","props","removeDocumentEvents","onAfterChange","getValue","count","min","max","initialValue","Array","apply","map","defaultValue","value","undefined","bounds","v","i","trimAlignValue","recent","length","state","handle","nextProps","nextBounds","every","setState","some","utils","isValueOutOfRange","newValues","ensureValueInRange","onChange","isNotControlled","data","changedValue","position","onBeforeChange","calcValueByPos","startValue","startPosition","closestBound","getClosestBound","prevMovedHandleIndex","getBoundNeedMoving","prevValue","e","pauseEvent","oldValue","moveTo","valueMutator","getKeyboardValueMutator","mutatedValue","isFromKeyboardEvent","Math","abs","boundNeedMoving","isAtTheSamePoint","marks","step","cache","_getPointsCache","pointsObject","point","points","Object","keys","parseFloat","sort","a","b","nextHandle","pushable","pushSurroundingHandles","allowCross","indexOf","handlesRefs","focus","threshold","Number","direction","diffToNext","pushHandle","amount","originalValue","currentValue","pushHandleOnePoint","getPoints","pointIndex","nextPointIndex","nextValue","mergedProps","valInRange","valNotConflict","ensureValueNotConflict","ensureValuePrecision","val","thershold","prefixCls","vertical","included","disabled","handleGenerator","trackStyle","handleStyle","tabIndex","offsets","calcOffset","handleClassName","handles","className","offset","dragging","index","style","ref","h","saveHandle","tracks","slice","_","trackClassName","Component","PropTypes","arrayOf","number","oneOfType","bool"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'lodash/isEqual';\nimport Track from './common/Track';\nimport createSlider from './common/createSlider';\nimport * as utils from './utils';\n\nclass Range extends Component {\n  static displayName = 'Range';\n  static propTypes = {\n    defaultValue: PropTypes.arrayOf(PropTypes.number),\n    value: PropTypes.arrayOf(PropTypes.number),\n    count: PropTypes.number,\n    pushable: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n    ]),\n    allowCross: PropTypes.bool,\n    disabled: PropTypes.bool,\n    tabIndex: PropTypes.arrayOf(PropTypes.number),\n  };\n\n  static defaultProps = {\n    count: 1,\n    allowCross: true,\n    pushable: false,\n    tabIndex: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { count, min, max } = props;\n    const initialValue = Array.apply(null, Array(count + 1))\n            .map(() => min);\n    const defaultValue = 'defaultValue' in props ?\n            props.defaultValue : initialValue;\n    const value = props.value !== undefined ?\n            props.value : defaultValue;\n    const bounds = value.map((v, i) => this.trimAlignValue(v, i));\n    const recent = bounds[0] === max ? 0 : bounds.length - 1;\n\n    this.state = {\n      handle: null,\n      recent,\n      bounds,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!('value' in nextProps || 'min' in nextProps || 'max' in nextProps)) return;\n    if (this.props.min === nextProps.min &&\n        this.props.max === nextProps.max &&\n        shallowEqual(this.props.value, nextProps.value)) {\n      return;\n    }\n\n    const { bounds } = this.state;\n    const value = nextProps.value || bounds;\n    const nextBounds = value.map((v, i) => this.trimAlignValue(v, i, nextProps));\n    if (nextBounds.length === bounds.length && nextBounds.every((v, i) => v === bounds[i])) return;\n\n    this.setState({ bounds: nextBounds });\n\n    if (bounds.some(v => utils.isValueOutOfRange(v, nextProps))) {\n      const newValues = value.map((v) => {\n        return utils.ensureValueInRange(v, nextProps);\n      });\n      this.props.onChange(newValues);\n    }\n  }\n\n  onChange(state) {\n    const props = this.props;\n    const isNotControlled = !('value' in props);\n    if (isNotControlled) {\n      this.setState(state);\n    } else if (state.handle !== undefined) {\n      this.setState({ handle: state.handle });\n    }\n\n    const data = { ...this.state, ...state };\n    const changedValue = data.bounds;\n    props.onChange(changedValue);\n  }\n\n  onStart(position) {\n    const props = this.props;\n    const state = this.state;\n    const bounds = this.getValue();\n    props.onBeforeChange(bounds);\n\n    const value = this.calcValueByPos(position);\n    this.startValue = value;\n    this.startPosition = position;\n\n    const closestBound = this.getClosestBound(value);\n    this.prevMovedHandleIndex = this.getBoundNeedMoving(value, closestBound);\n\n    this.setState({\n      handle: this.prevMovedHandleIndex,\n      recent: this.prevMovedHandleIndex,\n    });\n\n    const prevValue = bounds[this.prevMovedHandleIndex];\n    if (value === prevValue) return;\n\n    const nextBounds = [...state.bounds];\n    nextBounds[this.prevMovedHandleIndex] = value;\n    this.onChange({ bounds: nextBounds });\n  }\n\n  onEnd = () => {\n    this.removeDocumentEvents();\n    this.props.onAfterChange(this.getValue());\n  }\n\n  onMove(e, position) {\n    utils.pauseEvent(e);\n    const state = this.state;\n\n    const value = this.calcValueByPos(position);\n    const oldValue = state.bounds[state.handle];\n    if (value === oldValue) return;\n\n    this.moveTo(value);\n  }\n\n  onKeyboard(e) {\n    const valueMutator = utils.getKeyboardValueMutator(e);\n\n    if (valueMutator) {\n      utils.pauseEvent(e);\n      const { state, props } = this;\n      const { bounds, handle } = state;\n      const oldValue = bounds[handle];\n      const mutatedValue = valueMutator(oldValue, props);\n      const value = this.trimAlignValue(mutatedValue);\n      if (value === oldValue) return;\n      const isFromKeyboardEvent = true;\n      this.moveTo(value, isFromKeyboardEvent);\n    }\n  }\n\n  getValue() {\n    return this.state.bounds;\n  }\n\n  getClosestBound(value) {\n    const { bounds } = this.state;\n    let closestBound = 0;\n    for (let i = 1; i < bounds.length - 1; ++i) {\n      if (value > bounds[i]) { closestBound = i; }\n    }\n    if (Math.abs(bounds[closestBound + 1] - value) < Math.abs(bounds[closestBound] - value)) {\n      closestBound = closestBound + 1;\n    }\n    return closestBound;\n  }\n\n  getBoundNeedMoving(value, closestBound) {\n    const { bounds, recent } = this.state;\n    let boundNeedMoving = closestBound;\n    const isAtTheSamePoint = (bounds[closestBound + 1] === bounds[closestBound]);\n\n    if (isAtTheSamePoint && bounds[recent] === bounds[closestBound]) {\n      boundNeedMoving = recent;\n    }\n\n    if (isAtTheSamePoint && (value !== bounds[closestBound + 1])) {\n      boundNeedMoving = value < bounds[closestBound + 1] ? closestBound : closestBound + 1;\n    }\n    return boundNeedMoving;\n  }\n\n  getLowerBound() {\n    return this.state.bounds[0];\n  }\n\n  getUpperBound() {\n    const { bounds } = this.state;\n    return bounds[bounds.length - 1];\n  }\n\n  /**\n   * Returns an array of possible slider points, taking into account both\n   * `marks` and `step`. The result is cached.\n   */\n  getPoints() {\n    const { marks, step, min, max } = this.props;\n    const cache = this._getPointsCache;\n    if (!cache || cache.marks !== marks || cache.step !== step) {\n      const pointsObject = { ...marks };\n      if (step !== null) {\n        for (let point = min; point <= max; point += step) {\n          pointsObject[point] = point;\n        }\n      }\n      const points = Object.keys(pointsObject).map(parseFloat);\n      points.sort((a, b) => a - b);\n      this._getPointsCache = { marks, step, points };\n    }\n    return this._getPointsCache.points;\n  }\n\n  moveTo(value, isFromKeyboardEvent) {\n    const { state, props } = this;\n    const nextBounds = [...state.bounds];\n    nextBounds[state.handle] = value;\n    let nextHandle = state.handle;\n    if (props.pushable !== false) {\n      this.pushSurroundingHandles(nextBounds, nextHandle);\n    } else if (props.allowCross) {\n      nextBounds.sort((a, b) => a - b);\n      nextHandle = nextBounds.indexOf(value);\n    }\n    this.onChange({\n      handle: nextHandle,\n      bounds: nextBounds,\n    });\n    if (isFromKeyboardEvent) {\n      // known problem: because setState is async,\n      // so trigger focus will invoke handler's onEnd and another handler's onStart too early,\n      // cause onBeforeChange and onAfterChange receive wrong value.\n      // here use setState callback to hack，but not elegant\n      this.setState({}, () => {\n        this.handlesRefs[nextHandle].focus();\n      });\n    }\n  }\n\n  pushSurroundingHandles(bounds, handle) {\n    const value = bounds[handle];\n    let { pushable: threshold } = this.props;\n    threshold = Number(threshold);\n\n    let direction = 0;\n    if (bounds[handle + 1] - value < threshold) {\n      direction = +1; // push to right\n    }\n    if (value - bounds[handle - 1] < threshold) {\n      direction = -1; // push to left\n    }\n\n    if (direction === 0) { return; }\n\n    const nextHandle = handle + direction;\n    const diffToNext = direction * (bounds[nextHandle] - value);\n    if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {\n      // revert to original value if pushing is impossible\n      bounds[handle] = bounds[nextHandle] - (direction * threshold);\n    }\n  }\n\n  pushHandle(bounds, handle, direction, amount) {\n    const originalValue = bounds[handle];\n    let currentValue = bounds[handle];\n    while (direction * (currentValue - originalValue) < amount) {\n      if (!this.pushHandleOnePoint(bounds, handle, direction)) {\n        // can't push handle enough to create the needed `amount` gap, so we\n        // revert its position to the original value\n        bounds[handle] = originalValue;\n        return false;\n      }\n      currentValue = bounds[handle];\n    }\n    // the handle was pushed enough to create the needed `amount` gap\n    return true;\n  }\n\n  pushHandleOnePoint(bounds, handle, direction) {\n    const points = this.getPoints();\n    const pointIndex = points.indexOf(bounds[handle]);\n    const nextPointIndex = pointIndex + direction;\n    if (nextPointIndex >= points.length || nextPointIndex < 0) {\n      // reached the minimum or maximum available point, can't push anymore\n      return false;\n    }\n    const nextHandle = handle + direction;\n    const nextValue = points[nextPointIndex];\n    const { pushable: threshold } = this.props;\n    const diffToNext = direction * (bounds[nextHandle] - nextValue);\n    if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {\n      // couldn't push next handle, so we won't push this one either\n      return false;\n    }\n    // push the handle\n    bounds[handle] = nextValue;\n    return true;\n  }\n\n  trimAlignValue(v, handle, nextProps = {}) {\n    const mergedProps = { ...this.props, ...nextProps };\n    const valInRange = utils.ensureValueInRange(v, mergedProps);\n    const valNotConflict = this.ensureValueNotConflict(handle, valInRange, mergedProps);\n    return utils.ensureValuePrecision(valNotConflict, mergedProps);\n  }\n\n  ensureValueNotConflict(handle, val, { allowCross, pushable: thershold }) {\n    const state = this.state || {};\n    const { bounds } = state;\n    handle = handle === undefined ? state.handle : handle;\n    thershold = Number(thershold);\n    /* eslint-disable eqeqeq */\n    if (!allowCross && handle != null && bounds !== undefined) {\n      if (handle > 0 && val <= (bounds[handle - 1] + thershold)) {\n        return bounds[handle - 1] + thershold;\n      }\n      if (handle < bounds.length - 1 && val >= (bounds[handle + 1] - thershold)) {\n        return bounds[handle + 1] - thershold;\n      }\n    }\n    /* eslint-enable eqeqeq */\n    return val;\n  }\n\n  render() {\n    const {\n      handle,\n      bounds,\n    } = this.state;\n    const {\n      prefixCls,\n      vertical,\n      included,\n      disabled,\n      min,\n      max,\n      handle: handleGenerator,\n      trackStyle,\n      handleStyle,\n      tabIndex,\n    } = this.props;\n\n    const offsets = bounds.map(v => this.calcOffset(v));\n\n    const handleClassName = `${prefixCls}-handle`;\n    const handles = bounds.map((v, i) => handleGenerator({\n      className: classNames({\n        [handleClassName]: true,\n        [`${handleClassName}-${i + 1}`]: true,\n      }),\n      prefixCls,\n      vertical,\n      offset: offsets[i],\n      value: v,\n      dragging: handle === i,\n      index: i,\n      tabIndex: tabIndex[i] || 0,\n      min,\n      max,\n      disabled,\n      style: handleStyle[i],\n      ref: h => this.saveHandle(i, h),\n    }));\n\n    const tracks = bounds.slice(0, -1).map((_, index) => {\n      const i = index + 1;\n      const trackClassName = classNames({\n        [`${prefixCls}-track`]: true,\n        [`${prefixCls}-track-${i}`]: true,\n      });\n      return (\n        <Track\n          className={trackClassName}\n          vertical={vertical}\n          included={included}\n          offset={offsets[i - 1]}\n          length={offsets[i] - offsets[i - 1]}\n          style={trackStyle[index]}\n          key={i}\n        />\n      );\n    });\n\n    return { tracks, handles };\n  }\n}\n\nexport default createSlider(Range);\n"]}