e4211758fa36753c052bc282574e0879
"use strict";

/* istanbul ignore next */
function cov_1t9fl4w8td() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/rc-components/tree/utils/treeUtil.ts";
  var hash = "b25aa25529f081ffde64b8761298ad82abad569c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/rc-components/tree/utils/treeUtil.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 46
        }
      },
      "4": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 46
        }
      },
      "5": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "6": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "7": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 54
        }
      },
      "8": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "9": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 66
        }
      },
      "10": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 101
        }
      },
      "11": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 92
        }
      },
      "12": {
        start: {
          line: 21,
          column: 32
        },
        end: {
          line: 21,
          column: 113
        }
      },
      "13": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 78
        }
      },
      "14": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 69
        }
      },
      "15": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 30
        }
      },
      "16": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "18": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 35,
          column: 13
        }
      },
      "19": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 43,
          column: 87
        }
      },
      "20": {
        start: {
          line: 44,
          column: 13
        },
        end: {
          line: 44,
          column: 22
        }
      },
      "21": {
        start: {
          line: 47,
          column: 15
        },
        end: {
          line: 47,
          column: 85
        }
      },
      "22": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 56,
          column: 7
        }
      },
      "23": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 28
        }
      },
      "24": {
        start: {
          line: 50,
          column: 21
        },
        end: {
          line: 50,
          column: 38
        }
      },
      "25": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 51,
          column: 136
        }
      },
      "26": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 52,
          column: 33
        }
      },
      "27": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 142
        }
      },
      "28": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 32
        }
      },
      "29": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 62
        }
      },
      "30": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 59,
          column: 16
        }
      },
      "31": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 50
        }
      },
      "32": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 92,
          column: 7
        }
      },
      "33": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 74,
          column: 7
        }
      },
      "34": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 99
        }
      },
      "35": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 20
        }
      },
      "36": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 28
        }
      },
      "37": {
        start: {
          line: 77,
          column: 28
        },
        end: {
          line: 77,
          column: 42
        }
      },
      "38": {
        start: {
          line: 78,
          column: 21
        },
        end: {
          line: 78,
          column: 45
        }
      },
      "39": {
        start: {
          line: 79,
          column: 17
        },
        end: {
          line: 79,
          column: 89
        }
      },
      "40": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 82,
          column: 14
        }
      },
      "41": {
        start: {
          line: 83,
          column: 27
        },
        end: {
          line: 83,
          column: 40
        }
      },
      "42": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "43": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 43
        }
      },
      "44": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 89,
          column: 22
        }
      },
      "45": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 91,
          column: 22
        }
      },
      "46": {
        start: {
          line: 95,
          column: 2
        },
        end: {
          line: 95,
          column: 24
        }
      },
      "47": {
        start: {
          line: 106,
          column: 21
        },
        end: {
          line: 106,
          column: 91
        }
      },
      "48": {
        start: {
          line: 107,
          column: 21
        },
        end: {
          line: 107,
          column: 91
        }
      },
      "49": {
        start: {
          line: 108,
          column: 23
        },
        end: {
          line: 108,
          column: 73
        }
      },
      "50": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 22
        }
      },
      "51": {
        start: {
          line: 112,
          column: 17
        },
        end: {
          line: 112,
          column: 89
        }
      },
      "52": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 134,
          column: 7
        }
      },
      "53": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 72
        }
      },
      "54": {
        start: {
          line: 115,
          column: 22
        },
        end: {
          line: 115,
          column: 47
        }
      },
      "55": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 124,
          column: 8
        }
      },
      "56": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 36
        }
      },
      "57": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 131,
          column: 7
        }
      },
      "58": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 73
        }
      },
      "59": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 34
        }
      },
      "60": {
        start: {
          line: 133,
          column: 6
        },
        end: {
          line: 133,
          column: 25
        }
      },
      "61": {
        start: {
          line: 137,
          column: 2
        },
        end: {
          line: 137,
          column: 20
        }
      },
      "62": {
        start: {
          line: 138,
          column: 2
        },
        end: {
          line: 138,
          column: 21
        }
      },
      "63": {
        start: {
          line: 148,
          column: 19
        },
        end: {
          line: 148,
          column: 51
        }
      },
      "64": {
        start: {
          line: 149,
          column: 14
        },
        end: {
          line: 149,
          column: 68
        }
      },
      "65": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "66": {
        start: {
          line: 152,
          column: 17
        },
        end: {
          line: 159,
          column: 7
        }
      },
      "67": {
        start: {
          line: 160,
          column: 6
        },
        end: {
          line: 160,
          column: 21
        }
      },
      "68": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "69": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "70": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 170,
          column: 11
        }
      },
      "71": {
        start: {
          line: 175,
          column: 2
        },
        end: {
          line: 175,
          column: 20
        }
      },
      "72": {
        start: {
          line: 183,
          column: 13
        },
        end: {
          line: 183,
          column: 83
        }
      },
      "73": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 184,
          column: 36
        }
      },
      "74": {
        start: {
          line: 185,
          column: 22
        },
        end: {
          line: 185,
          column: 40
        }
      },
      "75": {
        start: {
          line: 186,
          column: 26
        },
        end: {
          line: 186,
          column: 48
        }
      },
      "76": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 22
        }
      },
      "77": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 189,
          column: 22
        }
      },
      "78": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 193,
          column: 3
        }
      },
      "79": {
        start: {
          line: 195,
          column: 2
        },
        end: {
          line: 197,
          column: 3
        }
      },
      "80": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 196,
          column: 46
        }
      },
      "81": {
        start: {
          line: 199,
          column: 2
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "82": {
        start: {
          line: 200,
          column: 15
        },
        end: {
          line: 200,
          column: 24
        }
      },
      "83": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 26
        }
      },
      "84": {
        start: {
          line: 202,
          column: 14
        },
        end: {
          line: 202,
          column: 22
        }
      },
      "85": {
        start: {
          line: 203,
          column: 14
        },
        end: {
          line: 203,
          column: 22
        }
      },
      "86": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 34
        }
      },
      "87": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 26
        }
      },
      "88": {
        start: {
          line: 206,
          column: 17
        },
        end: {
          line: 212,
          column: 5
        }
      },
      "89": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 213,
          column: 36
        }
      },
      "90": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 30
        }
      },
      "91": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 215,
          column: 36
        }
      },
      "92": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 217,
          column: 43
        }
      },
      "93": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "94": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 220,
          column: 60
        }
      },
      "95": {
        start: {
          line: 221,
          column: 6
        },
        end: {
          line: 221,
          column: 42
        }
      },
      "96": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "97": {
        start: {
          line: 225,
          column: 6
        },
        end: {
          line: 225,
          column: 37
        }
      },
      "98": {
        start: {
          line: 229,
          column: 2
        },
        end: {
          line: 231,
          column: 3
        }
      },
      "99": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 230,
          column: 31
        }
      },
      "100": {
        start: {
          line: 233,
          column: 2
        },
        end: {
          line: 233,
          column: 17
        }
      },
      "101": {
        start: {
          line: 241,
          column: 21
        },
        end: {
          line: 241,
          column: 39
        }
      },
      "102": {
        start: {
          line: 242,
          column: 21
        },
        end: {
          line: 242,
          column: 39
        }
      },
      "103": {
        start: {
          line: 243,
          column: 19
        },
        end: {
          line: 243,
          column: 35
        }
      },
      "104": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 244,
          column: 37
        }
      },
      "105": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 245,
          column: 37
        }
      },
      "106": {
        start: {
          line: 246,
          column: 24
        },
        end: {
          line: 246,
          column: 45
        }
      },
      "107": {
        start: {
          line: 247,
          column: 24
        },
        end: {
          line: 247,
          column: 45
        }
      },
      "108": {
        start: {
          line: 248,
          column: 21
        },
        end: {
          line: 248,
          column: 39
        }
      },
      "109": {
        start: {
          line: 249,
          column: 20
        },
        end: {
          line: 249,
          column: 37
        }
      },
      "110": {
        start: {
          line: 250,
          column: 15
        },
        end: {
          line: 250,
          column: 31
        }
      },
      "111": {
        start: {
          line: 251,
          column: 22
        },
        end: {
          line: 264,
          column: 3
        }
      },
      "112": {
        start: {
          line: 265,
          column: 2
        },
        end: {
          line: 265,
          column: 23
        }
      },
      "113": {
        start: {
          line: 269,
          column: 13
        },
        end: {
          line: 269,
          column: 23
        }
      },
      "114": {
        start: {
          line: 270,
          column: 17
        },
        end: {
          line: 270,
          column: 31
        }
      },
      "115": {
        start: {
          line: 271,
          column: 17
        },
        end: {
          line: 271,
          column: 31
        }
      },
      "116": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 272,
          column: 29
        }
      },
      "117": {
        start: {
          line: 273,
          column: 15
        },
        end: {
          line: 273,
          column: 27
        }
      },
      "118": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 29
        }
      },
      "119": {
        start: {
          line: 275,
          column: 20
        },
        end: {
          line: 275,
          column: 37
        }
      },
      "120": {
        start: {
          line: 276,
          column: 17
        },
        end: {
          line: 276,
          column: 31
        }
      },
      "121": {
        start: {
          line: 277,
          column: 23
        },
        end: {
          line: 277,
          column: 43
        }
      },
      "122": {
        start: {
          line: 278,
          column: 26
        },
        end: {
          line: 278,
          column: 49
        }
      },
      "123": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 21
        }
      },
      "124": {
        start: {
          line: 280,
          column: 15
        },
        end: {
          line: 280,
          column: 27
        }
      },
      "125": {
        start: {
          line: 281,
          column: 18
        },
        end: {
          line: 293,
          column: 4
        }
      },
      "126": {
        start: {
          line: 295,
          column: 2
        },
        end: {
          line: 302,
          column: 3
        }
      },
      "127": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 301,
          column: 7
        }
      },
      "128": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 177
        }
      },
      "129": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 21
        }
      },
      "130": {
        start: {
          line: 304,
          column: 2
        },
        end: {
          line: 304,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "getKey",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 15
          }
        },
        loc: {
          start: {
            line: 30,
            column: 26
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "warningWithoutKey",
        decl: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 42,
            column: 26
          }
        },
        loc: {
          start: {
            line: 42,
            column: 29
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 42
      },
      "2": {
        name: "dig",
        decl: {
          start: {
            line: 46,
            column: 11
          },
          end: {
            line: 46,
            column: 14
          }
        },
        loc: {
          start: {
            line: 46,
            column: 21
          },
          end: {
            line: 57,
            column: 3
          }
        },
        line: 46
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 26
          }
        },
        loc: {
          start: {
            line: 48,
            column: 45
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 48
      },
      "4": {
        name: "convertTreeToData",
        decl: {
          start: {
            line: 66,
            column: 9
          },
          end: {
            line: 66,
            column: 26
          }
        },
        loc: {
          start: {
            line: 66,
            column: 38
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 66
      },
      "5": {
        name: "dig",
        decl: {
          start: {
            line: 67,
            column: 11
          },
          end: {
            line: 67,
            column: 14
          }
        },
        loc: {
          start: {
            line: 67,
            column: 21
          },
          end: {
            line: 93,
            column: 3
          }
        },
        line: 67
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 69,
            column: 26
          }
        },
        loc: {
          start: {
            line: 69,
            column: 45
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 69
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 90,
            column: 14
          },
          end: {
            line: 90,
            column: 15
          }
        },
        loc: {
          start: {
            line: 90,
            column: 34
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 90
      },
      "8": {
        name: "flattenTreeData",
        decl: {
          start: {
            line: 105,
            column: 9
          },
          end: {
            line: 105,
            column: 24
          }
        },
        loc: {
          start: {
            line: 105,
            column: 27
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 105
      },
      "9": {
        name: "dig",
        decl: {
          start: {
            line: 111,
            column: 11
          },
          end: {
            line: 111,
            column: 14
          }
        },
        loc: {
          start: {
            line: 111,
            column: 21
          },
          end: {
            line: 135,
            column: 3
          }
        },
        line: 111
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 113,
            column: 20
          },
          end: {
            line: 113,
            column: 21
          }
        },
        loc: {
          start: {
            line: 113,
            column: 47
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 113
      },
      "11": {
        name: "traverseDataNodes",
        decl: {
          start: {
            line: 146,
            column: 9
          },
          end: {
            line: 146,
            column: 26
          }
        },
        loc: {
          start: {
            line: 146,
            column: 48
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 146
      },
      "12": {
        name: "processNode",
        decl: {
          start: {
            line: 147,
            column: 11
          },
          end: {
            line: 147,
            column: 22
          }
        },
        loc: {
          start: {
            line: 147,
            column: 44
          },
          end: {
            line: 173,
            column: 3
          }
        },
        line: 147
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 165,
            column: 23
          },
          end: {
            line: 165,
            column: 24
          }
        },
        loc: {
          start: {
            line: 165,
            column: 52
          },
          end: {
            line: 171,
            column: 7
          }
        },
        line: 165
      },
      "14": {
        name: "convertDataToEntities",
        decl: {
          start: {
            line: 182,
            column: 9
          },
          end: {
            line: 182,
            column: 30
          }
        },
        loc: {
          start: {
            line: 182,
            column: 42
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 182
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 199,
            column: 31
          },
          end: {
            line: 199,
            column: 32
          }
        },
        loc: {
          start: {
            line: 199,
            column: 47
          },
          end: {
            line: 227,
            column: 3
          }
        },
        line: 199
      },
      "16": {
        name: "getTreeNodeProps",
        decl: {
          start: {
            line: 240,
            column: 9
          },
          end: {
            line: 240,
            column: 25
          }
        },
        loc: {
          start: {
            line: 240,
            column: 38
          },
          end: {
            line: 266,
            column: 1
          }
        },
        line: 240
      },
      "17": {
        name: "convertNodePropsToEventData",
        decl: {
          start: {
            line: 268,
            column: 9
          },
          end: {
            line: 268,
            column: 36
          }
        },
        loc: {
          start: {
            line: 268,
            column: 44
          },
          end: {
            line: 305,
            column: 1
          }
        },
        line: 268
      },
      "18": {
        name: "get",
        decl: {
          start: {
            line: 297,
            column: 20
          },
          end: {
            line: 297,
            column: 23
          }
        },
        loc: {
          start: {
            line: 297,
            column: 26
          },
          end: {
            line: 300,
            column: 7
          }
        },
        line: 297
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        }, {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 31,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 31,
            column: 18
          }
        }, {
          start: {
            line: 31,
            column: 22
          },
          end: {
            line: 31,
            column: 39
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 70
          },
          end: {
            line: 43,
            column: 82
          }
        }, {
          start: {
            line: 43,
            column: 85
          },
          end: {
            line: 43,
            column: 87
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 37
          }
        }, {
          start: {
            line: 43,
            column: 41
          },
          end: {
            line: 43,
            column: 67
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 68
          },
          end: {
            line: 47,
            column: 80
          }
        }, {
          start: {
            line: 47,
            column: 83
          },
          end: {
            line: 47,
            column: 85
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 35
          }
        }, {
          start: {
            line: 47,
            column: 39
          },
          end: {
            line: 47,
            column: 65
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 5
          },
          end: {
            line: 48,
            column: 15
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 5
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: 48,
            column: 13
          },
          end: {
            line: 48,
            column: 15
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 51,
            column: 31
          },
          end: {
            line: 51,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 31
          },
          end: {
            line: 51,
            column: 43
          }
        }, {
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 64
          }
        }],
        line: 51
      },
      "8": {
        loc: {
          start: {
            line: 53,
            column: 31
          },
          end: {
            line: 53,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 31
          },
          end: {
            line: 53,
            column: 51
          }
        }, {
          start: {
            line: 53,
            column: 55
          },
          end: {
            line: 53,
            column: 67
          }
        }, {
          start: {
            line: 53,
            column: 71
          },
          end: {
            line: 53,
            column: 88
          }
        }],
        line: 53
      },
      "9": {
        loc: {
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 74,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 74,
            column: 7
          }
        }, {
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 74,
            column: 7
          }
        }],
        line: 71
      },
      "10": {
        loc: {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        }, {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        }],
        line: 85
      },
      "11": {
        loc: {
          start: {
            line: 106,
            column: 21
          },
          end: {
            line: 106,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 74
          },
          end: {
            line: 106,
            column: 86
          }
        }, {
          start: {
            line: 106,
            column: 89
          },
          end: {
            line: 106,
            column: 91
          }
        }],
        line: 106
      },
      "12": {
        loc: {
          start: {
            line: 106,
            column: 21
          },
          end: {
            line: 106,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 21
          },
          end: {
            line: 106,
            column: 41
          }
        }, {
          start: {
            line: 106,
            column: 45
          },
          end: {
            line: 106,
            column: 71
          }
        }],
        line: 106
      },
      "13": {
        loc: {
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 107,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 74
          },
          end: {
            line: 107,
            column: 86
          }
        }, {
          start: {
            line: 107,
            column: 89
          },
          end: {
            line: 107,
            column: 91
          }
        }],
        line: 107
      },
      "14": {
        loc: {
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 107,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 107,
            column: 41
          }
        }, {
          start: {
            line: 107,
            column: 45
          },
          end: {
            line: 107,
            column: 71
          }
        }],
        line: 107
      },
      "15": {
        loc: {
          start: {
            line: 108,
            column: 31
          },
          end: {
            line: 108,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 55
          },
          end: {
            line: 108,
            column: 57
          }
        }, {
          start: {
            line: 108,
            column: 60
          },
          end: {
            line: 108,
            column: 72
          }
        }],
        line: 108
      },
      "16": {
        loc: {
          start: {
            line: 112,
            column: 17
          },
          end: {
            line: 112,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 70
          },
          end: {
            line: 112,
            column: 82
          }
        }, {
          start: {
            line: 112,
            column: 85
          },
          end: {
            line: 112,
            column: 89
          }
        }],
        line: 112
      },
      "17": {
        loc: {
          start: {
            line: 112,
            column: 17
          },
          end: {
            line: 112,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 17
          },
          end: {
            line: 112,
            column: 37
          }
        }, {
          start: {
            line: 112,
            column: 41
          },
          end: {
            line: 112,
            column: 67
          }
        }],
        line: 112
      },
      "18": {
        loc: {
          start: {
            line: 114,
            column: 39
          },
          end: {
            line: 114,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 48
          },
          end: {
            line: 114,
            column: 58
          }
        }, {
          start: {
            line: 114,
            column: 61
          },
          end: {
            line: 114,
            column: 64
          }
        }],
        line: 114
      },
      "19": {
        loc: {
          start: {
            line: 122,
            column: 63
          },
          end: {
            line: 122,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 72
          },
          end: {
            line: 122,
            column: 86
          }
        }, {
          start: {
            line: 122,
            column: 89
          },
          end: {
            line: 122,
            column: 91
          }
        }],
        line: 122
      },
      "20": {
        loc: {
          start: {
            line: 123,
            column: 61
          },
          end: {
            line: 123,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 70
          },
          end: {
            line: 123,
            column: 82
          }
        }, {
          start: {
            line: 123,
            column: 85
          },
          end: {
            line: 123,
            column: 87
          }
        }],
        line: 123
      },
      "21": {
        loc: {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 131,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 131,
            column: 7
          }
        }, {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 131,
            column: 7
          }
        }],
        line: 127
      },
      "22": {
        loc: {
          start: {
            line: 127,
            column: 10
          },
          end: {
            line: 127,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 10
          },
          end: {
            line: 127,
            column: 31
          }
        }, {
          start: {
            line: 127,
            column: 35
          },
          end: {
            line: 127,
            column: 64
          }
        }],
        line: 127
      },
      "23": {
        loc: {
          start: {
            line: 128,
            column: 35
          },
          end: {
            line: 128,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 35
          },
          end: {
            line: 128,
            column: 52
          }
        }, {
          start: {
            line: 128,
            column: 56
          },
          end: {
            line: 128,
            column: 58
          }
        }],
        line: 128
      },
      "24": {
        loc: {
          start: {
            line: 148,
            column: 19
          },
          end: {
            line: 148,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 26
          },
          end: {
            line: 148,
            column: 39
          }
        }, {
          start: {
            line: 148,
            column: 42
          },
          end: {
            line: 148,
            column: 51
          }
        }],
        line: 148
      },
      "25": {
        loc: {
          start: {
            line: 149,
            column: 14
          },
          end: {
            line: 149,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 21
          },
          end: {
            line: 149,
            column: 62
          }
        }, {
          start: {
            line: 149,
            column: 65
          },
          end: {
            line: 149,
            column: 68
          }
        }],
        line: 149
      },
      "26": {
        loc: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        }, {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        }],
        line: 151
      },
      "27": {
        loc: {
          start: {
            line: 156,
            column: 13
          },
          end: {
            line: 156,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 33
          },
          end: {
            line: 156,
            column: 41
          }
        }, {
          start: {
            line: 156,
            column: 44
          },
          end: {
            line: 156,
            column: 47
          }
        }],
        line: 156
      },
      "28": {
        loc: {
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 157,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 33
          },
          end: {
            line: 157,
            column: 43
          }
        }, {
          start: {
            line: 157,
            column: 46
          },
          end: {
            line: 157,
            column: 50
          }
        }],
        line: 157
      },
      "29": {
        loc: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        }, {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        }],
        line: 164
      },
      "30": {
        loc: {
          start: {
            line: 169,
            column: 17
          },
          end: {
            line: 169,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 26
          },
          end: {
            line: 169,
            column: 42
          }
        }, {
          start: {
            line: 169,
            column: 45
          },
          end: {
            line: 169,
            column: 47
          }
        }],
        line: 169
      },
      "31": {
        loc: {
          start: {
            line: 183,
            column: 13
          },
          end: {
            line: 183,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 66
          },
          end: {
            line: 183,
            column: 78
          }
        }, {
          start: {
            line: 183,
            column: 81
          },
          end: {
            line: 183,
            column: 83
          }
        }],
        line: 183
      },
      "32": {
        loc: {
          start: {
            line: 183,
            column: 13
          },
          end: {
            line: 183,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 13
          },
          end: {
            line: 183,
            column: 33
          }
        }, {
          start: {
            line: 183,
            column: 37
          },
          end: {
            line: 183,
            column: 63
          }
        }],
        line: 183
      },
      "33": {
        loc: {
          start: {
            line: 195,
            column: 2
          },
          end: {
            line: 197,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 2
          },
          end: {
            line: 197,
            column: 3
          }
        }, {
          start: {
            line: 195,
            column: 2
          },
          end: {
            line: 197,
            column: 3
          }
        }],
        line: 195
      },
      "34": {
        loc: {
          start: {
            line: 196,
            column: 14
          },
          end: {
            line: 196,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 14
          },
          end: {
            line: 196,
            column: 34
          }
        }, {
          start: {
            line: 196,
            column: 38
          },
          end: {
            line: 196,
            column: 45
          }
        }],
        line: 196
      },
      "35": {
        loc: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        }, {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        }],
        line: 219
      },
      "36": {
        loc: {
          start: {
            line: 220,
            column: 31
          },
          end: {
            line: 220,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 31
          },
          end: {
            line: 220,
            column: 53
          }
        }, {
          start: {
            line: 220,
            column: 57
          },
          end: {
            line: 220,
            column: 59
          }
        }],
        line: 220
      },
      "37": {
        loc: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        }, {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        }],
        line: 224
      },
      "38": {
        loc: {
          start: {
            line: 229,
            column: 2
          },
          end: {
            line: 231,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 2
          },
          end: {
            line: 231,
            column: 3
          }
        }, {
          start: {
            line: 229,
            column: 2
          },
          end: {
            line: 231,
            column: 3
          }
        }],
        line: 229
      },
      "39": {
        loc: {
          start: {
            line: 259,
            column: 16
          },
          end: {
            line: 259,
            column: 40
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 25
          },
          end: {
            line: 259,
            column: 35
          }
        }, {
          start: {
            line: 259,
            column: 38
          },
          end: {
            line: 259,
            column: 40
          }
        }],
        line: 259
      },
      "40": {
        loc: {
          start: {
            line: 261,
            column: 14
          },
          end: {
            line: 261,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 14
          },
          end: {
            line: 261,
            column: 37
          }
        }, {
          start: {
            line: 261,
            column: 41
          },
          end: {
            line: 261,
            column: 59
          }
        }],
        line: 261
      },
      "41": {
        loc: {
          start: {
            line: 262,
            column: 20
          },
          end: {
            line: 262,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 20
          },
          end: {
            line: 262,
            column: 43
          }
        }, {
          start: {
            line: 262,
            column: 47
          },
          end: {
            line: 262,
            column: 66
          }
        }],
        line: 262
      },
      "42": {
        loc: {
          start: {
            line: 263,
            column: 23
          },
          end: {
            line: 263,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 23
          },
          end: {
            line: 263,
            column: 46
          }
        }, {
          start: {
            line: 263,
            column: 50
          },
          end: {
            line: 263,
            column: 68
          }
        }],
        line: 263
      },
      "43": {
        loc: {
          start: {
            line: 295,
            column: 2
          },
          end: {
            line: 302,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 2
          },
          end: {
            line: 302,
            column: 3
          }
        }, {
          start: {
            line: 295,
            column: 2
          },
          end: {
            line: 302,
            column: 3
          }
        }],
        line: 295
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b25aa25529f081ffde64b8761298ad82abad569c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1t9fl4w8td = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1t9fl4w8td();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1t9fl4w8td().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1t9fl4w8td().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1t9fl4w8td().s[2]++;
exports.getKey = getKey;

/* istanbul ignore next */
cov_1t9fl4w8td().s[3]++;
exports.warningWithoutKey = warningWithoutKey;

/* istanbul ignore next */
cov_1t9fl4w8td().s[4]++;
exports.convertTreeToData = convertTreeToData;

/* istanbul ignore next */
cov_1t9fl4w8td().s[5]++;
exports.flattenTreeData = flattenTreeData;

/* istanbul ignore next */
cov_1t9fl4w8td().s[6]++;
exports.traverseDataNodes = traverseDataNodes;

/* istanbul ignore next */
cov_1t9fl4w8td().s[7]++;
exports.convertDataToEntities = convertDataToEntities;

/* istanbul ignore next */
cov_1t9fl4w8td().s[8]++;
exports.getTreeNodeProps = getTreeNodeProps;

/* istanbul ignore next */
cov_1t9fl4w8td().s[9]++;
exports.convertNodePropsToEventData = convertNodePropsToEventData;

var _toConsumableArray2 =
/* istanbul ignore next */
(cov_1t9fl4w8td().s[10]++, _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray")));

var _objectSpread2 =
/* istanbul ignore next */
(cov_1t9fl4w8td().s[11]++, _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2")));

var _objectWithoutProperties2 =
/* istanbul ignore next */
(cov_1t9fl4w8td().s[12]++, _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties")));

var _toArray =
/* istanbul ignore next */
(cov_1t9fl4w8td().s[13]++, _interopRequireDefault(require("rc-util/lib/Children/toArray")));

var _warning =
/* istanbul ignore next */
(cov_1t9fl4w8td().s[14]++, _interopRequireDefault(require("rc-util/lib/warning")));

var _util =
/* istanbul ignore next */
(cov_1t9fl4w8td().s[15]++, require("../util")); // @ts-ignore


function getKey(key, pos) {
  /* istanbul ignore next */
  cov_1t9fl4w8td().f[0]++;
  cov_1t9fl4w8td().s[16]++;

  if (
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[1][0]++, key !== null) &&
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[1][1]++, key !== undefined)) {
    /* istanbul ignore next */
    cov_1t9fl4w8td().b[0][0]++;
    cov_1t9fl4w8td().s[17]++;
    return key;
  } else
  /* istanbul ignore next */
  {
    cov_1t9fl4w8td().b[0][1]++;
  }

  cov_1t9fl4w8td().s[18]++;
  return pos;
}
/**
 * Warning if TreeNode do not provides key
 */


function warningWithoutKey() {
  /* istanbul ignore next */
  cov_1t9fl4w8td().f[1]++;
  var treeData =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[19]++,
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[3][0]++, arguments.length > 0) &&
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[3][1]++, arguments[0] !== undefined) ?
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[2][0]++, arguments[0]) :
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[2][1]++, []));
  var keys =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[20]++, new Map());

  function dig(list) {
    /* istanbul ignore next */
    cov_1t9fl4w8td().f[2]++;
    var path =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[21]++,
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[5][0]++, arguments.length > 1) &&
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[5][1]++, arguments[1] !== undefined) ?
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[4][0]++, arguments[1]) :
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[4][1]++, ''));

    /* istanbul ignore next */
    cov_1t9fl4w8td().s[22]++;
    (
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[6][0]++, list) ||
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[6][1]++, [])).forEach(function (treeNode) {
      /* istanbul ignore next */
      cov_1t9fl4w8td().f[3]++;
      var key =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[23]++, treeNode.key),
          children =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[24]++, treeNode.children);

      /* istanbul ignore next */
      cov_1t9fl4w8td().s[25]++;
      (0, _warning["default"])(
      /* istanbul ignore next */
      (cov_1t9fl4w8td().b[7][0]++, key !== null) &&
      /* istanbul ignore next */
      (cov_1t9fl4w8td().b[7][1]++, key !== undefined), "Tree node must have a certain key: [".concat(path).concat(key, "]"));
      var recordKey =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[26]++, String(key));

      /* istanbul ignore next */
      cov_1t9fl4w8td().s[27]++;
      (0, _warning["default"])(
      /* istanbul ignore next */
      (cov_1t9fl4w8td().b[8][0]++, !keys.has(recordKey)) ||
      /* istanbul ignore next */
      (cov_1t9fl4w8td().b[8][1]++, key === null) ||
      /* istanbul ignore next */
      (cov_1t9fl4w8td().b[8][2]++, key === undefined), "Same 'key' exist in the Tree: ".concat(recordKey));

      /* istanbul ignore next */
      cov_1t9fl4w8td().s[28]++;
      keys.set(recordKey, true);

      /* istanbul ignore next */
      cov_1t9fl4w8td().s[29]++;
      dig(children, "".concat(path).concat(recordKey, " > "));
    });
  }

  /* istanbul ignore next */
  cov_1t9fl4w8td().s[30]++;
  dig(treeData);
}
/**
 * Convert `children` of Tree into `treeData` structure.
 */


function convertTreeToData(rootNodes) {
  /* istanbul ignore next */
  cov_1t9fl4w8td().f[4]++;

  function dig(node) {
    /* istanbul ignore next */
    cov_1t9fl4w8td().f[5]++;
    var treeNodes =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[31]++, (0, _toArray["default"])(node));

    /* istanbul ignore next */
    cov_1t9fl4w8td().s[32]++;
    return treeNodes.map(function (treeNode) {
      /* istanbul ignore next */
      cov_1t9fl4w8td().f[6]++;
      cov_1t9fl4w8td().s[33]++;

      // Filter invalidate node
      if (!(0, _util.isTreeNode)(treeNode)) {
        /* istanbul ignore next */
        cov_1t9fl4w8td().b[9][0]++;
        cov_1t9fl4w8td().s[34]++;
        (0, _warning["default"])(!treeNode, 'Tree/TreeNode can only accept TreeNode as children.');

        /* istanbul ignore next */
        cov_1t9fl4w8td().s[35]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1t9fl4w8td().b[9][1]++;
      }

      var key =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[36]++, treeNode.key);

      var _treeNode$props =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[37]++, treeNode.props),
          children =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[38]++, _treeNode$props.children),
          rest =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[39]++, (0, _objectWithoutProperties2["default"])(_treeNode$props, ["children"]));

      var dataNode =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[40]++, (0, _objectSpread2["default"])({
        key: key
      }, rest));
      var parsedChildren =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[41]++, dig(children));

      /* istanbul ignore next */
      cov_1t9fl4w8td().s[42]++;

      if (parsedChildren.length) {
        /* istanbul ignore next */
        cov_1t9fl4w8td().b[10][0]++;
        cov_1t9fl4w8td().s[43]++;
        dataNode.children = parsedChildren;
      } else
      /* istanbul ignore next */
      {
        cov_1t9fl4w8td().b[10][1]++;
      }

      cov_1t9fl4w8td().s[44]++;
      return dataNode;
    }).filter(function (dataNode) {
      /* istanbul ignore next */
      cov_1t9fl4w8td().f[7]++;
      cov_1t9fl4w8td().s[45]++;
      return dataNode;
    });
  }

  /* istanbul ignore next */
  cov_1t9fl4w8td().s[46]++;
  return dig(rootNodes);
}
/**
 * Flat nest tree data into flatten list. This is used for virtual list render.
 * @param treeNodeList Origin data node list
 * @param expandedKeys
 * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).
 */


function flattenTreeData() {
  /* istanbul ignore next */
  cov_1t9fl4w8td().f[8]++;
  var treeNodeList =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[47]++,
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[12][0]++, arguments.length > 0) &&
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[12][1]++, arguments[0] !== undefined) ?
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[11][0]++, arguments[0]) :
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[11][1]++, []));
  var expandedKeys =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[48]++,
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[14][0]++, arguments.length > 1) &&
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[14][1]++, arguments[1] !== undefined) ?
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[13][0]++, arguments[1]) :
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[13][1]++, []));
  var expandedKeySet =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[49]++, new Set(expandedKeys === true ?
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[15][0]++, []) :
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[15][1]++, expandedKeys)));
  var flattenList =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[50]++, []);

  function dig(list) {
    /* istanbul ignore next */
    cov_1t9fl4w8td().f[9]++;
    var parent =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[51]++,
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[17][0]++, arguments.length > 1) &&
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[17][1]++, arguments[1] !== undefined) ?
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[16][0]++, arguments[1]) :
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[16][1]++, null));

    /* istanbul ignore next */
    cov_1t9fl4w8td().s[52]++;
    return list.map(function (treeNode, index) {
      /* istanbul ignore next */
      cov_1t9fl4w8td().f[10]++;
      var pos =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[53]++, (0, _util.getPosition)(parent ?
      /* istanbul ignore next */
      (cov_1t9fl4w8td().b[18][0]++, parent.pos) :
      /* istanbul ignore next */
      (cov_1t9fl4w8td().b[18][1]++, '0'), index));
      var mergedKey =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[54]++, getKey(treeNode.key, pos)); // Add FlattenDataNode into list

      var flattenNode =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[55]++, (0, _objectSpread2["default"])({}, treeNode, {
        parent: parent,
        pos: pos,
        children: null,
        data: treeNode,
        isStart: [].concat((0, _toConsumableArray2["default"])(parent ?
        /* istanbul ignore next */
        (cov_1t9fl4w8td().b[19][0]++, parent.isStart) :
        /* istanbul ignore next */
        (cov_1t9fl4w8td().b[19][1]++, [])), [index === 0]),
        isEnd: [].concat((0, _toConsumableArray2["default"])(parent ?
        /* istanbul ignore next */
        (cov_1t9fl4w8td().b[20][0]++, parent.isEnd) :
        /* istanbul ignore next */
        (cov_1t9fl4w8td().b[20][1]++, [])), [index === list.length - 1])
      }));

      /* istanbul ignore next */
      cov_1t9fl4w8td().s[56]++;
      flattenList.push(flattenNode); // Loop treeNode children

      /* istanbul ignore next */
      cov_1t9fl4w8td().s[57]++;

      if (
      /* istanbul ignore next */
      (cov_1t9fl4w8td().b[22][0]++, expandedKeys === true) ||
      /* istanbul ignore next */
      (cov_1t9fl4w8td().b[22][1]++, expandedKeySet.has(mergedKey))) {
        /* istanbul ignore next */
        cov_1t9fl4w8td().b[21][0]++;
        cov_1t9fl4w8td().s[58]++;
        flattenNode.children = dig(
        /* istanbul ignore next */
        (cov_1t9fl4w8td().b[23][0]++, treeNode.children) ||
        /* istanbul ignore next */
        (cov_1t9fl4w8td().b[23][1]++, []), flattenNode);
      } else {
        /* istanbul ignore next */
        cov_1t9fl4w8td().b[21][1]++;
        cov_1t9fl4w8td().s[59]++;
        flattenNode.children = [];
      }

      /* istanbul ignore next */
      cov_1t9fl4w8td().s[60]++;
      return flattenNode;
    });
  }

  /* istanbul ignore next */
  cov_1t9fl4w8td().s[61]++;
  dig(treeNodeList);

  /* istanbul ignore next */
  cov_1t9fl4w8td().s[62]++;
  return flattenList;
}
/**
 * Traverse all the data by `treeData`.
 * Please not use it out of the `rc-tree` since we may refactor this code.
 */


function traverseDataNodes(dataNodes, callback) {
  /* istanbul ignore next */
  cov_1t9fl4w8td().f[11]++;

  function processNode(node, index, parent) {
    /* istanbul ignore next */
    cov_1t9fl4w8td().f[12]++;
    var children =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[63]++, node ?
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[24][0]++, node.children) :
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[24][1]++, dataNodes));
    var pos =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[64]++, node ?
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[25][0]++, (0, _util.getPosition)(parent.pos, index)) :
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[25][1]++, '0')); // Process node if is not root

    /* istanbul ignore next */
    cov_1t9fl4w8td().s[65]++;

    if (node) {
      /* istanbul ignore next */
      cov_1t9fl4w8td().b[26][0]++;
      var data =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().s[66]++, {
        node: node,
        index: index,
        pos: pos,
        key: node.key !== null ?
        /* istanbul ignore next */
        (cov_1t9fl4w8td().b[27][0]++, node.key) :
        /* istanbul ignore next */
        (cov_1t9fl4w8td().b[27][1]++, pos),
        parentPos: parent.node ?
        /* istanbul ignore next */
        (cov_1t9fl4w8td().b[28][0]++, parent.pos) :
        /* istanbul ignore next */
        (cov_1t9fl4w8td().b[28][1]++, null),
        level: parent.level + 1
      });

      /* istanbul ignore next */
      cov_1t9fl4w8td().s[67]++;
      callback(data);
    } else
    /* istanbul ignore next */
    {
      cov_1t9fl4w8td().b[26][1]++;
    } // Process children node


    cov_1t9fl4w8td().s[68]++;

    if (children) {
      /* istanbul ignore next */
      cov_1t9fl4w8td().b[29][0]++;
      cov_1t9fl4w8td().s[69]++;
      children.forEach(function (subNode, subIndex) {
        /* istanbul ignore next */
        cov_1t9fl4w8td().f[13]++;
        cov_1t9fl4w8td().s[70]++;
        processNode(subNode, subIndex, {
          node: node,
          pos: pos,
          level: parent ?
          /* istanbul ignore next */
          (cov_1t9fl4w8td().b[30][0]++, parent.level + 1) :
          /* istanbul ignore next */
          (cov_1t9fl4w8td().b[30][1]++, -1)
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_1t9fl4w8td().b[29][1]++;
    }
  }

  /* istanbul ignore next */
  cov_1t9fl4w8td().s[71]++;
  processNode(null);
}
/**
 * Convert `treeData` into entity records.
 */


function convertDataToEntities(dataNodes) {
  /* istanbul ignore next */
  cov_1t9fl4w8td().f[14]++;

  var _ref =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[72]++,
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[32][0]++, arguments.length > 1) &&
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[32][1]++, arguments[1] !== undefined) ?
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[31][0]++, arguments[1]) :
  /* istanbul ignore next */
  (cov_1t9fl4w8td().b[31][1]++, {})),
      initWrapper =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[73]++, _ref.initWrapper),
      processEntity =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[74]++, _ref.processEntity),
      onProcessFinished =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[75]++, _ref.onProcessFinished);

  var posEntities =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[76]++, {});
  var keyEntities =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[77]++, {});
  var wrapper =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[78]++, {
    posEntities: posEntities,
    keyEntities: keyEntities
  });

  /* istanbul ignore next */
  cov_1t9fl4w8td().s[79]++;

  if (initWrapper) {
    /* istanbul ignore next */
    cov_1t9fl4w8td().b[33][0]++;
    cov_1t9fl4w8td().s[80]++;
    wrapper =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[34][0]++, initWrapper(wrapper)) ||
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[34][1]++, wrapper);
  } else
  /* istanbul ignore next */
  {
    cov_1t9fl4w8td().b[33][1]++;
  }

  cov_1t9fl4w8td().s[81]++;
  traverseDataNodes(dataNodes, function (item) {
    /* istanbul ignore next */
    cov_1t9fl4w8td().f[15]++;
    var node =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[82]++, item.node),
        index =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[83]++, item.index),
        pos =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[84]++, item.pos),
        key =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[85]++, item.key),
        parentPos =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[86]++, item.parentPos),
        level =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[87]++, item.level);
    var entity =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[88]++, {
      node: node,
      index: index,
      key: key,
      pos: pos,
      level: level
    });
    var mergedKey =
    /* istanbul ignore next */
    (cov_1t9fl4w8td().s[89]++, getKey(key, pos));

    /* istanbul ignore next */
    cov_1t9fl4w8td().s[90]++;
    posEntities[pos] = entity;

    /* istanbul ignore next */
    cov_1t9fl4w8td().s[91]++;
    keyEntities[mergedKey] = entity; // Fill children

    /* istanbul ignore next */
    cov_1t9fl4w8td().s[92]++;
    entity.parent = posEntities[parentPos];

    /* istanbul ignore next */
    cov_1t9fl4w8td().s[93]++;

    if (entity.parent) {
      /* istanbul ignore next */
      cov_1t9fl4w8td().b[35][0]++;
      cov_1t9fl4w8td().s[94]++;
      entity.parent.children =
      /* istanbul ignore next */
      (cov_1t9fl4w8td().b[36][0]++, entity.parent.children) ||
      /* istanbul ignore next */
      (cov_1t9fl4w8td().b[36][1]++, []);

      /* istanbul ignore next */
      cov_1t9fl4w8td().s[95]++;
      entity.parent.children.push(entity);
    } else
    /* istanbul ignore next */
    {
      cov_1t9fl4w8td().b[35][1]++;
    }

    cov_1t9fl4w8td().s[96]++;

    if (processEntity) {
      /* istanbul ignore next */
      cov_1t9fl4w8td().b[37][0]++;
      cov_1t9fl4w8td().s[97]++;
      processEntity(entity, wrapper);
    } else
    /* istanbul ignore next */
    {
      cov_1t9fl4w8td().b[37][1]++;
    }
  });

  /* istanbul ignore next */
  cov_1t9fl4w8td().s[98]++;

  if (onProcessFinished) {
    /* istanbul ignore next */
    cov_1t9fl4w8td().b[38][0]++;
    cov_1t9fl4w8td().s[99]++;
    onProcessFinished(wrapper);
  } else
  /* istanbul ignore next */
  {
    cov_1t9fl4w8td().b[38][1]++;
  }

  cov_1t9fl4w8td().s[100]++;
  return wrapper;
}
/**
 * Get TreeNode props with Tree props.
 */


function getTreeNodeProps(key, _ref2) {
  /* istanbul ignore next */
  cov_1t9fl4w8td().f[16]++;
  var expandedKeys =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[101]++, _ref2.expandedKeys),
      selectedKeys =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[102]++, _ref2.selectedKeys),
      loadedKeys =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[103]++, _ref2.loadedKeys),
      loadingKeys =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[104]++, _ref2.loadingKeys),
      checkedKeys =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[105]++, _ref2.checkedKeys),
      halfCheckedKeys =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[106]++, _ref2.halfCheckedKeys),
      dragOverNodeKey =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[107]++, _ref2.dragOverNodeKey),
      dropPosition =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[108]++, _ref2.dropPosition),
      keyEntities =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[109]++, _ref2.keyEntities);
  var entity =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[110]++, keyEntities[key]);
  var treeNodeProps =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[111]++, {
    eventKey: key,
    expanded: expandedKeys.indexOf(key) !== -1,
    selected: selectedKeys.indexOf(key) !== -1,
    loaded: loadedKeys.indexOf(key) !== -1,
    loading: loadingKeys.indexOf(key) !== -1,
    checked: checkedKeys.indexOf(key) !== -1,
    halfChecked: halfCheckedKeys.indexOf(key) !== -1,
    pos: String(entity ?
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[39][0]++, entity.pos) :
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[39][1]++, '')),
    // [Legacy] Drag props
    dragOver:
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[40][0]++, dragOverNodeKey === key) &&
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[40][1]++, dropPosition === 0),
    dragOverGapTop:
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[41][0]++, dragOverNodeKey === key) &&
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[41][1]++, dropPosition === -1),
    dragOverGapBottom:
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[42][0]++, dragOverNodeKey === key) &&
    /* istanbul ignore next */
    (cov_1t9fl4w8td().b[42][1]++, dropPosition === 1)
  });

  /* istanbul ignore next */
  cov_1t9fl4w8td().s[112]++;
  return treeNodeProps;
}

function convertNodePropsToEventData(props) {
  /* istanbul ignore next */
  cov_1t9fl4w8td().f[17]++;
  var data =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[113]++, props.data),
      expanded =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[114]++, props.expanded),
      selected =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[115]++, props.selected),
      checked =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[116]++, props.checked),
      loaded =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[117]++, props.loaded),
      loading =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[118]++, props.loading),
      halfChecked =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[119]++, props.halfChecked),
      dragOver =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[120]++, props.dragOver),
      dragOverGapTop =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[121]++, props.dragOverGapTop),
      dragOverGapBottom =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[122]++, props.dragOverGapBottom),
      pos =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[123]++, props.pos),
      active =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[124]++, props.active);
  var eventData =
  /* istanbul ignore next */
  (cov_1t9fl4w8td().s[125]++, (0, _objectSpread2["default"])({}, data, {
    expanded: expanded,
    selected: selected,
    checked: checked,
    loaded: loaded,
    loading: loading,
    halfChecked: halfChecked,
    dragOver: dragOver,
    dragOverGapTop: dragOverGapTop,
    dragOverGapBottom: dragOverGapBottom,
    pos: pos,
    active: active
  }));

  /* istanbul ignore next */
  cov_1t9fl4w8td().s[126]++;

  if (!('props' in eventData)) {
    /* istanbul ignore next */
    cov_1t9fl4w8td().b[43][0]++;
    cov_1t9fl4w8td().s[127]++;
    Object.defineProperty(eventData, 'props', {
      get: function get() {
        /* istanbul ignore next */
        cov_1t9fl4w8td().f[18]++;
        cov_1t9fl4w8td().s[128]++;
        (0, _warning["default"])(false, 'Second param return from event is node data instead of TreeNode instance. Please read value directly instead of reading from `props`.');

        /* istanbul ignore next */
        cov_1t9fl4w8td().s[129]++;
        return props;
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1t9fl4w8td().b[43][1]++;
  }

  cov_1t9fl4w8td().s[130]++;
  return eventData;
}