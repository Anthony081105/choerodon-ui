{"version":3,"sources":["upload.test.js"],"names":["describe","it","ref","App","refs","input","React","Component","expect","toBeDefined","data","jest","fn","props","action","beforeUpload","Promise","resolve","setTimeout","onChange","file","status","toHaveBeenCalled","wrapper","find","simulate","target","files","filename","done","not"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-string-refs, react/prefer-es6-class */\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport Upload from '..';\n\ndescribe('Upload', () => {\n  // https://github.com/react-component/upload/issues/36\n  it('should get refs inside Upload in componentDidMount', () => {\n    let ref;\n    class App extends React.Component {\n      componentDidMount() {\n        ref = this.refs.input;\n      }\n\n      render() {\n        return (\n          <Upload supportServerRender={false}>\n            <input ref=\"input\" />\n          </Upload>\n        );\n      }\n    }\n    mount(<App />);\n    expect(ref).toBeDefined();\n  });\n\n  it('return promise in beforeUpload', () => {\n    const data = jest.fn();\n    const props = {\n      action: 'http://upload.com',\n      beforeUpload: () => new Promise(resolve => setTimeout(() => resolve('success'), 100)),\n      data,\n      onChange: ({ file }) => {\n        if (file.status !== 'uploading') {\n          expect(data).toHaveBeenCalled();\n        }\n      },\n    };\n\n    const wrapper = mount(\n      <Upload {...props}>\n        <button type=\"button\">upload</button>\n      </Upload>,\n    );\n\n    wrapper.find('input').simulate('change', {\n      target: {\n        files: [{ filename: 'foo.png' }],\n      },\n    });\n  });\n\n  it('should not stop upload when return value of beforeUpload is false', done => {\n    const data = jest.fn();\n    const props = {\n      action: 'http://upload.com',\n      beforeUpload: () => false,\n      data,\n      onChange: () => {\n        expect(data).not.toHaveBeenCalled();\n        done();\n      },\n    };\n\n    const wrapper = mount(\n      <Upload {...props}>\n        <button type=\"button\">upload</button>\n      </Upload>,\n    );\n\n    wrapper.find('input').simulate('change', {\n      target: {\n        files: [{ filename: 'foo.png' }],\n      },\n    });\n  });\n\n  it('should not stop upload when return value of beforeUpload is not false', done => {\n    const data = jest.fn();\n    const props = {\n      action: 'http://upload.com',\n      beforeUpload() {},\n      data,\n      onChange: () => {\n        expect(data).toHaveBeenCalled();\n        done();\n      },\n    };\n\n    const wrapper = mount(\n      <Upload {...props}>\n        <button type=\"button\">upload</button>\n      </Upload>,\n    );\n\n    wrapper.find('input').simulate('change', {\n      target: {\n        files: [{ filename: 'foo.png' }],\n      },\n    });\n  });\n});\n"]}