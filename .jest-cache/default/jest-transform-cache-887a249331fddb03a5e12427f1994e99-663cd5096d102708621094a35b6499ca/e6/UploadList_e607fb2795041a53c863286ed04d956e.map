{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/upload/UploadList.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { FormField, FormFieldProps } from '../field/FormField';\nimport Icon from '../icon';\nimport Progress from '../progress';\nimport { Size } from '../core/enum';\nimport { UploadFile } from './interface';\n\nexport interface UploadListProps extends FormFieldProps {\n  items: UploadFile[];\n  showPreviewImage: boolean;\n  previewImageWidth: number;\n  remove: (file: UploadFile) => void;\n}\n\nexport default class UploadList extends FormField<UploadListProps> {\n  static displayName = 'UploadList';\n\n  static propTypes = {\n    items: PropTypes.array,\n    remove: PropTypes.func,\n    ...FormField.propTypes,\n  };\n\n  static defaultProps = {\n    ...FormField.defaultProps,\n    suffixCls: 'upload-list',\n    items: [],\n  };\n\n  render() {\n    const {\n      prefixCls,\n      props: {\n        items,\n        remove,\n        showPreviewImage,\n        previewImageWidth,\n      },\n    } = this;\n\n    const list = items.map(file => {\n      let previewImg: any;\n      let progress;\n      let removeIcon;\n      const progressProps = {\n        value: file.percent,\n        size: Size.small,\n        showInfo: false,\n      };\n      if (showPreviewImage && file.type.startsWith('image')) {\n        // temporarily set img[width] to 100\n        previewImg = <img width={previewImageWidth} alt={file.filename} src={file.url} />;\n      }\n      if (file.status === 'uploading') {\n        progress = (\n          <div className={`${prefixCls}-item-progress`}>\n            <Progress {...progressProps} />\n          </div>);\n      } else {\n        const rmProps = {\n          className: classnames(`${prefixCls}-item-icon`, {\n            [`${prefixCls}-item-remove`]: true,\n          }),\n          type: 'close',\n          onClick: () => {\n            remove(file);\n          },\n        };\n        removeIcon = <Icon {...rmProps} />;\n      }\n      const listProps = {\n        className: classnames(`${prefixCls}-item`, {\n          [`${prefixCls}-item-error`]: file.status === 'error',\n          [`${prefixCls}-item-success`]: file.status === 'success',\n        }),\n      };\n\n      return (\n        <div {...listProps} key={file.uid}>\n          {previewImg}\n          <span className={`${prefixCls}-item-name`}>{file.name}</span>\n          {progress}\n          {removeIcon}\n        </div>\n      );\n    });\n\n    const listWrapperCls = items.length ? `${prefixCls}` : `${prefixCls}-empty`;\n\n    return (\n      <div className={listWrapperCls}>\n        {list}\n      </div>\n    );\n  }\n}\n"]}