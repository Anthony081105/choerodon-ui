{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/icon-picker/IconCategory.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, PropTypes as MobxPropTypes } from 'mobx-react';\nimport { action, observable } from 'mobx';\nimport { pxToRem } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport measureScrollbar from 'choerodon-ui/lib/_util/measureScrollbar';\nimport IconItem from './IconItem';\nimport Pagination from '../pagination/Pagination';\nimport autobind from '../_util/autobind';\n\nexport interface IconItemProps {\n  prefixCls?: string;\n  icons: string[];\n  category?: string;\n  value?: string;\n  paging?: boolean;\n  page?: number;\n  pageSize?: number;\n  onSelect: (type: string) => void;\n  customFontName?: string;\n  onPageChange?: (page: number, category?: string) => void;\n}\n\n@observer\nexport default class IconCategory extends Component<IconItemProps> {\n  static displayName = 'IconCategory';\n\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    icons: MobxPropTypes.arrayOrObservableArrayOf(PropTypes.string).isRequired,\n    value: PropTypes.string,\n    onSelect: PropTypes.func.isRequired,\n    onPageChange: PropTypes.func,\n    pageSize: PropTypes.number,\n    page: PropTypes.number,\n    paging: PropTypes.bool,\n    customFontName: PropTypes.string,\n  };\n\n  static defaultProps = {\n    paging: true,\n  };\n\n  @observable page: number;\n\n  ul?: HTMLUListElement | null;\n\n  constructor(props) {\n    super(props);\n    this.setPage(props.page);\n  }\n\n  @autobind\n  saveRef(node) {\n    this.ul = node;\n  }\n\n  @autobind\n  handlePageChange(page: number) {\n    this.setPage(page);\n    const { onPageChange, category } = this.props;\n    if (onPageChange) {\n      onPageChange(page, category);\n    }\n  }\n\n  @autobind\n  handleItemSelect(icon) {\n    const { onSelect } = this.props;\n    onSelect(icon);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.page && nextProps.page !== this.page) {\n      this.setPage(nextProps.page);\n    }\n  }\n\n  componentDidMount() {\n    this.syncItemPosition();\n  }\n\n  componentDidUpdate() {\n    this.syncItemPosition();\n  }\n\n  syncItemPosition() {\n    const {\n      props: { value, prefixCls },\n      ul,\n    } = this;\n    if (value && ul) {\n      const item = ul.querySelector(`li.${prefixCls}-item-selected`) as HTMLLIElement;\n      if (item) {\n        const { offsetHeight, scrollTop } = ul;\n        const { offsetTop, offsetHeight: height } = item;\n        if (offsetTop < scrollTop) {\n          ul.scrollTo(0, offsetTop);\n        } else if (offsetTop + height > scrollTop + offsetHeight) {\n          ul.scrollTo(0, offsetTop + height - offsetHeight);\n        }\n      }\n    }\n  }\n\n  @action\n  setPage(page: number = 1) {\n    this.page = page;\n  }\n\n  renderPagination() {\n    const {\n      page,\n      props: { paging, pageSize, prefixCls, icons },\n    } = this;\n    const total = icons.length;\n    if (paging && total > pageSize!) {\n      return (\n        <Pagination\n          key=\"page\"\n          className={`${prefixCls}-pagination`}\n          total={total}\n          page={page}\n          pageSize={pageSize}\n          showSizeChanger={false}\n          onChange={this.handlePageChange}\n          style={{ right: pxToRem(measureScrollbar()) }}\n        />\n      );\n    }\n  }\n\n  renderIcons() {\n    const { value, prefixCls, customFontName } = this.props;\n    return this.getIcons().map(icon => (\n      <IconItem\n        key={icon}\n        customFontName={customFontName}\n        prefixCls={prefixCls}\n        type={icon}\n        onSelect={this.handleItemSelect}\n        active={value === icon}\n      />\n    ));\n  }\n\n  getIcons() {\n    const {\n      page,\n      props: { paging, pageSize, icons },\n    } = this;\n    if (paging && icons.length > pageSize!) {\n      return icons.slice((page - 1) * pageSize!, page * pageSize!);\n    }\n    return icons;\n  }\n\n  render() {\n    const {\n      props: { prefixCls },\n    } = this;\n    return (\n      <div className={`${prefixCls}-category`}>\n        {this.renderPagination()}\n        <ul key=\"icon-items\" ref={this.saveRef}>\n          {this.renderIcons()}\n        </ul>\n      </div>\n    );\n  }\n}\n"]}