{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/grid/row.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Children, cloneElement, Component, HTMLAttributes, ReactElement } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport Responsive, { BreakpointMap } from '../responsive/Responsive';\nimport { getPrefixCls } from '../configure';\n\nexport interface RowProps extends HTMLAttributes<HTMLDivElement> {\n  gutter?: number | BreakpointMap;\n  type?: 'flex';\n  align?: 'top' | 'middle' | 'bottom';\n  justify?: 'start' | 'end' | 'center' | 'space-around' | 'space-between';\n  prefixCls?: string;\n}\n\nconst defaultGutter = 0;\n\nexport default class Row extends Component<RowProps> {\n  static displayName = 'Row';\n\n  static defaultProps = {\n    gutter: defaultGutter,\n  };\n\n  static propTypes = {\n    type: PropTypes.string,\n    align: PropTypes.string,\n    justify: PropTypes.string,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    gutter: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    prefixCls: PropTypes.string,\n  };\n\n  renderRow = ([gutter = defaultGutter]) => {\n    const {\n      type,\n      justify,\n      align,\n      className,\n      style,\n      children,\n      prefixCls: customizePrefixCls,\n      ...others\n    } = this.props;\n    const prefixCls = getPrefixCls('row', customizePrefixCls);\n    const classes = classNames(\n      {\n        [prefixCls]: !type,\n        [`${prefixCls}-${type}`]: type,\n        [`${prefixCls}-${type}-${justify}`]: type && justify,\n        [`${prefixCls}-${type}-${align}`]: type && align,\n      },\n      className,\n    );\n    const rowStyle =\n      (gutter as number) > 0\n        ? {\n            marginLeft: (gutter as number) / -2,\n            marginRight: (gutter as number) / -2,\n            ...style,\n          }\n        : style;\n    const cols = Children.map(children, (col: ReactElement<HTMLDivElement>) => {\n      if (!col) {\n        return null;\n      }\n      if (col.props && (gutter as number) > 0) {\n        return cloneElement(col, {\n          style: {\n            paddingLeft: (gutter as number) / 2,\n            paddingRight: (gutter as number) / 2,\n            ...col.props.style,\n          },\n        });\n      }\n      return col;\n    });\n    const otherProps = { ...others };\n    delete otherProps.gutter;\n    return (\n      <div {...omit(otherProps, ['rowIndex', 'colIndex'])} className={classes} style={rowStyle}>\n        {cols}\n      </div>\n    );\n  };\n\n  render() {\n    const { gutter } = this.props;\n    return <Responsive items={[gutter]}>{this.renderRow}</Responsive>;\n  }\n}\n"]}