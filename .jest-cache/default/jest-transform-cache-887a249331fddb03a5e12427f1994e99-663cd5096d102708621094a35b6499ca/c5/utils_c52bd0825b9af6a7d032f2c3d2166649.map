{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/utils.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { isValidElement, Key, ReactElement, ReactNode } from 'react';\nimport isString from 'lodash/isString';\nimport warning from 'choerodon-ui/lib/_util/warning';\nimport { ColumnProps } from './Column';\nimport Record from '../data-set/Record';\nimport ObserverCheckBox from '../check-box/CheckBox';\nimport Switch from '../switch/Switch';\nimport ObserverRadio from '../radio/Radio';\nimport { FieldType, RecordStatus } from '../data-set/enum';\nimport Field from '../data-set/Field';\nimport ObserverSelect from '../select/Select';\nimport SelectBox from '../select-box/SelectBox';\nimport Lov from '../lov/Lov';\nimport ObserverNumberField from '../number-field/NumberField';\nimport Currency from '../currency/Currency';\nimport DatePicker from '../date-picker/DatePicker';\nimport DateTimePicker from '../date-time-picker/DateTimePicker';\nimport TimePicker from '../time-picker/TimePicker';\nimport WeekPicker from '../week-picker/WeekPicker';\nimport MonthPicker from '../month-picker/MonthPicker';\nimport YearPicker from '../year-picker/YearPicker';\nimport ObserverTextField from '../text-field/TextField';\nimport { ColumnAlign, ColumnLock, TablePaginationPosition } from './enum';\nimport { FormFieldProps } from '../field/FormField';\nimport IntlField from '../intl-field/IntlField';\nimport UrlField from '../url-field/UrlField';\nimport EmailField from '../email-field/EmailField';\nimport ColorPicker from '../color-picker/ColorPicker';\nimport DataSet from '../data-set/DataSet';\nimport TableStore from './TableStore';\nimport { TablePaginationConfig } from './Table';\n\nexport function getEditorByField(field: Field): ReactElement<FormFieldProps> {\n  const lookupCode = field.get('lookupCode');\n  const lookupUrl = field.get('lookupUrl');\n  const lovCode = field.get('lovCode');\n  const { type, name } = field;\n  if (\n    lookupCode ||\n    isString(lookupUrl) ||\n    (type !== FieldType.object && (lovCode || field.options))\n  ) {\n    return <ObserverSelect />;\n  }\n  if (lovCode) {\n    return <Lov />;\n  }\n  switch (type) {\n    case FieldType.boolean:\n      return <ObserverCheckBox />;\n    case FieldType.number:\n      return <ObserverNumberField />;\n    case FieldType.currency:\n      return <Currency />;\n    case FieldType.date:\n      return <DatePicker />;\n    case FieldType.dateTime:\n      return <DateTimePicker />;\n    case FieldType.time:\n      return <TimePicker />;\n    case FieldType.week:\n      return <WeekPicker />;\n    case FieldType.month:\n      return <MonthPicker />;\n    case FieldType.year:\n      return <YearPicker />;\n    case FieldType.intl:\n      return <IntlField />;\n    case FieldType.email:\n      return <EmailField />;\n    case FieldType.url:\n      return <UrlField />;\n    case FieldType.color:\n      return <ColorPicker />;\n    case FieldType.string:\n      return <ObserverTextField />;\n    default:\n      warning(\n        false,\n        `Table auto editor: No editor exists on the field<${name}>'s type<${type}>, so use the TextField as default editor`,\n      );\n      return <ObserverTextField />;\n  }\n}\n\nexport function getAlignByField(field?: Field): ColumnAlign | undefined {\n  if (field) {\n    const { type } = field;\n    switch (type) {\n      case FieldType.number:\n        return ColumnAlign.right;\n      case FieldType.boolean:\n        return ColumnAlign.center;\n      default:\n    }\n  }\n}\n\nexport function getEditorByColumnAndRecord(\n  column: ColumnProps,\n  record?: Record,\n): ReactElement<FormFieldProps> | undefined {\n  const { name, editor } = column;\n  if (record) {\n    let cellEditor = editor;\n    if (typeof editor === 'function') {\n      cellEditor = editor(record, name);\n    }\n    if (cellEditor === true) {\n      const field = record.getField(name);\n      if (field) {\n        if (\n          !field.get('unique') ||\n          field.get('multiple') ||\n          field.get('range') ||\n          record.status === RecordStatus.add\n        ) {\n          return getEditorByField(field);\n        }\n      }\n    }\n    if (isValidElement(cellEditor)) {\n      return cellEditor;\n    }\n  }\n}\n\nexport function isRadio(element?: ReactElement<FormFieldProps>): boolean {\n  if (element) {\n    switch (element.type as any) {\n      case ObserverCheckBox:\n      case ObserverRadio:\n      case Switch:\n      case SelectBox:\n        return true;\n      default:\n    }\n  }\n  return false;\n}\n\nexport function findCell(\n  tableStore: TableStore,\n  prefixCls?: string,\n  name?: Key,\n  lock?: ColumnLock | boolean,\n): HTMLTableCellElement | undefined {\n  const { node, dataSet, overflowX, currentEditRecord } = tableStore;\n  const current = currentEditRecord || dataSet.current;\n  const tableCellPrefixCls = `${prefixCls}-cell`;\n  if (name !== undefined && current && node.element) {\n    const wrapperSelector =\n      overflowX && lock ? `.${prefixCls}-fixed-${lock === true ? ColumnLock.left : lock} ` : '';\n    const selector = `${wrapperSelector}tr[data-index=\"${current.id}\"] td[data-index=\"${name}\"] span.${tableCellPrefixCls}-inner`;\n    return node.element.querySelector(selector);\n  }\n}\n\nexport function findFirstFocusableElement(node: HTMLElement): HTMLElement | undefined {\n  if (node.children) {\n    let found: HTMLElement | undefined;\n    [...(node.children as HTMLCollectionOf<HTMLElement>)].some(child => {\n      if (child.tabIndex > -1) {\n        found = child;\n      } else {\n        found = findFirstFocusableElement(child);\n      }\n      return !!found;\n    });\n    return found;\n  }\n}\n\nexport function findIndexedSibling(element, direction): HTMLTableRowElement | null {\n  const sibling: HTMLTableRowElement | null =\n    direction > 0 ? element.nextElementSibling : element.previousElementSibling;\n  if (\n    !sibling ||\n    ('index' in sibling.dataset &&\n      !sibling.getAttributeNodeNS('', 'disabled') &&\n      (!document.defaultView || document.defaultView.getComputedStyle(sibling).display !== 'none'))\n  ) {\n    return sibling;\n  }\n  return findIndexedSibling(sibling, direction);\n}\n\nexport function isDisabledRow(record: Record) {\n  return record.isCached || record.status === RecordStatus.delete;\n}\n\nexport function isSelectedRow(record: Record) {\n  return record.isSelected;\n}\n\nexport function getHeader(column: ColumnProps, dataSet: DataSet): ReactNode {\n  const { header, name } = column;\n  if (typeof header === 'function') {\n    return header(dataSet, name);\n  }\n  if (header !== undefined) {\n    return header;\n  }\n  const field = dataSet.getField(name);\n  if (field) {\n    return field.get('label');\n  }\n}\n\nexport function getColumnKey({ name, key }: ColumnProps): Key {\n  return key || name!;\n}\n\nexport function getPaginationPosition(pagination?: TablePaginationConfig): TablePaginationPosition {\n  if (pagination) {\n    const { position } = pagination;\n    if (position) {\n      return position;\n    }\n  }\n  return TablePaginationPosition.bottom;\n}\n\nexport function getHeight(el: HTMLElement) {\n  return el.getBoundingClientRect().height;\n}\n"]}