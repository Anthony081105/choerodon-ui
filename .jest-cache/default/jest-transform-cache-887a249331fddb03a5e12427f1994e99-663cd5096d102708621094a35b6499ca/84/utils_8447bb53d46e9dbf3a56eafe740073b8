2517f6eebf06732a41e6e5d8a793969f
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalizeLabelWidth = normalizeLabelWidth;
exports.getProperty = getProperty;
exports.defaultExcludeUseColonTag = exports.FIELD_SUFFIX = exports.defaultColumns = exports.defaultLabelLayout = exports.defaultLabelWidth = void 0;

var _isNumber = _interopRequireDefault(require("lodash/isNumber"));

var defaultLabelWidth = 100;
exports.defaultLabelWidth = defaultLabelWidth;
var defaultLabelLayout = "horizontal"
/* horizontal */
;
exports.defaultLabelLayout = defaultLabelLayout;
var defaultColumns = 1;
exports.defaultColumns = defaultColumns;
var FIELD_SUFFIX = 'field';
exports.FIELD_SUFFIX = FIELD_SUFFIX;

function normalizeLabelWidth(labelWidth, columns) {
  if ((0, _isNumber["default"])(labelWidth)) {
    return new Array(columns).fill(labelWidth);
  }

  var labelWidths = new Array(columns).fill(defaultLabelWidth);
  labelWidth.slice(0, columns).forEach(function (width, index) {
    return labelWidths[index] = width;
  });
  return labelWidths;
}

function getProperty(props, key, dataSet, record) {
  if (props[key]) {
    return props[key];
  }

  var name = props.name;
  var field = record ? record.getField(name) : dataSet && dataSet.getField(name);

  if (field) {
    var fieldProperty = field.get(key);

    if (fieldProperty) {
      return fieldProperty;
    }
  }
}

var defaultExcludeUseColonTag = ['div', 'button', 'Button'];
exports.defaultExcludeUseColonTag = defaultExcludeUseColonTag;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm0vdXRpbHMuanMiXSwibmFtZXMiOlsiZGVmYXVsdExhYmVsV2lkdGgiLCJkZWZhdWx0TGFiZWxMYXlvdXQiLCJkZWZhdWx0Q29sdW1ucyIsIkZJRUxEX1NVRkZJWCIsImxhYmVsV2lkdGhzIiwibGFiZWxXaWR0aCIsInByb3BzIiwibmFtZSIsImZpZWxkIiwicmVjb3JkIiwiZGF0YVNldCIsImZpZWxkUHJvcGVydHkiLCJkZWZhdWx0RXhjbHVkZVVzZUNvbG9uVGFnIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLElBQUEsU0FBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQTs7QUFDTyxJQUFNQSxpQkFBaUIsR0FBdkIsR0FBQTs7QUFDQSxJQUFNQyxrQkFBa0IsR0FBRztBQUFhO0FBQXhDOztBQUNBLElBQU1DLGNBQWMsR0FBcEIsQ0FBQTs7QUFDQSxJQUFNQyxZQUFZLEdBQWxCLE9BQUE7OztBQUNBLFNBQUEsbUJBQUEsQ0FBQSxVQUFBLEVBQUEsT0FBQSxFQUFrRDtBQUNyRCxNQUFJLENBQUEsR0FBQSxTQUFBLENBQUEsU0FBQSxDQUFBLEVBQUosVUFBSSxDQUFKLEVBQTBCO0FBQ3RCLFdBQU8sSUFBQSxLQUFBLENBQUEsT0FBQSxFQUFBLElBQUEsQ0FBUCxVQUFPLENBQVA7QUFDSDs7QUFDRCxNQUFNQyxXQUFXLEdBQUcsSUFBQSxLQUFBLENBQUEsT0FBQSxFQUFBLElBQUEsQ0FBcEIsaUJBQW9CLENBQXBCO0FBQ0FDLEVBQUFBLFVBQVUsQ0FBVkEsS0FBQUEsQ0FBQUEsQ0FBQUEsRUFBQUEsT0FBQUEsRUFBQUEsT0FBQUEsQ0FBcUMsVUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBO0FBQUEsV0FBbUJELFdBQVcsQ0FBWEEsS0FBVyxDQUFYQSxHQUFuQixLQUFBO0FBQXJDQyxHQUFBQTtBQUNBLFNBQUEsV0FBQTtBQUNIOztBQUNNLFNBQUEsV0FBQSxDQUFBLEtBQUEsRUFBQSxHQUFBLEVBQUEsT0FBQSxFQUFBLE1BQUEsRUFBa0Q7QUFDckQsTUFBSUMsS0FBSyxDQUFULEdBQVMsQ0FBVCxFQUFnQjtBQUNaLFdBQU9BLEtBQUssQ0FBWixHQUFZLENBQVo7QUFDSDs7QUFIb0QsTUFJN0NDLElBSjZDLEdBSXBDRCxLQUpvQyxDQUFBLElBQUE7QUFLckQsTUFBTUUsS0FBSyxHQUFHQyxNQUFNLEdBQUdBLE1BQU0sQ0FBTkEsUUFBQUEsQ0FBSCxJQUFHQSxDQUFILEdBQTJCQyxPQUFPLElBQUlBLE9BQU8sQ0FBUEEsUUFBQUEsQ0FBMUQsSUFBMERBLENBQTFEOztBQUNBLE1BQUEsS0FBQSxFQUFXO0FBQ1AsUUFBTUMsYUFBYSxHQUFHSCxLQUFLLENBQUxBLEdBQUFBLENBQXRCLEdBQXNCQSxDQUF0Qjs7QUFDQSxRQUFBLGFBQUEsRUFBbUI7QUFDZixhQUFBLGFBQUE7QUFDSDtBQUNKO0FBQ0o7O0FBQ00sSUFBTUkseUJBQXlCLEdBQUcsQ0FBQSxLQUFBLEVBQUEsUUFBQSxFQUFsQyxRQUFrQyxDQUFsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpc051bWJlciBmcm9tICdsb2Rhc2gvaXNOdW1iZXInO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRMYWJlbFdpZHRoID0gMTAwO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRMYWJlbExheW91dCA9IFwiaG9yaXpvbnRhbFwiIC8qIGhvcml6b250YWwgKi87XG5leHBvcnQgY29uc3QgZGVmYXVsdENvbHVtbnMgPSAxO1xuZXhwb3J0IGNvbnN0IEZJRUxEX1NVRkZJWCA9ICdmaWVsZCc7XG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplTGFiZWxXaWR0aChsYWJlbFdpZHRoLCBjb2x1bW5zKSB7XG4gICAgaWYgKGlzTnVtYmVyKGxhYmVsV2lkdGgpKSB7XG4gICAgICAgIHJldHVybiBuZXcgQXJyYXkoY29sdW1ucykuZmlsbChsYWJlbFdpZHRoKTtcbiAgICB9XG4gICAgY29uc3QgbGFiZWxXaWR0aHMgPSBuZXcgQXJyYXkoY29sdW1ucykuZmlsbChkZWZhdWx0TGFiZWxXaWR0aCk7XG4gICAgbGFiZWxXaWR0aC5zbGljZSgwLCBjb2x1bW5zKS5mb3JFYWNoKCh3aWR0aCwgaW5kZXgpID0+IChsYWJlbFdpZHRoc1tpbmRleF0gPSB3aWR0aCkpO1xuICAgIHJldHVybiBsYWJlbFdpZHRocztcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRQcm9wZXJ0eShwcm9wcywga2V5LCBkYXRhU2V0LCByZWNvcmQpIHtcbiAgICBpZiAocHJvcHNba2V5XSkge1xuICAgICAgICByZXR1cm4gcHJvcHNba2V5XTtcbiAgICB9XG4gICAgY29uc3QgeyBuYW1lIH0gPSBwcm9wcztcbiAgICBjb25zdCBmaWVsZCA9IHJlY29yZCA/IHJlY29yZC5nZXRGaWVsZChuYW1lKSA6IGRhdGFTZXQgJiYgZGF0YVNldC5nZXRGaWVsZChuYW1lKTtcbiAgICBpZiAoZmllbGQpIHtcbiAgICAgICAgY29uc3QgZmllbGRQcm9wZXJ0eSA9IGZpZWxkLmdldChrZXkpO1xuICAgICAgICBpZiAoZmllbGRQcm9wZXJ0eSkge1xuICAgICAgICAgICAgcmV0dXJuIGZpZWxkUHJvcGVydHk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgY29uc3QgZGVmYXVsdEV4Y2x1ZGVVc2VDb2xvblRhZyA9IFsnZGl2JywgJ2J1dHRvbicsICdCdXR0b24nXTtcbiJdfQ==