{"version":3,"sources":["InkTabBarMixin.jsx"],"names":["isDev","process","env","NODE_ENV","getScroll","w","top","ret","method","d","document","documentElement","body","offset","elem","box","x","y","doc","ownerDocument","docElem","getBoundingClientRect","left","clientLeft","clientTop","defaultView","parentWindow","componentDidUpdate","component","init","styles","props","rootNode","root","wrapNode","nav","inkBarNode","inkBar","activeTab","inkBarNodeStyle","style","tabBarPosition","display","tabNode","transformSupported","width","offsetWidth","undefined","parseFloat","height","bottom","right","offsetHeight","getDefaultProps","inkBarAnimated","componentDidMount","timeout","setTimeout","componentWillUnmount","clearTimeout","getInkBarNode","prefixCls","className","classes","saveRef"],"mappings":"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","sourcesContent":["import { isTransformSupported, setTransform,getLeft,getTop } from './utils';\nimport React from 'react';\nimport classnames from 'classnames';\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nexport function getScroll(w, top) {\n  let ret = w[`page${top ? 'Y' : 'X'}Offset`];\n  const method = `scroll${top ? 'Top' : 'Left'}`;\n  if (typeof ret !== 'number') {\n    const d = w.document;\n    // ie6,7,8 standard mode\n    ret = d.documentElement[method];\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method];\n    }\n  }\n  return ret;\n}\n\nfunction offset(elem) {\n  let box;\n  let x;\n  let y;\n  const doc = elem.ownerDocument;\n  const body = doc.body;\n  const docElem = doc && doc.documentElement;\n  box = elem.getBoundingClientRect();\n  x = box.left;\n  y = box.top;\n  x -= docElem.clientLeft || body.clientLeft || 0;\n  y -= docElem.clientTop || body.clientTop || 0;\n  const w = doc.defaultView || doc.parentWindow;\n  x += getScroll(w);\n  y += getScroll(w, true);\n  return {\n    left: x, top: y,\n  };\n}\n\nfunction componentDidUpdate(component, init) {\n  const { styles } = component.props;\n  const rootNode = component.root;\n  const wrapNode = component.nav || rootNode;\n  const inkBarNode = component.inkBar;\n  const activeTab = component.activeTab;\n  const inkBarNodeStyle = inkBarNode.style;\n  const tabBarPosition = component.props.tabBarPosition;\n  if (init) {\n    // prevent mount animation\n    inkBarNodeStyle.display = 'none';\n  }\n  if (activeTab) {\n    const tabNode = activeTab;\n    const transformSupported = isTransformSupported(inkBarNodeStyle);\n    if (tabBarPosition === 'top' || tabBarPosition === 'bottom') {\n      let left = getLeft(tabNode, wrapNode);\n      let width = tabNode.offsetWidth;\n\n      // If tabNode'width width equal to wrapNode'width when tabBarPosition is top or bottom\n      // It means no css working, then ink bar should not have width until css is loaded\n      if (width === rootNode.offsetWidth) {\n        width = 0;\n      } else if (styles.inkBar && styles.inkBar.width !== undefined) {\n        width = parseFloat(styles.inkBar.width, 10);\n        if (width) {\n          left = left + (tabNode.offsetWidth - width) / 2;\n        }\n      }\n      // use 3d gpu to optimize render\n      if (transformSupported) {\n        setTransform(inkBarNodeStyle, `translate3d(${left}px,0,0)`);\n        inkBarNodeStyle.width = `${width}px`;\n        inkBarNodeStyle.height = '';\n      } else {\n        inkBarNodeStyle.left = `${left}px`;\n        inkBarNodeStyle.top = '';\n        inkBarNodeStyle.bottom = '';\n        inkBarNodeStyle.right = `${wrapNode.offsetWidth - left - width}px`;\n      }\n    } else {\n      let top = getTop(tabNode, wrapNode);\n      let height = tabNode.offsetHeight;\n      if (styles.inkBar && styles.inkBar.height !== undefined) {\n        height = parseFloat(styles.inkBar.height, 10);\n        if (height) {\n          top = top + (tabNode.offsetHeight - height) / 2;\n        }\n      }\n      if (transformSupported) {\n        setTransform(inkBarNodeStyle, `translate3d(0,${top}px,0)`);\n        inkBarNodeStyle.height = `${height}px`;\n        inkBarNodeStyle.width = '';\n      } else {\n        inkBarNodeStyle.left = '';\n        inkBarNodeStyle.right = '';\n        inkBarNodeStyle.top = `${top}px`;\n        inkBarNodeStyle.bottom = `${wrapNode.offsetHeight - top - height}px`;\n      }\n    }\n  }\n  inkBarNodeStyle.display = activeTab ? 'block' : 'none';\n}\n\nexport default {\n  getDefaultProps() {\n    return {\n      inkBarAnimated: true,\n    };\n  },\n\n  componentDidUpdate() {\n    componentDidUpdate(this);\n  },\n\n  componentDidMount() {\n    if (isDev) {\n      this.timeout = setTimeout(() => {\n        componentDidUpdate(this, true);\n      }, 0);\n    } else {\n      componentDidUpdate(this, true);\n    }\n  },\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout);\n  },\n\n  getInkBarNode() {\n    const { prefixCls, styles, inkBarAnimated } = this.props;\n    const className = `${prefixCls}-ink-bar`;\n    const classes = classnames({\n      [className]: true,\n      [\n        inkBarAnimated ?\n          `${className}-animated` :\n          `${className}-no-animated`\n        ]: true,\n    });\n    return (\n      <div\n        style={styles.inkBar}\n        className={classes}\n        key=\"inkBar\"\n        ref={this.saveRef('inkBar')}\n      />\n    );\n  },\n};\n"]}