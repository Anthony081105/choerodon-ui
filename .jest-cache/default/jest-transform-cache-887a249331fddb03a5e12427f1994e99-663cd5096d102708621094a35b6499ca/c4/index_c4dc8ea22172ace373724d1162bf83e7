8364a747aa322f8bb29892525fd6b901
"use strict";

/* istanbul ignore next */
function cov_1iaow7ltqh() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/divider/index.tsx";
  var hash = "fcb853dcb5f43ac42712ef35398e47e415d999ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/divider/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 29
        }
      },
      "3": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 81
        }
      },
      "4": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 95
        }
      },
      "5": {
        start: {
          line: 14,
          column: 32
        },
        end: {
          line: 14,
          column: 113
        }
      },
      "6": {
        start: {
          line: 16,
          column: 13
        },
        end: {
          line: 16,
          column: 53
        }
      },
      "7": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 63
        }
      },
      "8": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "9": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "10": {
        start: {
          line: 26,
          column: 18
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "11": {
        start: {
          line: 27,
          column: 13
        },
        end: {
          line: 27,
          column: 60
        }
      },
      "12": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "13": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 71
        }
      },
      "14": {
        start: {
          line: 30,
          column: 18
        },
        end: {
          line: 30,
          column: 32
        }
      },
      "15": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 30
        }
      },
      "16": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 26
        }
      },
      "17": {
        start: {
          line: 33,
          column: 18
        },
        end: {
          line: 33,
          column: 138
        }
      },
      "18": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 77
        }
      },
      "19": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 35,
          column: 88
        }
      },
      "20": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 351
        }
      },
      "21": {
        start: {
          line: 37,
          column: 2
        },
        end: {
          line: 41,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "Divider",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 16
          }
        },
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 22
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 13
          },
          end: {
            line: 27,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 36
          },
          end: {
            line: 27,
            column: 48
          }
        }, {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 60
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 20
          },
          end: {
            line: 29,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 29,
            column: 52
          }
        }, {
          start: {
            line: 29,
            column: 55
          },
          end: {
            line: 29,
            column: 71
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 35,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 51
          },
          end: {
            line: 35,
            column: 74
          }
        }, {
          start: {
            line: 35,
            column: 77
          },
          end: {
            line: 35,
            column: 88
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 41,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 25
          }
        }, {
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 41,
            column: 14
          }
        }],
        line: 39
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fcb853dcb5f43ac42712ef35398e47e415d999ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1iaow7ltqh = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1iaow7ltqh();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1iaow7ltqh().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1iaow7ltqh().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1iaow7ltqh().s[2]++;
exports["default"] = Divider;

var _extends2 =
/* istanbul ignore next */
(cov_1iaow7ltqh().s[3]++, _interopRequireDefault(require("@babel/runtime/helpers/extends")));

var _defineProperty2 =
/* istanbul ignore next */
(cov_1iaow7ltqh().s[4]++, _interopRequireDefault(require("@babel/runtime/helpers/defineProperty")));

var _objectWithoutProperties2 =
/* istanbul ignore next */
(cov_1iaow7ltqh().s[5]++, _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties")));

var _react =
/* istanbul ignore next */
(cov_1iaow7ltqh().s[6]++, _interopRequireDefault(require("react")));

var _classnames =
/* istanbul ignore next */
(cov_1iaow7ltqh().s[7]++, _interopRequireDefault(require("classnames")));

var _configure =
/* istanbul ignore next */
(cov_1iaow7ltqh().s[8]++, require("../configure"));

function Divider(_ref) {
  /* istanbul ignore next */
  cov_1iaow7ltqh().f[0]++;

  var _classNames;

  var customizePrefixCls =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[9]++, _ref.prefixCls),
      _ref$type =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[10]++, _ref.type),
      type =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[11]++, _ref$type === void 0 ?
  /* istanbul ignore next */
  (cov_1iaow7ltqh().b[0][0]++, 'horizontal') :
  /* istanbul ignore next */
  (cov_1iaow7ltqh().b[0][1]++, _ref$type)),
      _ref$orientation =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[12]++, _ref.orientation),
      orientation =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[13]++, _ref$orientation === void 0 ?
  /* istanbul ignore next */
  (cov_1iaow7ltqh().b[1][0]++, '') :
  /* istanbul ignore next */
  (cov_1iaow7ltqh().b[1][1]++, _ref$orientation)),
      className =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[14]++, _ref.className),
      children =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[15]++, _ref.children),
      dashed =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[16]++, _ref.dashed),
      restProps =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[17]++, (0, _objectWithoutProperties2["default"])(_ref, ["prefixCls", "type", "orientation", "className", "children", "dashed"]));

  var prefixCls =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[18]++, (0, _configure.getPrefixCls)('divider', customizePrefixCls));
  var orientationPrefix =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[19]++, orientation.length > 0 ?
  /* istanbul ignore next */
  (cov_1iaow7ltqh().b[2][0]++, "-".concat(orientation)) :
  /* istanbul ignore next */
  (cov_1iaow7ltqh().b[2][1]++, orientation));
  var classString =
  /* istanbul ignore next */
  (cov_1iaow7ltqh().s[20]++, (0, _classnames["default"])(className, prefixCls, "".concat(prefixCls, "-").concat(type), (_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-with-text").concat(orientationPrefix), children), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-dashed"), !!dashed), _classNames)));

  /* istanbul ignore next */
  cov_1iaow7ltqh().s[21]++;
  return _react["default"].createElement("div", (0, _extends2["default"])({
    className: classString
  }, restProps),
  /* istanbul ignore next */
  (cov_1iaow7ltqh().b[3][0]++, children) &&
  /* istanbul ignore next */
  (cov_1iaow7ltqh().b[3][1]++, _react["default"].createElement("span", {
    className: "".concat(prefixCls, "-inner-text")
  }, children)));
}