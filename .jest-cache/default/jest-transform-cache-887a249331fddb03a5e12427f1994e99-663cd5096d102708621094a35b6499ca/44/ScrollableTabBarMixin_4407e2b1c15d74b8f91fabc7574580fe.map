{"version":3,"sources":["ScrollableTabBarMixin.jsx"],"names":["getDefaultProps","scrollAnimated","onPrevClick","onNextClick","getInitialState","offset","next","prev","componentDidMount","componentDidUpdate","debouncedResize","setNextPrev","scrollToActiveTab","resizeEvent","window","prevProps","props","tabBarPosition","setOffset","nextPrev","isNextPrevShown","state","setState","activeKey","componentWillUnmount","remove","cancel","navNode","nav","navNodeWH","getScrollWH","containerWH","getOffsetWH","container","navWrapNodeWH","navWrap","minOffset","realOffset","setNext","setPrev","node","prop","getOffsetLT","getBoundingClientRect","checkNextPrev","target","Math","min","navOffset","navStyle","style","transformSupported","value","name","v","prevTransitionEnd","e","propertyName","currentTarget","activeTab","needToSroll","lastNextPrevShown","activeTabWH","wrapOffset","activeTabOffset","navWrapNode","getScrollBarNode","content","prefixCls","showNextPrev","prevButton","nextButton","navClassName","navClasses","saveRef"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport { isTransformSupported, setTransform } from './utils';\nimport React from 'react';\nimport addEventListener from '../../_util/addEventListener';\nimport debounce from 'lodash/debounce';\n\nexport default {\n  getDefaultProps() {\n    return {\n      scrollAnimated: true,\n      onPrevClick() {},\n      onNextClick() {},\n    };\n  },\n\n  getInitialState() {\n    this.offset = 0;\n    return {\n      next: false,\n      prev: false,\n    };\n  },\n\n  componentDidMount() {\n    this.componentDidUpdate();\n    this.debouncedResize = debounce(() => {\n      this.setNextPrev();\n      this.scrollToActiveTab();\n    }, 200);\n    this.resizeEvent = addEventListener(window, 'resize', this.debouncedResize);\n  },\n\n  componentDidUpdate(prevProps) {\n    const props = this.props;\n    if (prevProps && prevProps.tabBarPosition !== props.tabBarPosition) {\n      this.setOffset(0);\n      return;\n    }\n    const nextPrev = this.setNextPrev();\n    // wait next, prev show hide\n    /* eslint react/no-did-update-set-state:0 */\n    if (this.isNextPrevShown(this.state) !== this.isNextPrevShown(nextPrev)) {\n      this.setState({}, this.scrollToActiveTab);\n    } else if (!prevProps || props.activeKey !== prevProps.activeKey) {\n      // can not use props.activeKey\n      this.scrollToActiveTab();\n    }\n  },\n\n  componentWillUnmount() {\n    if (this.resizeEvent) {\n      this.resizeEvent.remove();\n    }\n    if (this.debouncedResize && this.debouncedResize.cancel) {\n      this.debouncedResize.cancel();\n    }\n  },\n\n  setNextPrev() {\n    const navNode = this.nav;\n    const navNodeWH = this.getScrollWH(navNode);\n    const containerWH = this.getOffsetWH(this.container);\n    const navWrapNodeWH = this.getOffsetWH(this.navWrap);\n    let { offset } = this;\n    const minOffset = containerWH - navNodeWH;\n    let { next, prev } = this.state;\n    if (minOffset >= 0) {\n      next = false;\n      this.setOffset(0, false);\n      offset = 0;\n    } else if (minOffset < offset) {\n      next = true;\n    } else {\n      next = false;\n      // Test with container offset which is stable\n      // and set the offset of the nav wrap node\n      const realOffset = navWrapNodeWH - navNodeWH;\n      this.setOffset(realOffset, false);\n      offset = realOffset;\n    }\n\n    if (offset < 0) {\n      prev = true;\n    } else {\n      prev = false;\n    }\n\n    this.setNext(next);\n    this.setPrev(prev);\n    return {\n      next,\n      prev,\n    };\n  },\n\n  getOffsetWH(node) {\n    const tabBarPosition = this.props.tabBarPosition;\n    let prop = 'offsetWidth';\n    if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n      prop = 'offsetHeight';\n    }\n    return node[prop];\n  },\n\n  getScrollWH(node) {\n    const tabBarPosition = this.props.tabBarPosition;\n    let prop = 'scrollWidth';\n    if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n      prop = 'scrollHeight';\n    }\n    return node[prop];\n  },\n\n\n  getOffsetLT(node) {\n    const tabBarPosition = this.props.tabBarPosition;\n    let prop = 'left';\n    if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n      prop = 'top';\n    }\n    return node.getBoundingClientRect()[prop];\n  },\n\n  setOffset(offset, checkNextPrev = true) {\n    const target = Math.min(0, offset);\n    if (this.offset !== target) {\n      this.offset = target;\n      let navOffset = {};\n      const tabBarPosition = this.props.tabBarPosition;\n      const navStyle = this.nav.style;\n      const transformSupported = isTransformSupported(navStyle);\n      if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n        if (transformSupported) {\n          navOffset = {\n            value: `translate3d(0,${target}px,0)`,\n          };\n        } else {\n          navOffset = {\n            name: 'top',\n            value: `${target}px`,\n          };\n        }\n      } else {\n        if (transformSupported) {\n          navOffset = {\n            value: `translate3d(${target}px,0,0)`,\n          };\n        } else {\n          navOffset = {\n            name: 'left',\n            value: `${target}px`,\n          };\n        }\n      }\n      if (transformSupported) {\n        setTransform(navStyle, navOffset.value);\n      } else {\n        navStyle[navOffset.name] = navOffset.value;\n      }\n      if (checkNextPrev) {\n        this.setNextPrev();\n      }\n    }\n  },\n\n  setPrev(v) {\n    if (this.state.prev !== v) {\n      this.setState({\n        prev: v,\n      });\n    }\n  },\n\n  setNext(v) {\n    if (this.state.next !== v) {\n      this.setState({\n        next: v,\n      });\n    }\n  },\n\n  isNextPrevShown(state) {\n    if (state) {\n      return state.next || state.prev;\n    }\n    return this.state.next || this.state.prev;\n  },\n\n  prevTransitionEnd(e) {\n    if (e.propertyName !== 'opacity') {\n      return;\n    }\n    const { container } = this;\n    this.scrollToActiveTab({\n      target: container,\n      currentTarget: container,\n    });\n  },\n\n  scrollToActiveTab(e) {\n    const { activeTab, navWrap } = this;\n    if (e && e.target !== e.currentTarget || !activeTab) {\n      return;\n    }\n\n    // when not scrollable or enter scrollable first time, don't emit scrolling\n    const needToSroll = this.isNextPrevShown() && this.lastNextPrevShown;\n    this.lastNextPrevShown = this.isNextPrevShown();\n    if (!needToSroll) {\n      return;\n    }\n\n    const activeTabWH = this.getScrollWH(activeTab);\n    const navWrapNodeWH = this.getOffsetWH(navWrap);\n    let { offset } = this;\n    const wrapOffset = this.getOffsetLT(navWrap);\n    const activeTabOffset = this.getOffsetLT(activeTab);\n    if (wrapOffset > activeTabOffset) {\n      offset += (wrapOffset - activeTabOffset);\n      this.setOffset(offset);\n    } else if ((wrapOffset + navWrapNodeWH) < (activeTabOffset + activeTabWH)) {\n      offset -= (activeTabOffset + activeTabWH) - (wrapOffset + navWrapNodeWH);\n      this.setOffset(offset);\n    }\n  },\n\n  prev(e) {\n    this.props.onPrevClick(e);\n    const navWrapNode = this.navWrap;\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    const { offset } = this;\n    this.setOffset(offset + navWrapNodeWH);\n  },\n\n  next(e) {\n    this.props.onNextClick(e);\n    const navWrapNode = this.navWrap;\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    const { offset } = this;\n    this.setOffset(offset - navWrapNodeWH);\n  },\n\n  getScrollBarNode(content) {\n    const { next, prev } = this.state;\n    const { prefixCls, scrollAnimated } = this.props;\n    const showNextPrev = prev || next;\n\n    const prevButton = (\n      <span\n        onClick={prev ? this.prev : null}\n        unselectable=\"unselectable\"\n        className={classnames({\n          [`${prefixCls}-tab-prev`]: 1,\n          [`${prefixCls}-tab-btn-disabled`]: !prev,\n          [`${prefixCls}-tab-arrow-show`]: showNextPrev,\n        })}\n        onTransitionEnd={this.prevTransitionEnd}\n      >\n        <span className={`${prefixCls}-tab-prev-icon`} />\n      </span>\n    );\n\n    const nextButton = (\n      <span\n        onClick={next ? this.next : null}\n        unselectable=\"unselectable\"\n        className={classnames({\n          [`${prefixCls}-tab-next`]: 1,\n          [`${prefixCls}-tab-btn-disabled`]: !next,\n          [`${prefixCls}-tab-arrow-show`]: showNextPrev,\n        })}\n      >\n        <span className={`${prefixCls}-tab-next-icon`} />\n      </span>\n    );\n\n    const navClassName = `${prefixCls}-nav`;\n    const navClasses = classnames({\n      [navClassName]: true,\n      [\n        scrollAnimated ?\n          `${navClassName}-animated` :\n          `${navClassName}-no-animated`\n        ]: true,\n    });\n\n    return (\n      <div\n        className={classnames({\n          [`${prefixCls}-nav-container`]: 1,\n          [`${prefixCls}-nav-container-scrolling`]: showNextPrev,\n        })}\n        key=\"container\"\n        ref={this.saveRef('container')}\n      >\n        {prevButton}\n        {nextButton}\n        <div className={`${prefixCls}-nav-wrap`} ref={this.saveRef('navWrap')}>\n          <div className={`${prefixCls}-nav-scroll`}>\n            <div className={navClasses} ref={this.saveRef('nav')}>\n              {content}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n"]}