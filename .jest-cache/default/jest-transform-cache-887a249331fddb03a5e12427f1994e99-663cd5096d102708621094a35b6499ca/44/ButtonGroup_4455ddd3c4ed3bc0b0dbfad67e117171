8fa6c73de0d2621b55815a60daf34185
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _configure = require("../configure");

var ButtonGroup = function ButtonGroup(props) {
  var customizePrefixCls = props.prefixCls,
      size = props.size,
      className = props.className,
      others = (0, _objectWithoutProperties2["default"])(props, ["prefixCls", "size", "className"]);
  var prefixCls = (0, _configure.getPrefixCls)('btn-group', customizePrefixCls); // large => lg
  // small => sm

  var sizeCls = '';

  switch (size) {
    case "large"
    /* large */
    :
      sizeCls = 'lg';
      break;

    case "small"
    /* small */
    :
      sizeCls = 'sm';
      break;

    default:
  }

  var classes = (0, _classnames["default"])(prefixCls, (0, _defineProperty2["default"])({}, "".concat(prefixCls, "-").concat(sizeCls), sizeCls), className);
  return _react["default"].createElement("div", (0, _extends2["default"])({}, others, {
    className: classes
  }));
};

ButtonGroup.displayName = 'ButtonGroup';
var _default = ButtonGroup;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1dHRvbi9CdXR0b25Hcm91cC5qcyJdLCJuYW1lcyI6WyJCdXR0b25Hcm91cCIsImN1c3RvbWl6ZVByZWZpeENscyIsInNpemUiLCJjbGFzc05hbWUiLCJvdGhlcnMiLCJwcm9wcyIsInByZWZpeENscyIsInNpemVDbHMiLCJjbGFzc2VzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLE1BQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFdBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFVBQUEsR0FBQSxPQUFBLENBQUEsY0FBQSxDQUFBOztBQUNBLElBQU1BLFdBQVcsR0FBRyxTQUFkQSxXQUFjLENBQUEsS0FBQSxFQUFTO0FBQUEsTUFDTkMsa0JBRE0sR0FDNkNJLEtBRDdDLENBQUEsU0FBQTtBQUFBLE1BQ2NILElBRGQsR0FDNkNHLEtBRDdDLENBQUEsSUFBQTtBQUFBLE1BQ29CRixTQURwQixHQUM2Q0UsS0FEN0MsQ0FBQSxTQUFBO0FBQUEsTUFDa0NELE1BRGxDLEdBQUEsQ0FBQSxHQUFBLHlCQUFBLENBQUEsU0FBQSxDQUFBLEVBQUEsS0FBQSxFQUFBLENBQUEsV0FBQSxFQUFBLE1BQUEsRUFBQSxXQUFBLENBQUEsQ0FBQTtBQUV6QixNQUFNRSxTQUFTLEdBQUcsQ0FBQSxHQUFBLFVBQUEsQ0FBQSxZQUFBLEVBQUEsV0FBQSxFQUZPLGtCQUVQLENBQWxCLENBRnlCLENBR3pCO0FBQ0E7O0FBQ0EsTUFBSUMsT0FBTyxHQUFYLEVBQUE7O0FBQ0EsVUFBQSxJQUFBO0FBQ0ksU0FBSztBQUFRO0FBQWI7QUFDSUEsTUFBQUEsT0FBTyxHQUFQQSxJQUFBQTtBQUNBOztBQUNKLFNBQUs7QUFBUTtBQUFiO0FBQ0lBLE1BQUFBLE9BQU8sR0FBUEEsSUFBQUE7QUFDQTs7QUFDSjtBQVBKOztBQVNBLE1BQU1DLE9BQU8sR0FBRyxDQUFBLEdBQUEsV0FBQSxDQUFBLFNBQUEsQ0FBQSxFQUFBLFNBQUEsRUFBQSxDQUFBLEdBQUEsZ0JBQUEsQ0FBQSxTQUFBLENBQUEsRUFBQSxFQUFBLEVBQUEsR0FBQSxNQUFBLENBQUEsU0FBQSxFQUFBLEdBQUEsRUFBQSxNQUFBLENBQUEsT0FBQSxDQUFBLEVBQUEsT0FBQSxDQUFBLEVBQWhCLFNBQWdCLENBQWhCO0FBR0EsU0FBTyxNQUFBLENBQUEsU0FBQSxDQUFBLENBQUEsYUFBQSxDQUFBLEtBQUEsRUFBMkIsQ0FBQSxHQUFBLFNBQUEsQ0FBQSxTQUFBLENBQUEsRUFBQSxFQUFBLEVBQUEsTUFBQSxFQUEwQjtBQUFFTCxJQUFBQSxTQUFTLEVBQUVLO0FBQWIsR0FBMUIsQ0FBM0IsQ0FBUDtBQWxCSixDQUFBOztBQW9CQVIsV0FBVyxDQUFYQSxXQUFBQSxHQUFBQSxhQUFBQTtlQUNlQSxXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgZ2V0UHJlZml4Q2xzIH0gZnJvbSAnLi4vY29uZmlndXJlJztcbmNvbnN0IEJ1dHRvbkdyb3VwID0gcHJvcHMgPT4ge1xuICAgIGNvbnN0IHsgcHJlZml4Q2xzOiBjdXN0b21pemVQcmVmaXhDbHMsIHNpemUsIGNsYXNzTmFtZSwgLi4ub3RoZXJzIH0gPSBwcm9wcztcbiAgICBjb25zdCBwcmVmaXhDbHMgPSBnZXRQcmVmaXhDbHMoJ2J0bi1ncm91cCcsIGN1c3RvbWl6ZVByZWZpeENscyk7XG4gICAgLy8gbGFyZ2UgPT4gbGdcbiAgICAvLyBzbWFsbCA9PiBzbVxuICAgIGxldCBzaXplQ2xzID0gJyc7XG4gICAgc3dpdGNoIChzaXplKSB7XG4gICAgICAgIGNhc2UgXCJsYXJnZVwiIC8qIGxhcmdlICovOlxuICAgICAgICAgICAgc2l6ZUNscyA9ICdsZyc7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInNtYWxsXCIgLyogc21hbGwgKi86XG4gICAgICAgICAgICBzaXplQ2xzID0gJ3NtJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgIH1cbiAgICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhwcmVmaXhDbHMsIHtcbiAgICAgICAgW2Ake3ByZWZpeENsc30tJHtzaXplQ2xzfWBdOiBzaXplQ2xzLFxuICAgIH0sIGNsYXNzTmFtZSk7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgT2JqZWN0LmFzc2lnbih7fSwgb3RoZXJzLCB7IGNsYXNzTmFtZTogY2xhc3NlcyB9KSk7XG59O1xuQnV0dG9uR3JvdXAuZGlzcGxheU5hbWUgPSAnQnV0dG9uR3JvdXAnO1xuZXhwb3J0IGRlZmF1bHQgQnV0dG9uR3JvdXA7XG4iXX0=