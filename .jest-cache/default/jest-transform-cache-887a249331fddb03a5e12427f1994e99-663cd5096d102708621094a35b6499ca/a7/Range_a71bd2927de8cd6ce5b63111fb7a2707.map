{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/range/Range.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport omit from 'lodash/omit';\nimport { NumberField, NumberFieldProps } from '../number-field/NumberField';\nimport autobind from '../_util/autobind';\nimport EventManager from '../_util/EventManager';\nimport { FieldType } from '../data-set/enum';\n\nexport interface RangeProps extends NumberFieldProps {\n  /**\n   *  是否垂直方向\n   */\n  vertical?: boolean;\n}\n\n@observer\nexport default class Range extends NumberField<RangeProps> {\n  static displayName = 'Range';\n\n  static propTypes = {\n    /**\n     * 是否垂直方向\n     * @default\n     * false\n     */\n    vertical: PropTypes.bool,\n    ...NumberField.propTypes,\n  };\n\n  static defaultProps = {\n    ...NumberField.defaultProps,\n    suffixCls: 'range',\n    min: 0,\n    step: 1,\n    max: 100,\n    vertical: false,\n  };\n\n  dragEvent: EventManager = new EventManager(typeof window !== 'undefined' && document);\n\n  track: HTMLDivElement;\n\n  type: string = 'range';\n\n  getFieldType(): FieldType {\n    return FieldType.number;\n  }\n\n  getOtherProps() {\n    return omit(super.getOtherProps(), ['vertical']);\n  }\n\n  getValue() {\n    return super.getValue() || 0;\n  }\n\n  getWrapperClassNames() {\n    const {\n      props: { vertical },\n      prefixCls,\n    } = this;\n    return super.getWrapperClassNames({\n      [`${prefixCls}-vertical`]: vertical,\n    });\n  }\n\n  renderWrapper(): ReactNode {\n    return (\n      <label key=\"wrapper\" {...this.getWrapperProps()}>\n        <input {...this.getOtherProps()} value={this.getValue()} />\n        {this.renderTrack()}\n        {this.renderFloatLabel()}\n      </label>\n    );\n  }\n\n  renderTrack() {\n    const percent = this.getPercent();\n    const {\n      props: { vertical },\n      prefixCls,\n    } = this;\n    return (\n      <div\n        className={`${prefixCls}-track`}\n        onMouseDown={this.isReadOnly() || this.isDisabled() ? undefined : this.handleTrackClick}\n      >\n        <div\n          className={`${prefixCls}-draghandle`}\n          style={vertical ? { bottom: percent } : { left: percent }}\n        />\n        <div\n          className={`${prefixCls}-selection`}\n          style={vertical ? { height: percent } : { width: percent }}\n        />\n      </div>\n    );\n  }\n\n  @autobind\n  handleTrackClick(e): void {\n    this.track = e.currentTarget;\n    this.handleDrag(e);\n    this.handleDragStart();\n  }\n\n  @autobind\n  handleDragStart(): void {\n    this.dragEvent\n      .addEventListener('mousemove', this.handleDrag)\n      .addEventListener('mouseup', this.handleDragEnd);\n  }\n\n  @autobind\n  handleDragEnd(): void {\n    this.dragEvent\n      .removeEventListener('mousemove', this.handleDrag)\n      .removeEventListener('mouseup', this.handleDragEnd);\n  }\n\n  @autobind\n  handleDrag(e) {\n    const { track } = this;\n    const { vertical } = this.props;\n    const max = this.getProp('max');\n    const min = this.getProp('min');\n    const step = this.getProp('step');\n    const { bottom, left } = track.getBoundingClientRect();\n    const length = vertical ? bottom - e.clientY : e.clientX - left;\n    const totalLength = vertical ? track.clientHeight : track.clientWidth;\n    const oneStepLength = (1 / ((max - min) / step)) * totalLength;\n    let value = min;\n    if (length <= 0) {\n      value = min;\n    } else if (length >= totalLength) {\n      value = max;\n    } else {\n      value = Math.round(length / oneStepLength) * step + min;\n    }\n    this.setValue(value);\n  }\n\n  getPercent() {\n    const value = this.getValue();\n    const max = this.getProp('max');\n    const min = this.getProp('min');\n    if (value <= min) {\n      return 0;\n    }\n    if (value >= max) {\n      return '100%';\n    }\n    return `${((value - min) / (max - min)) * 100}%`;\n  }\n}\n"]}