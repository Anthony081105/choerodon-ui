663b1a03fd50eeaea6ebbc0d51b4c4ad
"use strict";

/* istanbul ignore next */
function cov_2dsmawcg5e() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/rules/valueMissing.tsx";
  var hash = "747dea7831c6e1efdbe074c9a280cefced3e2bd5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/rules/valueMissing.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 34
        }
      },
      "3": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 27
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 69
        }
      },
      "5": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 78
        }
      },
      "6": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 52
        }
      },
      "7": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 97
        }
      },
      "8": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 21,
          column: 96
        }
      },
      "9": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "10": {
        start: {
          line: 26,
          column: 14
        },
        end: {
          line: 26,
          column: 25
        }
      },
      "11": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 31
        }
      },
      "12": {
        start: {
          line: 28,
          column: 14
        },
        end: {
          line: 28,
          column: 25
        }
      },
      "13": {
        start: {
          line: 29,
          column: 34
        },
        end: {
          line: 29,
          column: 65
        }
      },
      "14": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "15": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "16": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "17": {
        start: {
          line: 37,
          column: 14
        },
        end: {
          line: 37,
          column: 64
        }
      },
      "18": {
        start: {
          line: 38,
          column: 19
        },
        end: {
          line: 38,
          column: 65
        }
      },
      "19": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 67
        }
      },
      "20": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 40,
          column: 127
        }
      },
      "21": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 46,
          column: 7
        }
      },
      "22": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 49,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "isEmptyArray",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 21
          }
        },
        loc: {
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "valueMissing",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 21
          }
        },
        loc: {
          start: {
            line: 24,
            column: 36
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 75
          },
          end: {
            line: 31,
            column: 76
          }
        },
        loc: {
          start: {
            line: 31,
            column: 91
          },
          end: {
            line: 33,
            column: 3
          }
        },
        line: 31
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 40
          }
        }, {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 73
          }
        }, {
          start: {
            line: 21,
            column: 77
          },
          end: {
            line: 21,
            column: 95
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        }, {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 31,
            column: 14
          }
        }, {
          start: {
            line: 31,
            column: 19
          },
          end: {
            line: 31,
            column: 38
          }
        }, {
          start: {
            line: 31,
            column: 42
          },
          end: {
            line: 31,
            column: 50
          }
        }, {
          start: {
            line: 31,
            column: 54
          },
          end: {
            line: 31,
            column: 59
          }
        }, {
          start: {
            line: 31,
            column: 63
          },
          end: {
            line: 33,
            column: 4
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 14
          },
          end: {
            line: 37,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 37,
            column: 37
          }
        }, {
          start: {
            line: 37,
            column: 40
          },
          end: {
            line: 37,
            column: 64
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 19
          },
          end: {
            line: 38,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 27
          },
          end: {
            line: 38,
            column: 41
          }
        }, {
          start: {
            line: 38,
            column: 44
          },
          end: {
            line: 38,
            column: 65
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 28
          },
          end: {
            line: 40,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 63
          },
          end: {
            line: 40,
            column: 103
          }
        }, {
          start: {
            line: 40,
            column: 106
          },
          end: {
            line: 40,
            column: 127
          }
        }],
        line: 40
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "747dea7831c6e1efdbe074c9a280cefced3e2bd5"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2dsmawcg5e = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2dsmawcg5e();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2dsmawcg5e().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_2dsmawcg5e().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2dsmawcg5e().s[2]++;
exports["default"] = valueMissing;

var _mobx =
/* istanbul ignore next */
(cov_2dsmawcg5e().s[3]++, require("mobx"));

var _isEmpty =
/* istanbul ignore next */
(cov_2dsmawcg5e().s[4]++, _interopRequireDefault(require("../../_util/isEmpty")));

var _ValidationResult =
/* istanbul ignore next */
(cov_2dsmawcg5e().s[5]++, _interopRequireDefault(require("../ValidationResult")));

var _localeContext =
/* istanbul ignore next */
(cov_2dsmawcg5e().s[6]++, require("../../locale-context"));

var _formatReactTemplate =
/* istanbul ignore next */
(cov_2dsmawcg5e().s[7]++, _interopRequireDefault(require("../../formatter/formatReactTemplate")));

function isEmptyArray(value) {
  /* istanbul ignore next */
  cov_2dsmawcg5e().f[0]++;
  cov_2dsmawcg5e().s[8]++;
  return (
    /* istanbul ignore next */
    (cov_2dsmawcg5e().b[0][0]++, (0, _isEmpty["default"])(value)) ||
    /* istanbul ignore next */
    (cov_2dsmawcg5e().b[0][1]++, (0, _mobx.isArrayLike)(value)) &&
    /* istanbul ignore next */
    (cov_2dsmawcg5e().b[0][2]++, value.length === 0)
  );
}

function valueMissing(value, props) {
  /* istanbul ignore next */
  cov_2dsmawcg5e().f[1]++;
  var required =
  /* istanbul ignore next */
  (cov_2dsmawcg5e().s[9]++, props.required),
      label =
  /* istanbul ignore next */
  (cov_2dsmawcg5e().s[10]++, props.label),
      multiple =
  /* istanbul ignore next */
  (cov_2dsmawcg5e().s[11]++, props.multiple),
      range =
  /* istanbul ignore next */
  (cov_2dsmawcg5e().s[12]++, props.range),
      defaultValidationMessages =
  /* istanbul ignore next */
  (cov_2dsmawcg5e().s[13]++, props.defaultValidationMessages);

  /* istanbul ignore next */
  cov_2dsmawcg5e().s[14]++;

  if (
  /* istanbul ignore next */
  (cov_2dsmawcg5e().b[2][0]++, required) && (
  /* istanbul ignore next */
  (cov_2dsmawcg5e().b[2][1]++, isEmptyArray(value)) ||
  /* istanbul ignore next */
  (cov_2dsmawcg5e().b[2][2]++, multiple) &&
  /* istanbul ignore next */
  (cov_2dsmawcg5e().b[2][3]++, range) &&
  /* istanbul ignore next */
  (cov_2dsmawcg5e().b[2][4]++, value.every(function (item) {
    /* istanbul ignore next */
    cov_2dsmawcg5e().f[2]++;
    cov_2dsmawcg5e().s[15]++;
    return isEmptyArray(item);
  })))) {
    /* istanbul ignore next */
    cov_2dsmawcg5e().b[1][0]++;
    var injectionOptions =
    /* istanbul ignore next */
    (cov_2dsmawcg5e().s[16]++, {
      label: label
    });
    var key =
    /* istanbul ignore next */
    (cov_2dsmawcg5e().s[17]++, label ?
    /* istanbul ignore next */
    (cov_2dsmawcg5e().b[3][0]++, 'value_missing') :
    /* istanbul ignore next */
    (cov_2dsmawcg5e().b[3][1]++, 'value_missing_no_label'));
    var ruleName =
    /* istanbul ignore next */
    (cov_2dsmawcg5e().s[18]++, label ?
    /* istanbul ignore next */
    (cov_2dsmawcg5e().b[4][0]++, 'valueMissing') :
    /* istanbul ignore next */
    (cov_2dsmawcg5e().b[4][1]++, 'valueMissingNoLabel'));

    var _defaultValidationMes =
    /* istanbul ignore next */
    (cov_2dsmawcg5e().s[19]++, defaultValidationMessages[ruleName]),
        validationMessage =
    /* istanbul ignore next */
    (cov_2dsmawcg5e().s[20]++, _defaultValidationMes === void 0 ?
    /* istanbul ignore next */
    (cov_2dsmawcg5e().b[5][0]++, (0, _localeContext.$l)('Validator', key)) :
    /* istanbul ignore next */
    (cov_2dsmawcg5e().b[5][1]++, _defaultValidationMes));

    /* istanbul ignore next */
    cov_2dsmawcg5e().s[21]++;
    return new _ValidationResult["default"]({
      validationMessage: (0, _formatReactTemplate["default"])(validationMessage, injectionOptions),
      injectionOptions: injectionOptions,
      value: value,
      ruleName: ruleName
    });
  } else
  /* istanbul ignore next */
  {
    cov_2dsmawcg5e().b[1][1]++;
  }

  cov_2dsmawcg5e().s[22]++;
  return true;
}