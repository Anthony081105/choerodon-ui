{"version":3,"sources":["rc-components/tree/MotionTreeNode.js"],"names":["MotionTreeNode","className","style","motion","motionNodes","motionType","onMotionEnd","active","treeNodeRequiredProps","props","visible","setVisible","React","prefixCls","TreeContext","CSSMotion","ref","motionAppear","onAppearEnd","onLeaveEnd","motionClassName","motionStyle","key","restProps","isStart","isEnd","treeNode","treeNodeProps","TreeNode","data","domRef","RefMotionTreeNode"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n// @ts-ignore\nimport CSSMotion from 'rc-animate/lib/CSSMotion';\n// @ts-ignore\nimport TreeNode from './TreeNode';\nimport { getTreeNodeProps } from './utils/treeUtil';\nimport { TreeContext } from './contextTypes';\n// @ts-ignore\nconst MotionTreeNode = ({ className, style, motion, motionNodes, motionType, onMotionEnd, active, treeNodeRequiredProps, ...props }, ref) => {\n    const [visible, setVisible] = React.useState(true);\n    // @ts-ignore\n    const { prefixCls } = React.useContext(TreeContext);\n    React.useEffect(() => {\n        if (motionNodes && motionType === 'hide' && visible) {\n            setVisible(false);\n        }\n    }, [motionNodes]);\n    if (motionNodes) {\n        return (React.createElement(CSSMotion, Object.assign({ ref: ref, visible: visible }, motion, { motionAppear: motionType === 'show', onAppearEnd: onMotionEnd, onLeaveEnd: onMotionEnd }), ({ className: motionClassName, style: motionStyle }, motionRef) => (React.createElement(\"div\", { ref: motionRef, className: classNames(`${prefixCls}-treenode-motion`, motionClassName), style: motionStyle }, motionNodes.map((treeNode) => {\n            const { data: { key, ...restProps }, isStart, isEnd, } = treeNode;\n            delete restProps.children;\n            const treeNodeProps = getTreeNodeProps(key, treeNodeRequiredProps);\n            return (React.createElement(TreeNode, Object.assign({}, restProps, treeNodeProps, { active: active, data: treeNode.data, key: key, isStart: isStart, isEnd: isEnd })));\n        })))));\n    }\n    return (React.createElement(TreeNode, Object.assign({ domRef: ref, className: className, style: style }, props, { active: active })));\n};\nMotionTreeNode.displayName = 'MotionTreeNode';\nconst RefMotionTreeNode = React.forwardRef(MotionTreeNode);\nexport default RefMotionTreeNode;\n"]}