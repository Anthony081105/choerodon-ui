45894fc21a3ab131ddf0c222182796ef
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getKeyFromChildrenIndex = getKeyFromChildrenIndex;
exports.getMenuIdFromSubMenuEventKey = getMenuIdFromSubMenuEventKey;
exports.loopMenuItem = loopMenuItem;
exports.loopMenuItemRecursively = loopMenuItemRecursively;
exports.setStyle = exports.getWidth = exports.menuAllProps = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _react = require("react");

function getKeyFromChildrenIndex(child, menuEventKey, index) {
  var prefix = menuEventKey || '';
  return child.key || "".concat(prefix, "item_").concat(index);
}

function getMenuIdFromSubMenuEventKey(eventKey) {
  return "".concat(eventKey, "-menu-");
}

function loopMenuItem(children, cb) {
  var index = -1;

  _react.Children.forEach(children, function (c) {
    index++;

    if (c && c.type && c.type.isMenuItemGroup) {
      _react.Children.forEach(c.props.children, function (c2) {
        index++;
        cb(c2, index);
      });
    } else {
      cb(c, index);
    }
  });
}

function loopMenuItemRecursively(children, keys, ret) {
  if (!children || ret.find) {
    return;
  }

  _react.Children.forEach(children, function (c) {
    if (c) {
      var construct = c.type;

      if (!construct || !(construct.isSubMenu || construct.isMenuItem || construct.isMenuItemGroup)) {
        return;
      }

      if (keys.indexOf(c.key) !== -1) {
        ret.find = true;
      } else if (c.props.children) {
        loopMenuItemRecursively(c.props.children, keys, ret);
      }
    }
  });
}

var menuAllProps = ['defaultSelectedKeys', 'selectedKeys', 'defaultOpenKeys', 'openKeys', 'mode', 'getPopupContainer', 'onSelect', 'onDeselect', 'onDestroy', 'openTransitionName', 'openAnimation', 'subMenuOpenDelay', 'subMenuCloseDelay', 'forceSubMenuRender', 'triggerSubMenuAction', 'level', 'selectable', 'multiple', 'onOpenChange', 'visible', 'focusable', 'defaultActiveFirst', 'prefixCls', 'inlineIndent', 'parentMenu', 'title', 'rootPrefixCls', 'eventKey', 'active', 'onItemHover', 'onTitleMouseEnter', 'onTitleMouseLeave', 'onTitleClick', 'popupAlign', 'popupOffset', 'isOpen', 'renderMenuItem', 'manualRef', 'subMenuKey', 'disabled', 'index', 'isSelected', 'store', 'activeKey', 'builtinPlacements', 'overflowedIndicator', // the following keys found need to be removed from test regression
'attribute', 'value', 'popupClassName', 'inlineCollapsed', 'menu', 'theme', 'itemIcon', 'expandIcon'];
exports.menuAllProps = menuAllProps;

var getWidth = function getWidth(elem) {
  return elem && typeof elem.getBoundingClientRect === 'function' && elem.getBoundingClientRect().width || 0;
};

exports.getWidth = getWidth;

var setStyle = function setStyle(elem, styleProperty, value) {
  if (elem && (0, _typeof2["default"])(elem.style) === 'object') {
    elem.style[styleProperty] = value;
  }
};

exports.setStyle = setStyle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUvdXRpbC5qc3giXSwibmFtZXMiOlsicHJlZml4IiwibWVudUV2ZW50S2V5IiwiY2hpbGQiLCJpbmRleCIsIkNoaWxkcmVuIiwiYyIsImNiIiwicmV0IiwiY29uc3RydWN0Iiwia2V5cyIsImxvb3BNZW51SXRlbVJlY3Vyc2l2ZWx5IiwibWVudUFsbFByb3BzIiwiZ2V0V2lkdGgiLCJlbGVtIiwic2V0U3R5bGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUEsTUFBQSxHQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUE7O0FBR08sU0FBQSx1QkFBQSxDQUFBLEtBQUEsRUFBQSxZQUFBLEVBQUEsS0FBQSxFQUE2RDtBQUNsRSxNQUFNQSxNQUFNLEdBQUdDLFlBQVksSUFBM0IsRUFBQTtBQUNBLFNBQU9DLEtBQUssQ0FBTEEsR0FBQUEsSUFBQUEsR0FBQUEsTUFBQUEsQ0FBQUEsTUFBQUEsRUFBQUEsT0FBQUEsRUFBQUEsTUFBQUEsQ0FBUCxLQUFPQSxDQUFQO0FBQ0Q7O0FBRU0sU0FBQSw0QkFBQSxDQUFBLFFBQUEsRUFBZ0Q7QUFDckQsU0FBQSxHQUFBLE1BQUEsQ0FBQSxRQUFBLEVBQUEsUUFBQSxDQUFBO0FBQ0Q7O0FBRU0sU0FBQSxZQUFBLENBQUEsUUFBQSxFQUFBLEVBQUEsRUFBb0M7QUFDekMsTUFBSUMsS0FBSyxHQUFHLENBQVosQ0FBQTs7QUFDQUMsRUFBQUEsTUFBQUEsQ0FBQUEsUUFBQUEsQ0FBQUEsT0FBQUEsQ0FBQUEsUUFBQUEsRUFBMkIsVUFBQSxDQUFBLEVBQUs7QUFDOUJELElBQUFBLEtBQUs7O0FBQ0wsUUFBSUUsQ0FBQyxJQUFJQSxDQUFDLENBQU5BLElBQUFBLElBQWVBLENBQUMsQ0FBREEsSUFBQUEsQ0FBbkIsZUFBQSxFQUEyQztBQUN6Q0QsTUFBQUEsTUFBQUEsQ0FBQUEsUUFBQUEsQ0FBQUEsT0FBQUEsQ0FBaUJDLENBQUMsQ0FBREEsS0FBQUEsQ0FBakJELFFBQUFBLEVBQW1DLFVBQUEsRUFBQSxFQUFN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b250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDaGlsZHJlbiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB3YXJuaW5nIGZyb20gJy4uLy4uL191dGlsL3dhcm5pbmcnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0S2V5RnJvbUNoaWxkcmVuSW5kZXgoY2hpbGQsIG1lbnVFdmVudEtleSwgaW5kZXgpIHtcbiAgY29uc3QgcHJlZml4ID0gbWVudUV2ZW50S2V5IHx8ICcnO1xuICByZXR1cm4gY2hpbGQua2V5IHx8IGAke3ByZWZpeH1pdGVtXyR7aW5kZXh9YDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE1lbnVJZEZyb21TdWJNZW51RXZlbnRLZXkoZXZlbnRLZXkpIHtcbiAgcmV0dXJuIGAke2V2ZW50S2V5fS1tZW51LWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb29wTWVudUl0ZW0oY2hpbGRyZW4sIGNiKSB7XG4gIGxldCBpbmRleCA9IC0xO1xuICBDaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCBjID0+IHtcbiAgICBpbmRleCsrO1xuICAgIGlmIChjICYmIGMudHlwZSAmJiBjLnR5cGUuaXNNZW51SXRlbUdyb3VwKSB7XG4gICAgICBDaGlsZHJlbi5mb3JFYWNoKGMucHJvcHMuY2hpbGRyZW4sIGMyID0+IHtcbiAgICAgICAgaW5kZXgrKztcbiAgICAgICAgY2IoYzIsIGluZGV4KTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjYihjLCBpbmRleCk7XG4gICAgfVxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvb3BNZW51SXRlbVJlY3Vyc2l2ZWx5KGNoaWxkcmVuLCBrZXlzLCByZXQpIHtcbiAgaWYgKCFjaGlsZHJlbiB8fCByZXQuZmluZCkge1xuICAgIHJldHVybjtcbiAgfVxuICBDaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCBjID0+IHtcbiAgICBpZiAoYykge1xuICAgICAgY29uc3QgY29uc3RydWN0ID0gYy50eXBlO1xuICAgICAgaWYgKFxuICAgICAgICAhY29uc3RydWN0IHx8XG4gICAgICAgICEoY29uc3RydWN0LmlzU3ViTWVudSB8fCBjb25zdHJ1Y3QuaXNNZW51SXRlbSB8fCBjb25zdHJ1Y3QuaXNNZW51SXRlbUdyb3VwKVxuICAgICAgKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChrZXlzLmluZGV4T2YoYy5rZXkpICE9PSAtMSkge1xuICAgICAgICByZXQuZmluZCA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKGMucHJvcHMuY2hpbGRyZW4pIHtcbiAgICAgICAgbG9vcE1lbnVJdGVtUmVjdXJzaXZlbHkoYy5wcm9wcy5jaGlsZHJlbiwga2V5cywgcmV0KTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgY29uc3QgbWVudUFsbFByb3BzID0gW1xuICAnZGVmYXVsdFNlbGVjdGVkS2V5cycsXG4gICdzZWxlY3RlZEtleXMnLFxuICAnZGVmYXVsdE9wZW5LZXlzJyxcbiAgJ29wZW5LZXlzJyxcbiAgJ21vZGUnLFxuICAnZ2V0UG9wdXBDb250YWluZXInLFxuICAnb25TZWxlY3QnLFxuICAnb25EZXNlbGVjdCcsXG4gICdvbkRlc3Ryb3knLFxuICAnb3BlblRyYW5zaXRpb25OYW1lJyxcbiAgJ29wZW5BbmltYXRpb24nLFxuICAnc3ViTWVudU9wZW5EZWxheScsXG4gICdzdWJNZW51Q2xvc2VEZWxheScsXG4gICdmb3JjZVN1Yk1lbnVSZW5kZXInLFxuICAndHJpZ2dlclN1Yk1lbnVBY3Rpb24nLFxuICAnbGV2ZWwnLFxuICAnc2VsZWN0YWJsZScsXG4gICdtdWx0aXBsZScsXG4gICdvbk9wZW5DaGFuZ2UnLFxuICAndmlzaWJsZScsXG4gICdmb2N1c2FibGUnLFxuICAnZGVmYXVsdEFjdGl2ZUZpcnN0JyxcbiAgJ3ByZWZpeENscycsXG4gICdpbmxpbmVJbmRlbnQnLFxuICAncGFyZW50TWVudScsXG4gICd0aXRsZScsXG4gICdyb290UHJlZml4Q2xzJyxcbiAgJ2V2ZW50S2V5JyxcbiAgJ2FjdGl2ZScsXG4gICdvbkl0ZW1Ib3ZlcicsXG4gICdvblRpdGxlTW91c2VFbnRlcicsXG4gICdvblRpdGxlTW91c2VMZWF2ZScsXG4gICdvblRpdGxlQ2xpY2snLFxuICAncG9wdXBBbGlnbicsXG4gICdwb3B1cE9mZnNldCcsXG4gICdpc09wZW4nLFxuICAncmVuZGVyTWVudUl0ZW0nLFxuICAnbWFudWFsUmVmJyxcbiAgJ3N1Yk1lbnVLZXknLFxuICAnZGlzYWJsZWQnLFxuICAnaW5kZXgnLFxuICAnaXNTZWxlY3RlZCcsXG4gICdzdG9yZScsXG4gICdhY3RpdmVLZXknLFxuICAnYnVpbHRpblBsYWNlbWVudHMnLFxuICAnb3ZlcmZsb3dlZEluZGljYXRvcicsXG5cbiAgLy8gdGhlIGZvbGxvd2luZyBrZXlzIGZvdW5kIG5lZWQgdG8gYmUgcmVtb3ZlZCBmcm9tIHRlc3QgcmVncmVzc2lvblxuICAnYXR0cmlidXRlJyxcbiAgJ3ZhbHVlJyxcbiAgJ3BvcHVwQ2xhc3NOYW1lJyxcbiAgJ2lubGluZUNvbGxhcHNlZCcsXG4gICdtZW51JyxcbiAgJ3RoZW1lJyxcbiAgJ2l0ZW1JY29uJyxcbiAgJ2V4cGFuZEljb24nLFxuXTtcblxuZXhwb3J0IGNvbnN0IGdldFdpZHRoID0gZWxlbSA9PlxuICAoZWxlbSAmJlxuICAgIHR5cGVvZiBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGgpIHx8XG4gIDA7XG5cbmV4cG9ydCBjb25zdCBzZXRTdHlsZSA9IChlbGVtLCBzdHlsZVByb3BlcnR5LCB2YWx1ZSkgPT4ge1xuICBpZiAoZWxlbSAmJiB0eXBlb2YgZWxlbS5zdHlsZSA9PT0gJ29iamVjdCcpIHtcbiAgICBlbGVtLnN0eWxlW3N0eWxlUHJvcGVydHldID0gdmFsdWU7XG4gIH1cbn07XG4iXX0=