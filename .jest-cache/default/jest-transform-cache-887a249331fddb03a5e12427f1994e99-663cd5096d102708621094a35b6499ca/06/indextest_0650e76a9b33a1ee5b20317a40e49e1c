c0543c0a1240c51c33b01a25603db6f6
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _ = _interopRequireDefault(require(".."));

var _IconItem = _interopRequireDefault(require("../IconItem"));

var _IconPicker = _interopRequireDefault(require("./IconPicker"));

var _mountTest = _interopRequireDefault(require("../../../tests/shared/mountTest"));

var _focusTest = _interopRequireDefault(require("../../../tests/shared/focusTest"));

var _triggerPopTest = _interopRequireDefault(require("../../../tests/shared/triggerPopTest"));

var _utils = require("./utils");

(0, _mountTest["default"])(_["default"]);
(0, _mountTest["default"])(_IconItem["default"]);
(0, _mountTest["default"])(_IconPicker["default"]);
(0, _focusTest["default"])(_["default"]);
(0, _triggerPopTest["default"])(_["default"]);
describe('Icon-Picker-pro', function () {
  beforeEach(function () {
    jest.useFakeTimers();
  });
  afterEach(function () {
    jest.useRealTimers();
  });
  it('renders IconPicker correctly', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], null));
    expect(wrapper).toMatchSnapshot();
  });
  it('should show {value} when the property value is existed', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], {
      value: "add"
    }));
    expect(wrapper.props().value).toEqual('add');
    expect(wrapper.props().pageSize).toEqual(100);
  });
  it('the selected click render correctly', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], null));
    wrapper.find('input').simulate('click');
    jest.runAllTimers();
    wrapper.find('.c7n-pro-icon-picker-item-selected > div').simulate('click');
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper).toMatchSnapshot();
  });
  it('the keydown event should render correctly', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], null));
    wrapper.find('input').simulate('click');
    jest.runAllTimers();
    wrapper.update();
    (0, _utils.simulateCode)(wrapper, 39);
    (0, _utils.simulateCode)(wrapper, 37);
    (0, _utils.simulateCode)(wrapper, 40);
    (0, _utils.simulateCode)(wrapper, 38);
    (0, _utils.simulateCode)(wrapper, 35);
    (0, _utils.simulateCode)(wrapper, 36);
    (0, _utils.simulateCode)(wrapper, 33);
    (0, _utils.simulateCode)(wrapper, 34);
    (0, _utils.simulateCode)(wrapper, 13);
    (0, _utils.simulateCode)(wrapper, 10);
    wrapper.update();
    expect(wrapper).toMatchSnapshot();
  });
  it('the keydown event should render keyCode {space} correctly', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], null));
    wrapper.find('input').simulate('keydown', {
      keyCode: 32
    });
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper).toMatchSnapshot();
  });
  it('the keydown event should render keyCode { esc, tab } correctly', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], null));
    wrapper.find('input').simulate('click');
    jest.runAllTimers();
    wrapper.update();
    (0, _utils.simulateCode)(wrapper, 9);
    wrapper.update();
    wrapper.find('input').simulate('click');
    jest.runAllTimers();
    (0, _utils.simulateCode)(wrapper, 27);
    wrapper.update();
    expect(wrapper).toMatchSnapshot();
  });
  it('input should nothing when click firstly  ', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], null));
    wrapper.find('.c7n-pro-icon-picker-wrapper').simulate('click');
    jest.runAllTimers();
    expect(wrapper.find('input').at(0).prop('value')).toBe('');
  });
  it('input should render readOnly correctly', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], null));
    expect(wrapper.prop('readOnly')).toBe(false);
    wrapper.setProps({
      readOnly: true
    });
    wrapper.update();
    expect(wrapper.prop('readOnly')).toBe(true);
    expect(wrapper.instance().renderIconCategories()).toMatchSnapshot();
  });
  it('should renders dataset correctly', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_IconPicker["default"], null));
    expect(wrapper).toMatchSnapshot();
    expect(wrapper.find('IconPicker').props().name).toEqual('icon');
    expect(wrapper.find('input').at(0).prop('value')).toBe('cancel');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,