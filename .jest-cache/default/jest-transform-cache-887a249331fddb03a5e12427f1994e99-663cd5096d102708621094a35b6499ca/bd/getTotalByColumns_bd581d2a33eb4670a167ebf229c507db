c1f1eeddf078df0172652591dfb53977
"use strict";

/* istanbul ignore next */
function cov_st1wju1xc() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/getTotalByColumns.ts";
  var hash = "3c8ec967cf2b0d8ec2e8d6c1ccc29e125717acc7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/getTotalByColumns.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 30
        },
        end: {
          line: 5,
          column: 86
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 28
        }
      },
      "4": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 53
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 76
        }
      },
      "6": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "7": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 20
        }
      },
      "8": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 34,
          column: 7
        }
      },
      "10": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 33,
          column: 7
        }
      },
      "11": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "12": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 26,
          column: 45
        }
      },
      "13": {
        start: {
          line: 27,
          column: 34
        },
        end: {
          line: 27,
          column: 53
        }
      },
      "14": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 76
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 39
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 43
        }
      },
      "17": {
        start: {
          line: 31,
          column: 13
        },
        end: {
          line: 33,
          column: 7
        }
      },
      "18": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "19": {
        start: {
          line: 37,
          column: 2
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 19
        }
      },
      "21": {
        start: {
          line: 39,
          column: 9
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "22": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 38
        }
      },
      "23": {
        start: {
          line: 41,
          column: 19
        },
        end: {
          line: 41,
          column: 42
        }
      },
      "24": {
        start: {
          line: 42,
          column: 31
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "25": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 74
        }
      },
      "26": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 34
        }
      },
      "27": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "28": {
        start: {
          line: 48,
          column: 2
        },
        end: {
          line: 51,
          column: 4
        }
      },
      "29": {
        start: {
          line: 54,
          column: 15
        },
        end: {
          line: 54,
          column: 32
        }
      },
      "30": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 55,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "getTotalByColumns",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 26
          }
        },
        loc: {
          start: {
            line: 16,
            column: 36
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "count",
        decl: {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 28
          }
        },
        loc: {
          start: {
            line: 20,
            column: 36
          },
          end: {
            line: 35,
            column: 3
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 30
          },
          end: {
            line: 21,
            column: 31
          }
        },
        loc: {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 6
          },
          end: {
            line: 33,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 6
          },
          end: {
            line: 33,
            column: 7
          }
        }, {
          start: {
            line: 23,
            column: 6
          },
          end: {
            line: 33,
            column: 7
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 53
          },
          end: {
            line: 28,
            column: 54
          }
        }, {
          start: {
            line: 28,
            column: 57
          },
          end: {
            line: 28,
            column: 76
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 29,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 29,
            column: 33
          }
        }, {
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 29,
            column: 38
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 30,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 30,
            column: 34
          }
        }, {
          start: {
            line: 30,
            column: 37
          },
          end: {
            line: 30,
            column: 42
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 33,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 33,
            column: 7
          }
        }, {
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 33,
            column: 7
          }
        }],
        line: 31
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        }, {
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 46,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 46,
            column: 3
          }
        }, {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 46,
            column: 3
          }
        }],
        line: 39
      },
      "7": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 50
          },
          end: {
            line: 43,
            column: 51
          }
        }, {
          start: {
            line: 43,
            column: 54
          },
          end: {
            line: 43,
            column: 74
          }
        }],
        line: 43
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 28
          }
        }, {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 33
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 45,
            column: 17
          },
          end: {
            line: 45,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 28
          },
          end: {
            line: 45,
            column: 29
          }
        }, {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 37
          }
        }],
        line: 45
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3c8ec967cf2b0d8ec2e8d6c1ccc29e125717acc7"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_st1wju1xc = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_st1wju1xc();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_st1wju1xc().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

var _interopRequireWildcard =
/* istanbul ignore next */
(cov_st1wju1xc().s[1]++, require("@babel/runtime/helpers/interopRequireWildcard"));

/* istanbul ignore next */
cov_st1wju1xc().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_st1wju1xc().s[3]++;
exports["default"] = void 0;
var React =
/* istanbul ignore next */
(cov_st1wju1xc().s[4]++, _interopRequireWildcard(require("react")));

var _isPlainObject =
/* istanbul ignore next */
(cov_st1wju1xc().s[5]++, _interopRequireDefault(require("lodash/isPlainObject")));

function getTotalByColumns(columns) {
  /* istanbul ignore next */
  cov_st1wju1xc().f[0]++;
  var totalFlexGrow =
  /* istanbul ignore next */
  (cov_st1wju1xc().s[6]++, 0);
  var totalWidth =
  /* istanbul ignore next */
  (cov_st1wju1xc().s[7]++, 0);

  /* istanbul ignore next */
  cov_st1wju1xc().s[8]++;

  var count = function count(items) {
    /* istanbul ignore next */
    cov_st1wju1xc().f[1]++;
    cov_st1wju1xc().s[9]++;
    Array.from(items).forEach(function (column) {
      /* istanbul ignore next */
      cov_st1wju1xc().f[2]++;
      cov_st1wju1xc().s[10]++;

      // @ts-ignore
      if (React.isValidElement(column)) {
        /* istanbul ignore next */
        cov_st1wju1xc().b[0][0]++;

        // @ts-ignore
        var _column$props =
        /* istanbul ignore next */
        (cov_st1wju1xc().s[11]++, column.props),
            flexGrow =
        /* istanbul ignore next */
        (cov_st1wju1xc().s[12]++, _column$props.flexGrow),
            _column$props$width =
        /* istanbul ignore next */
        (cov_st1wju1xc().s[13]++, _column$props.width),
            width =
        /* istanbul ignore next */
        (cov_st1wju1xc().s[14]++, _column$props$width === void 0 ?
        /* istanbul ignore next */
        (cov_st1wju1xc().b[1][0]++, 0) :
        /* istanbul ignore next */
        (cov_st1wju1xc().b[1][1]++, _column$props$width));

        /* istanbul ignore next */
        cov_st1wju1xc().s[15]++;
        totalFlexGrow +=
        /* istanbul ignore next */
        (cov_st1wju1xc().b[2][0]++, flexGrow) ||
        /* istanbul ignore next */
        (cov_st1wju1xc().b[2][1]++, 0);

        /* istanbul ignore next */
        cov_st1wju1xc().s[16]++;
        totalWidth += flexGrow ?
        /* istanbul ignore next */
        (cov_st1wju1xc().b[3][0]++, 0) :
        /* istanbul ignore next */
        (cov_st1wju1xc().b[3][1]++, width);
      } else {
        /* istanbul ignore next */
        cov_st1wju1xc().b[0][1]++;
        cov_st1wju1xc().s[17]++;

        if (Array.isArray(column)) {
          /* istanbul ignore next */
          cov_st1wju1xc().b[4][0]++;
          cov_st1wju1xc().s[18]++;
          count(column);
        } else
        /* istanbul ignore next */
        {
          cov_st1wju1xc().b[4][1]++;
        }
      }
    });
  };

  /* istanbul ignore next */
  cov_st1wju1xc().s[19]++;

  if (Array.isArray(columns)) {
    /* istanbul ignore next */
    cov_st1wju1xc().b[5][0]++;
    cov_st1wju1xc().s[20]++;
    count(columns);
  } else {
    /* istanbul ignore next */
    cov_st1wju1xc().b[5][1]++;
    cov_st1wju1xc().s[21]++;

    if ((0, _isPlainObject["default"])(columns)) {
      /* istanbul ignore next */
      cov_st1wju1xc().b[6][0]++;

      var _columns$props =
      /* istanbul ignore next */
      (cov_st1wju1xc().s[22]++, columns.props),
          flexGrow =
      /* istanbul ignore next */
      (cov_st1wju1xc().s[23]++, _columns$props.flexGrow),
          _columns$props$width =
      /* istanbul ignore next */
      (cov_st1wju1xc().s[24]++, _columns$props.width),
          width =
      /* istanbul ignore next */
      (cov_st1wju1xc().s[25]++, _columns$props$width === void 0 ?
      /* istanbul ignore next */
      (cov_st1wju1xc().b[7][0]++, 0) :
      /* istanbul ignore next */
      (cov_st1wju1xc().b[7][1]++, _columns$props$width));

      /* istanbul ignore next */
      cov_st1wju1xc().s[26]++;
      totalFlexGrow =
      /* istanbul ignore next */
      (cov_st1wju1xc().b[8][0]++, flexGrow) ||
      /* istanbul ignore next */
      (cov_st1wju1xc().b[8][1]++, 0);

      /* istanbul ignore next */
      cov_st1wju1xc().s[27]++;
      totalWidth = flexGrow ?
      /* istanbul ignore next */
      (cov_st1wju1xc().b[9][0]++, 0) :
      /* istanbul ignore next */
      (cov_st1wju1xc().b[9][1]++, width);
    } else
    /* istanbul ignore next */
    {
      cov_st1wju1xc().b[6][1]++;
    }
  }

  /* istanbul ignore next */
  cov_st1wju1xc().s[28]++;
  return {
    totalFlexGrow: totalFlexGrow,
    totalWidth: totalWidth
  };
}

var _default =
/* istanbul ignore next */
(cov_st1wju1xc().s[29]++, getTotalByColumns);

/* istanbul ignore next */
cov_st1wju1xc().s[30]++;
exports["default"] = _default;