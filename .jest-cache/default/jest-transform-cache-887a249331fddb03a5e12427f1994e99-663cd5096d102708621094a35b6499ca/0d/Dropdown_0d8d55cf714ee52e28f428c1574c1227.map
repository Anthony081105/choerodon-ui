{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/dropdown/Dropdown.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { cloneElement, CSSProperties, isValidElement, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { getProPrefixCls } from 'choerodon-ui/lib/configure';\nimport Trigger from '../trigger/Trigger';\nimport { Action } from '../trigger/enum';\nimport { Placements } from './enum';\nimport builtinPlacements from './placements';\n\nconst popupStyle: CSSProperties = { whiteSpace: 'nowrap' };\n\nexport interface DropDownProps {\n  trigger?: Action[];\n  overlay: React.ReactNode;\n  onHiddenChange?: (hidden?: boolean) => void;\n  onVisibleChange?: (visible?: boolean) => void;\n  onOverlayClick?: (e) => void;\n  hidden?: boolean;\n  visible?: boolean;\n  defaultHidden?: boolean;\n  defaultVisible?: boolean;\n  disabled?: boolean;\n  align?: Object;\n  getPopupContainer?: (triggerNode: Element) => HTMLElement;\n  suffixCls?: string;\n  prefixCls?: string;\n  className?: string;\n  transitionName?: string;\n  placement?: Placements;\n  forceRender?: boolean;\n  popupClassName?:string;\n}\n\nexport interface DropdownState {\n  hidden?: boolean;\n}\n\nexport default class Dropdown extends PureComponent<DropDownProps> {\n  static displayName = 'Dropdown';\n\n  static propTypes = {\n    trigger: PropTypes.arrayOf(\n      PropTypes.oneOf([Action.focus, Action.hover, Action.click, Action.contextMenu]),\n    ),\n    overlay: PropTypes.any,\n    placement: PropTypes.oneOf([\n      Placements.bottomLeft,\n      Placements.bottomCenter,\n      Placements.bottomRight,\n      Placements.topLeft,\n      Placements.topCenter,\n      Placements.topRight,\n    ]),\n    hidden: PropTypes.bool,\n    visible: PropTypes.bool,\n    onHiddenChange: PropTypes.func,\n    onVisibleChange: PropTypes.func,\n    onOverlayClick: PropTypes.func,\n    suffixCls: PropTypes.string,\n    prefixCls: PropTypes.string,\n    defaultHidden: PropTypes.bool,\n    defaultVisible: PropTypes.bool,\n    popupClassName: PropTypes.string,\n  };\n\n  static defaultProps = {\n    suffixCls: 'dropdown',\n    placement: Placements.bottomLeft,\n    trigger: [Action.hover, Action.focus],\n    defaultHidden: true,\n  };\n\n  get triggerAction(): Action[] {\n    const { trigger } = this.props;\n    return trigger as Action[];\n  }\n\n  get transitionName() {\n    const { placement } = this.props;\n    let result = 'slide-up';\n    if (placement && placement.startsWith('top')) {\n      result = 'slide-down';\n    }\n    return result;\n  }\n\n  get prefixCls(): string {\n    const { suffixCls, prefixCls } = this.props;\n    return getProPrefixCls(suffixCls!, prefixCls);\n  }\n\n  state: DropdownState;\n\n  constructor(props) {\n    super(props);\n    if ('hidden' in props) {\n      this.state = {\n        hidden: props.hidden,\n      };\n    } else if ('visible' in props) {\n      this.state = {\n        hidden: !props.visible,\n      };\n    } else if ('defaultHidden' in props) {\n      this.state = {\n        hidden: props.defaultHidden,\n      };\n    } else {\n      this.state = {\n        hidden: !props.defaultVisible,\n      };\n    }\n  }\n\n  /**\n   * 调用传入的onHiddenChange方法\n   *\n   * @param {boolean} hidden\n   */\n  handlePopupHiddenChange = (hidden: boolean) => {\n    const {\n      onHiddenChange,\n      onVisibleChange,\n      hidden: propsHidden,\n      visible: propsVisible,\n    } = this.props;\n    if (propsHidden === undefined && propsVisible === undefined) {\n      this.setState({\n        hidden,\n      });\n    }\n    if (onHiddenChange) {\n      onHiddenChange(hidden);\n    }\n    if (onVisibleChange) {\n      onVisibleChange(!hidden);\n    }\n  };\n\n  handleClick = e => {\n    const { onOverlayClick, overlay, hidden, visible } = this.props;\n    const { onClick } = ((isValidElement(overlay) && overlay.props) || {}) as { onClick };\n    if (onOverlayClick) {\n      onOverlayClick(e);\n    }\n    if (onClick) {\n      onClick(e);\n    }\n    if (hidden === undefined && visible === undefined) {\n      this.setState({\n        hidden: true,\n      });\n    }\n  };\n\n  getMenuElement() {\n    const { overlay } = this.props;\n    if (isValidElement(overlay)) {\n      return cloneElement<any>(overlay, {\n        onClick: this.handleClick,\n      });\n    }\n  }\n\n  componentWillReceiveProps({ hidden, visible }: DropDownProps) {\n    if (hidden !== undefined) {\n      this.setState({\n        hidden,\n      });\n    } else if (visible !== undefined) {\n      this.setState({\n        hidden: !visible,\n      });\n    }\n  }\n\n  render() {\n    const {\n      prefixCls,\n      state: { hidden },\n      props: { children, placement, popupClassName, getPopupContainer },\n    } = this;\n\n    return (\n      <Trigger\n        prefixCls={prefixCls}\n        action={this.triggerAction}\n        builtinPlacements={builtinPlacements}\n        popupPlacement={placement}\n        popupContent={this.getMenuElement()}\n        popupStyle={popupStyle}\n        popupClassName={popupClassName}\n        onPopupHiddenChange={this.handlePopupHiddenChange}\n        popupHidden={hidden}\n        getPopupContainer={getPopupContainer}\n      >\n        {children}\n      </Trigger>\n    );\n  }\n}\n"]}