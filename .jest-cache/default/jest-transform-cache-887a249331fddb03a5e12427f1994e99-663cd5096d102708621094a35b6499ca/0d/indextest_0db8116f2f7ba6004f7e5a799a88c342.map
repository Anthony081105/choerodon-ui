{"version":3,"sources":["index.test.js"],"names":["options","value","label","children","describe","Cascader","it","wrapper","expect","find","instance","getComponent","toMatchSnapshot","simulate","setProps","render","popupWrapper","at","target","state","toBe","keyCode","KeyCode","BACKSPACE"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render, mount } from 'enzyme';\nimport KeyCode from '../../_util/KeyCode';\nimport Cascader from '..';\nimport focusTest from '../../../tests/shared/focusTest';\n\nconst options = [\n  {\n    value: 'zhejiang',\n    label: 'Zhejiang',\n    children: [\n      {\n        value: 'hangzhou',\n        label: 'Hangzhou',\n        children: [\n          {\n            value: 'xihu',\n            label: 'West Lake',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    value: 'jiangsu',\n    label: 'Jiangsu',\n    children: [\n      {\n        value: 'nanjing',\n        label: 'Nanjing',\n        children: [\n          {\n            value: 'zhonghuamen',\n            label: 'Zhong Hua Men',\n          },\n        ],\n      },\n    ],\n  },\n];\n\ndescribe('Cascader', () => {\n  focusTest(Cascader);\n\n  it('popup correctly when panel is hidden', () => {\n    const wrapper = mount(<Cascader options={options} />);\n    expect(\n      render(\n        wrapper\n          .find('Trigger')\n          .instance()\n          .getComponent(),\n      ),\n    ).toMatchSnapshot();\n  });\n\n  it('popup correctly when panel is open', () => {\n    const wrapper = mount(<Cascader options={options} />);\n    wrapper.find('input').simulate('click');\n    expect(\n      render(\n        wrapper\n          .find('Trigger')\n          .instance()\n          .getComponent(),\n      ),\n    ).toMatchSnapshot();\n  });\n\n  it('support controlled mode', () => {\n    const wrapper = mount(<Cascader options={options} />);\n    wrapper.setProps({\n      value: ['zhejiang', 'hangzhou', 'xihu'],\n    });\n    expect(wrapper.render()).toMatchSnapshot();\n  });\n\n  it('popup correctly with defaultValue', () => {\n    const wrapper = mount(<Cascader options={options} defaultValue={['zhejiang', 'hangzhou']} />);\n    wrapper.find('input').simulate('click');\n    expect(\n      render(\n        wrapper\n          .find('Trigger')\n          .instance()\n          .getComponent(),\n      ),\n    ).toMatchSnapshot();\n  });\n\n  it('can be selected', () => {\n    const wrapper = mount(<Cascader options={options} />);\n    wrapper.find('input').simulate('click');\n    let popupWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    popupWrapper\n      .find('.c7n-cascader-menu')\n      .at(0)\n      .find('.c7n-cascader-menu-item')\n      .at(0)\n      .simulate('click');\n    expect(\n      render(\n        wrapper\n          .find('Trigger')\n          .instance()\n          .getComponent(),\n      ),\n    ).toMatchSnapshot();\n    popupWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    popupWrapper\n      .find('.c7n-cascader-menu')\n      .at(1)\n      .find('.c7n-cascader-menu-item')\n      .at(0)\n      .simulate('click');\n    expect(\n      render(\n        wrapper\n          .find('Trigger')\n          .instance()\n          .getComponent(),\n      ),\n    ).toMatchSnapshot();\n    popupWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    popupWrapper\n      .find('.c7n-cascader-menu')\n      .at(2)\n      .find('.c7n-cascader-menu-item')\n      .at(0)\n      .simulate('click');\n    expect(\n      render(\n        wrapper\n          .find('Trigger')\n          .instance()\n          .getComponent(),\n      ),\n    ).toMatchSnapshot();\n  });\n\n  it('backspace should work with `Cascader[showSearch]`', () => {\n    const wrapper = mount(<Cascader options={options} showSearch />);\n    wrapper.find('input').simulate('change', { target: { value: '123' } });\n    expect(wrapper.state('inputValue')).toBe('123');\n    wrapper.find('input').simulate('keydown', { keyCode: KeyCode.BACKSPACE });\n    // Simulate onKeyDown will not trigger onChange by default, so the value is still '123'\n    expect(wrapper.state('inputValue')).toBe('123');\n  });\n});\n"]}