{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/calendar/Header.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, ReactElement } from 'react';\nimport { Moment } from 'moment';\nimport { Size } from '../_util/enum';\nimport Select from '../select';\nimport { Button, Group, RadioChangeEvent } from '../radio';\nimport { getPrefixCls } from '../configure';\n\nconst Option = Select.Option;\n\nexport interface HeaderProps {\n  prefixCls?: string;\n  locale?: any;\n  fullscreen?: boolean;\n  yearSelectOffset?: number;\n  yearSelectTotal?: number;\n  type?: string;\n  onValueChange?: (value: Moment) => void;\n  onTypeChange?: (type: string) => void;\n  value: any;\n  validRange?: [Moment, Moment];\n}\n\nexport default class Header extends Component<HeaderProps, any> {\n  static displayName = 'Header';\n\n  static defaultProps = {\n    yearSelectOffset: 10,\n    yearSelectTotal: 20,\n  };\n\n  private calenderHeaderNode: HTMLDivElement;\n\n  getPrefixCls() {\n    const { prefixCls } = this.props;\n    return getPrefixCls('fullcalendar-header', prefixCls);\n  }\n\n  getYearSelectElement(year: number) {\n    const { yearSelectOffset, yearSelectTotal, locale, fullscreen, validRange } = this.props;\n    const prefixCls = this.getPrefixCls();\n    let start = year - (yearSelectOffset as number);\n    let end = start + (yearSelectTotal as number);\n    if (validRange) {\n      start = validRange[0].get('year');\n      end = validRange[1].get('year') + 1;\n    }\n    const suffix = locale.year === '年' ? '年' : '';\n    const options: ReactElement<any>[] = [];\n    for (let index = start; index < end; index++) {\n      options.push(<Option key={`${index}`}>{index + suffix}</Option>);\n    }\n    return (\n      <Select\n        size={fullscreen ? Size.default : Size.small}\n        dropdownMatchSelectWidth={false}\n        className={`${prefixCls}-year-select`}\n        onChange={this.onYearChange}\n        value={String(year)}\n        getPopupContainer={() => this.calenderHeaderNode}\n      >\n        {options}\n      </Select>\n    );\n  }\n\n  getMonthsLocale(value: Moment) {\n    const current = value.clone();\n    const localeData = value.localeData();\n    const months: any[] = [];\n    for (let i = 0; i < 12; i++) {\n      current.month(i);\n      months.push(localeData.monthsShort(current));\n    }\n    return months;\n  }\n\n  getMonthSelectElement(month: number, months: number[]) {\n    const props = this.props;\n    const { fullscreen, validRange, value } = props;\n    const prefixCls = this.getPrefixCls();\n    const options: ReactElement<any>[] = [];\n    let start = 0;\n    let end = 12;\n    if (validRange) {\n      const [rangeStart, rangeEnd] = validRange;\n      const currentYear = value.get('year');\n      if (rangeEnd.get('year') === currentYear) {\n        end = rangeEnd.get('month') + 1;\n      } else {\n        start = rangeStart.get('month');\n      }\n    }\n    for (let index = start; index < end; index++) {\n      options.push(<Option key={`${index}`}>{months[index]}</Option>);\n    }\n    return (\n      <Select\n        size={fullscreen ? Size.default : Size.small}\n        dropdownMatchSelectWidth={false}\n        className={`${prefixCls}-month-select`}\n        value={String(month)}\n        onChange={this.onMonthChange}\n        getPopupContainer={() => this.calenderHeaderNode}\n      >\n        {options}\n      </Select>\n    );\n  }\n\n  onYearChange = (year: string) => {\n    const { value, validRange } = this.props;\n    const newValue = value.clone();\n    newValue.year(parseInt(year, 10));\n    // switch the month so that it remains within range when year changes\n    if (validRange) {\n      const [start, end] = validRange;\n      const newYear = newValue.get('year');\n      const newMonth = newValue.get('month');\n      if (newYear === end.get('year') && newMonth > end.get('month')) {\n        newValue.month(end.get('month'));\n      }\n      if (newYear === start.get('year') && newMonth < start.get('month')) {\n        newValue.month(start.get('month'));\n      }\n    }\n\n    const { onValueChange } = this.props;\n    if (onValueChange) {\n      onValueChange(newValue);\n    }\n  };\n\n  onMonthChange = (month: string) => {\n    const { onValueChange, value } = this.props;\n    const newValue = value.clone();\n    newValue.month(parseInt(month, 10));\n    if (onValueChange) {\n      onValueChange(newValue);\n    }\n  };\n\n  onTypeChange = (e: RadioChangeEvent) => {\n    const { onTypeChange } = this.props;\n    if (onTypeChange) {\n      onTypeChange(e.target.value);\n    }\n  };\n\n  getCalenderHeaderNode = (node: HTMLDivElement) => {\n    this.calenderHeaderNode = node;\n  };\n\n  render() {\n    const { type, value, locale, fullscreen } = this.props;\n    const prefixCls = this.getPrefixCls();\n    const yearSelect = this.getYearSelectElement(value.year());\n    const monthSelect =\n      type === 'date'\n        ? this.getMonthSelectElement(value.month(), this.getMonthsLocale(value))\n        : null;\n    const typeSwitch = (\n      <Group\n        onChange={this.onTypeChange}\n        value={type}\n        size={fullscreen ? Size.default : Size.small}\n      >\n        <Button value=\"date\">{locale.month}</Button>\n        <Button value=\"month\">{locale.year}</Button>\n      </Group>\n    );\n\n    return (\n      <div className={`${prefixCls}-header`} ref={this.getCalenderHeaderNode}>\n        {yearSelect}\n        {monthSelect}\n        {typeSwitch}\n      </div>\n    );\n  }\n}\n"]}