{"version":3,"sources":["getSearchWord.jsx"],"names":["getWord","text","position","str","String","pos","Number","left","slice","search","right","word","begin","end","length","getSearchWord","editorState","selection","anchorKey","getAnchorKey","anchorOffset","getAnchorOffset","currentContent","getCurrentContent","currentBlock","getBlockForKey","blockText","getText"],"mappings":";;;;;;;AAAA,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,QAAvB,EAAiC;AAC/B,MAAMC,GAAG,GAAGC,MAAM,CAACH,IAAD,CAAlB;AACA;;AACA,MAAMI,GAAG,GAAGC,MAAM,CAACJ,QAAD,CAAN,KAAqB,CAAjC,CAH+B,CAK/B;;AACA,MAAMK,IAAI,GAAGJ,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAaH,GAAG,GAAG,CAAnB,EAAsBI,MAAtB,CAA6B,MAA7B,CAAb;AACA,MAAMC,KAAK,GAAGP,GAAG,CAACK,KAAJ,CAAUH,GAAV,EAAeI,MAAf,CAAsB,IAAtB,CAAd;;AAGA,MAAIC,KAAK,GAAG,CAAZ,EAAe;AACb,WAAO;AACLC,MAAAA,IAAI,EAAER,GAAG,CAACK,KAAJ,CAAUD,IAAV,CADD;AAELK,MAAAA,KAAK,EAAEL,IAFF;AAGLM,MAAAA,GAAG,EAAEV,GAAG,CAACW;AAHJ,KAAP;AAKD,GAhB8B,CAkB/B;;;AACA,SAAO;AACLH,IAAAA,IAAI,EAAER,GAAG,CAACK,KAAJ,CAAUD,IAAV,EAAgBG,KAAK,GAAGL,GAAxB,CADD;AAELO,IAAAA,KAAK,EAAEL,IAFF;AAGLM,IAAAA,GAAG,EAAEH,KAAK,GAAGL;AAHR,GAAP;AAKD;;AAEc,SAASU,aAAT,CAAuBC,WAAvB,EAAoCC,SAApC,EAA+C;AAC5D,MAAMC,SAAS,GAAGD,SAAS,CAACE,YAAV,EAAlB;AACA,MAAMC,YAAY,GAAGH,SAAS,CAACI,eAAV,KAA8B,CAAnD;AACA,MAAMC,cAAc,GAAGN,WAAW,CAACO,iBAAZ,EAAvB;AACA,MAAMC,YAAY,GAAGF,cAAc,CAACG,cAAf,CAA8BP,SAA9B,CAArB;;AACA,MAAIM,YAAJ,EAAkB;AAChB,QAAME,SAAS,GAAGF,YAAY,CAACG,OAAb,EAAlB;AACA,WAAO3B,OAAO,CAAC0B,SAAD,EAAYN,YAAZ,CAAd;AACD;;AACD,SAAO,EAAP;AACD","sourcesContent":["function getWord(text, position) {\n  const str = String(text);\n  /* eslint no-bitwise:0 */\n  const pos = Number(position) >>> 0;\n\n  // Search for the word's beginning and end.\n  const left = str.slice(0, pos + 1).search(/\\S+$/);\n  const right = str.slice(pos).search(/\\s/);\n\n\n  if (right < 0) {\n    return {\n      word: str.slice(left),\n      begin: left,\n      end: str.length,\n    };\n  }\n\n  // Return the word, using the located bounds to extract it from the string.\n  return {\n    word: str.slice(left, right + pos),\n    begin: left,\n    end: right + pos,\n  };\n}\n\nexport default function getSearchWord(editorState, selection) {\n  const anchorKey = selection.getAnchorKey();\n  const anchorOffset = selection.getAnchorOffset() - 1;\n  const currentContent = editorState.getCurrentContent();\n  const currentBlock = currentContent.getBlockForKey(anchorKey);\n  if (currentBlock) {\n    const blockText = currentBlock.getText();\n    return getWord(blockText, anchorOffset);\n  }\n  return '';\n}\n"]}