{"version":3,"sources":["Marks.jsx"],"names":["Marks","className","vertical","marks","included","upperBound","lowerBound","max","min","onClickLabel","marksKeys","Object","keys","marksCount","length","unit","markWidth","range","elements","map","parseFloat","sort","a","b","point","markPoint","markPointIsObject","markLabel","label","isActive","markClassName","bottomStyle","marginBottom","bottom","leftStyle","width","marginLeft","left","style","markStyle","e"],"mappings":"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","sourcesContent":["import React, { isValidElement } from 'react';\nimport classNames from 'classnames';\n\nconst Marks = ({\n  className,\n  vertical,\n  marks,\n  included,\n  upperBound,\n  lowerBound,\n  max, min,\n  onClickLabel,\n}) => {\n  const marksKeys = Object.keys(marks);\n  const marksCount = marksKeys.length;\n  const unit = marksCount > 1 ? 100 / (marksCount - 1) : 100;\n  const markWidth = unit * 0.9;\n\n  const range = max - min;\n  const elements = marksKeys.map(parseFloat).sort((a, b) => a - b).map(point => {\n    const markPoint = marks[point];\n    const markPointIsObject = typeof markPoint === 'object' &&\n            !isValidElement(markPoint);\n    const markLabel = markPointIsObject ? markPoint.label : markPoint;\n    if (!markLabel && markLabel !== 0) {\n      return null;\n    }\n\n    const isActive = (!included && point === upperBound) ||\n            (included && point <= upperBound && point >= lowerBound);\n    const markClassName = classNames({\n      [`${className}-text`]: true,\n      [`${className}-text-active`]: isActive,\n    });\n\n    const bottomStyle = {\n      marginBottom: '-50%',\n      bottom: `${(point - min) / range * 100}%`,\n    };\n\n    const leftStyle = {\n      width: `${markWidth}%`,\n      marginLeft: `${-markWidth / 2}%`,\n      left: `${(point - min) / range * 100}%`,\n    };\n\n    const style = vertical ? bottomStyle : leftStyle;\n    const markStyle = markPointIsObject ?\n            { ...style, ...markPoint.style } : style;\n    return (\n      <span\n        className={markClassName}\n        style={markStyle}\n        key={point}\n        onMouseDown={(e) => onClickLabel(e, point)}\n        onTouchStart={(e) => onClickLabel(e, point)}\n      >\n        {markLabel}\n      </span>\n    );\n  });\n\n  return <div className={className}>{elements}</div>;\n};\n\nexport default Marks;\n"]}