{"version":3,"sources":["Steps.jsx"],"names":["calcPoints","vertical","marks","dots","step","min","max","points","Object","keys","map","parseFloat","i","indexOf","push","Steps","prefixCls","included","lowerBound","upperBound","dotStyle","activeDotStyle","range","elements","point","offset","Math","abs","isActived","style","bottom","left","pointClassName"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAWC,KAAX,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,GAA9B,EAAmCC,GAAnC,EAA2C;AAC5D,2BACEH,IAAI,GAAGC,IAAI,GAAG,CAAV,GAAc,IADpB,EAEE,gFAFF;AAIA,MAAMG,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBQ,GAAnB,CAAuBC,UAAvB,CAAf;;AACA,MAAIR,IAAJ,EAAU;AACR,SAAK,IAAIS,CAAC,GAAGP,GAAb,EAAkBO,CAAC,IAAIN,GAAvB,EAA4BM,CAAC,GAAGA,CAAC,GAAGR,IAApC,EAA0C;AACxC,UAAIG,MAAM,CAACM,OAAP,CAAeD,CAAf,KAAqB,CAAzB,EAA4B;AAC5BL,MAAAA,MAAM,CAACO,IAAP,CAAYF,CAAZ;AACD;AACF;;AACD,SAAOL,MAAP;AACD,CAbD;;AAeA,IAAMQ,KAAK,GAAG,SAARA,KAAQ,OACmE;AAAA,MADhEC,SACgE,QADhEA,SACgE;AAAA,MADrDf,QACqD,QADrDA,QACqD;AAAA,MAD3CC,KAC2C,QAD3CA,KAC2C;AAAA,MADpCC,IACoC,QADpCA,IACoC;AAAA,MAD9BC,IAC8B,QAD9BA,IAC8B;AAAA,MADxBa,QACwB,QADxBA,QACwB;AAAA,MAAjEC,UAAiE,QAAjEA,UAAiE;AAAA,MAArDC,UAAqD,QAArDA,UAAqD;AAAA,MAAzCb,GAAyC,QAAzCA,GAAyC;AAAA,MAApCD,GAAoC,QAApCA,GAAoC;AAAA,MAA/Be,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;AAC/E,MAAMC,KAAK,GAAGhB,GAAG,GAAGD,GAApB;AACA,MAAMkB,QAAQ,GAAGvB,UAAU,CAACC,QAAD,EAAWC,KAAX,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,GAA9B,EAAmCC,GAAnC,CAAV,CAAkDI,GAAlD,CAAsD,UAACc,KAAD,EAAW;AAAA;;AAChF,QAAMC,MAAM,aAAMC,IAAI,CAACC,GAAL,CAASH,KAAK,GAAGnB,GAAjB,IAAwBiB,KAAxB,GAAgC,GAAtC,MAAZ;AAEA,QAAMM,SAAS,GAAI,CAACX,QAAD,IAAaO,KAAK,KAAKL,UAAxB,IACTF,QAAQ,IAAIO,KAAK,IAAIL,UAArB,IAAmCK,KAAK,IAAIN,UADrD;AAEA,QAAIW,KAAK,GAAG5B,QAAQ;AAAK6B,MAAAA,MAAM,EAAEL;AAAb,OAAwBL,QAAxB;AAAuCW,MAAAA,IAAI,EAAEN;AAA7C,OAAwDL,QAAxD,CAApB;;AACA,QAAIQ,SAAJ,EAAe;AACbC,MAAAA,KAAK,sCAAQA,KAAR,MAAkBR,cAAlB,CAAL;AACD;;AAED,QAAMW,cAAc,GAAG,uGACjBhB,SADiB,WACC,IADD,2DAEjBA,SAFiB,kBAEQY,SAFR,gBAAvB;AAKA,WAAO;AAAM,MAAA,SAAS,EAAEI,cAAjB;AAAiC,MAAA,KAAK,EAAEH,KAAxC;AAA+C,MAAA,GAAG,EAAEL;AAApD,MAAP;AACD,GAhBgB,CAAjB;AAkBA,SAAO;AAAK,IAAA,SAAS,YAAKR,SAAL;AAAd,KAAsCO,QAAtC,CAAP;AACD,CAtBD;;eAwBeR,K","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport warning from '../../../_util/warning';\n\nconst calcPoints = (vertical, marks, dots, step, min, max) => {\n  warning(\n    dots ? step > 0 : true,\n    '`Slider[step]` should be a positive number in order to make Slider[dots] work.'\n  );\n  const points = Object.keys(marks).map(parseFloat);\n  if (dots) {\n    for (let i = min; i <= max; i = i + step) {\n      if (points.indexOf(i) >= 0) continue;\n      points.push(i);\n    }\n  }\n  return points;\n};\n\nconst Steps = ({ prefixCls, vertical, marks, dots, step, included,\n                lowerBound, upperBound, max, min, dotStyle, activeDotStyle }) => {\n  const range = max - min;\n  const elements = calcPoints(vertical, marks, dots, step, min, max).map((point) => {\n    const offset = `${Math.abs(point - min) / range * 100}%`;\n\n    const isActived = (!included && point === upperBound) ||\n            (included && point <= upperBound && point >= lowerBound);\n    let style = vertical ? { bottom: offset, ...dotStyle } : { left: offset, ...dotStyle };\n    if (isActived) {\n      style = { ...style, ...activeDotStyle };\n    }\n\n    const pointClassName = classNames({\n      [`${prefixCls}-dot`]: true,\n      [`${prefixCls}-dot-active`]: isActived,\n    });\n\n    return <span className={pointClassName} style={style} key={point} />;\n  });\n\n  return <div className={`${prefixCls}-step`}>{elements}</div>;\n};\n\nexport default Steps;\n"]}