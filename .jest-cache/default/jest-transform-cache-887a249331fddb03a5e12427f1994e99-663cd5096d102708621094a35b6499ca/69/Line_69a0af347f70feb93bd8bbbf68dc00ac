3fa3649d82cb63fea187b79dcb590177
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _enhancer = _interopRequireDefault(require("./enhancer"));

var _types = require("./types");

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = (0, _getPrototypeOf2["default"])(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0, _possibleConstructorReturn2["default"])(this, result);
  };
}

var Line =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(Line, _Component);

  var _super = _createSuper(Line);

  function Line() {
    (0, _classCallCheck2["default"])(this, Line);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(Line, [{
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          className = _this$props.className,
          percent = _this$props.percent,
          prefixCls = _this$props.prefixCls,
          strokeColor = _this$props.strokeColor,
          strokeLinecap = _this$props.strokeLinecap,
          strokeWidth = _this$props.strokeWidth,
          style = _this$props.style,
          trailColor = _this$props.trailColor,
          trailWidth = _this$props.trailWidth,
          restProps = (0, _objectWithoutProperties2["default"])(_this$props, ["className", "percent", "prefixCls", "strokeColor", "strokeLinecap", "strokeWidth", "style", "trailColor", "trailWidth"]);
      delete restProps.gapPosition;
      var pathStyle = {
        strokeDasharray: '100px, 100px',
        strokeDashoffset: "".concat(100 - percent, "px"),
        transition: 'stroke-dashoffset 0.3s ease 0s, stroke 0.3s linear'
      };
      var center = strokeWidth / 2;
      var right = 100 - strokeWidth / 2;
      var pathString = "M ".concat(strokeLinecap === 'round' ? center : 0, ",").concat(center, "\n           L ").concat(strokeLinecap === 'round' ? right : 100, ",").concat(center);
      var viewBoxString = "0 0 100 ".concat(strokeWidth);
      return _react["default"].createElement("svg", (0, _extends2["default"])({
        className: "".concat(prefixCls, "-line ").concat(className),
        viewBox: viewBoxString,
        preserveAspectRatio: "none",
        style: style
      }, restProps), _react["default"].createElement("path", {
        className: "".concat(prefixCls, "-line-trail"),
        d: pathString,
        strokeLinecap: strokeLinecap,
        stroke: trailColor,
        strokeWidth: trailWidth || strokeWidth,
        fillOpacity: "0"
      }), _react["default"].createElement("path", {
        className: "".concat(prefixCls, "-line-path"),
        d: pathString,
        strokeLinecap: strokeLinecap,
        stroke: strokeColor,
        strokeWidth: strokeWidth,
        fillOpacity: "0",
        ref: function ref(path) {
          _this.path = path;
        },
        style: pathStyle
      }));
    }
  }]);
  return Line;
}(_react.Component);

(0, _defineProperty2["default"])(Line, "propTypes", _types.propTypes);
(0, _defineProperty2["default"])(Line, "defaultProps", _types.defaultProps);

var _default = (0, _enhancer["default"])(Line);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2dyZXNzL0xpbmUuanN4Il0sIm5hbWVzIjpbIkxpbmUiLCJDb21wb25lbnQiLCJwcm9wVHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJjbGFzc05hbWUiLCJwZXJjZW50IiwicHJlZml4Q2xzIiwic3Ryb2tlQ29sb3IiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlV2lkdGgiLCJzdHlsZSIsInRyYWlsQ29sb3IiLCJ0cmFpbFdpZHRoIiwicmVzdFByb3BzIiwicGF0aFN0eWxlIiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInRyYW5zaXRpb24iLCJjZW50ZXIiLCJyaWdodCIsInBhdGhTdHJpbmciLCJ2aWV3Qm94U3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLE1BQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFNBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLE1BQUEsR0FBQSxPQUFBLENBQUEsU0FBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLEk7Ozs7Ozs7Ozs7Ozs7OzZCQUtLO0FBQUEsVUFBQSxLQUFBLEdBQUEsSUFBQTs7QUFBQSxVQUFBLFdBQUEsR0FZSCxLQVpHLEtBQUE7QUFBQSxVQUVMSSxTQUZLLEdBQUEsV0FBQSxDQUFBLFNBQUE7QUFBQSxVQUdMQyxPQUhLLEdBQUEsV0FBQSxDQUFBLE9BQUE7QUFBQSxVQUlMQyxTQUpLLEdBQUEsV0FBQSxDQUFBLFNBQUE7QUFBQSxVQUtMQyxXQUxLLEdBQUEsV0FBQSxDQUFBLFdBQUE7QUFBQSxVQU1MQyxhQU5LLEdBQUEsV0FBQSxDQUFBLGFBQUE7QUFBQSxVQU9MQyxXQVBLLEdBQUEsV0FBQSxDQUFBLFdBQUE7QUFBQSxVQVFMQyxLQVJLLEdBQUEsV0FBQSxDQUFBLEtBQUE7QUFBQSxVQVNM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bXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBlbmhhbmNlciBmcm9tICcuL2VuaGFuY2VyJztcbmltcG9ydCB7IGRlZmF1bHRQcm9wcywgcHJvcFR5cGVzIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNsYXNzIExpbmUgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIHBlcmNlbnQsXG4gICAgICBwcmVmaXhDbHMsXG4gICAgICBzdHJva2VDb2xvcixcbiAgICAgIHN0cm9rZUxpbmVjYXAsXG4gICAgICBzdHJva2VXaWR0aCxcbiAgICAgIHN0eWxlLFxuICAgICAgdHJhaWxDb2xvcixcbiAgICAgIHRyYWlsV2lkdGgsXG4gICAgICAuLi5yZXN0UHJvcHNcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGRlbGV0ZSByZXN0UHJvcHMuZ2FwUG9zaXRpb247XG5cbiAgICBjb25zdCBwYXRoU3R5bGUgPSB7XG4gICAgICBzdHJva2VEYXNoYXJyYXk6ICcxMDBweCwgMTAwcHgnLFxuICAgICAgc3Ryb2tlRGFzaG9mZnNldDogYCR7MTAwIC0gcGVyY2VudH1weGAsXG4gICAgICB0cmFuc2l0aW9uOiAnc3Ryb2tlLWRhc2hvZmZzZXQgMC4zcyBlYXNlIDBzLCBzdHJva2UgMC4zcyBsaW5lYXInLFxuICAgIH07XG5cbiAgICBjb25zdCBjZW50ZXIgPSBzdHJva2VXaWR0aCAvIDI7XG4gICAgY29uc3QgcmlnaHQgPSAxMDAgLSBzdHJva2VXaWR0aCAvIDI7XG4gICAgY29uc3QgcGF0aFN0cmluZyA9IGBNICR7c3Ryb2tlTGluZWNhcCA9PT0gJ3JvdW5kJyA/IGNlbnRlciA6IDB9LCR7Y2VudGVyfVxuICAgICAgICAgICBMICR7c3Ryb2tlTGluZWNhcCA9PT0gJ3JvdW5kJyA/IHJpZ2h0IDogMTAwfSwke2NlbnRlcn1gO1xuICAgIGNvbnN0IHZpZXdCb3hTdHJpbmcgPSBgMCAwIDEwMCAke3N0cm9rZVdpZHRofWA7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPHN2Z1xuICAgICAgICBjbGFzc05hbWU9e2Ake3ByZWZpeENsc30tbGluZSAke2NsYXNzTmFtZX1gfVxuICAgICAgICB2aWV3Qm94PXt2aWV3Qm94U3RyaW5nfVxuICAgICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwibm9uZVwiXG4gICAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgICAgey4uLnJlc3RQcm9wc31cbiAgICAgID5cbiAgICAgICAgPHBhdGhcbiAgICAgICAgICBjbGFzc05hbWU9e2Ake3ByZWZpeENsc30tbGluZS10cmFpbGB9XG4gICAgICAgICAgZD17cGF0aFN0cmluZ31cbiAgICAgICAgICBzdHJva2VMaW5lY2FwPXtzdHJva2VMaW5lY2FwfVxuICAgICAgICAgIHN0cm9rZT17dHJhaWxDb2xvcn1cbiAgICAgICAgICBzdHJva2VXaWR0aD17dHJhaWxXaWR0aCB8fCBzdHJva2VXaWR0aH1cbiAgICAgICAgICBmaWxsT3BhY2l0eT1cIjBcIlxuICAgICAgICAvPlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGNsYXNzTmFtZT17YCR7cHJlZml4Q2xzfS1saW5lLXBhdGhgfVxuICAgICAgICAgIGQ9e3BhdGhTdHJpbmd9XG4gICAgICAgICAgc3Ryb2tlTGluZWNhcD17c3Ryb2tlTGluZWNhcH1cbiAgICAgICAgICBzdHJva2U9e3N0cm9rZUNvbG9yfVxuICAgICAgICAgIHN0cm9rZVdpZHRoPXtzdHJva2VXaWR0aH1cbiAgICAgICAgICBmaWxsT3BhY2l0eT1cIjBcIlxuICAgICAgICAgIHJlZj17cGF0aCA9PiB7XG4gICAgICAgICAgICB0aGlzLnBhdGggPSBwYXRoO1xuICAgICAgICAgIH19XG4gICAgICAgICAgc3R5bGU9e3BhdGhTdHlsZX1cbiAgICAgICAgLz5cbiAgICAgIDwvc3ZnPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZW5oYW5jZXIoTGluZSk7XG4iXX0=