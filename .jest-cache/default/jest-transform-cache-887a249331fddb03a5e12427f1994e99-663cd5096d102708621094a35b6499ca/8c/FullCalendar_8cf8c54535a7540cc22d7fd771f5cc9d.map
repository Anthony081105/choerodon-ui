{"version":3,"sources":["FullCalendar.jsx"],"names":["FullCalendar","propTypes","defaultType","PropTypes","string","type","prefixCls","locale","object","onTypeChange","func","fullscreen","bool","monthCellRender","dateCellRender","showTypeSwitch","Select","isRequired","headerComponents","array","headerComponent","headerRender","showHeader","disabledDate","mixins","CommonMixin","CalendarMixin","getDefaultProps","getInitialState","props","componentWillReceiveProps","nextProps","setState","onMonthSelect","value","onSelect","target","setType","render","state","header","TheHeader","CalendarHeader","setValue","table","dateCellContentRender","monthCellContentRender","children","className","push","renderRoot","join"],"mappings":"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","sourcesContent":["import React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport DateTable from './date/DateTable';\nimport MonthTable from './month/MonthTable';\nimport CalendarMixin from './mixin/CalendarMixin';\nimport CommonMixin from './mixin/CommonMixin';\nimport CalendarHeader from './full-calendar/CalendarHeader';\n\nconst FullCalendar = createReactClass({\n  propTypes: {\n    defaultType: PropTypes.string,\n    type: PropTypes.string,\n    prefixCls: PropTypes.string,\n    locale: PropTypes.object,\n    onTypeChange: PropTypes.func,\n    fullscreen: PropTypes.bool,\n    monthCellRender: PropTypes.func,\n    dateCellRender: PropTypes.func,\n    showTypeSwitch: PropTypes.bool,\n    Select: PropTypes.func.isRequired,\n    headerComponents: PropTypes.array,\n    headerComponent: PropTypes.object, // The whole header component\n    headerRender: PropTypes.func,\n    showHeader: PropTypes.bool,\n    disabledDate: PropTypes.func,\n  },\n  mixins: [CommonMixin, CalendarMixin],\n  getDefaultProps() {\n    return {\n      defaultType: 'date',\n      fullscreen: false,\n      showTypeSwitch: true,\n      showHeader: true,\n      onTypeChange() {\n      },\n    };\n  },\n  getInitialState() {\n    let type;\n    if ('type' in this.props) {\n      type = this.props.type;\n    } else {\n      type = this.props.defaultType;\n    }\n    return {\n      type,\n    };\n  },\n  componentWillReceiveProps(nextProps) {\n    if ('type' in nextProps) {\n      this.setState({\n        type: nextProps.type,\n      });\n    }\n  },\n  onMonthSelect(value) {\n    this.onSelect(value, {\n      target: 'month',\n    });\n  },\n  setType(type) {\n    if (!('type' in this.props)) {\n      this.setState({\n        type,\n      });\n    }\n    this.props.onTypeChange(type);\n  },\n  render() {\n    const props = this.props;\n    const {\n      locale,\n      prefixCls,\n      fullscreen,\n      showHeader,\n      headerComponent,\n      headerRender,\n      disabledDate,\n    } = props;\n    const { value, type } = this.state;\n\n    let header = null;\n    if (showHeader) {\n      if (headerRender) {\n        header = headerRender(value, type, locale);\n      } else {\n        const TheHeader = headerComponent || CalendarHeader;\n        header = (\n          <TheHeader\n            key=\"calendar-header\"\n            {...props}\n            prefixCls={`${prefixCls}-full`}\n            type={type}\n            value={value}\n            onTypeChange={this.setType}\n            onValueChange={this.setValue}\n          />\n        );\n      }\n    }\n\n    const table = type === 'date' ? (\n      <DateTable\n        dateRender={props.dateCellRender}\n        contentRender={props.dateCellContentRender}\n        locale={locale}\n        prefixCls={prefixCls}\n        onSelect={this.onSelect}\n        value={value}\n        disabledDate={disabledDate}\n      />\n    ) : (\n      <MonthTable\n        cellRender={props.monthCellRender}\n        contentRender={props.monthCellContentRender}\n        locale={locale}\n        onSelect={this.onMonthSelect}\n        prefixCls={`${prefixCls}-month-panel`}\n        value={value}\n        disabledDate={disabledDate}\n      />\n    );\n\n    const children = [\n      header,\n      (<div key=\"calendar-body\" className={`${prefixCls}-calendar-body`}>\n        { table }\n      </div>),\n    ];\n\n\n    const className = [`${prefixCls}-full`];\n\n    if (fullscreen) {\n      className.push(`${prefixCls}-fullscreen`);\n    }\n\n    return this.renderRoot({\n      children,\n      className: className.join(' '),\n    });\n  },\n});\n\nexport default FullCalendar;\n"]}