ba38a934b6161a3e98c9f745feafcf64
"use strict";

/* istanbul ignore next */
function cov_1689xuk1un() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/modal/index.tsx";
  var hash = "f714623130bb65162c09f306739057f04f2a2bbe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/modal/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 86
        }
      },
      "1": {
        start: {
          line: 5,
          column: 29
        },
        end: {
          line: 5,
          column: 84
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 28
        }
      },
      "4": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 92
        }
      },
      "5": {
        start: {
          line: 14,
          column: 13
        },
        end: {
          line: 14,
          column: 56
        }
      },
      "6": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 66
        }
      },
      "7": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "8": {
        start: {
          line: 20,
          column: 13
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "9": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 47
        }
      },
      "10": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 46
        }
      },
      "11": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 48
        }
      },
      "12": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 31,
          column: 2
        }
      },
      "13": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 30,
          column: 41
        }
      },
      "14": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 39,
          column: 2
        }
      },
      "15": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 38,
          column: 41
        }
      },
      "16": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 47,
          column: 2
        }
      },
      "17": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 46,
          column: 41
        }
      },
      "18": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 55,
          column: 2
        }
      },
      "19": {
        start: {
          line: 50,
          column: 2
        },
        end: {
          line: 54,
          column: 41
        }
      },
      "20": {
        start: {
          line: 57,
          column: 0
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "21": {
        start: {
          line: 58,
          column: 2
        },
        end: {
          line: 64,
          column: 3
        }
      },
      "22": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 39
        }
      },
      "23": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "24": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 62,
          column: 14
        }
      },
      "25": {
        start: {
          line: 67,
          column: 15
        },
        end: {
          line: 67,
          column: 32
        }
      },
      "26": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 68,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 26,
            column: 26
          }
        },
        loc: {
          start: {
            line: 26,
            column: 42
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 33,
            column: 29
          }
        },
        loc: {
          start: {
            line: 33,
            column: 45
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 27
          }
        },
        loc: {
          start: {
            line: 41,
            column: 43
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 41
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 49,
            column: 28
          },
          end: {
            line: 49,
            column: 29
          }
        },
        loc: {
          start: {
            line: 49,
            column: 45
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 49
      },
      "4": {
        name: "destroyAllFn",
        decl: {
          start: {
            line: 57,
            column: 40
          },
          end: {
            line: 57,
            column: 52
          }
        },
        loc: {
          start: {
            line: 57,
            column: 55
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }],
        line: 61
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f714623130bb65162c09f306739057f04f2a2bbe"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1689xuk1un = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1689xuk1un();

var _interopRequireWildcard =
/* istanbul ignore next */
(cov_1689xuk1un().s[0]++, require("@babel/runtime/helpers/interopRequireWildcard"));

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1689xuk1un().s[1]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1689xuk1un().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1689xuk1un().s[3]++;
exports["default"] = void 0;

var _objectSpread2 =
/* istanbul ignore next */
(cov_1689xuk1un().s[4]++, _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2")));

var _Modal =
/* istanbul ignore next */
(cov_1689xuk1un().s[5]++, _interopRequireWildcard(require("./Modal")));

var _ModalContainer =
/* istanbul ignore next */
(cov_1689xuk1un().s[6]++, require("../modal-container/ModalContainer"));

var _confirm =
/* istanbul ignore next */
(cov_1689xuk1un().s[7]++, _interopRequireDefault(require("./confirm")));

var _utils =
/* istanbul ignore next */
(cov_1689xuk1un().s[8]++, require("./utils"));

/* istanbul ignore next */
cov_1689xuk1un().s[9]++;
_Modal["default"].key = _ModalContainer.getKey;

/* istanbul ignore next */
cov_1689xuk1un().s[10]++;
_Modal["default"].open = _ModalContainer.open;

/* istanbul ignore next */
cov_1689xuk1un().s[11]++;
_Modal["default"].confirm = _confirm["default"];

/* istanbul ignore next */
cov_1689xuk1un().s[12]++;

_Modal["default"].info = function (props) {
  /* istanbul ignore next */
  cov_1689xuk1un().f[0]++;
  cov_1689xuk1un().s[13]++;
  return (0, _confirm["default"])((0, _objectSpread2["default"])({
    type: 'info',
    okCancel: false
  }, (0, _utils.normalizeProps)(props)));
};

/* istanbul ignore next */
cov_1689xuk1un().s[14]++;

_Modal["default"].success = function (props) {
  /* istanbul ignore next */
  cov_1689xuk1un().f[1]++;
  cov_1689xuk1un().s[15]++;
  return (0, _confirm["default"])((0, _objectSpread2["default"])({
    type: 'success',
    iconType: 'check_circle',
    okCancel: false
  }, (0, _utils.normalizeProps)(props)));
};

/* istanbul ignore next */
cov_1689xuk1un().s[16]++;

_Modal["default"].error = function (props) {
  /* istanbul ignore next */
  cov_1689xuk1un().f[2]++;
  cov_1689xuk1un().s[17]++;
  return (0, _confirm["default"])((0, _objectSpread2["default"])({
    type: 'error',
    iconType: 'cancel',
    okCancel: false
  }, (0, _utils.normalizeProps)(props)));
};

/* istanbul ignore next */
cov_1689xuk1un().s[18]++;

_Modal["default"].warning = function (props) {
  /* istanbul ignore next */
  cov_1689xuk1un().f[3]++;
  cov_1689xuk1un().s[19]++;
  return (0, _confirm["default"])((0, _objectSpread2["default"])({
    type: 'warning',
    iconType: 'warning',
    okCancel: false
  }, (0, _utils.normalizeProps)(props)));
};

/* istanbul ignore next */
cov_1689xuk1un().s[20]++;

_Modal["default"].destroyAll = function destroyAllFn() {
  /* istanbul ignore next */
  cov_1689xuk1un().f[4]++;
  cov_1689xuk1un().s[21]++;

  while (_Modal.destroyFns.length) {
    var close =
    /* istanbul ignore next */
    (cov_1689xuk1un().s[22]++, _Modal.destroyFns.pop());

    /* istanbul ignore next */
    cov_1689xuk1un().s[23]++;

    if (close) {
      /* istanbul ignore next */
      cov_1689xuk1un().b[0][0]++;
      cov_1689xuk1un().s[24]++;
      close();
    } else
    /* istanbul ignore next */
    {
      cov_1689xuk1un().b[0][1]++;
    }
  }
};

var _default =
/* istanbul ignore next */
(cov_1689xuk1un().s[25]++, _Modal["default"]);

/* istanbul ignore next */
cov_1689xuk1un().s[26]++;
exports["default"] = _default;