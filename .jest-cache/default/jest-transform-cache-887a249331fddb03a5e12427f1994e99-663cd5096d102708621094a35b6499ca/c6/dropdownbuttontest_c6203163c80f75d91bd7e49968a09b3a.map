{"version":3,"sources":["dropdown-button.test.js"],"names":["describe","it","props","align","offset","overlay","disabled","trigger","visible","onVisibleChange","wrapper","dropdownProps","find","Dropdown","Object","keys","forEach","key","expect","toBe"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BC,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7C,QAAMC,KAAK,GAAG;AACZC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL;AADH,OADK;AAIZC,MAAAA,OAAO,EACL,gCAAC,gBAAD,QACE,gCAAC,gBAAD,CAAM,IAAN,cADF,CALU;AASZC,MAAAA,QAAQ,EAAE,KATE;AAUZC,MAAAA,OAAO,EAAE,CAAC,OAAD,CAVG;AAWZC,MAAAA,OAAO,EAAE,IAXG;AAYZC,MAAAA,eAAe,EAAE,2BAAM,CAAE;AAZb,KAAd;AAeA,QAAMC,OAAO,GAAG,qBAAQ,gCAAC,YAAD,CAAU,MAAV,EAAqBR,KAArB,CAAR,CAAhB;AACA,QAAMS,aAAa,GAAGD,OAAO,CAACE,IAAR,CAAaC,YAAb,EAAuBX,KAAvB,EAAtB;AAEAY,IAAAA,MAAM,CAACC,IAAP,CAAYb,KAAZ,EAAmBc,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClCC,MAAAA,MAAM,CAACP,aAAa,CAACM,GAAD,CAAd,CAAN,CAA2BE,IAA3B,CAAgCjB,KAAK,CAACe,GAAD,CAArC,EADkC,CACW;AAC9C,KAFD;AAGD,GAtBC,CAAF;AAwBAhB,EAAAA,EAAE,CAAC,oDAAD,EAAuD,YAAM;AAC7D,QAAMS,OAAO,GAAG,qBAAQ,gCAAC,YAAD,CAAU,MAAV,OAAR,CAAhB;AACA,QAAMC,aAAa,GAAGD,OAAO,CAACE,IAAR,CAAaC,YAAb,EAAuBX,KAAvB,EAAtB;AAEAgB,IAAAA,MAAM,CAAC,aAAaP,aAAd,CAAN,CAAmCQ,IAAnC,CAAwC,KAAxC;AACD,GALC,CAAF;AAMD,CA/BO,CAAR","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport Dropdown from '..';\nimport Menu from '../../menu';\n\ndescribe('DropdownButton', () => {\n  it('pass appropriate props to Dropdown', () => {\n    const props = {\n      align: {\n        offset: [10, 20],\n      },\n      overlay: (\n        <Menu>\n          <Menu.Item>foo</Menu.Item>\n        </Menu>\n      ),\n      disabled: false,\n      trigger: ['hover'],\n      visible: true,\n      onVisibleChange: () => {},\n    };\n\n    const wrapper = shallow(<Dropdown.Button {...props} />);\n    const dropdownProps = wrapper.find(Dropdown).props();\n\n    Object.keys(props).forEach((key) => {\n      expect(dropdownProps[key]).toBe(props[key]); // eslint-disable-line\n    });\n  });\n\n  it('don\\'t pass visible to Dropdown if it\\'s not exits', () => {\n    const wrapper = shallow(<Dropdown.Button />);\n    const dropdownProps = wrapper.find(Dropdown).props();\n\n    expect('visible' in dropdownProps).toBe(false);\n  });\n});\n"]}