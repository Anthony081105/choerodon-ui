{"version":3,"sources":["TimePicker.jsx"],"names":["refFn","field","component","Picker","props","value","setValue","setOpen","open","focus","e","keyCode","saveInputRef","bind","savePanelRef","defaultOpen","defaultValue","state","nextProps","setState","undefined","onChange","format","showHour","showMinute","showSecond","use12Hours","fmtString","filter","item","join","concat","prefixCls","placeholder","disabledHours","disabledMinutes","disabledSeconds","hideDisabledOptions","inputReadOnly","allowEmpty","defaultOpenValue","clearText","addon","focusOnOpen","onKeyDown","hourStep","minuteStep","secondStep","onPanelChange","onPanelClear","onEsc","getFormat","popupClassName","selectColumnCount","label","placement_haslabel","placements","onOpen","onClose","picker","blur","placement","align","id","disabled","transitionName","style","className","getPopupContainer","name","autoComplete","onFocus","onBlur","autoFocus","getPopupClassName","getPanelElement","getBuiltInPlacements","onVisibleChange","noop","Component","PropTypes","string","object","bool","any","func","number","oneOfType","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from 'lodash/noop';\nimport moment from 'moment';\nimport Trigger from '../trigger';\nimport Panel from './Panel';\nimport placements, { getPlacements } from './placements';\nimport Icon from '../../icon';\nimport Input from '../../input';\n\nfunction refFn(field, component) {\n  this[field] = component;\n}\n\nexport default class Picker extends Component {\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    clearText: PropTypes.string,\n    value: PropTypes.object,\n    defaultOpenValue: PropTypes.object,\n    inputReadOnly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    allowEmpty: PropTypes.bool,\n    defaultValue: PropTypes.object,\n    open: PropTypes.bool,\n    defaultOpen: PropTypes.bool,\n    align: PropTypes.object,\n    placement: PropTypes.any,\n    transitionName: PropTypes.string,\n    getPopupContainer: PropTypes.func,\n    placeholder: PropTypes.string,\n    format: PropTypes.string,\n    showHour: PropTypes.bool,\n    showMinute: PropTypes.bool,\n    showSecond: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    popupClassName: PropTypes.string,\n    disabledHours: PropTypes.func,\n    disabledMinutes: PropTypes.func,\n    disabledSeconds: PropTypes.func,\n    hideDisabledOptions: PropTypes.bool,\n    onChange: PropTypes.func,\n    onOpen: PropTypes.func,\n    onClose: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    addon: PropTypes.func,\n    name: PropTypes.string,\n    autoComplete: PropTypes.string,\n    use12Hours: PropTypes.bool,\n    hourStep: PropTypes.number,\n    minuteStep: PropTypes.number,\n    secondStep: PropTypes.number,\n    focusOnOpen: PropTypes.bool,\n    onKeyDown: PropTypes.func,\n    autoFocus: PropTypes.bool,\n    id: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n  };\n\n  static defaultProps = {\n    clearText: 'clear',\n    prefixCls: 'rc-time-picker',\n    defaultOpen: false,\n    inputReadOnly: false,\n    style: {},\n    className: '',\n    popupClassName: '',\n    id: '',\n    align: {},\n    defaultOpenValue: moment(),\n    allowEmpty: true,\n    showHour: true,\n    showMinute: true,\n    showSecond: true,\n    disabledHours: noop,\n    disabledMinutes: noop,\n    disabledSeconds: noop,\n    hideDisabledOptions: false,\n    placement: 'bottomLeft',\n    onChange: noop,\n    onOpen: noop,\n    onClose: noop,\n    onFocus: noop,\n    onBlur: noop,\n    addon: noop,\n    use12Hours: false,\n    focusOnOpen: false,\n    onKeyDown: noop,\n  };\n\n  constructor(props) {\n    super(props);\n    this.saveInputRef = refFn.bind(this, 'picker');\n    this.savePanelRef = refFn.bind(this, 'panelInstance');\n    const { defaultOpen, defaultValue, open = defaultOpen, value = defaultValue } = props;\n    this.state = {\n      open,\n      value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value, open } = nextProps;\n    if ('value' in nextProps) {\n      this.setState({\n        value,\n      });\n    }\n    if (open !== undefined) {\n      this.setState({ open });\n    }\n  }\n\n  onPanelChange = (value) => {\n    this.setValue(value);\n  }\n\n  onPanelClear = () => {\n    this.setValue(null);\n    this.setOpen(false);\n  }\n\n  onVisibleChange = (open) => {\n    this.setOpen(open);\n  }\n\n  onEsc = () => {\n    this.setOpen(false);\n    this.focus();\n  }\n\n  onKeyDown = (e) => {\n    if (e.keyCode === 40) {\n      this.setOpen(true);\n    }\n  }\n\n  setValue(value) {\n    if (!('value' in this.props)) {\n      this.setState({\n        value,\n      });\n    }\n    this.props.onChange(value);\n  }\n\n  getFormat() {\n    const { format, showHour, showMinute, showSecond, use12Hours } = this.props;\n    if (format) {\n      return format;\n    }\n\n    if (use12Hours) {\n      const fmtString = ([\n        showHour ? 'h' : '',\n        showMinute ? 'mm' : '',\n        showSecond ? 'ss' : '',\n      ].filter(item => !!item).join(':'));\n\n      return fmtString.concat(' a');\n    }\n\n    return [\n      showHour ? 'HH' : '',\n      showMinute ? 'mm' : '',\n      showSecond ? 'ss' : '',\n    ].filter(item => !!item).join(':');\n  }\n\n  getPanelElement() {\n    const {\n      prefixCls, placeholder, disabledHours,\n      disabledMinutes, disabledSeconds, hideDisabledOptions, inputReadOnly,\n      allowEmpty, showHour, showMinute, showSecond, defaultOpenValue, clearText,\n      addon, use12Hours, focusOnOpen, onKeyDown, hourStep, minuteStep, secondStep,\n    } = this.props;\n    return (\n      <Panel\n        clearText={clearText}\n        prefixCls={`${prefixCls}-panel`}\n        ref={this.savePanelRef}\n        value={this.state.value}\n        inputReadOnly={inputReadOnly}\n        onChange={this.onPanelChange}\n        onClear={this.onPanelClear}\n        defaultOpenValue={defaultOpenValue}\n        showHour={showHour}\n        showMinute={showMinute}\n        showSecond={showSecond}\n        onEsc={this.onEsc}\n        allowEmpty={allowEmpty}\n        format={this.getFormat()}\n        placeholder={placeholder}\n        disabledHours={disabledHours}\n        disabledMinutes={disabledMinutes}\n        disabledSeconds={disabledSeconds}\n        hideDisabledOptions={hideDisabledOptions}\n        use12Hours={use12Hours}\n        hourStep={hourStep}\n        minuteStep={minuteStep}\n        secondStep={secondStep}\n        addon={addon}\n        focusOnOpen={focusOnOpen}\n        onKeyDown={onKeyDown}\n      />\n    );\n  }\n\n  getPopupClassName() {\n    const { showHour, showMinute, showSecond, use12Hours, prefixCls } = this.props;\n    let popupClassName = this.props.popupClassName;\n    // Keep it for old compatibility\n    if ((!showHour || !showMinute || !showSecond) && !use12Hours) {\n      popupClassName += ` ${prefixCls}-panel-narrow`;\n    }\n    let selectColumnCount = 0;\n    if (showHour) {\n      selectColumnCount += 1;\n    }\n    if (showMinute) {\n      selectColumnCount += 1;\n    }\n    if (showSecond) {\n      selectColumnCount += 1;\n    }\n    if (use12Hours) {\n      selectColumnCount += 1;\n    }\n    popupClassName += ` ${prefixCls}-panel-column-${selectColumnCount}`;\n    return popupClassName;\n  }\n\n  getBuiltInPlacements() {\n    const { label } = this.props;\n    const placement_haslabel = {\n      'bottomLeft': [0, -19],\n      'bottomRight': [0, -19],\n    };\n    if (label) {\n      return getPlacements(placement_haslabel);\n    }\n    return placements;\n  }\n\n  setOpen(open) {\n    const { onOpen, onClose } = this.props;\n    if (this.state.open !== open) {\n      if (!('open' in this.props)) {\n        this.setState({ open });\n      }\n      if (open) {\n        onOpen({ open });\n      } else {\n        onClose({ open });\n      }\n    }\n  }\n\n  focus() {\n    this.picker.focus();\n  }\n\n  blur() {\n    this.picker.blur();\n  }\n\n  render() {\n    const {\n      prefixCls, placeholder, placement, align, id,\n      disabled, transitionName, style, className, getPopupContainer, name, autoComplete,\n      onFocus, onBlur, autoFocus, inputReadOnly, label\n    } = this.props;\n    const { open, value } = this.state;\n    const popupClassName = this.getPopupClassName();\n    return (\n      <Trigger\n        prefixCls={`${prefixCls}-panel`}\n        popupClassName={popupClassName}\n        popup={this.getPanelElement()}\n        popupAlign={align}\n        builtinPlacements={this.getBuiltInPlacements()}\n        popupPlacement={placement}\n        action={disabled ? [] : ['click']}\n        destroyPopupOnHide\n        getPopupContainer={getPopupContainer}\n        popupTransitionName={transitionName}\n        popupVisible={open}\n        onPopupVisibleChange={this.onVisibleChange}\n      >\n        <span className={`${prefixCls} ${className}`} style={style}>\n          <Input\n            className={`${prefixCls}-input`}\n            ref={this.saveInputRef}\n            type=\"text\"\n            label={label}\n            placeholder={placeholder}\n            name={name}\n            onKeyDown={this.onKeyDown}\n            disabled={disabled}\n            value={value && value.format(this.getFormat()) || ''}\n            autoComplete={autoComplete}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            suffix={<Icon type=\"av_timer\" className={`${prefixCls}-icon`}/>}\n            autoFocus={autoFocus}\n            focused={open}\n            onChange={noop}\n            readOnly\n            id={id}\n          />\n        </span>\n      </Trigger>\n    );\n  }\n}\n"]}