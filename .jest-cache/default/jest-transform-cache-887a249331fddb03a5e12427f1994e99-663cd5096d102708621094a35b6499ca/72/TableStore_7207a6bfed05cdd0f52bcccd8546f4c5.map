{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/TableStore.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Children, isValidElement, ReactNode } from 'react';\nimport { action, set, computed, observable, runInAction } from 'mobx';\nimport isNil from 'lodash/isNil';\nimport isPlainObject from 'lodash/isPlainObject';\nimport defer from 'lodash/defer';\nimport measureScrollbar from 'choerodon-ui/lib/_util/measureScrollbar';\nimport { getConfig, getProPrefixCls } from 'choerodon-ui/lib/configure';\nimport Icon from 'choerodon-ui/lib/icon'\nimport { isFunction } from 'lodash';\nimport Column, { ColumnProps, columnWidth } from './Column';\nimport DataSet from '../data-set/DataSet';\nimport Record from '../data-set/Record';\nimport ObserverCheckBox from '../check-box';\nimport ObserverRadio from '../radio';\nimport { DataSetSelection, RecordStatus } from '../data-set/enum';\nimport {\n  ColumnAlign,\n  ColumnLock,\n  SelectionMode,\n  TableEditMode,\n  TableMode,\n  TableQueryBarType,\n  DragColumnAlign,\n} from './enum';\nimport { stopPropagation } from '../_util/EventManager';\nimport { getColumnKey, getHeader } from './utils';\nimport getReactNodeText from '../_util/getReactNodeText';\nimport ColumnGroups from './ColumnGroups';\nimport autobind from '../_util/autobind';\nimport ColumnGroup from './ColumnGroup';\nimport { expandIconProps, TablePaginationConfig } from './Table';\n\nexport const SELECTION_KEY = '__selection-column__';\n\nexport const DRAG_KEY = '__drag-column__';\n\nexport const EXPAND_KEY = '__expand-column__';\n\nexport type HeaderText = { name: string; label: string; };\n\nexport const getIdList = (startId: number, endId: number) => {\n  const idList: any[] = [];\n  const min = Math.min(startId, endId);\n  const max = Math.max(startId, endId);\n  for (let i = min; i <= max; i++) {\n    idList.push(i);\n  }\n  return idList;\n};\n\nfunction renderSelectionBox({ record, store }: { record: any, store: TableStore; }) {\n  const { dataSet } = record;\n  if (dataSet) {\n    const { selection } = dataSet;\n    const handleChange = value => {\n      if (store.props.selectionMode === SelectionMode.mousedown) {\n        // 将处理逻辑交给 mousedown 的处理逻辑 不然会两次触发导致不被勾选上\n        return;\n      }\n      if (value) {\n        dataSet.select(record);\n      } else {\n        dataSet.unSelect(record);\n      }\n    };\n\n    const handleClick = e => {\n      stopPropagation(e);\n      if (record.isSelected) {\n        dataSet.unSelect(record);\n      }\n    };\n\n    const handleMouseDown = () => {\n      if (store.useMouseBatchChoose) {\n        store.mouseBatchChooseStartId = record.id;\n        store.mouseBatchChooseEndId = record.id;\n        store.mouseBatchChooseState = true;\n      }\n    };\n\n    const handleMouseEnter = () => {\n      if (store.useMouseBatchChoose && store.mouseBatchChooseState) {\n        store.mouseBatchChooseEndId = record.id;\n        store.changeMouseBatchChooseIdList(getIdList(store.mouseBatchChooseStartId, store.mouseBatchChooseEndId));\n      }\n    };\n\n    if (selection === DataSetSelection.multiple) {\n      return (\n        <ObserverCheckBox\n          checked={record.isSelected}\n          onChange={handleChange}\n          onClick={stopPropagation}\n          onMouseDown={handleMouseDown}\n          onMouseEnter={handleMouseEnter}\n          disabled={!record.selectable}\n          value\n        />\n      );\n    }\n    if (selection === DataSetSelection.single) {\n      return (\n        <ObserverRadio\n          checked={record.isSelected}\n          onChange={handleChange}\n          onClick={handleClick}\n          onMouseDown={handleMouseDown}\n          onMouseEnter={handleMouseEnter}\n          disabled={!record.selectable}\n          value\n        />\n      );\n    }\n  }\n}\n\nfunction mergeDefaultProps(columns: ColumnProps[], defaultKey: number[] = [0]): ColumnProps[] {\n  const columnsNew: any[] = [];\n  const leftFixedColumns: any[] = [];\n  const rightFixedColumns: any[] = [];\n  columns.forEach((column: ColumnProps) => {\n    if (isPlainObject(column)) {\n      const newColumn: ColumnProps = { ...Column.defaultProps, ...column };\n      if (isNil(getColumnKey(newColumn))) {\n        newColumn.key = `anonymous-${defaultKey[0]++}`;\n      }\n      const { children } = newColumn;\n      if (children) {\n        newColumn.children = mergeDefaultProps(children, defaultKey);\n      }\n      if (newColumn.lock === ColumnLock.left || newColumn.lock === true) {\n        leftFixedColumns.push(newColumn);\n      } else if (newColumn.lock === ColumnLock.right) {\n        rightFixedColumns.push(newColumn);\n      } else {\n        columnsNew.push(newColumn);\n      }\n    }\n  });\n  return leftFixedColumns.concat(columnsNew, rightFixedColumns);\n}\n\nfunction normalizeColumns(\n  elements: ReactNode,\n  parent: ColumnProps | null = null,\n  defaultKey: number[] = [0],\n) {\n  const columns: any[] = [];\n  const leftFixedColumns: any[] = [];\n  const rightFixedColumns: any[] = [];\n  Children.forEach(elements, element => {\n    if (!isValidElement(element) || element.type !== Column) {\n      return;\n    }\n    const { props, key } = element;\n    const column: any = {\n      ...props,\n    };\n    if (isNil(getColumnKey(column))) {\n      column.key = `anonymous-${defaultKey[0]++}`;\n    }\n    if (parent) {\n      column.lock = parent.lock;\n    }\n    column.children = normalizeColumns(column.children, column, defaultKey);\n    if (key) {\n      column.key = key;\n    }\n    if (column.lock === ColumnLock.left || column.lock === true) {\n      leftFixedColumns.push(column);\n    } else if (column.lock === ColumnLock.right) {\n      rightFixedColumns.push(column);\n    } else {\n      columns.push(column);\n    }\n  });\n  return leftFixedColumns.concat(columns, rightFixedColumns);\n}\n\nasync function getHeaderTexts(\n  dataSet: DataSet,\n  columns: ColumnProps[],\n  headers: HeaderText[] = [],\n): Promise<HeaderText[]> {\n  const column = columns.shift();\n  if (column) {\n    headers.push({ name: column.name!, label: await getReactNodeText(getHeader(column, dataSet)) });\n  }\n  if (columns.length) {\n    await getHeaderTexts(dataSet, columns, headers);\n  }\n  return headers;\n}\n\nexport default class TableStore {\n  node: any;\n\n  @observable props: any;\n\n  @observable bodyHeight: number;\n\n  @observable width?: number;\n\n  @observable height?: number;\n\n  @observable lastScrollTop?: number;\n\n  @observable lockColumnsBodyRowsHeight: any;\n\n  @observable lockColumnsFootRowsHeight: any;\n\n  @observable lockColumnsHeadRowsHeight: any;\n\n  @observable expandedRows: (string | number)[];\n\n  @observable hoverRow?: Record;\n\n  @observable currentEditorName?: string;\n\n  @observable styledHidden?: boolean;\n\n  mouseBatchChooseStartId: number = 0;\n\n  mouseBatchChooseEndId: number = 0;\n\n  mouseBatchChooseState: boolean = false;\n\n  @observable mouseBatchChooseIdList?: number[];\n\n  @observable columnDeep: number ;\n\n  @computed\n  get dataSet(): DataSet {\n    return this.props.dataSet;\n  }\n\n  get hidden(): boolean {\n    return !!this.styledHidden || this.props.hidden;\n  }\n\n  @computed\n  get alwaysShowRowBox(): boolean {\n    if ('alwaysShowRowBox' in this.props) {\n      return this.props.alwaysShowRowBox;\n    }\n    const alwaysShowRowBox = getConfig('tableAlwaysShowRowBox');\n    if (typeof alwaysShowRowBox !== 'undefined') {\n      return alwaysShowRowBox;\n    }\n    return false;\n  }\n\n  @computed\n  get columnResizable(): boolean {\n    if (this.currentEditRecord) {\n      return false;\n    }\n    if ('columnResizable' in this.props) {\n      return this.props.columnResizable;\n    }\n    if (getConfig('tableColumnResizable') === false) {\n      return false;\n    }\n    return true;\n  }\n\n  @computed\n  get dragRow(): boolean {\n    if(this.isTree){\n      return false;\n    }\n    return this.props.dragRow\n  }\n\n  @computed\n  get pagination(): TablePaginationConfig | false | undefined {\n    if ('pagination' in this.props) {\n      return this.props.pagination;\n    }\n    return getConfig('pagination');\n  }\n\n  @computed\n  get rowHeight(): 'auto' | number {\n    if ('rowHeight' in this.props) {\n      return this.props.rowHeight;\n    }\n    const rowHeight = getConfig('tableRowHeight');\n    if (typeof rowHeight !== 'undefined') {\n      return rowHeight;\n    }\n    return 30;\n  }\n\n  @computed\n  get emptyText(): ReactNode {\n    return getConfig('renderEmpty')('Table');\n  }\n\n  @computed\n  get highLightRow(): boolean {\n    if ('highLightRow' in this.props) {\n      return this.props.highLightRow;\n    }\n    if (getConfig('tableHighLightRow') === false) {\n      return false;\n    }\n    return true;\n  }\n\n  @computed\n  get selectedHighLightRow(): boolean {\n    if ('selectedHighLightRow' in this.props) {\n      return this.props.selectedHighLightRow;\n    }\n    if (getConfig('tableSelectedHighLightRow') === false) {\n      return false;\n    }\n    return true;\n  }\n\n  @computed\n  get border(): boolean {\n    if ('border' in this.props) {\n      return this.props.border;\n    }\n    if (getConfig('tableBorder') === false) {\n      return false;\n    }\n    return true;\n  }\n\n  @computed\n  get queryBar(): TableQueryBarType {\n    return this.props.queryBar || getConfig('queryBar');\n  }\n\n  @computed\n  get expandIcon(): (props: expandIconProps) => ReactNode {\n    return this.props.expandIcon || getConfig('tableExpandIcon');\n  }\n\n  get pristine(): boolean {\n    return this.props.pristine;\n  }\n\n  @computed\n  get currentEditRecord(): Record | undefined {\n    return this.dataSet.find(record => record.editing === true);\n  }\n\n  set currentEditRecord(record: Record | undefined) {\n    runInAction(() => {\n      const { currentEditRecord, dataSet } = this;\n      if (currentEditRecord) {\n        if (currentEditRecord.status === RecordStatus.add) {\n          dataSet.remove(currentEditRecord);\n        } else {\n          currentEditRecord.reset();\n          currentEditRecord.editing = false;\n        }\n      }\n      if (record) {\n        defer(action(() => (record.editing = true)));\n      }\n    });\n  }\n\n  @observable showCachedSeletion?: boolean;\n\n  get isTree(): boolean {\n    return this.props.mode === TableMode.tree;\n  }\n\n  get editing(): boolean {\n    return this.currentEditorName !== undefined || this.currentEditRecord !== undefined;\n  }\n\n  @computed\n  get hasRowBox(): boolean {\n    const { dataSet, selectionMode } = this.props;\n    const { alwaysShowRowBox } = this;\n    if (dataSet) {\n      const { selection } = dataSet;\n      return selection && (selectionMode === SelectionMode.rowbox || alwaysShowRowBox);\n    }\n    return false;\n  }\n\n  @computed\n  get useMouseBatchChoose(): boolean {\n    const { useMouseBatchChoose } = this.props;\n    return useMouseBatchChoose || getConfig('tableUseMouseBatchChoose') || false;\n  }\n\n  @computed\n  get overflowX(): boolean {\n    if (this.width) {\n      return this.totalLeafColumnsWidth > this.width;\n    }\n    return false;\n  }\n\n  @computed\n  get overflowY(): boolean {\n    const { bodyHeight, height } = this;\n    return (\n      bodyHeight !== undefined &&\n      height !== undefined &&\n      height < bodyHeight + (this.overflowX ? measureScrollbar() : 0)\n    );\n  }\n\n  @computed\n  get columns(): ColumnProps[] {\n    const { columns, children } = this.props;\n    return observable.array(\n      this.addExpandColumn(\n        this.addDragColumn(this.addSelectionColumn(columns ? mergeDefaultProps(columns) : normalizeColumns(children))),\n      ),\n    );\n  }\n\n  set columns(columns: ColumnProps[]){\n    runInAction(() => {\n      set(this.props, 'columns', columns);\n    });\n  }\n\n  @computed\n  get leftColumns(): ColumnProps[] {\n    return this.columns.filter(column => column.lock === ColumnLock.left || column.lock === true);\n  }\n\n  @computed\n  get rightColumns(): ColumnProps[] {\n    return this.columns.filter(column => column.lock === ColumnLock.right);\n  }\n\n  @computed\n  get columnGroups(): ColumnGroups {\n    return new ColumnGroups(this.columns);\n  }\n\n  @computed\n  get groupedColumns(): ColumnGroup[] {\n    return this.columnGroups.columns;\n  }\n\n  @computed\n  get leftGroupedColumns(): ColumnGroup[] {\n    return this.groupedColumns.filter(\n      ({ column: { lock } }) => lock === ColumnLock.left || lock === true,\n    );\n  }\n\n  @computed\n  get rightGroupedColumns(): ColumnGroup[] {\n    return this.groupedColumns.filter(({ column: { lock } }) => lock === ColumnLock.right);\n  }\n\n  @computed\n  get leafColumns(): ColumnProps[] {\n    return this.getLeafColumns(this.columns);\n  }\n\n  @computed\n  get leftLeafColumns(): ColumnProps[] {\n    return this.getLeafColumns(this.leftColumns);\n  }\n\n  @computed\n  get rightLeafColumns(): ColumnProps[] {\n    return this.getLeafColumns(this.rightColumns);\n  }\n\n  @computed\n  get leafNamedColumns(): ColumnProps[] {\n    return this.leafColumns.filter(column => !!column.name);\n  }\n\n  @computed\n  get totalLeafColumnsWidth(): number {\n    return this.leafColumns.reduce((total, column) => total + columnWidth(column), 0);\n  }\n\n  @computed\n  get leftLeafColumnsWidth(): number {\n    return this.leftLeafColumns.reduce((total, column) => total + columnWidth(column), 0);\n  }\n\n  @computed\n  get rightLeafColumnsWidth(): number {\n    return this.rightLeafColumns.reduce((total, column) => total + columnWidth(column), 0);\n  }\n\n  @computed\n  get hasCheckFieldColumn(): boolean {\n    const { checkField } = this.dataSet.props;\n    return this.leafColumns.some(({ name, editor }) => !!editor && checkField === name);\n  }\n\n  @computed\n  get hasFooter(): boolean {\n    return this.leafColumns.some(column => !!column.footer && column.key !== SELECTION_KEY);\n  }\n\n  @computed\n  get isAnyColumnsResizable(): boolean {\n    return this.leafColumns.some(column => column.resizable === true);\n  }\n\n  @computed\n  get isAnyColumnsLock(): boolean {\n    return this.columns.some(column => !!column.lock);\n  }\n\n  @computed\n  get isAnyColumnsLeftLock(): boolean {\n    return this.columns.some(column => column.lock === ColumnLock.left || column.lock === true);\n  }\n\n  @computed\n  get isAnyColumnsRightLock(): boolean {\n    return this.columns.some(column => column.lock === ColumnLock.right);\n  }\n\n  @computed\n  get data(): Record[] {\n    const { filter, pristine } = this.props;\n    const { dataSet, isTree, showCachedSeletion } = this;\n    let data = isTree ? dataSet.treeRecords : dataSet.records;\n    if (typeof filter === 'function') {\n      data = data.filter(filter);\n    }\n    if (pristine) {\n      data = data.filter(record => record.status !== RecordStatus.add);\n    }\n    if (showCachedSeletion) {\n      return [...dataSet.cachedSelected, ...data];\n    }\n    return data;\n  }\n\n  @computed\n  get indeterminate(): boolean {\n    const { dataSet, showCachedSeletion } = this;\n    if (dataSet) {\n      const { length } = dataSet.records.filter(record => record.selectable);\n      const selectedLength = showCachedSeletion\n        ? dataSet.selected.length\n        : dataSet.currentSelected.length;\n      return !!selectedLength && selectedLength !== length;\n    }\n    return false;\n  }\n\n  @computed\n  get allChecked(): boolean {\n    const { dataSet, showCachedSeletion } = this;\n    if (dataSet) {\n      const { length } = dataSet.records.filter(record => record.selectable);\n      const selectedLength = showCachedSeletion\n        ? dataSet.selected.length\n        : dataSet.currentSelected.length;\n      return !!selectedLength && selectedLength === length;\n    }\n    return false;\n  }\n\n  @computed\n  get expandIconAsCell(): boolean {\n    const { expandedRowRenderer } = this.props;\n    return !!expandedRowRenderer && !this.isTree;\n  }\n\n  @computed\n  get expandIconColumnIndex(): number {\n    const {\n      expandIconAsCell,\n      props: { expandIconColumnIndex = 0 },\n    } = this;\n    if (expandIconAsCell) {\n      return 0;\n    }\n    if (this.hasRowBox) {\n      return expandIconColumnIndex + 1;\n    }\n    return expandIconColumnIndex;\n  }\n\n  @computed\n  get inlineEdit() {\n    return this.props.editMode === TableEditMode.inline;\n  }\n\n  @computed \n  get columnMaxDeep() {\n    return this.columnDeep\n  }\n\n  set columnMaxDeep(deep:number) {\n    runInAction(() => {\n      this.columnDeep = Math.max(this.columnDeep,deep);\n    })\n    \n  }\n\n  private handleSelectAllChange = action(value => {\n    const { dataSet, filter } = this.props;\n    if (value) {\n      dataSet.selectAll(filter);\n    } else {\n      dataSet.unSelectAll();\n      if (this.showCachedSeletion) {\n        dataSet.clearCachedSelected();\n      }\n    }\n  });\n\n  constructor(node) {\n    runInAction(() => {\n      this.showCachedSeletion = false;\n      this.lockColumnsHeadRowsHeight = {};\n      this.lockColumnsBodyRowsHeight = {};\n      this.lockColumnsFootRowsHeight = {};\n      this.node = node;\n      this.expandedRows = [];\n      this.columnDeep = 0;\n    });\n    this.setProps(node.props);\n  }\n\n  async getColumnHeaders(): Promise<HeaderText[]> {\n    const { leafNamedColumns, dataSet } = this;\n    return getHeaderTexts(dataSet, leafNamedColumns.slice());\n  }\n\n  @action\n  showEditor(name: string) {\n    this.currentEditorName = name;\n  }\n\n  @action\n  setLastScrollTop(lastScrollTop: number) {\n    this.lastScrollTop = lastScrollTop;\n  }\n\n  @action\n  hideEditor() {\n    this.currentEditorName = undefined;\n  }\n\n  @action\n  changeMouseBatchChooseIdList(idList: number[]) {\n    this.mouseBatchChooseIdList = idList;\n  }\n\n  showNextEditor(name: string, reserve: boolean) {\n    if (reserve) {\n      this.dataSet.pre();\n    } else {\n      this.dataSet.next();\n    }\n    this.showEditor(name);\n  }\n\n  @action\n  setProps(props) {\n    this.props = props;\n  }\n\n  isRowExpanded(record: Record): boolean {\n    const { parent } = record;\n    const expanded =\n      (this.dataSet.props.expandField && record.isExpanded) ||\n      this.expandedRows.indexOf(record.key) !== -1;\n    return expanded && (!this.isTree || !parent || this.isRowExpanded(parent));\n  }\n\n  @action\n  setRowExpanded(record: Record, expanded: boolean) {\n    if (this.dataSet.props.expandField) {\n      record.isExpanded = expanded;\n    }\n    const index = this.expandedRows.indexOf(record.key);\n    if (expanded) {\n      if (index === -1) {\n        this.expandedRows.push(record.key);\n      }\n    } else if (index !== -1) {\n      this.expandedRows.splice(index, 1);\n    }\n    const { onExpand } = this.props;\n    if (onExpand) {\n      onExpand(expanded, record);\n    }\n  }\n\n  isRowHover(record: Record): boolean {\n    return this.hoverRow === record;\n  }\n\n  @action\n  setRowHover(record: Record, hover: boolean) {\n    this.hoverRow = hover ? record : undefined;\n  }\n\n  @action\n  expandAll() {\n    this.dataSet.records.forEach(record => this.setRowExpanded(record, true));\n  }\n\n  @action\n  collapseAll() {\n    this.dataSet.records.forEach(record => this.setRowExpanded(record, false));\n  }\n\n  private getLeafColumns(columns: ColumnProps[]): ColumnProps[] {\n    const leafColumns: ColumnProps[] = [];\n    columns.forEach(column => {\n      if (!column.children || column.children.length === 0) {\n        leafColumns.push(column);\n      } else {\n        leafColumns.push(...this.getLeafColumns(column.children));\n      }\n    });\n    return leafColumns;\n  }\n\n  private addExpandColumn(columns: ColumnProps[]): ColumnProps[] {\n    if (this.expandIconAsCell) {\n      columns.unshift({\n        key: EXPAND_KEY,\n        resizable: false,\n        align: ColumnAlign.center,\n        width: 50,\n        lock: true,\n      });\n    }\n    return columns;\n  }\n\n  @autobind\n  private multipleSelectionRenderer() {\n    return (\n      <ObserverCheckBox\n        checked={this.allChecked}\n        indeterminate={this.indeterminate}\n        onChange={this.handleSelectAllChange}\n        value\n      />\n    );\n  }\n\n  private addSelectionColumn(columns: ColumnProps[]): ColumnProps[] {\n    if (this.hasRowBox) {\n      const { dataSet } = this;\n      const { suffixCls, prefixCls } = this.props;\n      const selectionColumn: ColumnProps = {\n        key: SELECTION_KEY,\n        resizable: false,\n        className: `${getProPrefixCls(suffixCls!, prefixCls)}-selection-column`,\n        renderer: ({ record }) => renderSelectionBox({ record, store: this }),\n        align: ColumnAlign.center,\n        width: 50,\n        lock: true,\n      };\n      if (dataSet && dataSet.selection === DataSetSelection.multiple) {\n        selectionColumn.header = this.multipleSelectionRenderer;\n        selectionColumn.footer = this.multipleSelectionRenderer;\n      }\n      columns.unshift(selectionColumn);\n    }\n    return columns;\n  }\n\n  renderDrageBox({record}) {\n    const {rowDragRender} = this.props\n      if( rowDragRender && isFunction(rowDragRender.renderIcon)){\n        return  rowDragRender.renderIcon({record})\n      }\n      return (<Icon type=\"baseline-drag_indicator\" />)\n  }\n\n  private addDragColumn(columns: ColumnProps[]): ColumnProps[] {\n    const { suffixCls, prefixCls,dragColumnAlign } = this.props;\n    if(dragColumnAlign){\n      const dragColumn : ColumnProps = {\n        key: DRAG_KEY,\n        resizable:false,\n        className: `${getProPrefixCls(suffixCls!, prefixCls)}-drag-column`,\n        renderer:({ record }) => this.renderDrageBox({record}),\n        align: ColumnAlign.center,\n        width:50,\n      } \n      if(dragColumnAlign === DragColumnAlign.left) {\n        dragColumn.lock = ColumnLock.left\n        columns.unshift(dragColumn);\n      }\n\n      if(dragColumnAlign === DragColumnAlign.right) {\n        dragColumn.lock = ColumnLock.right\n        columns.push(dragColumn)\n      }\n      \n    }\n    return columns;\n  }\n\n}\n"]}