{"version":3,"sources":["index.test.js"],"names":["describe","it","handleDataSetChange","jest","fn","ds","DataSet","autoCreate","fields","name","type","defaultValue","required","currency","events","update","wrapper","expect","find","prop","toEqual","stringContaining"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,UAAD,EAAa,YAAM;AACzBC,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3C,QAAMC,mBAAmB,GAAGC,IAAI,CAACC,EAAL,EAA5B;AACA,QAAMC,EAAE,GAAG,IAAIC,mBAAJ,CAAY;AACrBC,MAAAA,UAAU,EAAE,IADS;AAErBC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,IAAI,EAAE,QAFR;AAGEC,QAAAA,YAAY,EAAE,eAHhB;AAIEC,QAAAA,QAAQ,EAAE,IAJZ;AAKEC,QAAAA,QAAQ,EAAE;AALZ,OADM,CAFa;AAWrBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAEb;AADF;AAXa,KAAZ,CAAX;AAeA,QAAMc,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAU,MAAA,OAAO,EAAEX,EAAnB;AAAuB,MAAA,IAAI,EAAC;AAA5B,MAAN,CAAhB;AACAY,IAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,OAAb,EAAsBC,IAAtB,CAA2B,OAA3B,CAAD,CAAN,CAA4CC,OAA5C,CAAoDH,MAAM,CAACI,gBAAP,CAAwB,KAAxB,CAApD;AACD,GAnBC,CAAF;AAoBApB,EAAAA,EAAE,CAAC,gCAAD,EAAmC,YAAM;AACzC,QAAMC,mBAAmB,GAAGC,IAAI,CAACC,EAAL,EAA5B;AACA,QAAMC,EAAE,GAAG,IAAIC,mBAAJ,CAAY;AACrBC,MAAAA,UAAU,EAAE,IADS;AAErBC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,IAAI,EAAE,QAFR;AAGEC,QAAAA,YAAY,EAAE,GAHhB;AAIEC,QAAAA,QAAQ,EAAE,IAJZ;AAKEC,QAAAA,QAAQ,EAAE;AALZ,OADM,CAFa;AAWrBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAEb;AADF;AAXa,KAAZ,CAAX;AAeA,QAAMc,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAU,MAAA,OAAO,EAAEX,EAAnB;AAAuB,MAAA,IAAI,EAAC;AAA5B,MAAN,CAAhB;AACAY,IAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,OAAb,EAAsBC,IAAtB,CAA2B,OAA3B,CAAD,CAAN,CAA4CC,OAA5C,CAAoDH,MAAM,CAACI,gBAAP,CAAwB,GAAxB,CAApD;AACAJ,IAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,OAAb,EAAsBC,IAAtB,CAA2B,OAA3B,CAAD,CAAN,CAA4CC,OAA5C,CAAoDH,MAAM,CAACI,gBAAP,CAAwB,KAAxB,CAApD;AACD,GApBC,CAAF;AAqBD,CA1CO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport Currency from '..';\nimport DataSet from '../../data-set';\n\ndescribe('Currency', () => {\n  it('should show US$ in a input value', () => {\n    const handleDataSetChange = jest.fn();\n    const ds = new DataSet({\n      autoCreate: true,\n      fields: [\n        {\n          name: 'money',\n          type: 'number',\n          defaultValue: 100000000000000,\n          required: true,\n          currency: 'USD',\n        },\n      ],\n      events: {\n        update: handleDataSetChange,\n      },\n    });\n    const wrapper = mount(<Currency dataSet={ds} name=\"money\" />);\n    expect(wrapper.find('input').prop('value')).toEqual(expect.stringContaining('US$'));\n  });\n  it('should show ￥ in a input value', () => {\n    const handleDataSetChange = jest.fn();\n    const ds = new DataSet({\n      autoCreate: true,\n      fields: [\n        {\n          name: 'money',\n          type: 'number',\n          defaultValue: 200,\n          required: true,\n          currency: 'CNY',\n        },\n      ],\n      events: {\n        update: handleDataSetChange,\n      },\n    });\n    const wrapper = mount(<Currency dataSet={ds} name=\"money\" />);\n    expect(wrapper.find('input').prop('value')).toEqual(expect.stringContaining('¥'));\n    expect(wrapper.find('input').prop('value')).toEqual(expect.stringContaining('200'));\n  });\n});\n"]}