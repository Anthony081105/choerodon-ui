acbf8f7b3c1a0294929b5d59b2126bfd
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _ = _interopRequireDefault(require(".."));

var _textAreaTest = _interopRequireDefault(require("./textAreaTest"));

describe('TextArea-pro', function () {
  beforeEach(function () {
    jest.useFakeTimers();
  });
  afterEach(function () {
    jest.useRealTimers();
  });
  it('renders TextArea-pro correctly', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], null));
    expect(wrapper).toMatchSnapshot();
  });
  it('TextArea should have the default resize and rows', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], null));
    expect(wrapper.prop('resize')).toBe('none');
    expect(wrapper.prop('rows')).toBe(4);
  });
  it('TextArea have the disabled property and default false', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], null));
    expect(wrapper.find('.c7n-pro-textarea-disabled')).toHaveLength(0);
    wrapper.setProps({
      disabled: true
    });
    wrapper.update();
    expect(wrapper.find('.c7n-pro-textarea-disabled')).toHaveLength(1);
  });
  it('can not click or input when the readOnly true and default false', function () {
    var handleChange = jest.fn();
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], {
      onChange: handleChange
    }));
    expect(wrapper.prop('readOnly')).toBe(false);
    wrapper.setProps({
      readOnly: true
    });
    wrapper.update();
    expect(wrapper.prop('readOnly')).toBe(true);
    wrapper.find('textarea').simulate('change');
    jest.runAllTimers();
    wrapper.update();
    expect(handleChange).not.toHaveBeenCalled();
  });
  it('the value will be controlled and the change event trigger when the value change', function () {
    var handleChange = jest.fn();
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], {
      value: "text",
      onChange: handleChange
    }));
    expect(wrapper.find('textarea').at(0).prop('value')).toBe('text');
    wrapper.setProps({
      value: 'text-area'
    });
    wrapper.update();
    expect(wrapper.find('textarea').at(0).prop('value')).toBe('text-area');
  });
  it('the dataSet should renders correctly', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_textAreaTest["default"], null));
    expect(wrapper.find('TextArea').props().name).toEqual('content');
    expect(wrapper).toMatchSnapshot();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiamVzdCIsInVzZUZha2VUaW1lcnMiLCJhZnRlckVhY2giLCJ1c2VSZWFsVGltZXJzIiwiaXQiLCJ3cmFwcGVyIiwiZXhwZWN0IiwidG9NYXRjaFNuYXBzaG90IiwicHJvcCIsInRvQmUiLCJmaW5kIiwidG9IYXZlTGVuZ3RoIiwic2V0UHJvcHMiLCJkaXNhYmxlZCIsInVwZGF0ZSIsImhhbmRsZUNoYW5nZSIsImZuIiwicmVhZE9ubHkiLCJzaW11bGF0ZSIsInJ1bkFsbFRpbWVycyIsIm5vdCIsInRvSGF2ZUJlZW5DYWxsZWQiLCJhdCIsInZhbHVlIiwicHJvcHMiLCJuYW1lIiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBQSxRQUFRLENBQUMsY0FBRCxFQUFpQixZQUFNO0FBQzdCQyxFQUFBQSxVQUFVLENBQUMsWUFBTTtBQUNmQyxJQUFBQSxJQUFJLENBQUNDLGFBQUw7QUFDRCxHQUZTLENBQVY7QUFJQUMsRUFBQUEsU0FBUyxDQUFDLFlBQU07QUFDZEYsSUFBQUEsSUFBSSxDQUFDRyxhQUFMO0FBQ0QsR0FGUSxDQUFUO0FBSUFDLEVBQUFBLEVBQUUsQ0FBQyxnQ0FBRCxFQUFtQyxZQUFNO0FBQ3pDLFFBQU1DLE9BQU8sR0FBRyxtQkFBTSxnQ0FBQyxZQUFELE9BQU4sQ0FBaEI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDRCxPQUFELENBQU4sQ0FBZ0JFLGVBQWhCO0FBQ0QsR0FIQyxDQUFGO0FBS0FILEVBQUFBLEVBQUUsQ0FBQyxrREFBRCxFQUFxRCxZQUFNO0FBQzNELFFBQU1DLE9BQU8sR0FBRyxtQkFBTSxnQ0FBQyxZQUFELE9BQU4sQ0FBaEI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDRCxPQUFPLENBQUNHLElBQVIsQ0FBYSxRQUFiLENBQUQsQ0FBTixDQUErQkMsSUFBL0IsQ0FBb0MsTUFBcEM7QUFDQUgsSUFBQUEsTUFBTSxDQUFDRCxPQUFPLENBQUNHLElBQVIsQ0FBYSxNQUFiLENBQUQsQ0FBTixDQUE2QkMsSUFBN0IsQ0FBa0MsQ0FBbEM7QUFDRCxHQUpDLENBQUY7QUFNQUwsRUFBQUEsRUFBRSxDQUFDLHVEQUFELEVBQTBELFlBQU07QUFDaEUsUUFBTUMsT0FBTyxHQUFHLG1CQUFNLGdDQUFDLFlBQUQsT0FBTixDQUFoQjtBQUNBQyxJQUFBQSxNQUFNLENBQUNELE9BQU8sQ0FBQ0ssSUFBUixDQUFhLDRCQUFiLENBQUQsQ0FBTixDQUFtREMsWUFBbkQsQ0FBZ0UsQ0FBaEU7QUFDQU4sSUFBQUEsT0FBTyxDQUFDTyxRQUFSLENBQWlCO0FBQUVDLE1BQUFBLFFBQVEsRUFBRTtBQUFaLEtBQWpCO0FBQ0FSLElBQUFBLE9BQU8sQ0FBQ1MsTUFBUjtBQUNBUixJQUFBQSxNQUFNLENBQUNELE9BQU8sQ0FBQ0ssSUFBUixDQUFhLDRCQUFiLENBQUQsQ0FBTixDQUFtREMsWUFBbkQsQ0FBZ0UsQ0FBaEU7QUFDRCxHQU5DLENBQUY7QUFRQVAsRUFBQUEsRUFBRSxDQUFDLGlFQUFELEVBQW9FLFlBQU07QUFDMUUsUUFBTVcsWUFBWSxHQUFHZixJQUFJLENBQUNnQixFQUFMLEVBQXJCO0FBQ0EsUUFBTVgsT0FBTyxHQUFHLG1CQUFNLGdDQUFDLFlBQUQ7QUFBVSxNQUFBLFFBQVEsRUFBRVU7QUFBcEIsTUFBTixDQUFoQjtBQUNBVCxJQUFBQSxNQUFNLENBQUNELE9BQU8sQ0FBQ0csSUFBUixDQUFhLFVBQWIsQ0FBRCxDQUFOLENBQWlDQyxJQUFqQyxDQUFzQyxLQUF0QztBQUNBSixJQUFBQSxPQUFPLENBQUNPLFFBQVIsQ0FBaUI7QUFBRUssTUFBQUEsUUFBUSxFQUFFO0FBQVosS0FBakI7QUFDQVosSUFBQUEsT0FBTyxDQUFDUyxNQUFSO0FBQ0FSLElBQUFBLE1BQU0sQ0FBQ0QsT0FBTyxDQUFDRyxJQUFSLENBQWEsVUFBYixDQUFELENBQU4sQ0FBaUNDLElBQWpDLENBQXNDLElBQXRDO0FBRUFKLElBQUFBLE9BQU8sQ0FBQ0ssSUFBUixDQUFhLFVBQWIsRUFBeUJRLFFBQXpCLENBQWtDLFFBQWxDO0FBQ0FsQixJQUFBQSxJQUFJLENBQUNtQixZQUFMO0FBQ0FkLElBQUFBLE9BQU8sQ0FBQ1MsTUFBUjtBQUNBUixJQUFBQSxNQUFNLENBQUNTLFlBQUQsQ0FBTixDQUFxQkssR0FBckIsQ0FBeUJDLGdCQUF6QjtBQUNELEdBWkMsQ0FBRjtBQWNBakIsRUFBQUEsRUFBRSxDQUFDLGlGQUFELEVBQW9GLFlBQU07QUFDMUYsUUFBTVcsWUFBWSxHQUFHZixJQUFJLENBQUNnQixFQUFMLEVBQXJCO0FBQ0EsUUFBTVgsT0FBTyxHQUFHLG1CQUFNLGdDQUFDLFlBQUQ7QUFBVSxNQUFBLEtBQUssRUFBQyxNQUFoQjtBQUF1QixNQUFBLFFBQVEsRUFBRVU7QUFBakMsTUFBTixDQUFoQjtBQUNBVCxJQUFBQSxNQUFNLENBQ0pELE9BQU8sQ0FDSkssSUFESCxDQUNRLFVBRFIsRUFFR1ksRUFGSCxDQUVNLENBRk4sRUFHR2QsSUFISCxDQUdRLE9BSFIsQ0FESSxDQUFOLENBS0VDLElBTEYsQ0FLTyxNQUxQO0FBTUFKLElBQUFBLE9BQU8sQ0FBQ08sUUFBUixDQUFpQjtBQUFFVyxNQUFBQSxLQUFLLEVBQUU7QUFBVCxLQUFqQjtBQUNBbEIsSUFBQUEsT0FBTyxDQUFDUyxNQUFSO0FBQ0FSLElBQUFBLE1BQU0sQ0FDSkQsT0FBTyxDQUNKSyxJQURILENBQ1EsVUFEUixFQUVHWSxFQUZILENBRU0sQ0FGTixFQUdHZCxJQUhILENBR1EsT0FIUixDQURJLENBQU4sQ0FLRUMsSUFMRixDQUtPLFdBTFA7QUFNRCxHQWpCQyxDQUFGO0FBbUJBTCxFQUFBQSxFQUFFLENBQUMsc0NBQUQsRUFBeUMsWUFBTTtBQUMvQyxRQUFNQyxPQUFPLEdBQUcsbUJBQU0sZ0NBQUMsd0JBQUQsT0FBTixDQUFoQjtBQUNBQyxJQUFBQSxNQUFNLENBQUNELE9BQU8sQ0FBQ0ssSUFBUixDQUFhLFVBQWIsRUFBeUJjLEtBQXpCLEdBQWlDQyxJQUFsQyxDQUFOLENBQThDQyxPQUE5QyxDQUFzRCxTQUF0RDtBQUNBcEIsSUFBQUEsTUFBTSxDQUFDRCxPQUFELENBQU4sQ0FBZ0JFLGVBQWhCO0FBQ0QsR0FKQyxDQUFGO0FBS0QsQ0FsRU8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtb3VudCB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgVGV4dEFyZWEgZnJvbSAnLi4nO1xuaW1wb3J0IFRleHRBcmVhVGVzdCBmcm9tICcuL3RleHRBcmVhVGVzdCc7XG5cbmRlc2NyaWJlKCdUZXh0QXJlYS1wcm8nLCAoKSA9PiB7XG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIGplc3QudXNlRmFrZVRpbWVycygpO1xuICB9KTtcblxuICBhZnRlckVhY2goKCkgPT4ge1xuICAgIGplc3QudXNlUmVhbFRpbWVycygpO1xuICB9KTtcblxuICBpdCgncmVuZGVycyBUZXh0QXJlYS1wcm8gY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudCg8VGV4dEFyZWEgLz4pO1xuICAgIGV4cGVjdCh3cmFwcGVyKS50b01hdGNoU25hcHNob3QoKTtcbiAgfSk7XG5cbiAgaXQoJ1RleHRBcmVhIHNob3VsZCBoYXZlIHRoZSBkZWZhdWx0IHJlc2l6ZSBhbmQgcm93cycsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gbW91bnQoPFRleHRBcmVhIC8+KTtcbiAgICBleHBlY3Qod3JhcHBlci5wcm9wKCdyZXNpemUnKSkudG9CZSgnbm9uZScpO1xuICAgIGV4cGVjdCh3cmFwcGVyLnByb3AoJ3Jvd3MnKSkudG9CZSg0KTtcbiAgfSk7XG5cbiAgaXQoJ1RleHRBcmVhIGhhdmUgdGhlIGRpc2FibGVkIHByb3BlcnR5IGFuZCBkZWZhdWx0IGZhbHNlJywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudCg8VGV4dEFyZWEgLz4pO1xuICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJy5jN24tcHJvLXRleHRhcmVhLWRpc2FibGVkJykpLnRvSGF2ZUxlbmd0aCgwKTtcbiAgICB3cmFwcGVyLnNldFByb3BzKHsgZGlzYWJsZWQ6IHRydWUgfSk7XG4gICAgd3JhcHBlci51cGRhdGUoKTtcbiAgICBleHBlY3Qod3JhcHBlci5maW5kKCcuYzduLXByby10ZXh0YXJlYS1kaXNhYmxlZCcpKS50b0hhdmVMZW5ndGgoMSk7XG4gIH0pO1xuXG4gIGl0KCdjYW4gbm90IGNsaWNrIG9yIGlucHV0IHdoZW4gdGhlIHJlYWRPbmx5IHRydWUgYW5kIGRlZmF1bHQgZmFsc2UnLCAoKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlQ2hhbmdlID0gamVzdC5mbigpO1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudCg8VGV4dEFyZWEgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX0gLz4pO1xuICAgIGV4cGVjdCh3cmFwcGVyLnByb3AoJ3JlYWRPbmx5JykpLnRvQmUoZmFsc2UpO1xuICAgIHdyYXBwZXIuc2V0UHJvcHMoeyByZWFkT25seTogdHJ1ZSB9KTtcbiAgICB3cmFwcGVyLnVwZGF0ZSgpO1xuICAgIGV4cGVjdCh3cmFwcGVyLnByb3AoJ3JlYWRPbmx5JykpLnRvQmUodHJ1ZSk7XG5cbiAgICB3cmFwcGVyLmZpbmQoJ3RleHRhcmVhJykuc2ltdWxhdGUoJ2NoYW5nZScpO1xuICAgIGplc3QucnVuQWxsVGltZXJzKCk7XG4gICAgd3JhcHBlci51cGRhdGUoKTtcbiAgICBleHBlY3QoaGFuZGxlQ2hhbmdlKS5ub3QudG9IYXZlQmVlbkNhbGxlZCgpO1xuICB9KTtcblxuICBpdCgndGhlIHZhbHVlIHdpbGwgYmUgY29udHJvbGxlZCBhbmQgdGhlIGNoYW5nZSBldmVudCB0cmlnZ2VyIHdoZW4gdGhlIHZhbHVlIGNoYW5nZScsICgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVDaGFuZ2UgPSBqZXN0LmZuKCk7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KDxUZXh0QXJlYSB2YWx1ZT1cInRleHRcIiBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfSAvPik7XG4gICAgZXhwZWN0KFxuICAgICAgd3JhcHBlclxuICAgICAgICAuZmluZCgndGV4dGFyZWEnKVxuICAgICAgICAuYXQoMClcbiAgICAgICAgLnByb3AoJ3ZhbHVlJyksXG4gICAgKS50b0JlKCd0ZXh0Jyk7XG4gICAgd3JhcHBlci5zZXRQcm9wcyh7IHZhbHVlOiAndGV4dC1hcmVhJyB9KTtcbiAgICB3cmFwcGVyLnVwZGF0ZSgpO1xuICAgIGV4cGVjdChcbiAgICAgIHdyYXBwZXJcbiAgICAgICAgLmZpbmQoJ3RleHRhcmVhJylcbiAgICAgICAgLmF0KDApXG4gICAgICAgIC5wcm9wKCd2YWx1ZScpLFxuICAgICkudG9CZSgndGV4dC1hcmVhJyk7XG4gIH0pO1xuXG4gIGl0KCd0aGUgZGF0YVNldCBzaG91bGQgcmVuZGVycyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KDxUZXh0QXJlYVRlc3QgLz4pO1xuICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJ1RleHRBcmVhJykucHJvcHMoKS5uYW1lKS50b0VxdWFsKCdjb250ZW50Jyk7XG4gICAgZXhwZWN0KHdyYXBwZXIpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuICB9KTtcbn0pO1xuIl19