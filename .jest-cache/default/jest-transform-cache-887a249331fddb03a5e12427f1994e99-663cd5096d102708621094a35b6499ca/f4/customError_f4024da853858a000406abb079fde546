d9ec849e8c6187ef7bbb21d128712a29
"use strict";

/* istanbul ignore next */
function cov_28sbmiyuib() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/rules/customError.tsx";
  var hash = "e637667c454be5528fa2ddb3af02ec86d283c0d3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/rules/customError.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "3": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 80
        }
      },
      "4": {
        start: {
          line: 12,
          column: 25
        },
        end: {
          line: 12,
          column: 99
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 66
        }
      },
      "6": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 78
        }
      },
      "7": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "8": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 21,
          column: 45
        }
      },
      "9": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 66,
          column: 6
        }
      },
      "10": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 65,
          column: 16
        }
      },
      "11": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 64,
          column: 7
        }
      },
      "12": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "13": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 113
        }
      },
      "14": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "15": {
        start: {
          line: 36,
          column: 14
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "16": {
        start: {
          line: 37,
          column: 14
        },
        end: {
          line: 37,
          column: 20
        }
      },
      "17": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "18": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 64
        }
      },
      "19": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "20": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "21": {
        start: {
          line: 47,
          column: 14
        },
        end: {
          line: 47,
          column: 32
        }
      },
      "22": {
        start: {
          line: 48,
          column: 14
        },
        end: {
          line: 48,
          column: 20
        }
      },
      "23": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 16
        }
      },
      "24": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 51
        }
      },
      "25": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 35
        }
      },
      "26": {
        start: {
          line: 67,
          column: 2
        },
        end: {
          line: 67,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "customError",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 20
          }
        },
        loc: {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "_customError",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 21
          }
        },
        loc: {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 24
      },
      "2": {
        name: "_callee",
        decl: {
          start: {
            line: 27,
            column: 40
          },
          end: {
            line: 27,
            column: 47
          }
        },
        loc: {
          start: {
            line: 27,
            column: 62
          },
          end: {
            line: 66,
            column: 3
          }
        },
        line: 27
      },
      "3": {
        name: "_callee$",
        decl: {
          start: {
            line: 29,
            column: 49
          },
          end: {
            line: 29,
            column: 57
          }
        },
        loc: {
          start: {
            line: 29,
            column: 68
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 29
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 32,
            column: 10
          },
          end: {
            line: 41,
            column: 64
          }
        }, {
          start: {
            line: 43,
            column: 10
          },
          end: {
            line: 55,
            column: 16
          }
        }, {
          start: {
            line: 57,
            column: 10
          },
          end: {
            line: 58,
            column: 51
          }
        }, {
          start: {
            line: 60,
            column: 10
          },
          end: {
            line: 60,
            column: 17
          }
        }, {
          start: {
            line: 61,
            column: 10
          },
          end: {
            line: 62,
            column: 35
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 48
          },
          end: {
            line: 41,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 48
          },
          end: {
            line: 41,
            column: 54
          }
        }, {
          start: {
            line: 41,
            column: 58
          },
          end: {
            line: 41,
            column: 62
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 18
          },
          end: {
            line: 46,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 18
          },
          end: {
            line: 46,
            column: 51
          }
        }, {
          start: {
            line: 46,
            column: 55
          },
          end: {
            line: 46,
            column: 71
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 52,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 52,
            column: 39
          }
        }, {
          start: {
            line: 52,
            column: 43
          },
          end: {
            line: 52,
            column: 89
          }
        }],
        line: 52
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e637667c454be5528fa2ddb3af02ec86d283c0d3"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_28sbmiyuib = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_28sbmiyuib();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_28sbmiyuib().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_28sbmiyuib().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_28sbmiyuib().s[2]++;
exports["default"] = customError;

var _regenerator =
/* istanbul ignore next */
(cov_28sbmiyuib().s[3]++, _interopRequireDefault(require("@babel/runtime/regenerator")));

var _asyncToGenerator2 =
/* istanbul ignore next */
(cov_28sbmiyuib().s[4]++, _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")));

var _isString =
/* istanbul ignore next */
(cov_28sbmiyuib().s[5]++, _interopRequireDefault(require("lodash/isString")));

var _ValidationResult =
/* istanbul ignore next */
(cov_28sbmiyuib().s[6]++, _interopRequireDefault(require("../ValidationResult")));

var _localeContext =
/* istanbul ignore next */
(cov_28sbmiyuib().s[7]++, require("../../locale-context"));

function customError(_x, _x2) {
  /* istanbul ignore next */
  cov_28sbmiyuib().f[0]++;
  cov_28sbmiyuib().s[8]++;
  return _customError.apply(this, arguments);
}

function _customError() {
  /* istanbul ignore next */
  cov_28sbmiyuib().f[1]++;
  cov_28sbmiyuib().s[9]++;
  _customError = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(value, props) {
    /* istanbul ignore next */
    cov_28sbmiyuib().f[2]++;
    var customValidator, name, record, form, result;

    /* istanbul ignore next */
    cov_28sbmiyuib().s[10]++;
    return _regenerator["default"].wrap(function _callee$(_context) {
      /* istanbul ignore next */
      cov_28sbmiyuib().f[3]++;
      cov_28sbmiyuib().s[11]++;

      while (1) {
        /* istanbul ignore next */
        cov_28sbmiyuib().s[12]++;

        switch (_context.prev = _context.next) {
          case 0:
            /* istanbul ignore next */
            cov_28sbmiyuib().b[0][0]++;
            cov_28sbmiyuib().s[13]++;
            customValidator = props.customValidator, name = props.name, record = props.record, form = props.form;

            /* istanbul ignore next */
            cov_28sbmiyuib().s[14]++;

            if (!(typeof customValidator === 'function')) {
              /* istanbul ignore next */
              cov_28sbmiyuib().b[1][0]++;
              cov_28sbmiyuib().s[15]++;
              _context.next = 7;

              /* istanbul ignore next */
              cov_28sbmiyuib().s[16]++;
              break;
            } else
            /* istanbul ignore next */
            {
              cov_28sbmiyuib().b[1][1]++;
            }

            cov_28sbmiyuib().s[17]++;
            _context.next = 4;

            /* istanbul ignore next */
            cov_28sbmiyuib().s[18]++;
            return customValidator(value, name,
            /* istanbul ignore next */
            (cov_28sbmiyuib().b[2][0]++, record) ||
            /* istanbul ignore next */
            (cov_28sbmiyuib().b[2][1]++, form));

          case 4:
            /* istanbul ignore next */
            cov_28sbmiyuib().b[0][1]++;
            cov_28sbmiyuib().s[19]++;
            result = _context.sent;

            /* istanbul ignore next */
            cov_28sbmiyuib().s[20]++;

            if (!(
            /* istanbul ignore next */
            (cov_28sbmiyuib().b[4][0]++, (0, _isString["default"])(result)) ||
            /* istanbul ignore next */
            (cov_28sbmiyuib().b[4][1]++, result === false))) {
              /* istanbul ignore next */
              cov_28sbmiyuib().b[3][0]++;
              cov_28sbmiyuib().s[21]++;
              _context.next = 7;

              /* istanbul ignore next */
              cov_28sbmiyuib().s[22]++;
              break;
            } else
            /* istanbul ignore next */
            {
              cov_28sbmiyuib().b[3][1]++;
            }

            cov_28sbmiyuib().s[23]++;
            return _context.abrupt("return", new _ValidationResult["default"]({
              validationMessage:
              /* istanbul ignore next */
              (cov_28sbmiyuib().b[5][0]++, result) ||
              /* istanbul ignore next */
              (cov_28sbmiyuib().b[5][1]++, (0, _localeContext.$l)('Validator', 'unknown')),
              value: value,
              ruleName: 'customError'
            }));

          case 7:
            /* istanbul ignore next */
            cov_28sbmiyuib().b[0][2]++;
            cov_28sbmiyuib().s[24]++;
            return _context.abrupt("return", true);

          case 8:
            /* istanbul ignore next */
            cov_28sbmiyuib().b[0][3]++;

          case "end":
            /* istanbul ignore next */
            cov_28sbmiyuib().b[0][4]++;
            cov_28sbmiyuib().s[25]++;
            return _context.stop();
        }
      }
    }, _callee);
  }));

  /* istanbul ignore next */
  cov_28sbmiyuib().s[26]++;
  return _customError.apply(this, arguments);
}