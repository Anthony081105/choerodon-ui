{"version":3,"sources":["Select.jsx"],"names":["filterFn","input","child","String","props","treeNodeFilterProp","indexOf","loopTreeData","data","level","treeCheckable","map","item","index","pos","label","value","disabled","key","hasOwnProperty","selectable","children","isLeaf","otherProps","title","ret","length","Select","event","val","target","setState","inputValue","searchValue","open","getValue","state","onSearch","document","activeElement","getInputDOMNode","setTimeout","setOpenState","undefined","keyCode","onInputKeyDown","KeyCode","ENTER","DOWN","preventDefault","BACKSPACE","concat","popValue","pop","removeSelected","isLabelInValue","openIfHasChildren","stopPropagation","ESC","selectedKeys","info","node","selectedValue","selectedLabel","getLabelFromNode","checkableSelect","selected","onDeselect","onSelect","checkEvt","clearSearchInput","getCheckedNodes","n","some","i","extraInfo","triggerValue","triggerNode","checked","allCheckedNodes","treeCheckStrictly","checkedNodes","checkedNodesPositions","_checkedNodes","_tree","trigger","popupEle","_treeNodesStates","checkKeys","fireChange","autoClearSearchValue","focus","_cacheTreeNodesStates","forcePopupAlign","e","onDropdownVisibleChange","placeholder","prefixCls","defaultValue","renderedTreeData","renderTreeData","addLabelToValue","defaultOpen","focused","autoFocus","inputNode","style","width","inputMirrorInstance","clientWidth","nextProps","_savedValue","treeData","clearDelayTimer","dropdownContainer","body","removeChild","treeNodeLabelProp","createElement","appendChild","hidden","searchPlaceholder","display","onPlaceholderClick","onInputChange","getSearchPlaceholderElement","inputInstance","getPopupDOMNode","getPopupEleRefs","_props","init","_strict","halfCheckedValues","forEach","halfChecked","push","checkedTreeNodes","_cachetreeData","mapLabVal","arr","itemObj","checkedValues","showCheckedStrategy","SHOW_ALL","SHOW_PARENT","posArr","filter","checkNodeProps","unCheckPos","newVals","newCkTns","nv","clear","needFocus","documentClickClose","Promise","resolve","then","selection","value_","v","Object","prototype","toString","call","getLabelFromProps","delayTimer","clearTimeout","selectedVal","getDeselectedValue","singleValue","canMultiple","Children","count","vals","sv","every","ex","preValue","labs","vls","_vls","ii","includeVal","ind","splice","onChange","labelInValue","blur","allowClear","UNSELECTABLE_STYLE","UNSELECTABLE_ATTRIBUTE","onClearSelection","preventDefaultEvent","choiceTransitionName","maxTagTextLength","maxTagCount","maxTagPlaceholder","choiceRender","multiple","innerNode","getPlaceholderElement","renderClear","showArrow","onArrowClick","myValueList","slice","selectedValueNodes","content","bind","restValueList","restNodeSelect","getInputElement","className","onChoiceAnimationLeave","validProps","treeDataSimpleMode","simpleFormat","id","pId","rootPId","includes","ctrlNode","renderTopControlNode","extraSelectionProps","onKeyDown","tabIndex","rootCls","getPopupContainer","onClick","onBlur","onFocus","getUnderLine","Component","SelectPropTypes","filterTreeNode","showSearch","noop","dropdownMatchSelectWidth","dropdownStyle","optionLabelProp","notFoundContent","SHOW_CHILD","treeIcon","treeLine","treeDefaultExpandAll"],"mappings":"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","sourcesContent":["import React, { Children, Component } from 'react';\nimport { unmountComponentAtNode } from 'react-dom';\nimport classnames from 'classnames';\nimport noop from 'lodash/noop';\nimport KeyCode from '../../_util/KeyCode';\nimport Animate from '../../animate';\nimport {\n  filterAllCheckedData,\n  filterParentPosition,\n  flatToHierarchy,\n  getPropValue,\n  getTreeNodesStates,\n  getValuePropValue,\n  isMultiple,\n  isPositionPrefix,\n  labelCompatible,\n  loopAllChildren,\n  preventDefaultEvent,\n  processSimpleTreeData,\n  saveRef,\n  toArray,\n  UNSELECTABLE_ATTRIBUTE,\n  UNSELECTABLE_STYLE,\n} from './util';\nimport SelectTrigger from './SelectTrigger';\nimport _TreeNode from './TreeNode';\nimport { SHOW_ALL, SHOW_CHILD, SHOW_PARENT } from './strategies';\nimport { SelectPropTypes } from './PropTypes';\nimport Button from '../../button/Button';\nimport { getLabelFromPropsValue, getMapKey } from '../select/util';\nimport isEmpty from 'lodash/isEmpty';\n\nfunction filterFn(input, child) {\n  return (\n    String(getPropValue(child, labelCompatible(this.props.treeNodeFilterProp))).indexOf(input) > -1\n  );\n}\n\nfunction loopTreeData(data, level = 0, treeCheckable) {\n  return data.map((item, index) => {\n    const pos = `${level}-${index}`;\n    const {\n      label,\n      value,\n      disabled,\n      key,\n      hasOwnProperty,\n      selectable,\n      children,\n      isLeaf,\n      ...otherProps\n    } = item;\n    const props = {\n      value,\n      title: label,\n      // value: value || String(key || label), // cause onChange callback error\n      key: key || value || pos,\n      disabled: disabled || false,\n      selectable: selectable === false ? selectable : !treeCheckable,\n      ...otherProps,\n    };\n    let ret;\n    if (children && children.length) {\n      ret = <_TreeNode {...props}>{loopTreeData(children, pos, treeCheckable)}</_TreeNode>;\n    } else {\n      ret = <_TreeNode {...props} isLeaf={isLeaf} />;\n    }\n    return ret;\n  });\n}\n\nexport default class Select extends Component {\n  static propTypes = SelectPropTypes;\n\n  static defaultProps = {\n    prefixCls: 'rc-tree-select',\n    filterTreeNode: filterFn,\n    showSearch: true,\n    allowClear: false,\n    placeholder: '',\n    searchPlaceholder: '',\n    labelInValue: false,\n    onClick: noop,\n    onChange: noop,\n    onSelect: noop,\n    onDeselect: noop,\n    onSearch: noop,\n    showArrow: true,\n    dropdownMatchSelectWidth: true,\n    dropdownStyle: {},\n    autoClearSearchValue: true,\n    onDropdownVisibleChange: () => {\n      return true;\n    },\n    optionLabelProp: 'value',\n    notFoundContent: 'Not Found',\n    showCheckedStrategy: SHOW_CHILD,\n    // skipHandleInitValue: false, // Deprecated (use treeCheckStrictly)\n    treeCheckStrictly: false,\n    treeIcon: false,\n    treeLine: false,\n    treeDataSimpleMode: false,\n    treeDefaultExpandAll: false,\n    treeCheckable: false,\n    treeNodeFilterProp: 'value',\n    treeNodeLabelProp: 'title',\n    searchValue:'',\n  };\n\n  static SHOW_ALL = SHOW_ALL;\n  static SHOW_PARENT = SHOW_PARENT;\n  static SHOW_CHILD = SHOW_CHILD;\n\n  constructor(props) {\n    super(props);\n    let value = [];\n    if ('value' in props) {\n      value = toArray(props.value);\n    } else {\n      value = toArray(props.defaultValue);\n    }\n    // save parsed treeData, for performance (treeData may be very big)\n    this.renderedTreeData = this.renderTreeData();\n    value = this.addLabelToValue(props, value);\n    value = this.getValue(props, value, props.inputValue ? '__strict' : true);\n    let inputValue = props.inputValue || '';\n    if (!isEmpty(props.searchValue)) {\n      inputValue = String(props.searchValue)\n    }\n    this.state = {\n      value,\n      inputValue,\n      open: props.open || props.defaultOpen,\n      focused: false,\n    };\n  }\n\n  componentDidMount() {\n    const { autoFocus, disabled } = this.props;\n    if (isMultiple(this.props)) {\n      const inputNode = this.getInputDOMNode();\n      if (inputNode.value) {\n        inputNode.style.width = '';\n        inputNode.style.width = `${this.inputMirrorInstance.clientWidth}px`;\n      } else {\n        inputNode.style.width = '';\n      }\n    }\n    if (autoFocus && !disabled) {\n      this.focus();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // save parsed treeData, for performance (treeData may be very big)\n    this.renderedTreeData = this.renderTreeData(nextProps);\n    // Detecting whether the object of `onChange`'s argument  is old ref.\n    // Better to do a deep equal later.\n    this._cacheTreeNodesStates =\n      this._cacheTreeNodesStates !== 'no' &&\n      this._savedValue &&\n      nextProps.value === this._savedValue;\n    if (this.props.treeData !== nextProps.treeData || this.props.children !== nextProps.children) {\n      // refresh this._treeNodesStates cache\n      this._treeNodesStates = getTreeNodesStates(\n        this.renderedTreeData || nextProps.children,\n        this.state.value.map(item => item.value),\n      );\n    }\n    if ('value' in nextProps) {\n      let value = toArray(nextProps.value);\n      value = this.addLabelToValue(nextProps, value);\n      value = this.getValue(nextProps, value);\n      this.setState({\n        value,\n      });\n      if (nextProps.searchValue !== this.props.searchValue) {\n        this.setState({\n          inputValue: String(nextProps.searchValue)\n        });\n      }\n    }\n    if(isEmpty(this.props.searchValue)){\n      if (nextProps.inputValue !== this.props.inputValue ) {\n        this.setState({\n          inputValue: nextProps.inputValue,\n        });\n      }\n    }else{\n      this.setState({\n        inputValue: this.props.searchValue,\n      });\n    }\n\n    if ('open' in nextProps) {\n      this.setState({\n        open: nextProps.open,\n      });\n    }\n  }\n\n  componentWillUpdate(nextProps) {\n    if (\n      this._savedValue &&\n      nextProps.value &&\n      nextProps.value !== this._savedValue &&\n      nextProps.value === this.props.value\n    ) {\n      this._cacheTreeNodesStates = false;\n      this.getValue(nextProps, this.addLabelToValue(nextProps, toArray(nextProps.value)));\n    }\n  }\n\n  componentDidUpdate() {\n    const state = this.state;\n    const props = this.props;\n    if (state.open && isMultiple(props)) {\n      const inputNode = this.getInputDOMNode();\n      if (inputNode.value) {\n        inputNode.style.width = '';\n        inputNode.style.width = `${this.inputMirrorInstance.clientWidth}px`;\n      } else {\n        inputNode.style.width = '';\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearDelayTimer();\n    if (this.dropdownContainer) {\n      unmountComponentAtNode(this.dropdownContainer);\n      document.body.removeChild(this.dropdownContainer);\n      this.dropdownContainer = null;\n    }\n  }\n\n  onInputChange = event => {\n    const val = event.target.value;\n    const { props } = this;\n    this.setState({\n      inputValue:isEmpty(this.props.searchValue)? val :this.props.searchValue,\n      open: true,\n    });\n    if (props.treeCheckable && !val) {\n      this.setState({\n        value: this.getValue(props, [...this.state.value], false),\n      });\n    }\n    props.onSearch(val);\n  };\n\n  onDropdownVisibleChange = open => {\n    // selection inside combobox cause click\n    if (!open && document.activeElement === this.getInputDOMNode()) {\n      // return;\n    }\n    // this.setOpenState(open);\n    // setTimeout, then have animation. why?\n    setTimeout(() => {\n      this.setOpenState(open, undefined, !open);\n    }, 10);\n  };\n\n  // combobox ignore\n  onKeyDown = event => {\n    const props = this.props;\n    if (props.disabled) {\n      return;\n    }\n    const keyCode = event.keyCode;\n    if (this.state.open && !this.getInputDOMNode()) {\n      this.onInputKeyDown(event);\n    } else if (keyCode === KeyCode.ENTER || keyCode === KeyCode.DOWN) {\n      this.setOpenState(true);\n      event.preventDefault();\n    }\n  };\n\n  onInputKeyDown = event => {\n    const props = this.props;\n    if (props.disabled) {\n      return;\n    }\n    const state = this.state;\n    const keyCode = event.keyCode;\n    if (isMultiple(props) && !event.target.value && keyCode === KeyCode.BACKSPACE) {\n      const value = state.value.concat();\n      if (value.length) {\n        const popValue = value.pop();\n        this.removeSelected(this.isLabelInValue() ? popValue : popValue.value);\n      }\n      return;\n    }\n    if (keyCode === KeyCode.DOWN) {\n      if (!state.open) {\n        this.openIfHasChildren();\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n    } else if (keyCode === KeyCode.ESC) {\n      if (state.open) {\n        this.setOpenState(false);\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      return;\n    }\n  };\n  /**\n   * 选择值\n   */\n  onSelect = (selectedKeys, info) => {\n    const item = info.node;\n    let value = this.state.value;\n    const props = this.props;\n    const selectedValue = getValuePropValue(item);\n    const selectedLabel = this.getLabelFromNode(item);\n    const checkableSelect = props.treeCheckable && info.event === 'select';\n    let event = selectedValue;\n    if (this.isLabelInValue()) {\n      event = {\n        value: event,\n        label: selectedLabel,\n      };\n    }\n    if (info.selected === false) {\n      this.onDeselect(info);\n      if (!checkableSelect) return;\n    }\n    props.onSelect(event, item, info);\n\n    const checkEvt = info.event === 'check';\n    if (isMultiple(props)) {\n      this.clearSearchInput();\n      if (checkEvt) {\n        value = this.getCheckedNodes(info, props).map(n => {\n          return {\n            value: getValuePropValue(n),\n            label: this.getLabelFromNode(n),\n          };\n        });\n      } else {\n        if (value.some(i => i.value === selectedValue)) {\n          return;\n        }\n        value = value.concat([\n          {\n            value: selectedValue,\n            label: selectedLabel,\n          },\n        ]);\n      }\n    } else {\n      if (value.length && value[0].value === selectedValue) {\n        this.setOpenState(false);\n        return;\n      }\n      value = [\n        {\n          value: selectedValue,\n          label: selectedLabel,\n        },\n      ];\n      this.setOpenState(false);\n    }\n\n    const extraInfo = {\n      triggerValue: selectedValue,\n      triggerNode: item,\n    };\n    if (checkEvt) {\n      extraInfo.checked = info.checked;\n      // if inputValue existing, tree is checkStrictly\n      extraInfo.allCheckedNodes =\n        props.treeCheckStrictly || this.state.inputValue\n          ? info.checkedNodes\n          : flatToHierarchy(info.checkedNodesPositions);\n      this._checkedNodes = info.checkedNodesPositions;\n      const _tree = this.trigger.popupEle;\n      this._treeNodesStates = _tree.checkKeys;\n    } else {\n      extraInfo.selected = info.selected;\n    }\n\n    this.fireChange(value, extraInfo);\n    // 选中后判断是否需要清楚搜索值\n    if(props.autoClearSearchValue ){\n      this.clearSearchInput()\n    }\n    if (props.inputValue && isEmpty(this.props.searchValue)) {\n      this.setState({\n        inputValue: '',\n      });\n    }else{\n      this.setState({\n        inputValue: this.props.searchValue,\n      });\n    }\n  };\n\n  onDeselect = info => {\n    this.removeSelected(getValuePropValue(info.node));\n    if (!isMultiple(this.props)) {\n      this.setOpenState(false);\n    } else {\n      this.clearSearchInput();\n    }\n  };\n\n  onPlaceholderClick = () => {\n    this.getInputDOMNode().focus();\n  };\n\n  onClearSelection = event => {\n    const props = this.props;\n    const state = this.state;\n    if (props.disabled) {\n      return;\n    }\n    event.stopPropagation();\n    this._cacheTreeNodesStates = 'no';\n    this._checkedNodes = [];\n    if (state.inputValue || state.value.length) {\n      this.setOpenState(false);\n      if (typeof props.inputValue === 'undefined' ) {\n        this.setState(\n          {\n            inputValue: isEmpty(this.props.searchValue) ? '':this.props.searchValue,\n          },\n          () => {\n            this.fireChange([]);\n          },\n        );\n      } else {\n        this.fireChange([]);\n      }\n    }\n  };\n\n  onChoiceAnimationLeave = () => {\n    this.trigger.trigger.forcePopupAlign();\n  };\n\n  getLabelFromNode(child) {\n    return getPropValue(child, this.props.treeNodeLabelProp);\n  }\n\n  getLabelFromProps(props, value) {\n    if (value === undefined) {\n      return null;\n    }\n    let label = null;\n    loopAllChildren(this.renderedTreeData || props.children, item => {\n      if (getValuePropValue(item) === value) {\n        label = this.getLabelFromNode(item);\n      }\n    });\n    if (label === null) {\n      return value;\n    }\n    return label;\n  }\n\n  getDropdownContainer() {\n    if (!this.dropdownContainer) {\n      this.dropdownContainer = document.createElement('div');\n      document.body.appendChild(this.dropdownContainer);\n    }\n    return this.dropdownContainer;\n  }\n\n  getSearchPlaceholderElement(hidden) {\n    const props = this.props;\n    let placeholder;\n    if (isMultiple(props)) {\n      placeholder = props.placeholder || props.searchPlaceholder;\n    } else {\n      placeholder = props.searchPlaceholder;\n    }\n    if (placeholder) {\n      return (\n        <span\n          style={{ display: hidden ? 'none' : 'block' }}\n          onClick={this.onPlaceholderClick}\n          className={`${props.prefixCls}-search__field__placeholder`}\n        >\n          {placeholder}\n        </span>\n      );\n    }\n    return null;\n  }\n\n  getInputElement() {\n    const { inputValue } = this.state;\n    const { prefixCls, disabled } = this.props;\n    return (\n      <span className={`${prefixCls}-search__field__wrap`}>\n        <input\n          ref={saveRef(this, 'inputInstance')}\n          onChange={this.onInputChange}\n          onKeyDown={this.onInputKeyDown}\n          value={inputValue}\n          disabled={disabled}\n          className={`${prefixCls}-search__field`}\n          role=\"textbox\"\n        />\n        <span\n          ref={saveRef(this, 'inputMirrorInstance')}\n          className={`${prefixCls}-search__field__mirror`}\n        >\n          {inputValue}&nbsp;\n        </span>\n        {isMultiple(this.props) ? null : this.getSearchPlaceholderElement(!!inputValue)}\n      </span>\n    );\n  }\n\n  getInputDOMNode() {\n    return this.inputInstance;\n  }\n\n  getPopupDOMNode() {\n    return this.trigger.getPopupDOMNode();\n  }\n\n  getPopupComponentRefs() {\n    return this.trigger.getPopupEleRefs();\n  }\n\n  getValue(_props, val, init = true) {\n    let value = val;\n    // if inputValue existing, tree is checkStrictly\n    const _strict =\n      init === '__strict' ||\n      (init &&\n        ((this.state && this.state.inputValue) || this.props.inputValue !== _props.inputValue));\n    if (_props.treeCheckable && (_props.treeCheckStrictly || _strict)) {\n      this.halfCheckedValues = [];\n      value = [];\n      val.forEach(i => {\n        if (!i.halfChecked) {\n          value.push(i);\n        } else {\n          this.halfCheckedValues.push(i);\n        }\n      });\n    }\n    // if (!(_props.treeCheckable && !_props.treeCheckStrictly)) {\n    if (\n      !!!_props.treeCheckable ||\n      (_props.treeCheckable && (_props.treeCheckStrictly || _strict))\n    ) {\n      return value;\n    }\n    let checkedTreeNodes;\n    if (\n      this._cachetreeData &&\n      this._cacheTreeNodesStates &&\n      this._checkedNodes &&\n      this.state &&\n      !this.state.inputValue\n    ) {\n      this.checkedTreeNodes = checkedTreeNodes = this._checkedNodes;\n    } else {\n      /**\n       * Note: `this._treeNodesStates`'s treeNodesStates must correspond to nodes of the\n       * final tree (`processTreeNode` function from SelectTrigger.jsx produce the final tree).\n       *\n       * And, `this._treeNodesStates` from `onSelect` is previous value,\n       * so it perhaps only have a few nodes, but the newly filtered tree can have many nodes,\n       * thus, you cannot use previous _treeNodesStates.\n       */\n      // getTreeNodesStates is not effective.\n      this._treeNodesStates = getTreeNodesStates(\n        this.renderedTreeData || _props.children,\n        value.map(item => item.value),\n      );\n      this.checkedTreeNodes = checkedTreeNodes = this._treeNodesStates.checkedNodes;\n    }\n    const mapLabVal = arr =>\n      arr.map(itemObj => {\n        return {\n          value: getValuePropValue(itemObj.node),\n          label: getPropValue(itemObj.node, _props.treeNodeLabelProp),\n        };\n      });\n    const props = this.props;\n    let checkedValues = [];\n    if (props.showCheckedStrategy === SHOW_ALL) {\n      checkedValues = mapLabVal(checkedTreeNodes);\n    } else if (props.showCheckedStrategy === SHOW_PARENT) {\n      const posArr = filterParentPosition(checkedTreeNodes.map(itemObj => itemObj.pos));\n      checkedValues = mapLabVal(\n        checkedTreeNodes.filter(itemObj => posArr.indexOf(itemObj.pos) !== -1),\n      );\n    } else {\n      checkedValues = mapLabVal(checkedTreeNodes.filter(itemObj => !itemObj.node.props.children));\n    }\n    return checkedValues;\n  }\n\n  getCheckedNodes(info, props) {\n    // TODO treeCheckable does not support tags/dynamic\n    let { checkedNodes } = info;\n    let checkNodeProps = checkedNodes.forEach(item => {\n      if(!item.props){\n        item.props = item\n      }\n      return item\n    })\n    if (props.treeCheckStrictly || this.state.inputValue) {\n      return checkNodeProps;\n    }\n    const checkedNodesPositions = info.checkedNodesPositions;\n    if (props.showCheckedStrategy === SHOW_ALL) {\n      checkNodeProps = checkNodeProps;\n    } else if (props.showCheckedStrategy === SHOW_PARENT) {\n      const posArr = filterParentPosition(checkedNodesPositions.map(itemObj => itemObj.pos));\n      checkNodeProps = checkedNodesPositions\n        .filter(itemObj => posArr.indexOf(itemObj.pos) !== -1)\n        .map(itemObj => itemObj.node);\n    } else {\n      checkNodeProps = checkNodeProps.filter(n => !n.props.children);\n    }\n    return checkNodeProps;\n  }\n\n  getDeselectedValue(selectedValue) {\n    const checkedTreeNodes = this.checkedTreeNodes;\n    let unCheckPos;\n    checkedTreeNodes.forEach(itemObj => {\n      if (itemObj.node.props.value === selectedValue) {\n        unCheckPos = itemObj.pos;\n      }\n    });\n    const newVals = [];\n    const newCkTns = [];\n    checkedTreeNodes.forEach(itemObj => {\n      if (isPositionPrefix(itemObj.pos, unCheckPos) || isPositionPrefix(unCheckPos, itemObj.pos)) {\n        // Filter ancestral and children nodes when uncheck a node.\n        return;\n      }\n      newCkTns.push(itemObj);\n      newVals.push(itemObj.node.props.value);\n    });\n    this.checkedTreeNodes = this._checkedNodes = newCkTns;\n    const nv = this.state.value.filter(val => newVals.indexOf(val.value) !== -1);\n    this.fireChange(nv, { triggerValue: selectedValue, clear: true });\n  }\n\n  setOpenState(open, needFocus, documentClickClose = false) {\n    this.clearDelayTimer();\n    const { props } = this;\n    // can not optimize, if children is empty\n    // if (this.state.open === open) {\n    //   return;\n    // }\n    if (!this.props.onDropdownVisibleChange(open, { documentClickClose })) {\n      return;\n    }\n    this.setState(\n      {\n        open,\n      },\n      () => {\n        if (needFocus || open) {\n          // Input dom init after first time component render\n          // Add delay for this to get focus\n          Promise.resolve().then(() => {\n            if (open || isMultiple(props)) {\n              const input = this.getInputDOMNode();\n              if (input && document.activeElement !== input) {\n                input.focus();\n              }\n            } else if (this.selection) {\n              this.selection.focus();\n            }\n          });\n        }\n      },\n    );\n  }\n\n  clearSearchInput() {\n    this.getInputDOMNode().focus();\n    if (!('inputValue' in this.props)) {\n      this.setState({ inputValue: isEmpty(this.props.searchValue)? '' : isEmpty(this.props.searchValue) });\n    }\n  }\n\n  addLabelToValue(props, value_) {\n    let value = value_;\n    if (this.isLabelInValue()) {\n      value.forEach((v, i) => {\n        if (Object.prototype.toString.call(value[i]) !== '[object Object]') {\n          value[i] = {\n            value: '',\n            label: '',\n          };\n          return;\n        }\n        v.label = v.label || this.getLabelFromProps(props, v.value);\n      });\n    } else {\n      value = value.map(v => {\n        return {\n          value: v,\n          label: this.getLabelFromProps(props, v),\n        };\n      });\n    }\n    return value;\n  }\n\n  clearDelayTimer() {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n  }\n\n  /**\n   * 移除select值\n   * @param {*} selectedVal\n   */\n  removeSelected(selectedVal) {\n    const props = this.props;\n    if (props.disabled) {\n      return;\n    }\n    this._cacheTreeNodesStates = 'no';\n    if (\n      props.treeCheckable &&\n      (props.showCheckedStrategy === SHOW_ALL || props.showCheckedStrategy === SHOW_PARENT) &&\n      !(props.treeCheckStrictly || this.state.inputValue)\n    ) {\n      this.getDeselectedValue(selectedVal);\n      return;\n    }\n    // click the node's `x`(in select box), likely trigger the TreeNode's `unCheck` event,\n    // cautiously, they are completely different, think about it, the tree may not render at first,\n    // but the nodes in select box are ready.\n    let label;\n    const value = this.state.value.filter(singleValue => {\n      if (singleValue.value === selectedVal) {\n        label = singleValue.label;\n      }\n      return singleValue.value !== selectedVal;\n    });\n    const canMultiple = isMultiple(props);\n\n    if (canMultiple) {\n      let event = selectedVal;\n      if (this.isLabelInValue()) {\n        event = {\n          value: selectedVal,\n          label,\n        };\n      }\n      props.onDeselect(event);\n    }\n    if (props.treeCheckable) {\n      if (this.checkedTreeNodes && this.checkedTreeNodes.length) {\n        this.checkedTreeNodes = this._checkedNodes = this.checkedTreeNodes.filter(item => {\n          return value.some(i => i.value === item.node.props.value);\n        });\n      }\n    }\n    this.fireChange(value, { triggerValue: selectedVal, clear: true });\n  }\n\n  openIfHasChildren() {\n    const props = this.props;\n    if (Children.count(props.children) || !isMultiple(props)) {\n      this.setOpenState(true);\n    }\n  }\n\n  fireChange(value, extraInfo = {}) {\n    const props = this.props;\n    const vals = value.map(i => i.value);\n    const sv = this.state.value.map(i => i.value);\n    if (vals.length !== sv.length || !vals.every((val, index) => sv[index] === val)) {\n      const ex = {\n        preValue: [...this.state.value],\n        ...extraInfo,\n      };\n      let labs = null;\n      let vls = value;\n      if (!this.isLabelInValue()) {\n        labs = value.map(i => i.label);\n        vls = vls.map(v => v.value);\n      } else if (this.halfCheckedValues && this.halfCheckedValues.length) {\n        this.halfCheckedValues.forEach(i => {\n          if (!vls.some(v => v.value === i.value)) {\n            vls.push(i);\n          }\n        });\n      }\n      if (props.treeCheckable && ex.clear) {\n        const treeData = this.renderedTreeData || props.children;\n        ex.allCheckedNodes = flatToHierarchy(filterAllCheckedData(vals, treeData));\n      }\n      if (props.treeCheckable && this.state.inputValue) {\n        const _vls = [...this.state.value];\n        if (ex.checked) {\n          value.forEach(i => {\n            if (_vls.every(ii => ii.value !== i.value)) {\n              _vls.push({ ...i });\n            }\n          });\n        } else {\n          let index;\n          const includeVal = _vls.some((i, ind) => {\n            if (i.value === ex.triggerValue) {\n              index = ind;\n              return true;\n            }\n          });\n          if (includeVal) {\n            _vls.splice(index, 1);\n          }\n        }\n        vls = _vls;\n        if (!this.isLabelInValue()) {\n          labs = _vls.map(v => v.label);\n          vls = _vls.map(v => v.value);\n        }\n      }\n      this._savedValue = isMultiple(props) ? vls : vls[0];\n      props.onChange(this._savedValue, labs, ex);\n      if (!('value' in props)) {\n        this._cacheTreeNodesStates = false;\n        this.setState({\n          value: this.getValue(\n            props,\n            toArray(this._savedValue).map((v, i) => {\n              return this.isLabelInValue()\n                ? v\n                : {\n                    value: v,\n                    label: labs && labs[i],\n                  };\n            }),\n          ),\n        });\n      }\n    }\n  }\n\n  isLabelInValue() {\n    const { treeCheckable, treeCheckStrictly, labelInValue } = this.props;\n    if (treeCheckable && treeCheckStrictly) {\n      return true;\n    }\n    return labelInValue || false;\n  }\n\n  focus() {\n    if (!isMultiple(this.props)) {\n      this.selection.focus();\n    } else {\n      this.getInputDOMNode().focus();\n    }\n  }\n\n  blur() {\n    if (!isMultiple(this.props)) {\n      this.selection.blur();\n    } else {\n      this.getInputDOMNode().blur();\n    }\n  }\n\n  renderClear() {\n    const { prefixCls, allowClear } = this.props;\n    const { value, inputValue } = this.state;\n    const clear = (\n      <Button\n        key=\"clear\"\n        className={`${prefixCls}-clear`}\n        style={UNSELECTABLE_STYLE}\n        {...UNSELECTABLE_ATTRIBUTE}\n        shape=\"circle\"\n        icon=\"close\"\n        size=\"small\"\n        onClick={this.onClearSelection}\n        onMouseDown={preventDefaultEvent}\n      />\n    );\n    if (!allowClear) {\n      return null;\n    }\n    if (inputValue || value.length) {\n      return clear;\n    }\n    return null;\n  }\n\n  onArrowClick = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (!this.props.disabled) {\n      this.onDropdownVisibleChange(!this.state.open);\n    }\n  };\n\n  getPlaceholderElement = () => {\n    const { props, state } = this;\n    const placeholder = props.placeholder;\n    if (placeholder) {\n      return <div className={`${props.prefixCls}-selection__placeholder`}>{placeholder}</div>;\n    }\n    return null;\n  };\n\n  renderTopControlNode() {\n    const { value } = this.state;\n    const props = this.props;\n    const { labelInValue, choiceTransitionName, prefixCls, maxTagTextLength, maxTagCount, maxTagPlaceholder,  choiceRender } = props;\n    const multiple = isMultiple(props);\n\n    // single and not combobox, input is inside dropdown\n    if (!multiple) {\n      const singleValue = value && value[0];\n      const { label } = singleValue || {};\n      const innerNode = (\n        <span key=\"value\" title={label} className={`${prefixCls}-selection-selected-value`}>\n          {choiceRender ? choiceRender(label) : label}\n        </span>\n      );\n      return (\n        <div className={`${prefixCls}-selection__rendered`}>\n          {this.getPlaceholderElement()}\n          {innerNode}\n          {this.renderClear()}\n          {multiple || !props.showArrow ? null : (\n            <span\n              key=\"arrow\"\n              className={`${prefixCls}-arrow`}\n              style={UNSELECTABLE_STYLE}\n              {...UNSELECTABLE_ATTRIBUTE}\n              onClick={this.onArrowClick}\n            >\n              <i className=\"icon icon-arrow_drop_down\"></i>\n              <b />\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    // Check if `maxTagCount` is set\n    let myValueList = value;\n    if (maxTagCount >= 0) {\n      myValueList = value.slice(0, maxTagCount);\n    }\n\n\n    const selectedValueNodes = myValueList.map(singleValue => {\n      let content = singleValue.label;\n      const title = content;\n      if (maxTagTextLength && typeof content === 'string' && content.length > maxTagTextLength) {\n        content = `${content.slice(0, maxTagTextLength)}...`;\n      }\n      return (\n        <li\n          style={UNSELECTABLE_STYLE}\n          {...UNSELECTABLE_ATTRIBUTE}\n          onMouseDown={preventDefaultEvent}\n          className={`${prefixCls}-selection__choice`}\n          key={singleValue.value}\n          title={title}\n        >\n          <span\n            className={`${prefixCls}-selection__choice__remove`}\n            onClick={this.removeSelected.bind(this, singleValue.value)}\n          >\n            <i className=\"icon icon-cancel\" />\n          </span>\n          <span className={`${prefixCls}-selection__choice__content`}>{content}</span>\n        </li>\n      );\n    });\n    if (maxTagCount >= 0 && maxTagCount < value.length) {\n      let content = `+ ${value.length - maxTagCount} ...`;\n      if (typeof maxTagPlaceholder === 'string') {\n        content = maxTagPlaceholder;\n      } else if (typeof maxTagPlaceholder === 'function') {\n        const restValueList = value.slice(maxTagCount);\n        content = maxTagPlaceholder(\n          labelInValue ? restValueList : restValueList.map(({ value }) => value)\n        );\n      }\n      const restNodeSelect = (\n        <li\n          style={UNSELECTABLE_STYLE}\n          {...UNSELECTABLE_ATTRIBUTE}\n          onMouseDown={preventDefaultEvent}\n          className={`${prefixCls}-selection__choice`}\n          key=\"rc-tree-select-internal-max-tag-counter\"\n          title={content}\n        >\n          <span className={`${prefixCls}-selection__choice__content`}>{content}</span>\n        </li>\n      );\n      selectedValueNodes.push(restNodeSelect);\n    }\n\n    selectedValueNodes.push(\n      <li className={`${prefixCls}-search ${prefixCls}-search--inline`} key=\"__input\">\n        {this.getInputElement()}\n      </li>,\n    );\n    const className = `${prefixCls}-selection__rendered`;\n    if (choiceTransitionName) {\n      return (\n        <div className={className}>\n          <Animate\n            component=\"ul\"\n            transitionName={choiceTransitionName}\n            onLeave={this.onChoiceAnimationLeave}\n          >\n            {selectedValueNodes}\n          </Animate>\n        </div>\n      );\n    }\n    return <ul className={className}>{selectedValueNodes}</ul>;\n  }\n\n  renderTreeData(props) {\n    const validProps = props || this.props;\n    if (validProps.treeData) {\n      if (props && props.treeData === this.props.treeData && this.renderedTreeData) {\n        // cache and use pre data.\n        this._cachetreeData = true;\n        return this.renderedTreeData;\n      }\n      this._cachetreeData = false;\n      let treeData = [...validProps.treeData];\n      // process treeDataSimpleMode\n      if (validProps.treeDataSimpleMode) {\n        let simpleFormat = {\n          id: 'id',\n          pId: 'pId',\n          rootPId: null,\n        };\n        if (Object.prototype.toString.call(validProps.treeDataSimpleMode) === '[object Object]') {\n          simpleFormat = { ...simpleFormat, ...validProps.treeDataSimpleMode };\n        }\n        treeData = processSimpleTreeData(treeData, simpleFormat);\n      }\n      return loopTreeData(treeData, undefined, this.props.treeCheckable);\n    }\n  }\n\n  getUnderLine() {\n    const { prefixCls, className } = this.props;\n\n    if (className && className.includes(`${prefixCls}-auto-complete`)) {\n      return null;\n    }\n\n    return (\n      <div className={`${prefixCls}-underline`}>\n        <span className={`${prefixCls}-ripple`} />\n      </div>\n    );\n  }\n\n  render() {\n    const props = this.props;\n    const multiple = isMultiple(props);\n    const { open, focused, inputValue, value } = this.state;\n    const { className, disabled, label, prefixCls } = props;\n    const ctrlNode = this.renderTopControlNode();\n    let extraSelectionProps = {};\n    if (!multiple) {\n      extraSelectionProps = {\n        onKeyDown: this.onKeyDown,\n        tabIndex: 0,\n      };\n    }\n    const rootCls = {\n      [className]: !!className,\n      [prefixCls]: 1,\n      [`${prefixCls}-has-border`]: 1,\n      [`${prefixCls}-open`]: open,\n      [`${prefixCls}-focused`]: open || focused,\n      [`${prefixCls}-has-value`]: inputValue || (value.length && value[0]),\n      [`${prefixCls}-has-label`]: label,\n      [`${prefixCls}-multiple`]: multiple,\n      // [`${prefixCls}-combobox`]: isCombobox(props),\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-enabled`]: !disabled,\n      [`${prefixCls}-allow-clear`]: !!props.allowClear,\n    };\n\n    return (\n      <SelectTrigger\n        {...props}\n        treeNodes={props.children}\n        treeData={this.renderedTreeData}\n        _cachetreeData={this._cachetreeData}\n        _treeNodesStates={this._treeNodesStates}\n        halfCheckedValues={this.halfCheckedValues}\n        multiple={multiple}\n        disabled={disabled}\n        visible={open}\n        inputValue={inputValue}\n        inputElement={this.getInputElement()}\n        value={value}\n        onDropdownVisibleChange={this.onDropdownVisibleChange}\n        getPopupContainer={props.getPopupContainer}\n        onSelect={this.onSelect}\n        ref={saveRef(this, 'trigger')}\n      >\n        <div\n          style={props.style}\n          onClick={props.onClick}\n          className={classnames(rootCls)}\n          onBlur={props.onBlur}\n          onFocus={props.onFocus}\n        >\n          <div\n            ref={saveRef(this, 'selection')}\n            key=\"selection\"\n            className={`${prefixCls}-selection\n            ${prefixCls}-selection--${multiple ? 'multiple' : 'single'}`}\n            role=\"combobox\"\n            aria-autocomplete=\"list\"\n            aria-haspopup=\"true\"\n            aria-expanded={open}\n            {...extraSelectionProps}\n          >\n            {ctrlNode}\n            {multiple ? this.getSearchPlaceholderElement(!!inputValue || value.length) : null}\n          </div>\n          {this.getUnderLine()}\n        </div>\n      </SelectTrigger>\n    );\n  }\n}\n"]}