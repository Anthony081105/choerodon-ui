{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/ripple/MouseDown.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,SAAS,SAAT,CACE,OADF,EAEE,SAFF,EAGE,QAHF,EAG0C;AAExC,SAAO,UAAA,CAAC,EAAG;AACT,QAAM,aAAa,GAAG,OAAO,CAAC,KAAR,CAAc,SAAd,CAAtB;;AACA,QAAI,aAAJ,EAAmB;AACjB,MAAA,aAAa,CAAC,CAAD,CAAb;AACD;;AACD,IAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAND;AAOD;;IAaoB,S;;;;;AAArB,uBAAA;AAAA;;AAAA;;AAKE,UAAA,KAAA,GAAwB,EAAxB;;AAmBA,UAAA,IAAA,GAAuC,UAAA,CAAC,EAAG;AAAA,UACjC,aADiC,GACf,CADe,CACjC,aADiC;AAEzC,UAAM,GAAG,GAAe,aAAa,CAAC,qBAAd,EAAxB;;AACA,YAAK,QAAL,CAAc;AACZ,QAAA,IAAI,EAAE;AACJ,UAAA,CAAC,EAAE,CAAC,CAAC,OAAF,GAAY,GAAG,CAAC,IADf;AAEJ,UAAA,CAAC,EAAE,CAAC,CAAC,OAAF,GAAY,GAAG,CAAC,GAFf;AAGJ,UAAA,KAAK,EAAE,aAAa,CAAC,WAHjB;AAIJ,UAAA,MAAM,EAAE,aAAa,CAAC,YAJlB;AAKJ,UAAA,QAAQ,EACN,QAAQ,CAAC,WAAT,IAAwB,QAAQ,CAAC,WAAT,CAAqB,gBAArB,CAAsC,aAAtC,EAAqD;AAN3E;AADM,OAAd;AAUD,KAbD;;AAeA,UAAA,IAAA,GAAO,YAAK;AACV,YAAK,QAAL,CAAc;AACZ,QAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAJD;;AAvCF;AA4CC;;;;6BArCO;AAAA,wBAC8B,KAAK,KADnC;AAAA,UACI,QADJ,eACI,QADJ;AAAA,UACc,WADd,eACc,WADd;AAAA,UAEI,IAFJ,GAEa,KAAK,KAFlB,CAEI,IAFJ;AAGJ,UAAM,OAAO,GAAG,QAAQ,CAAC,WAAD,EAAc,IAAd,CAAxB;AACA,UAAM,QAAQ,GAAG;AACf,QAAA,WAAW,EAAE,SAAS,CAAC,OAAD,EAAU,aAAV,EAAyB,KAAK,IAA9B;AADP,OAAjB;;AAGA,UAAI,IAAJ,EAAU;AACR,kCAAc,QAAd,EAAwB;AACtB,UAAA,SAAS,EAAE,SAAS,CAAC,OAAD,EAAU,WAAV,EAAuB,KAAK,IAA5B,CADE;AAEtB,UAAA,YAAY,EAAE,SAAS,CAAC,OAAD,EAAU,cAAV,EAA0B,KAAK,IAA/B,CAFD;AAGtB,UAAA,SAAS,EAAE,SAAS,CAAC,OAAD,EAAU,WAAV,EAAuB,KAAK,IAA5B;AAHE,SAAxB;AAKD;;AACD,aAAO,yBAAa,OAAb,EAAsB,QAAtB,CAAP;AACD;;;EAtBoC,oB;;;AAC9B,SAAA,CAAA,WAAA,GAAc,WAAd;AAEA,SAAA,CAAA,SAAA,GAAY;AAAE,EAAA,WAAW,EAAE,sBAAU;AAAzB,CAAZ","sourcesContent":["import { cloneElement, MouseEventHandler, PureComponent, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction wrapEvent(\n  element: ReactElement<any>,\n  eventName: string,\n  callback: MouseEventHandler<HTMLElement>,\n): MouseEventHandler<HTMLElement> {\n  return e => {\n    const originalEvent = element.props[eventName];\n    if (originalEvent) {\n      originalEvent(e);\n    }\n    callback(e);\n  };\n}\n\nexport type Size = { x: number; y: number; width: number; height: number; position: string };\n\nexport interface MouseDownProps {\n  children: (child: ReactElement<any>, size?: Size) => ReactElement<any>;\n  rippleChild: ReactElement<any>;\n}\n\nexport interface MouseDownState {\n  size?: Size;\n}\n\nexport default class MouseDown extends PureComponent<MouseDownProps> {\n  static displayName = 'MouseDown';\n\n  static propTypes = { rippleChild: PropTypes.node };\n\n  state: MouseDownState = {};\n\n  render() {\n    const { children, rippleChild } = this.props;\n    const { size } = this.state;\n    const element = children(rippleChild, size);\n    const newProps = {\n      onMouseDown: wrapEvent(element, 'onMouseDown', this.show),\n    };\n    if (size) {\n      Object.assign(newProps, {\n        onMouseUp: wrapEvent(element, 'onMouseUp', this.hide),\n        onMouseLeave: wrapEvent(element, 'onMouseLeave', this.hide),\n        onDragEnd: wrapEvent(element, 'onDragEnd', this.hide),\n      });\n    }\n    return cloneElement(element, newProps);\n  }\n\n  show: MouseEventHandler<HTMLElement> = e => {\n    const { currentTarget } = e;\n    const pos: ClientRect = currentTarget.getBoundingClientRect();\n    this.setState({\n      size: {\n        x: e.clientX - pos.left,\n        y: e.clientY - pos.top,\n        width: currentTarget.clientWidth,\n        height: currentTarget.clientHeight,\n        position:\n          document.defaultView && document.defaultView.getComputedStyle(currentTarget).position,\n      },\n    });\n  };\n\n  hide = () => {\n    this.setState({\n      size: undefined,\n    });\n  };\n}\n"]}