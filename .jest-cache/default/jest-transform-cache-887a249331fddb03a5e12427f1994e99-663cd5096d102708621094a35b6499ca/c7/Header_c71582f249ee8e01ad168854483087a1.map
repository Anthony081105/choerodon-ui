{"version":3,"sources":["Header.jsx"],"names":["Header","props","event","str","target","value","setState","format","hourOptions","minuteOptions","secondOptions","disabledHours","disabledMinutes","disabledSeconds","onChange","allowEmpty","originalValue","getProtoValue","clone","parsed","isValid","invalid","hour","minute","second","indexOf","disabledHourOptions","disabledMinuteOptions","disabledSecondOptions","changedValue","e","onEsc","onKeyDown","keyCode","onClear","state","focusOnOpen","requestAnimationFrame","window","setTimeout","refs","input","focus","select","nextProps","prefixCls","clearText","defaultOpenValue","placeholder","inputReadOnly","invalidClass","onInputChange","getInput","getClearButton","Component","PropTypes","string","disabledDate","func","object","bool","array","currentSelectPanel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nclass Header extends Component {\n  static propTypes = {\n    format: PropTypes.string,\n    prefixCls: PropTypes.string,\n    disabledDate: PropTypes.func,\n    placeholder: PropTypes.string,\n    clearText: PropTypes.string,\n    value: PropTypes.object,\n    inputReadOnly: PropTypes.bool,\n    hourOptions: PropTypes.array,\n    minuteOptions: PropTypes.array,\n    secondOptions: PropTypes.array,\n    disabledHours: PropTypes.func,\n    disabledMinutes: PropTypes.func,\n    disabledSeconds: PropTypes.func,\n    onChange: PropTypes.func,\n    onClear: PropTypes.func,\n    onEsc: PropTypes.func,\n    allowEmpty: PropTypes.bool,\n    defaultOpenValue: PropTypes.object,\n    currentSelectPanel: PropTypes.string,\n    focusOnOpen: PropTypes.bool,\n    onKeyDown: PropTypes.func,\n  };\n\n  static defaultProps = {\n    inputReadOnly: false,\n  }\n\n  constructor(props) {\n    super(props);\n    const { value, format } = props;\n    this.state = {\n      str: value && value.format(format) || '',\n      invalid: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.focusOnOpen) {\n      // Wait one frame for the panel to be positioned before focusing\n      const requestAnimationFrame = (window.requestAnimationFrame || window.setTimeout);\n      requestAnimationFrame(() => {\n        this.refs.input.focus();\n        this.refs.input.select();\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value, format } = nextProps;\n    this.setState({\n      str: value && value.format(format) || '',\n      invalid: false,\n    });\n  }\n\n  onInputChange = (event) => {\n    const str = event.target.value;\n    this.setState({\n      str,\n    });\n    const {\n      format, hourOptions, minuteOptions, secondOptions,\n      disabledHours, disabledMinutes,\n      disabledSeconds, onChange, allowEmpty,\n    } = this.props;\n\n    if (str) {\n      const originalValue = this.props.value;\n      const value = this.getProtoValue().clone();\n      const parsed = moment(str, format, true);\n      if (!parsed.isValid()) {\n        this.setState({\n          invalid: true,\n        });\n        return;\n      }\n      value.hour(parsed.hour()).minute(parsed.minute()).second(parsed.second());\n\n      // if time value not allowed, response warning.\n      if (\n        hourOptions.indexOf(value.hour()) < 0 ||\n        minuteOptions.indexOf(value.minute()) < 0 ||\n        secondOptions.indexOf(value.second()) < 0\n      ) {\n        this.setState({\n          invalid: true,\n        });\n        return;\n      }\n\n      // if time value is disabled, response warning.\n      const disabledHourOptions = disabledHours();\n      const disabledMinuteOptions = disabledMinutes(value.hour());\n      const disabledSecondOptions = disabledSeconds(value.hour(), value.minute());\n      if (\n        (disabledHourOptions && disabledHourOptions.indexOf(value.hour()) >= 0) ||\n        (disabledMinuteOptions && disabledMinuteOptions.indexOf(value.minute()) >= 0) ||\n        (disabledSecondOptions && disabledSecondOptions.indexOf(value.second()) >= 0)\n      ) {\n        this.setState({\n          invalid: true,\n        });\n        return;\n      }\n\n      if (originalValue) {\n        if (\n          originalValue.hour() !== value.hour() ||\n          originalValue.minute() !== value.minute() ||\n          originalValue.second() !== value.second()\n        ) {\n          // keep other fields for rc-calendar\n          const changedValue = originalValue.clone();\n          changedValue.hour(value.hour());\n          changedValue.minute(value.minute());\n          changedValue.second(value.second());\n          onChange(changedValue);\n        }\n      } else if (originalValue !== value) {\n        onChange(value);\n      }\n    } else if (allowEmpty) {\n      onChange(null);\n    } else {\n      this.setState({\n        invalid: true,\n      });\n      return;\n    }\n\n    this.setState({\n      invalid: false,\n    });\n  }\n\n  onKeyDown = (e) => {\n    const { onEsc, onKeyDown } = this.props;\n    if (e.keyCode === 27) {\n      onEsc();\n    }\n\n    onKeyDown(e);\n  }\n\n  onClear = () => {\n    this.setState({ str: '' });\n    this.props.onClear();\n  }\n\n  getClearButton() {\n    const { prefixCls, allowEmpty } = this.props;\n    if (!allowEmpty) {\n      return null;\n    }\n    return (<a\n      className={`${prefixCls}-clear-btn`}\n      role=\"button\"\n      title={this.props.clearText}\n      onMouseDown={this.onClear}\n    />);\n  }\n\n  getProtoValue() {\n    return this.props.value || this.props.defaultOpenValue;\n  }\n\n  getInput() {\n    const { prefixCls, placeholder, inputReadOnly } = this.props;\n    const { invalid, str } = this.state;\n    const invalidClass = invalid ? `${prefixCls}-input-invalid` : '';\n    return (\n      <input\n        className={`${prefixCls}-input  ${invalidClass}`}\n        ref=\"input\"\n        onKeyDown={this.onKeyDown}\n        value={str}\n        placeholder={placeholder}\n        onChange={this.onInputChange}\n        readOnly={!!inputReadOnly}\n      />\n    );\n  }\n\n  render() {\n    const { prefixCls } = this.props;\n    return (\n      <div className={`${prefixCls}-input-wrap`}>\n        {this.getInput()}\n        {this.getClearButton()}\n      </div>\n    );\n  }\n}\n\nexport default Header;\n"]}