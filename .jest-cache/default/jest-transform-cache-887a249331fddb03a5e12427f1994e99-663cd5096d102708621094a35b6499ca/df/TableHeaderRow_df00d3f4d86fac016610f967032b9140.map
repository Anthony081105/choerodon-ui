{"version":3,"sources":["TableHeaderRow.jsx"],"names":["TableHeaderRow","row","index","height","components","onHeaderRow","HeaderRow","header","HeaderCell","cell","rowProps","map","column","customStyle","style","i","cellProps","customProps","onHeaderCell","align","textAlign","key","dataIndex","getRowHeight","state","props","fixedColumnsHeadRowsHeight","columns","rows","fixed","headerHeight","length"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,SAASA,cAAT,OAAyE;AAAA,MAA/CC,GAA+C,QAA/CA,GAA+C;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCC,MAAmC,QAAnCA,MAAmC;AAAA,MAA3BC,UAA2B,QAA3BA,UAA2B;AAAA,MAAfC,WAAe,QAAfA,WAAe;AACvE,MAAMC,SAAS,GAAGF,UAAU,CAACG,MAAX,CAAkBN,GAApC;AACA,MAAMO,UAAU,GAAGJ,UAAU,CAACG,MAAX,CAAkBE,IAArC;AACA,MAAMC,QAAQ,GAAGL,WAAW,CAACJ,GAAG,CAACU,GAAJ,CAAQ,UAAAF,IAAI;AAAA,WAAIA,IAAI,CAACG,MAAT;AAAA,GAAZ,CAAD,EAA+BV,KAA/B,CAA5B;AACA,MAAMW,WAAW,GAAGH,QAAQ,GAAGA,QAAQ,CAACI,KAAZ,GAAoB,EAAhD;AACA,MAAMA,KAAK;AAAKX,IAAAA,MAAM,EAANA;AAAL,KAAgBU,WAAhB,CAAX;AAEA,SACE,gCAAC,SAAD,gCAAeH,QAAf;AAAyB,IAAA,KAAK,EAAEI;AAAhC,MACGb,GAAG,CAACU,GAAJ,CAAQ,UAACF,IAAD,EAAOM,CAAP,EAAa;AAAA,QACZH,MADY,GACaH,IADb,CACZG,MADY;AAAA,QACDI,SADC,6CACaP,IADb;AAEpB,QAAMQ,WAAW,GAAGL,MAAM,CAACM,YAAP,GAAsBN,MAAM,CAACM,YAAP,CAAoBN,MAApB,CAAtB,GAAoD,EAAxE;;AACA,QAAIA,MAAM,CAACO,KAAX,EAAkB;AAChBH,MAAAA,SAAS,CAACF,KAAV,GAAkB;AAAEM,QAAAA,SAAS,EAAER,MAAM,CAACO;AAApB,OAAlB;AACD;;AACD,WACE,gCAAC,UAAD,gCACMH,SADN,EAEMC,WAFN;AAGE,MAAA,GAAG,EAAEL,MAAM,CAACS,GAAP,IAAcT,MAAM,CAACU,SAArB,IAAkCP;AAHzC,OADF;AAOD,GAbA,CADH,CADF;AAkBD;;AAED,SAASQ,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoC;AAAA,MAC1BC,0BAD0B,GACKF,KADL,CAC1BE,0BAD0B;AAAA,MAE1BC,OAF0B,GAEDF,KAFC,CAE1BE,OAF0B;AAAA,MAEjBC,IAFiB,GAEDH,KAFC,CAEjBG,IAFiB;AAAA,MAEXC,KAFW,GAEDJ,KAFC,CAEXI,KAFW;AAGlC,MAAMC,YAAY,GAAGJ,0BAA0B,CAAC,CAAD,CAA/C;;AAEA,MAAI,CAACG,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AAED,MAAIC,YAAY,IAAIH,OAApB,EAA6B;AAC3B,QAAIG,YAAY,KAAK,MAArB,EAA6B;AAC3B,aAAO,MAAP;AACD;;AACD,WAAOA,YAAY,GAAGF,IAAI,CAACG,MAA3B;AACD;;AACD,SAAO,IAAP;AACD;;eAEc,wBAAQ,UAACP,KAAD,EAAQC,KAAR,EAAkB;AACvC,SAAO;AACLtB,IAAAA,MAAM,EAAEoB,YAAY,CAACC,KAAD,EAAQC,KAAR;AADf,GAAP;AAGD,CAJc,EAIZzB,cAJY,C","sourcesContent":["import React from 'react';\nimport { connect } from 'mini-store';\n\nfunction TableHeaderRow({ row, index, height, components, onHeaderRow }) {\n  const HeaderRow = components.header.row;\n  const HeaderCell = components.header.cell;\n  const rowProps = onHeaderRow(row.map(cell => cell.column), index);\n  const customStyle = rowProps ? rowProps.style : {};\n  const style = { height, ...customStyle };\n\n  return (\n    <HeaderRow {...rowProps} style={style}>\n      {row.map((cell, i) => {\n        const { column, ...cellProps } = cell;\n        const customProps = column.onHeaderCell ? column.onHeaderCell(column) : {};\n        if (column.align) {\n          cellProps.style = { textAlign: column.align };\n        }\n        return (\n          <HeaderCell\n            {...cellProps}\n            {...customProps}\n            key={column.key || column.dataIndex || i}\n          />\n        );\n      })}\n    </HeaderRow>\n  );\n}\n\nfunction getRowHeight(state, props) {\n  const { fixedColumnsHeadRowsHeight } = state;\n  const { columns, rows, fixed } = props;\n  const headerHeight = fixedColumnsHeadRowsHeight[0];\n\n  if (!fixed) {\n    return null;\n  }\n\n  if (headerHeight && columns) {\n    if (headerHeight === 'auto') {\n      return 'auto';\n    }\n    return headerHeight / rows.length;\n  }\n  return null;\n}\n\nexport default connect((state, props) => {\n  return {\n    height: getRowHeight(state, props),\n  };\n})(TableHeaderRow);\n"]}