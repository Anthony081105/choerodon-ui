{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/table/filterDropdown.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { cloneElement, Component, ReactElement, SyntheticEvent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport closest from 'dom-closest';\nimport classNames from 'classnames';\nimport Dropdown from '../dropdown';\nimport Icon from '../icon';\nimport Radio from '../radio';\nimport FilterDropdownMenuWrapper from './FilterDropdownMenuWrapper';\nimport { ColumnFilterItem, ColumnProps, FilterMenuProps, FilterMenuState } from './interface';\nimport Menu, { Item as MenuItem, SubMenu } from '../rc-components/menu';\n\nexport default class FilterMenu<T> extends Component<FilterMenuProps<T>, FilterMenuState> {\n  static defaultProps = {\n    handleFilter() {},\n    column: {},\n  };\n\n  neverShown: boolean;\n\n  constructor(props: FilterMenuProps<T>) {\n    super(props);\n\n    const visible =\n      'filterDropdownVisible' in props.column ? props.column.filterDropdownVisible : false;\n\n    this.state = {\n      selectedKeys: props.selectedKeys,\n      keyPathOfSelectedItem: {}, // 记录所有有选中子菜单的祖先菜单\n      visible,\n    };\n  }\n\n  componentDidMount() {\n    const { column } = this.props;\n    this.setNeverShown(column);\n  }\n\n  componentWillReceiveProps(nextProps: FilterMenuProps<T>) {\n    const { column } = nextProps;\n    this.setNeverShown(column);\n    const newState = {} as {\n      selectedKeys: string[];\n      visible: boolean;\n    };\n    if ('selectedKeys' in nextProps) {\n      newState.selectedKeys = nextProps.selectedKeys;\n    }\n    if ('filterDropdownVisible' in column) {\n      newState.visible = column.filterDropdownVisible as boolean;\n    }\n    if (Object.keys(newState).length > 0) {\n      this.setState(newState);\n    }\n  }\n\n  setNeverShown = (column: ColumnProps<T>) => {\n    const rootNode = findDOMNode(this);\n    const { prefixCls } = this.props;\n    const filterBelongToScrollBody = !!closest(rootNode, `${prefixCls}-scroll`);\n    if (filterBelongToScrollBody) {\n      // When fixed column have filters, there will be two dropdown menus\n      // Filter dropdown menu inside scroll body should never be shown\n\n      this.neverShown = !!column.fixed;\n    }\n  };\n\n  setSelectedKeys = ({ selectedKeys }: { selectedKeys: string[] }) => {\n    this.setState({ selectedKeys });\n  };\n\n  setVisible(visible: boolean) {\n    const { column } = this.props;\n    if (!('filterDropdownVisible' in column)) {\n      this.setState({ visible });\n    }\n    if (column.onFilterDropdownVisibleChange) {\n      column.onFilterDropdownVisibleChange(visible);\n    }\n  }\n\n  handleClearFilters = () => {\n    this.setState(\n      {\n        selectedKeys: [],\n      },\n      this.handleConfirm,\n    );\n  };\n\n  handleConfirm = () => {\n    this.setVisible(false);\n    this.confirmFilter();\n  };\n\n  onVisibleChange = (visible: boolean) => {\n    this.setVisible(visible);\n    if (!visible) {\n      this.confirmFilter();\n    }\n  };\n\n  confirmFilter() {\n    const { selectedKeys: propSelectedKeys, column, confirmFilter } = this.props;\n    const { selectedKeys } = this.state;\n    if (selectedKeys !== propSelectedKeys) {\n      confirmFilter(column, selectedKeys);\n    }\n  }\n\n  renderMenuItem(item: ColumnFilterItem) {\n    const { column } = this.props;\n    const { selectedKeys } = this.state;\n    const multiple = 'filterMultiple' in column ? column.filterMultiple : false;\n    const input = multiple ? null : (\n      <Radio checked={selectedKeys.indexOf(item.value.toString()) >= 0} />\n    );\n\n    return (\n      <MenuItem key={item.value}>\n        {input}\n        <span>{item.text}</span>\n      </MenuItem>\n    );\n  }\n\n  hasSubMenu() {\n    const {\n      column: { filters = [] },\n    } = this.props;\n    return filters.some(item => !!(item.children && item.children.length > 0));\n  }\n\n  renderMenus(items: ColumnFilterItem[]): ReactElement<any>[] {\n    return items.map(item => {\n      if (item.children && item.children.length > 0) {\n        const { dropdownPrefixCls } = this.props;\n        const { keyPathOfSelectedItem } = this.state;\n        const containSelected = Object.keys(keyPathOfSelectedItem).some(\n          key => keyPathOfSelectedItem[key].indexOf(item.value) >= 0,\n        );\n        const subMenuCls = containSelected ? `${dropdownPrefixCls}-submenu-contain-selected` : '';\n        return (\n          <SubMenu title={item.text} className={subMenuCls} key={item.value.toString()}>\n            {this.renderMenus(item.children)}\n          </SubMenu>\n        );\n      }\n      return this.renderMenuItem(item);\n    });\n  }\n\n  handleFilterDropdownMenuClick = (e: SyntheticEvent<any>) => {\n    e.preventDefault();\n  };\n\n  handleMenuItemClick = (info: { keyPath: string; key: string }) => {\n    if (info.keyPath.length <= 1) {\n      return;\n    }\n    const { keyPathOfSelectedItem, selectedKeys } = this.state;\n    if (selectedKeys.indexOf(info.key) >= 0) {\n      // deselect SubMenu child\n      delete keyPathOfSelectedItem[info.key];\n    } else {\n      // select SubMenu child\n      keyPathOfSelectedItem[info.key] = info.keyPath;\n    }\n    this.setState({ keyPathOfSelectedItem });\n  };\n\n  renderFilterIcon = () => {\n    const { column, locale, prefixCls, selectedKeys } = this.props;\n    const filterIcon = column.filterIcon as any;\n    const dropdownSelectedClass = selectedKeys.length > 0 ? `${prefixCls}-selected` : '';\n\n    return filterIcon ? (\n      cloneElement(filterIcon as any, {\n        title: locale.filterTitle,\n        className: classNames(filterIcon.className, {\n          [`${prefixCls}-icon`]: true,\n        }),\n      })\n    ) : (\n      <Icon title={locale.filterTitle} type=\"filter_list\" className={dropdownSelectedClass} />\n    );\n  };\n\n  render() {\n    const { column, locale, prefixCls, dropdownPrefixCls, getPopupContainer } = this.props;\n    const { visible, selectedKeys } = this.state;\n    // default multiple selection in filter dropdown\n    const multiple = 'filterMultiple' in column ? column.filterMultiple : false;\n    const dropdownMenuClass = classNames({\n      [`${dropdownPrefixCls}-menu-without-submenu`]: !this.hasSubMenu(),\n    });\n    const menus = column.filterDropdown ? (\n      <FilterDropdownMenuWrapper onClick={this.handleFilterDropdownMenuClick}>\n        {column.filterDropdown}\n      </FilterDropdownMenuWrapper>\n    ) : (\n      <FilterDropdownMenuWrapper\n        className={`${prefixCls}-dropdown`}\n        onClick={this.handleFilterDropdownMenuClick}\n      >\n        <Menu\n          multiple={multiple}\n          onClick={this.handleMenuItemClick}\n          prefixCls={`${dropdownPrefixCls}-menu`}\n          className={dropdownMenuClass}\n          onSelect={this.setSelectedKeys}\n          onDeselect={this.setSelectedKeys}\n          selectedKeys={selectedKeys}\n          getPopupContainer={(triggerNode: HTMLElement) => triggerNode.parentNode}\n        >\n          {this.renderMenus(column.filters!)}\n        </Menu>\n        <div className={`${prefixCls}-dropdown-btns`}>\n          <a className={`${prefixCls}-dropdown-link confirm`} onClick={this.handleConfirm}>\n            {locale.filterConfirm}\n          </a>\n          <a className={`${prefixCls}-dropdown-link clear`} onClick={this.handleClearFilters}>\n            {locale.filterReset}\n          </a>\n        </div>\n      </FilterDropdownMenuWrapper>\n    );\n\n    return (\n      <Dropdown\n        trigger={['click']}\n        overlay={menus}\n        visible={this.neverShown ? false : visible}\n        onVisibleChange={this.onVisibleChange}\n        getPopupContainer={getPopupContainer}\n        forceRender\n      >\n        {this.renderFilterIcon()}\n      </Dropdown>\n    );\n  }\n}\n"]}