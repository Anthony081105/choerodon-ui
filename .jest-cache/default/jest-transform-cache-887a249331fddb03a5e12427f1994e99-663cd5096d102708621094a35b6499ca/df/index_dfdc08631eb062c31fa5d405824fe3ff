06678043cd7572809774f7ecdb0a7871
"use strict";

/* istanbul ignore next */
function cov_1rbxrpqdhi() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/locale-context/index.tsx";
  var hash = "417a3652cfd8f76a2f9f7c7b8eb32c0f933ac8c2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/locale-context/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 16
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "4": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 71
        }
      },
      "5": {
        start: {
          line: 13,
          column: 27
        },
        end: {
          line: 13,
          column: 94
        }
      },
      "6": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 60
        }
      },
      "7": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 74
        }
      },
      "9": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 22,
          column: 16
        }
      },
      "10": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "11": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "$l",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 11
          }
        },
        loc: {
          start: {
            line: 15,
            column: 46
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 15
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        }, {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "417a3652cfd8f76a2f9f7c7b8eb32c0f933ac8c2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1rbxrpqdhi = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1rbxrpqdhi();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1rbxrpqdhi().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1rbxrpqdhi().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1rbxrpqdhi().s[2]++;
exports.$l = $l;

/* istanbul ignore next */
cov_1rbxrpqdhi().s[3]++;
exports["default"] = void 0;

var _LocaleContext =
/* istanbul ignore next */
(cov_1rbxrpqdhi().s[4]++, _interopRequireDefault(require("./LocaleContext")));

var _formatReactTemplate =
/* istanbul ignore next */
(cov_1rbxrpqdhi().s[5]++, _interopRequireDefault(require("../formatter/formatReactTemplate")));

function $l(component, key, injectionOptions) {
  /* istanbul ignore next */
  cov_1rbxrpqdhi().f[0]++;
  var locale =
  /* istanbul ignore next */
  (cov_1rbxrpqdhi().s[6]++, _LocaleContext["default"].get(component, key));

  /* istanbul ignore next */
  cov_1rbxrpqdhi().s[7]++;

  if (injectionOptions) {
    /* istanbul ignore next */
    cov_1rbxrpqdhi().b[0][0]++;
    cov_1rbxrpqdhi().s[8]++;
    return (0, _formatReactTemplate["default"])(locale, injectionOptions);
  } else
  /* istanbul ignore next */
  {
    cov_1rbxrpqdhi().b[0][1]++;
  }

  cov_1rbxrpqdhi().s[9]++;
  return locale;
}

var _default =
/* istanbul ignore next */
(cov_1rbxrpqdhi().s[10]++, _LocaleContext["default"]);

/* istanbul ignore next */
cov_1rbxrpqdhi().s[11]++;
exports["default"] = _default;