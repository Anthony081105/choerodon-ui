{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/modal/Sidebar.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Dialog, { ModalFuncProps } from './Modal';\nimport Button from '../button';\nimport { getConfirmLocale } from './locale';\nimport { getPrefixCls } from '../configure';\n\nexport interface SidebarState {\n  open: boolean;\n}\n\nexport interface SidebarProps extends ModalFuncProps {\n  close?: (...args: any[]) => void;\n  alwaysCanCancel?: boolean;\n}\n\nfunction isFixedWidth(width: ModalFuncProps['width']) {\n  switch (typeof width) {\n    case 'undefined':\n      return false;\n    case 'number':\n      return true;\n    case 'string':\n      // width: 100%不是固定宽度\n      return width.indexOf('%') === -1;\n    default:\n      return false;\n  }\n}\n\nexport default class Sidebar extends Component<SidebarProps, {}> {\n  static displayName = 'Sidebar';\n\n  static defaultProps = {\n    width: '100%',\n    transitionName: 'slide-right',\n    maskTransitionName: 'fade',\n    confirmLoading: false,\n    alwaysCanCancel: false,\n    visible: false,\n    okType: 'primary',\n    funcType: 'raised',\n  };\n\n  state: SidebarState;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  handleCancel = (e: any) => {\n    const { onCancel } = this.props;\n    if (onCancel) {\n      onCancel(e);\n    }\n  };\n\n  handleOk = (e: any) => {\n    const { onOk } = this.props;\n    if (onOk) {\n      onOk(e);\n    }\n  };\n\n  renderFooter = () => {\n    const props = this.props;\n    const { onCancel, onOk, okType, funcType, confirmLoading, alwaysCanCancel } = props;\n    const prefixCls = this.getPrefixCls();\n    const okCancel = 'okCancel' in props ? props.okCancel! : true;\n    const runtimeLocale = getConfirmLocale();\n    const okText = props.okText || (okCancel ? runtimeLocale.okText : runtimeLocale.justOkText);\n    const cancelText = props.cancelText || runtimeLocale.cancelText;\n\n    const cancalBtn = okCancel ? (\n      <Button\n        className={`${prefixCls}-btn-cancel`}\n        disabled={!alwaysCanCancel && confirmLoading}\n        funcType={funcType}\n        onClick={onCancel}\n      >\n        {cancelText}\n      </Button>\n    ) : null;\n    return (\n      <div className={`${prefixCls}-btns`}>\n        <Button\n          className={`${prefixCls}-btn-ok`}\n          loading={confirmLoading}\n          funcType={funcType}\n          type={okType}\n          onClick={onOk}\n        >\n          {okText}\n        </Button>\n        {cancalBtn}\n      </div>\n    );\n  };\n\n  handleStatus = () => {\n    const { open } = this.state;\n    this.setState({\n      open: !open,\n    });\n  };\n\n  getPrefixCls() {\n    const { prefixCls } = this.props;\n    return getPrefixCls('modal', prefixCls);\n  }\n\n  render() {\n    const { props } = this;\n    const { footer = this.renderFooter(), width, className } = props;\n    const prefixCls = this.getPrefixCls();\n    const { open } = this.state;\n    const fixedWidth = isFixedWidth(width);\n    const classString = classNames(\n      prefixCls,\n      {\n        [`${prefixCls}-sidebar`]: true,\n        [`${prefixCls}-sidebar-open`]: open,\n        [`${prefixCls}-sidebar-fixed-width`]: fixedWidth,\n      },\n      className,\n    );\n\n    return (\n      <Dialog\n        {...props}\n        prefixCls={prefixCls}\n        animationEnd={this.handleStatus}\n        className={classString}\n        footer={footer}\n        closable={'closable' in props ? props.closable : false}\n      />\n    );\n  }\n}\n"]}