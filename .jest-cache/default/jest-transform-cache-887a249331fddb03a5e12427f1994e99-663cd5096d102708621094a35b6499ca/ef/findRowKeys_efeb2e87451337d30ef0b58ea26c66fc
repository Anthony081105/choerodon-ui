7410cb8e529ed3b0b9a6847aab483258
"use strict";

/* istanbul ignore next */
function cov_8pw1h324p() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/findRowKeys.ts";
  var hash = "3bbc1535dc6a451ec250eb8f8de52a5cb6e08e7f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/findRowKeys.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "3": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 101
        }
      },
      "4": {
        start: {
          line: 13,
          column: 13
        },
        end: {
          line: 13,
          column: 15
        }
      },
      "5": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 16
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 22
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "9": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 30
        }
      },
      "10": {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 21,
          column: 139
        }
      },
      "11": {
        start: {
          line: 22,
          column: 11
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "12": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 30
        }
      },
      "13": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 28,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "findRowKeys",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 20
          }
        },
        loc: {
          start: {
            line: 12,
            column: 45
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 25,
            column: 5
          }
        }],
        line: 22
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3bbc1535dc6a451ec250eb8f8de52a5cb6e08e7f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_8pw1h324p = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_8pw1h324p();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_8pw1h324p().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_8pw1h324p().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_8pw1h324p().s[2]++;
exports["default"] = findRowKeys;

var _toConsumableArray2 =
/* istanbul ignore next */
(cov_8pw1h324p().s[3]++, _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray")));

function findRowKeys(rows, rowKey, expanded) {
  /* istanbul ignore next */
  cov_8pw1h324p().f[0]++;
  var keys =
  /* istanbul ignore next */
  (cov_8pw1h324p().s[4]++, []);

  /* istanbul ignore next */
  cov_8pw1h324p().s[5]++;

  for (var i =
  /* istanbul ignore next */
  (cov_8pw1h324p().s[6]++, 0); i < rows.length; i++) {
    var item =
    /* istanbul ignore next */
    (cov_8pw1h324p().s[7]++, rows[i]);

    /* istanbul ignore next */
    cov_8pw1h324p().s[8]++;

    if (item.children) {
      /* istanbul ignore next */
      cov_8pw1h324p().b[0][0]++;
      cov_8pw1h324p().s[9]++;
      // @ts-ignore
      keys.push(item[rowKey]);

      /* istanbul ignore next */
      cov_8pw1h324p().s[10]++;
      keys = [].concat((0, _toConsumableArray2["default"])(keys), (0, _toConsumableArray2["default"])(findRowKeys(item.children, rowKey)));
    } else {
      /* istanbul ignore next */
      cov_8pw1h324p().b[0][1]++;
      cov_8pw1h324p().s[11]++;

      if (expanded) {
        /* istanbul ignore next */
        cov_8pw1h324p().b[1][0]++;
        cov_8pw1h324p().s[12]++;
        // @ts-ignore
        keys.push(item[rowKey]);
      } else
      /* istanbul ignore next */
      {
        cov_8pw1h324p().b[1][1]++;
      }
    }
  }

  /* istanbul ignore next */
  cov_8pw1h324p().s[13]++;
  return keys;
}