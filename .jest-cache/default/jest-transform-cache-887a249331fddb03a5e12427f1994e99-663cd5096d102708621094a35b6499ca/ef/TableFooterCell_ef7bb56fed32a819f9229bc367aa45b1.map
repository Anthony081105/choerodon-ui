{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/TableFooterCell.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAGA;;AASA,IAAqB,eAArB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,8BASY,MATZ,EASoB,OATpB,EAS2B;AACvB,uCAAe,MAAf;AACE,aAAK,UAAL;AAAiB;AAAA,gBACP,MADO,GACI,KAAK,KADT,CACP,MADO;AAEf,mBAAO,MAAM,CAAC,OAAD,EAAU,MAAM,CAAC,IAAjB,CAAb;AACD;;AACD,aAAK,QAAL;AACE,iBAAO,kBAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAO,MAAP,CAAP;;AACF;AACE,iBAAO,MAAP;AARJ;AAUD;AApBH;AAAA;AAAA,6BAsBQ;AAAA,wBACmC,KAAK,KADxC;AAAA,UACI,MADJ,eACI,MADJ;AAAA,UACY,SADZ,eACY,SADZ;AAAA,UACuB,OADvB,eACuB,OADvB;AAAA,UAGY,SAHZ,GAIA,KAAK,OAJL,CAGF,UAHE,CAGY,SAHZ;AAAA,UAKI,MALJ,GAKwE,MALxE,CAKI,MALJ;AAAA,UAKY,eALZ,GAKwE,MALxE,CAKY,eALZ;AAAA,gCAKwE,MALxE,CAK6B,WAL7B;AAAA,UAK6B,WAL7B,oCAK2C,EAL3C;AAAA,UAK+C,KAL/C,GAKwE,MALxE,CAK+C,KAL/C;AAAA,UAKsD,IALtD,GAKwE,MALxE,CAKsD,IALtD;AAAA,UAK4D,OAL5D,GAKwE,MALxE,CAK4D,OAL5D;AAMJ,UAAM,WAAW,GAAG,sCAAc,SAAd,YAAgC,eAAhC,CAApB;AACA,UAAM,UAAU,GAAQ;AACtB,QAAA,SAAS,YAAK,SAAL;AADa,OAAxB;;AAGA,UAAI,SAAS,KAAK,MAAlB,EAA0B;AACxB,QAAA,UAAU,CAAC,KAAX,GAAmB;AACjB,UAAA,MAAM,EAAE,4BAAQ,SAAR;AADS,SAAnB;AAGD;;AACD,UAAM,SAAS;AACb,QAAA,SAAS,EAAE,KAAK,KAAK,OAAO,GAAE;AAAA;AAAF,UAAwB,4BAAgB,OAAO,CAAC,QAAR,CAAiB,IAAjB,CAAhB,CAApC;AADH,SAEV,WAFU,CAAf;AAIA,aACE,kBAAA,aAAA,CAAA,IAAA,EAAA;AAAI,QAAA,SAAS,EAAE,WAAf;AAA4B,QAAA,KAAK,EAAE,sBAAK,SAAL,EAAgB,CAAC,OAAD,EAAU,QAAV,CAAhB;AAAnC,OAAA,EACE,kBAAA,aAAA,CAAA,KAAA,EAAA,0BAAA,EAAA,EAAS,UAAT,CAAA,EAAsB,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAAtB,CADF,CADF;AAKD;AA9CH;AAAA;AAAA,EAA6C,gBAA7C,CAAA;;AACS,eAAA,CAAA,WAAA,GAAc,iBAAd;AAEA,eAAA,CAAA,SAAA,GAAY;AACjB,EAAA,MAAM,EAAE,sBAAU,MAAV,CAAiB;AADR,CAAZ;AAIA,eAAA,CAAA,WAAA,GAAc,wBAAd;AAPY,eAAe,GAAA,uBAAA,CADnC,mBACmC,CAAA,EAAf,eAAe,CAAf;eAAA,e","sourcesContent":["import React, { Component, CSSProperties, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport omit from 'lodash/omit';\nimport classNames from 'classnames';\nimport { pxToRem } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport { ColumnProps } from './Column';\nimport TableContext from './TableContext';\nimport { ElementProps } from '../core/ViewComponent';\nimport DataSet from '../data-set/DataSet';\nimport { getAlignByField } from './utils';\nimport { ColumnAlign } from './enum';\n\nexport interface TableFooterCellProps extends ElementProps {\n  dataSet: DataSet;\n  column: ColumnProps;\n}\n\n@observer\nexport default class TableFooterCell extends Component<TableFooterCellProps, any> {\n  static displayName = 'TableFooterCell';\n\n  static propTypes = {\n    column: PropTypes.object.isRequired,\n  };\n\n  static contextType = TableContext;\n\n  getFooter(footer, dataSet): ReactNode {\n    switch (typeof footer) {\n      case 'function': {\n        const { column } = this.props;\n        return footer(dataSet, column.name);\n      }\n      case 'string':\n        return <span>{footer}</span>;\n      default:\n        return footer;\n    }\n  }\n\n  render() {\n    const { column, prefixCls, dataSet } = this.props;\n    const {\n      tableStore: { rowHeight },\n    } = this.context;\n    const { footer, footerClassName, footerStyle = {}, align, name, command } = column;\n    const classString = classNames(`${prefixCls}-cell`, footerClassName);\n    const innerProps: any = {\n      className: `${prefixCls}-cell-inner`,\n    };\n    if (rowHeight !== 'auto') {\n      innerProps.style = {\n        height: pxToRem(rowHeight),\n      };\n    }\n    const cellStyle: CSSProperties = {\n      textAlign: align || (command ? ColumnAlign.center : getAlignByField(dataSet.getField(name))),\n      ...footerStyle,\n    };\n    return (\n      <th className={classString} style={omit(cellStyle, ['width', 'height'])}>\n        <div {...innerProps}>{this.getFooter(footer, dataSet)}</div>\n      </th>\n    );\n  }\n}\n"]}