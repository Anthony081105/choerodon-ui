{"version":3,"sources":["index.test.js"],"names":["describe","Select","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","it","wrapper","find","simulate","runAllTimers","dropdownWrapper","instance","getComponent","expect","length","toBe","at","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport Select from '..';\nimport focusTest from '../../../tests/shared/focusTest';\n\ndescribe('Select', () => {\n  focusTest(Select);\n\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  it('should have default notFoundContent', () => {\n    const wrapper = mount(<Select mode=\"multiple\" />);\n    wrapper.find('.c7n-select').simulate('click');\n    jest.runAllTimers();\n    const dropdownWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    expect(dropdownWrapper.find('MenuItem').length).toBe(1);\n    expect(\n      dropdownWrapper\n        .find('MenuItem')\n        .at(0)\n        .text(),\n    ).toBe('Not Found');\n  });\n\n  it('should support set notFoundContent to null', () => {\n    const wrapper = mount(<Select mode=\"multiple\" notFoundContent={null} />);\n    wrapper.find('.c7n-select').simulate('click');\n    jest.runAllTimers();\n    const dropdownWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    expect(dropdownWrapper.find('MenuItem').length).toBe(0);\n  });\n\n  it('should not have default notFoundContent when mode is combobox', () => {\n    const wrapper = mount(<Select mode=\"combobox\" />);\n    wrapper.find('.c7n-select').simulate('click');\n    jest.runAllTimers();\n    const dropdownWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    expect(dropdownWrapper.find('MenuItem').length).toBe(0);\n  });\n\n  it('should not have notFoundContent when mode is combobox and notFoundContent is set', () => {\n    const wrapper = mount(<Select mode=\"combobox\" notFoundContent=\"not at all\" />);\n    wrapper.find('.c7n-select').simulate('click');\n    jest.runAllTimers();\n    const dropdownWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n    expect(dropdownWrapper.find('MenuItem').length).toBe(1);\n    expect(\n      dropdownWrapper\n        .find('MenuItem')\n        .at(0)\n        .text(),\n    ).toBe('not at all');\n  });\n});\n"]}