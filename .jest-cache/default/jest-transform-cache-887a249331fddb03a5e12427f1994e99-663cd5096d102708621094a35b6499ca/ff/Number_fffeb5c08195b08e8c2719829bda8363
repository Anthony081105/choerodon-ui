5c532a476aa4ee8be3b680f3c64f98df
"use strict";

/* istanbul ignore next */
function cov_1p9zilgtri() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/statistic/Number.tsx";
  var hash = "3822fc39b927bc22828a7aa57cdd5e9c6801f156";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/statistic/Number.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 30
        },
        end: {
          line: 5,
          column: 86
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 28
        }
      },
      "4": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 53
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "6": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "7": {
        start: {
          line: 17,
          column: 14
        },
        end: {
          line: 17,
          column: 25
        }
      },
      "8": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "9": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "10": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 20,
          column: 47
        }
      },
      "11": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 50
        }
      },
      "12": {
        start: {
          line: 22,
          column: 23
        },
        end: {
          line: 22,
          column: 84
        }
      },
      "13": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "14": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "15": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "16": {
        start: {
          line: 31,
          column: 14
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "17": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 50
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "19": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 22
        }
      },
      "20": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 29
        }
      },
      "21": {
        start: {
          line: 39,
          column: 17
        },
        end: {
          line: 39,
          column: 32
        }
      },
      "22": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 34
        }
      },
      "23": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 67
        }
      },
      "24": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 46,
          column: 7
        }
      },
      "25": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 87
        }
      },
      "26": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 50,
          column: 7
        }
      },
      "27": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 62
        }
      },
      "28": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 58,
          column: 19
        }
      },
      "29": {
        start: {
          line: 62,
          column: 2
        },
        end: {
          line: 64,
          column: 16
        }
      },
      "30": {
        start: {
          line: 67,
          column: 15
        },
        end: {
          line: 67,
          column: 30
        }
      },
      "31": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 68,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "StatisticNumber",
        decl: {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 16,
            column: 46
          }
        },
        loc: {
          start: {
            line: 16,
            column: 54
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 22,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 58
          },
          end: {
            line: 22,
            column: 60
          }
        }, {
          start: {
            line: 22,
            column: 63
          },
          end: {
            line: 22,
            column: 84
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 60,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 60,
            column: 3
          }
        }, {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 60,
            column: 3
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 14
          }
        }, {
          start: {
            line: 34,
            column: 18
          },
          end: {
            line: 34,
            column: 29
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 25
          }
        }, {
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 39,
            column: 32
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 20
          },
          end: {
            line: 41,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 20
          },
          end: {
            line: 41,
            column: 28
          }
        }, {
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 34
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 6
          },
          end: {
            line: 46,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 6
          },
          end: {
            line: 46,
            column: 7
          }
        }, {
          start: {
            line: 44,
            column: 6
          },
          end: {
            line: 46,
            column: 7
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 7
          }
        }, {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 7
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 58,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 55,
            column: 33
          }
        }, {
          start: {
            line: 55,
            column: 37
          },
          end: {
            line: 58,
            column: 17
          }
        }],
        line: 55
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3822fc39b927bc22828a7aa57cdd5e9c6801f156"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1p9zilgtri = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1p9zilgtri();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1p9zilgtri().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

var _interopRequireWildcard =
/* istanbul ignore next */
(cov_1p9zilgtri().s[1]++, require("@babel/runtime/helpers/interopRequireWildcard"));

/* istanbul ignore next */
cov_1p9zilgtri().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1p9zilgtri().s[3]++;
exports["default"] = void 0;
var React =
/* istanbul ignore next */
(cov_1p9zilgtri().s[4]++, _interopRequireWildcard(require("react")));

var _padEnd =
/* istanbul ignore next */
(cov_1p9zilgtri().s[5]++, _interopRequireDefault(require("lodash/padEnd")));

/* istanbul ignore next */
cov_1p9zilgtri().s[6]++;

var StatisticNumber = function StatisticNumber(props) {
  /* istanbul ignore next */
  cov_1p9zilgtri().f[0]++;

  var value =
  /* istanbul ignore next */
  (cov_1p9zilgtri().s[7]++, props.value),
      formatter =
  /* istanbul ignore next */
  (cov_1p9zilgtri().s[8]++, props.formatter),
      precision =
  /* istanbul ignore next */
  (cov_1p9zilgtri().s[9]++, props.precision),
      decimalSeparator =
  /* istanbul ignore next */
  (cov_1p9zilgtri().s[10]++, props.decimalSeparator),
      _props$groupSeparator =
  /* istanbul ignore next */
  (cov_1p9zilgtri().s[11]++, props.groupSeparator),
      groupSeparator =
  /* istanbul ignore next */
  (cov_1p9zilgtri().s[12]++, _props$groupSeparator === void 0 ?
  /* istanbul ignore next */
  (cov_1p9zilgtri().b[0][0]++, '') :
  /* istanbul ignore next */
  (cov_1p9zilgtri().b[0][1]++, _props$groupSeparator)),
      prefixCls =
  /* istanbul ignore next */
  (cov_1p9zilgtri().s[13]++, props.prefixCls);

  var valueNode;

  /* istanbul ignore next */
  cov_1p9zilgtri().s[14]++;

  if (typeof formatter === 'function') {
    /* istanbul ignore next */
    cov_1p9zilgtri().b[1][0]++;
    cov_1p9zilgtri().s[15]++;
    // Customize formatter
    valueNode = formatter(value);
  } else {
    /* istanbul ignore next */
    cov_1p9zilgtri().b[1][1]++;
    // Internal formatter
    var val =
    /* istanbul ignore next */
    (cov_1p9zilgtri().s[16]++, String(value));
    var cells =
    /* istanbul ignore next */
    (cov_1p9zilgtri().s[17]++, val.match(/^(-?)(\d*)(\.(\d+))?$/)); // Process if illegal number

    /* istanbul ignore next */
    cov_1p9zilgtri().s[18]++;

    if (
    /* istanbul ignore next */
    (cov_1p9zilgtri().b[3][0]++, !cells) ||
    /* istanbul ignore next */
    (cov_1p9zilgtri().b[3][1]++, val === '-')) {
      /* istanbul ignore next */
      cov_1p9zilgtri().b[2][0]++;
      cov_1p9zilgtri().s[19]++;
      valueNode = val;
    } else {
      /* istanbul ignore next */
      cov_1p9zilgtri().b[2][1]++;
      var negative =
      /* istanbul ignore next */
      (cov_1p9zilgtri().s[20]++, cells[1]);

      var _int =
      /* istanbul ignore next */
      (cov_1p9zilgtri().s[21]++,
      /* istanbul ignore next */
      (cov_1p9zilgtri().b[4][0]++, cells[2]) ||
      /* istanbul ignore next */
      (cov_1p9zilgtri().b[4][1]++, '0'));

      var decimal =
      /* istanbul ignore next */
      (cov_1p9zilgtri().s[22]++,
      /* istanbul ignore next */
      (cov_1p9zilgtri().b[5][0]++, cells[4]) ||
      /* istanbul ignore next */
      (cov_1p9zilgtri().b[5][1]++, ''));

      /* istanbul ignore next */
      cov_1p9zilgtri().s[23]++;
      _int = _int.replace(/\B(?=(\d{3})+(?!\d))/g, groupSeparator);

      /* istanbul ignore next */
      cov_1p9zilgtri().s[24]++;

      if (typeof precision === 'number') {
        /* istanbul ignore next */
        cov_1p9zilgtri().b[6][0]++;
        cov_1p9zilgtri().s[25]++;
        decimal = (0, _padEnd["default"])(decimal, precision, '0').slice(0, precision);
      } else
      /* istanbul ignore next */
      {
        cov_1p9zilgtri().b[6][1]++;
      }

      cov_1p9zilgtri().s[26]++;

      if (decimal) {
        /* istanbul ignore next */
        cov_1p9zilgtri().b[7][0]++;
        cov_1p9zilgtri().s[27]++;
        decimal = "".concat(decimalSeparator).concat(decimal);
      } else
      /* istanbul ignore next */
      {
        cov_1p9zilgtri().b[7][1]++;
      }

      cov_1p9zilgtri().s[28]++;
      valueNode = [React.createElement("span", {
        key: "int",
        className: "".concat(prefixCls, "-content-value-int")
      }, negative, _int),
      /* istanbul ignore next */
      (cov_1p9zilgtri().b[8][0]++, decimal) &&
      /* istanbul ignore next */
      (cov_1p9zilgtri().b[8][1]++, React.createElement("span", {
        key: "decimal",
        className: "".concat(prefixCls, "-content-value-decimal")
      }, decimal))];
    }
  }

  /* istanbul ignore next */
  cov_1p9zilgtri().s[29]++;
  return React.createElement("span", {
    className: "".concat(prefixCls, "-content-value")
  }, valueNode);
};

var _default =
/* istanbul ignore next */
(cov_1p9zilgtri().s[30]++, StatisticNumber);

/* istanbul ignore next */
cov_1p9zilgtri().s[31]++;
exports["default"] = _default;