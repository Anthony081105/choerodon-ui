{"version":3,"sources":["index.test.js"],"names":["Password","describe","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","it","wrapper","expect","toMatchSnapshot","props","reveal","toEqual","find","toHaveLength","setProps","update","handleInput","fn","at","simulate","target","value","runAllTimers","toHaveBeenCalled","prop","toBe","instance","doReveal","resetReveal","handleDataSetChange","ds","DataSet","autoCreate","fields","name","type","defaultValue","required","events"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport Password from '..';\nimport DataSet from '../../data-set';\nimport focusTest from '../../../tests/shared/focusTest';\n\nfocusTest(Password);\n\ndescribe('Password input', () => {\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  it('renders Password correctly', () => {\n    const wrapper = mount(<Password />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  it('renders Password reveal correctly', () => {\n    const wrapper = mount(<Password />);\n    expect(wrapper.props().reveal).toEqual(true);\n    expect(wrapper.find('.c7n-pro-password-inner-button')).toHaveLength(1);\n    wrapper.setProps({ reveal: false });\n    wrapper.update();\n    expect(wrapper.props().reveal).toEqual(false);\n    expect(wrapper.find('.c7n-pro-password-inner-button')).toHaveLength(0);\n  });\n\n  it('renders input correctly', () => {\n    const handleInput = jest.fn();\n    const wrapper = mount(<Password value=\"reveal\" onInput={handleInput} />);\n    wrapper\n      .find('.c7n-pro-password')\n      .at(0)\n      .simulate('input', { target: { value: 'revealValue' } });\n    jest.runAllTimers();\n    expect(handleInput).toHaveBeenCalled();\n  });\n\n  it('renders reveal correctly', () => {\n    const wrapper = mount(<Password value=\"reveal\" />);\n    expect(\n      wrapper\n        .find('.c7n-pro-password')\n        .at(0)\n        .prop('type'),\n    ).toBe('password');\n    wrapper.instance().doReveal(wrapper.instance());\n    jest.runAllTimers();\n    wrapper.update();\n    expect(\n      wrapper\n        .find('.c7n-pro-password')\n        .at(0)\n        .prop('type'),\n    ).toBe('text');\n    wrapper.instance().resetReveal(wrapper.instance());\n    jest.runAllTimers();\n    wrapper.update();\n    expect(\n      wrapper\n        .find('.c7n-pro-password')\n        .at(0)\n        .prop('type'),\n    ).toBe('password');\n  });\n\n  it('the value will be controlled', () => {\n    const wrapper = mount(<Password value=\"password\" />);\n    expect(\n      wrapper\n        .find('.c7n-pro-password')\n        .at(0)\n        .prop('value'),\n    ).toBe('password');\n    wrapper.setProps({ value: 'setPass' });\n    wrapper.update();\n    expect(\n      wrapper\n        .find('.c7n-pro-password')\n        .at(0)\n        .prop('value'),\n    ).toBe('setPass');\n  });\n\n  it('the icon should be changed when icon can click', () => {\n    const wrapper = mount(<Password value=\"password\" />);\n    expect(wrapper.find('.icon-visibility_off')).toHaveLength(1);\n    expect(wrapper.find('.icon-visibility')).toHaveLength(0);\n    wrapper.find('.icon').simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n    expect(wrapper.find('.icon-visibility_off')).toHaveLength(0);\n    expect(wrapper.find('.icon-visibility')).toHaveLength(1);\n  });\n\n  it('the dataset  will be render correctly', () => {\n    const handleDataSetChange = jest.fn();\n    const ds = new DataSet({\n      autoCreate: true,\n      fields: [\n        {\n          name: 'test',\n          type: 'string',\n          defaultValue: 'password',\n          required: true,\n        },\n      ],\n      events: {\n        update: handleDataSetChange,\n      },\n    });\n    const wrapper = mount(<Password dataSet={ds} name=\"test\" />);\n    expect(wrapper.find('Password').props().name).toEqual('test');\n    expect(\n      wrapper\n        .find('.c7n-pro-password')\n        .at(0)\n        .prop('value'),\n    ).toBe('password');\n  });\n});\n"]}