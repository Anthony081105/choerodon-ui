{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/rich-text/RichTextViewer.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQM,c;;;;;;;AAAN,4BAAA;AAAA;;AAAA;;AACE,UAAA,KAAA,GAAQ;AACN,MAAA,IAAI,EAAE,KADA;AAEN,MAAA,GAAG,EAAE;AAFC,KAAR;;AAyBA,UAAA,IAAA,GAAO,UAAC,GAAD,EAAQ;AACb,YAAK,QAAL,CAAc;AACZ,QAAA,IAAI,EAAE,IADM;AAEZ,QAAA,GAAG,EAAH;AAFY,OAAd;AAID,KALD;;AAOA,UAAA,MAAA,GAAS,UAAA,GAAG;AAAA,aAAI,GAAG,CAAC,OAAJ,CAAY,YAAZ,EAA0B,YAA1B,EAAwC,OAAxC,CAAgD,OAAhD,EAAyD,QAAzD,CAAJ;AAAA,KAAZ;;AAjCF;AA2DC;;;;wCArDkB;AAAA;;AAAA,UACP,QADO,GACM,KAAK,KADX,CACP,QADO;AAEf,UAAM,QAAQ,GAAG,2BAAY,IAAZ,CAAjB;;AACA,UAAI,QAAJ,EAAc;AACZ,QAAA,QAAQ,CAAC,gBAAT,CAA0B,OAA1B,EAAmC,UAAC,CAAD,EAAM;AAAA;;AACvC;AACA,cAAI,cAAA,CAAC,CAAC,MAAF,wDAAU,QAAV,MAAuB,KAAvB,IAAgC,QAAhC,IAA4C,QAAQ,CAAC,MAAT,CAAgB,CAAC,CAAC,MAAF,CAAS,GAAzB,IAAgC,CAAC,CAAjF,EAAoF;AAClF,YAAA,CAAC,CAAC,eAAF,GADkF,CAElF;;AACA,YAAA,MAAI,CAAC,IAAL,CAAU,CAAC,CAAC,MAAF,CAAS,GAAnB;AACD;AACF,SAPD;AAQD;AACF;;;2CAEmB;AAClB,UAAM,QAAQ,GAAG,2BAAY,IAAZ,CAAjB;AACA,UAAI,QAAJ,EAAc,QAAQ,CAAC,mBAAT,CAA6B,OAA7B,EAAsC,KAAK,IAA3C;AACf;;;oCAWY;AACX,aAAO,sBAAK,KAAK,KAAV,EAAiB,CAAC,UAAD,CAAjB,CAAP;AACD;;;6BAEK;AAAA;;AAAA,UACI,QADJ,GACiB,KAAK,KADtB,CACI,QADJ;AAAA,wBAEkB,KAAK,KAFvB;AAAA,UAEI,IAFJ,eAEI,IAFJ;AAAA,UAEU,GAFV,eAEU,GAFV;AAGJ,UAAM,IAAI,GAAG,uBAAW,gBAAK,QAAL,CAAX,CAAb;AAEA,aACE,kBAAA,aAAA,CAAA,KAAA,EAAA,0BAAA,EAAA,EAAS,KAAK,aAAL,EAAT,CAAA,EACE,kBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,uBAAuB,EAAE;AAAE,UAAA,MAAM,YAAK,KAAK,MAAL,CAAY,IAAZ,CAAL;AAAR;AAA9B,OAAA,CADF,EAGI,IAAI,GACF,kBAAA,aAAA,CAAC,8BAAD,EAAS;AACP,QAAA,OAAO,EAAE,GADF;AAEP,QAAA,cAAc,EAAE;AAAA,iBAAM,MAAI,CAAC,QAAL,CAAc;AAAE,YAAA,IAAI,EAAE;AAAR,WAAd,CAAN;AAAA,SAFT;AAGP,QAAA,UAAU,EAAC;AAHJ,OAAT,CADE,GAMA,IATR,CADF;AAcD;;;EA1D0B,gB;;eA6Dd,c","sourcesContent":["/* eslint-disable react/no-danger */\nimport React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport LightBox from 'react-image-lightbox';\nimport omit from 'lodash/omit';\nimport { toJS } from 'mobx';\nimport { delta2Html } from './utils';\n\nexport interface RichTextViewerProps {\n  deltaOps?: any;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nclass RichTextViewer extends Component<RichTextViewerProps> {\n  state = {\n    open: false,\n    src: '',\n  };\n\n  componentDidMount() {\n    const { deltaOps } = this.props;\n    const thisNode = findDOMNode(this);\n    if (thisNode) {\n      thisNode.addEventListener('click', (e) => {\n        // @ts-ignore\n        if (e.target?.nodeName === 'IMG' && deltaOps && deltaOps.search(e.target.src) > -1) {\n          e.stopPropagation();\n          // @ts-ignore\n          this.open(e.target.src);\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const thisNode = findDOMNode(this);\n    if (thisNode) thisNode.removeEventListener('click', this.open);\n  }\n\n  open = (src) => {\n    this.setState({\n      open: true,\n      src,\n    });\n  };\n\n  escape = str => str.replace(/<\\/script/g, '<\\\\/script').replace(/<!--/g, '<\\\\!--');\n\n  getOtherProps() {\n    return omit(this.props, ['deltaOps']);\n  }\n\n  render() {\n    const { deltaOps } = this.props;\n    const { open, src } = this.state;\n    const html = delta2Html(toJS(deltaOps));\n\n    return (\n      <div {...this.getOtherProps()}>\n        <div dangerouslySetInnerHTML={{ __html: `${this.escape(html)}` }} />\n        {\n          open ? (\n            <LightBox\n              mainSrc={src}\n              onCloseRequest={() => this.setState({ open: false })}\n              imageTitle=\"images\"\n            />\n          ) : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default RichTextViewer;\n"]}