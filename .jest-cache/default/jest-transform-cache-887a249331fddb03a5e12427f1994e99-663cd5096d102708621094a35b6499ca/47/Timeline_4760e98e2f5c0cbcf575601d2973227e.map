{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/timeline/Timeline.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAQA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWqB,Q;;;;;;;;;;;;;;6BAKb;AAAA,wBAQA,KAAK,KARL;AAAA,UAES,kBAFT,eAEF,SAFE;AAAA,UAGF,QAHE,eAGF,QAHE;AAAA,UAIF,OAJE,eAIF,OAJE;AAAA,UAKF,UALE,eAKF,UALE;AAAA,UAMF,SANE,eAMF,SANE;AAAA,UAOC,SAPD;AASJ,UAAM,WAAW,GAAG,OAAO,OAAP,KAAmB,SAAnB,GAA+B,IAA/B,GAAsC,OAA1D;AACA,UAAM,SAAS,GAAG,6BAAa,UAAb,EAAyB,kBAAzB,CAAlB;AACA,UAAM,WAAW,GAAG,4BAClB,SADkB,iDAGZ,SAHY,eAGU,CAAC,CAAC,OAHZ,GAKlB,SALkB,CAApB,CAXI,CAkBJ;;AACA,UAAM,cAAc,GAAG,gBAAS,OAAT,CAAiB,QAAjB,EAA2B,MAA3B,CAAkC,UAAA,IAAI;AAAA,eAAI,CAAC,CAAC,IAAN;AAAA,OAAtC,CAAvB;;AACA,UAAM,KAAK,GAAG,gBAAS,GAAT,CAAa,cAAb,EAA6B,UAAC,GAAD,EAAyB,GAAzB;AAAA,eACzC,yBAAa,GAAb,EAAkB;AAChB,UAAA,IAAI,EAAE,GAAG,KAAK,gBAAS,KAAT,CAAe,cAAf,IAAiC;AAD/B,SAAlB,CADyC;AAAA,OAA7B,CAAd;;AAKA,UAAM,WAAW,GAAG,OAAO,GACzB,kBAAA,aAAA,CAAC,wBAAD,EAAa;AAAC,QAAA,OAAO,EAAE,CAAC,CAAC,OAAZ;AAAqB,QAAA,GAAG,EAAE,UAAU,IAAI,kBAAA,aAAA,CAAC,gBAAD,EAAK;AAAC,UAAA,IAAI,EAAC;AAAN,SAAL;AAAxC,OAAb,EACG,WADH,CADyB,GAIvB,IAJJ;AAKA,aACE,kBAAA,aAAA,CAAA,IAAA,EAAA,0BAAA,EAAA,EAAQ,SAAR,EAAiB;AAAE,QAAA,SAAS,EAAE;AAAb,OAAjB,CAAA,EACG,KADH,EAEG,WAFH,CADF;AAMD;;;EAzCmC,gB;;;AAC7B,QAAA,CAAA,WAAA,GAAc,UAAd;AAEA,QAAA,CAAA,IAAA,GAAO,wBAAP","sourcesContent":["import React, {\n  Children,\n  cloneElement,\n  Component,\n  CSSProperties,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport classNames from 'classnames';\nimport TimelineItem from './TimelineItem';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../configure';\n\nexport interface TimelineProps {\n  prefixCls?: string;\n  className?: string;\n  /** 指定最后一个幽灵节点是否存在或内容 */\n  pending?: ReactNode;\n  pendingDot?: ReactNode;\n  style?: CSSProperties;\n}\n\nexport default class Timeline extends Component<TimelineProps, any> {\n  static displayName = 'Timeline';\n\n  static Item = TimelineItem;\n\n  render() {\n    const {\n      prefixCls: customizePrefixCls,\n      children,\n      pending,\n      pendingDot,\n      className,\n      ...restProps\n    } = this.props;\n    const pendingNode = typeof pending === 'boolean' ? null : pending;\n    const prefixCls = getPrefixCls('timeline', customizePrefixCls);\n    const classString = classNames(\n      prefixCls,\n      {\n        [`${prefixCls}-pending`]: !!pending,\n      },\n      className,\n    );\n    // Remove falsy items\n    const falsylessItems = Children.toArray(children).filter(item => !!item);\n    const items = Children.map(falsylessItems, (ele: ReactElement<any>, idx) =>\n      cloneElement(ele, {\n        last: idx === Children.count(falsylessItems) - 1,\n      }),\n    );\n    const pendingItem = pending ? (\n      <TimelineItem pending={!!pending} dot={pendingDot || <Icon type=\"loading\" />}>\n        {pendingNode}\n      </TimelineItem>\n    ) : null;\n    return (\n      <ul {...restProps} className={classString}>\n        {items}\n        {pendingItem}\n      </ul>\n    );\n  }\n}\n"]}