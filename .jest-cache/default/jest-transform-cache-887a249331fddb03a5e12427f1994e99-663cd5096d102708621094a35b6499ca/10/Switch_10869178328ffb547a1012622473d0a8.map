{"version":3,"sources":["Switch.jsx"],"names":["classNames","require","noop","Switch","props","onClick","checked","state","setChecked","e","keyCode","toggle","node","blur","onMouseUp","checkedValue","value","defaultChecked","autoFocus","disabled","focus","nextProps","setState","unCheckedValue","onChange","className","prefixCls","loadingIcon","checkedChildren","tabIndex","unCheckedChildren","restProps","switchTabIndex","switchClassName","saveNode","handleKeyDown","handleMouseUp","Component","propTypes","PropTypes","string","bool","any","func","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst classNames = require('classnames');\n\nfunction noop() {\n}\n\nclass Switch extends Component {\n  constructor(props) {\n    super(props);\n\n    let checked = false;\n    if ('checked' in props) {\n      checked = !!props.checked;\n    } else if('value' in props) {\n      checked = props.checkedValue === props.value\n    } else {\n      checked = !!props.defaultChecked;\n    }\n    this.state = { checked };\n  }\n\n  componentDidMount() {\n    const { autoFocus, disabled } = this.props;\n    if (autoFocus && !disabled) {\n      this.focus();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ('checked' in nextProps) {\n      this.setState({\n        checked: !!nextProps.checked,\n      });\n    \n    } else if('value' in nextProps) {\n      this.setState({\n        checked: nextProps.checkedValue === nextProps.value,\n      });\n    } \n  }\n\n  setChecked(checked) {\n    if (this.props.disabled) {\n      return;\n    }\n    if (!('checked' in this.props)) {\n      this.setState({\n        checked,\n      });\n    }\n\n\n    \n    const { checkedValue = true, unCheckedValue = false } = this.props;\n    const value = checked ? checkedValue : unCheckedValue;\n    this.props.onChange(value);\n  }\n\n  toggle = () => {\n    const { onClick } = this.props;\n    const checked = !this.state.checked;\n    this.setChecked(checked);\n    onClick(checked);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 37) { // Left\n      this.setChecked(false);\n    } else if (e.keyCode === 39) { // Right\n      this.setChecked(true);\n    } else if (e.keyCode === 32 || e.keyCode === 13) { // Space, Enter\n      this.toggle();\n    }\n  }\n\n  // Handle auto focus when click switch in Chrome\n  handleMouseUp = (e) => {\n    if (this.node) {\n      this.node.blur();\n    }\n    if (this.props.onMouseUp) {\n      this.props.onMouseUp(e);\n    }\n  }\n\n  focus() {\n    this.node.focus();\n  }\n\n  blur() {\n    this.node.blur();\n  }\n\n  saveNode = (node) => {\n    this.node = node;\n  }\n\n  render() {\n    const { className, prefixCls, disabled, loadingIcon,  checkedValue,  unCheckedValue, // modified by njq.niu@hand-china.com\n      checkedChildren, tabIndex, unCheckedChildren, ...restProps } = this.props;\n    const checked = this.state.checked;\n    const switchTabIndex = disabled ? -1 : (tabIndex || 0);\n    const switchClassName = classNames({\n      [className]: !!className,\n      [prefixCls]: true,\n      [`${prefixCls}-checked`]: checked,\n      [`${prefixCls}-disabled`]: disabled,\n    });\n    return (\n      <span\n        {...restProps}\n        className={switchClassName}\n        tabIndex={switchTabIndex}\n        ref={this.saveNode}\n        onKeyDown={this.handleKeyDown}\n        onClick={this.toggle}\n        onMouseUp={this.handleMouseUp}\n      >\n        {loadingIcon}\n        <span className={`${prefixCls}-inner`}>\n          {checked ? checkedChildren : unCheckedChildren}\n        </span>\n      </span>\n    );\n  }\n}\n\nSwitch.propTypes = {\n  className: PropTypes.string,\n  prefixCls: PropTypes.string,\n  disabled: PropTypes.bool,\n  checkedChildren: PropTypes.any,\n  unCheckedChildren: PropTypes.any,\n  onChange: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onClick: PropTypes.func,\n  tabIndex: PropTypes.number,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  loadingIcon: PropTypes.node,\n  checkedValue: PropTypes.any, \n  unCheckedValue: PropTypes.any \n};\n\nSwitch.defaultProps = {\n  prefixCls: 'rc-switch',\n  checkedChildren: null,\n  unCheckedChildren: null,\n  className: '',\n  defaultChecked: false,\n  checkedValue: true, \n  unCheckedValue: false, \n  onChange: noop,\n  onClick: noop,\n};\n\nexport default Switch;\n"]}