{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/rich-text/utils/imageDropAndPaste.tsx"],"names":[],"mappings":"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","sourcesContent":["class ImageData {\n\n  constructor(dataUrl, type) {\n    // @ts-ignore\n    this.dataUrl = dataUrl;\n    // @ts-ignore\n    this.type = type;\n  }\n\n  /* minify the image\n  */\n  minify(options = {}) {\n    return new Promise((resolve, reject) => {\n      // @ts-ignore\n      const maxWidth = options.maxWidth || 800;\n      // @ts-ignore\n      const maxHeight = options.maxHeight || 800;\n      // @ts-ignore\n      const quality = options.quality || .8;\n      // @ts-ignore\n      if (!this.dataUrl) {\n        return reject({ message: '[error] QuillImageDropAndPaste: Fail to minify the image, dataUrl should not be empty.' });\n      }\n      const image = new Image();\n      image.onload = () => {\n        const width = image.width;\n        const height = image.height;\n        if (width > height) {\n          if (width > maxWidth) {\n            image.height = height * maxWidth / width;\n            image.width = maxWidth;\n          }\n        } else {\n          if (height > maxHeight) {\n            image.width = width * maxHeight / height;\n            image.height = maxHeight;\n          }\n        }\n        const canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        var ctx = canvas.getContext('2d');\n        // @ts-ignore\n        ctx.drawImage(image, 0, 0, image.width, image.height);\n        // @ts-ignore\n        const canvasType = this.type || 'image/png';\n        const canvasDataUrl = canvas.toDataURL(canvasType, quality);\n        resolve(new ImageData(canvasDataUrl, canvasType));\n      };\n      // @ts-ignore\n      image.src = this.dataUrl;\n    });\n\n  }\n\n  /* convert blob to file\n  */\n  toFile(filename) {\n    if (!window.File) {\n      console.error('[error] QuillImageDropAndPaste: Your browser didnot support File API.');\n      return null;\n    }\n    // @ts-ignore\n    return new File([this.toBlob()], filename, { type: this.type });\n  }\n\n  /* convert dataURL to blob\n  */\n  toBlob() {\n    // @ts-ignore\n    const base64 = this.dataUrl.replace(/^[^,]+,/, '');\n    const buff = this.binaryStringToArrayBuffer(atob(base64));\n    // @ts-ignore\n    return this.createBlob([buff], { type: this.type });\n  }\n\n  /* generate array buffer from binary string\n  */\n  binaryStringToArrayBuffer(binary) {\n    const len = binary.length;\n    const buffer = new ArrayBuffer(len);\n    const arr = new Uint8Array(buffer);\n    let i = -1;\n    while (++i < len) arr[i] = binary.charCodeAt(i);\n    return buffer;\n  }\n\n  /* create blob\n  */\n  createBlob(parts = [], properties = {}) {\n    if (typeof properties === 'string') properties = { type: properties };\n    try {\n      return new Blob(parts, properties);\n    } catch (e) {\n      if (e.name !== 'TypeError') throw e;\n      // @ts-ignore\n      const Builder = typeof BlobBuilder !== 'undefined'\n        // @ts-ignore\n        ? BlobBuilder : typeof MSBlobBuilder !== 'undefined'\n          // @ts-ignore\n          ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined'\n            // @ts-ignore\n            ? MozBlobBuilder : WebKitBlobBuilder;\n      const builder = new Builder();\n      for (let i = 0; i < parts.length; i++) builder.append(parts[i]);\n      // @ts-ignore\n      return builder.getBlob(properties.type);\n    }\n  }\n}\n\nclass ImageDropAndPaste {\n\n  constructor(quill, options = {}) {\n    // @ts-ignore\n    this.quill = quill;\n    // @ts-ignore\n    this.options = options;\n    this.handleDrop = this.handleDrop.bind(this);\n    this.handlePaste = this.handlePaste.bind(this);\n    // @ts-ignore\n    this.quill.root.addEventListener('drop', this.handleDrop, false);\n    // @ts-ignore\n    this.quill.root.addEventListener('paste', this.handlePaste, false);\n  }\n\n  /* handle image drop event\n  */\n  handleDrop(e) {\n    e.preventDefault();\n    if (e.dataTransfer && e.dataTransfer.files && e.dataTransfer.files.length) {\n      if (document.caretRangeFromPoint) {\n        const selection = document.getSelection();\n        const range = document.caretRangeFromPoint(e.clientX, e.clientY);\n        if (selection && range) {\n          selection.setBaseAndExtent(range.startContainer, range.startOffset, range.startContainer, range.startOffset);\n        }\n      }\n      this.readFiles(e.dataTransfer.files, (dataUrl, type) => {\n        type = type || 'image/png';\n        // @ts-ignore\n        if (typeof this.options.handler === 'function') {\n          // @ts-ignore\n          this.options.handler.call(this, dataUrl, type, new ImageData(dataUrl, type));\n        } else {\n          this.insert.call(this, dataUrl, type);\n        }\n      }, e);\n    }\n  }\n\n  /* handle image paste event\n  */\n  handlePaste(e) {\n    if (e.clipboardData && e.clipboardData.items && e.clipboardData.items.length) {\n      this.readFiles(e.clipboardData.items, (dataUrl, type) => {\n        type = type || 'image/png';\n        // @ts-ignore\n        if (typeof this.options.handler === 'function') {\n          // @ts-ignore\n          this.options.handler.call(this, dataUrl, type, new ImageData(dataUrl, type));\n        } else {\n          this.insert(dataUrl);\n        }\n      }, e);\n    }\n  }\n\n  /* read the files\n  */\n  readFiles(files, callback, e) {\n    [].forEach.call(files, file => {\n      var type = file.type;\n      if (!type.match(/^image\\/(gif|jpe?g|a?png|svg|webp|bmp)/i)) return;\n      e.preventDefault();\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        // @ts-ignore\n        callback(e.target.result, type);\n      };\n      const blob = file.getAsFile ? file.getAsFile() : file;\n      if (blob instanceof Blob) reader.readAsDataURL(blob);\n    });\n  }\n\n  /* insert into the editor\n  */\n  insert(dataUrl) {\n    // @ts-ignore\n    const index = (this.quill.getSelection() || {}).index || this.quill.getLength();\n    // @ts-ignore\n    this.quill.insertEmbed(index, 'image', dataUrl, 'user');\n  }\n\n}\n\n// @ts-ignore\nImageDropAndPaste.ImageData = ImageData;\n\nexport default ImageDropAndPaste;\n"]}