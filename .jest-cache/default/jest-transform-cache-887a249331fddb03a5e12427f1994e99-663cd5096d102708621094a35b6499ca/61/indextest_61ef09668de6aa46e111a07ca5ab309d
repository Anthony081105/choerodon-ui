6d092f1fcb376323fb514ae432fa1a36
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _index = _interopRequireDefault(require("../index"));

var testMethod = typeof window !== 'undefined' ? it : xit;
describe('Card', function () {
  beforeAll(function () {
    jest.useFakeTimers();
  });
  afterAll(function () {
    jest.useRealTimers();
  });

  function fakeResizeWindowTo(wrapper, width) {
    Object.defineProperties(wrapper.instance().container, {
      offsetWidth: {
        get: function get() {
          return width;
        },
        configurable: true
      }
    });
    window.resizeTo(width);
  }

  testMethod('resize card will trigger different padding', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_index["default"], {
      title: "xxx"
    }, "xxx"));
    fakeResizeWindowTo(wrapper, 1000);
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-card-wider-padding').length).toBe(1);
    fakeResizeWindowTo(wrapper, 800);
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-card-wider-padding').length).toBe(0);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRlc3QuanMiXSwibmFtZXMiOlsidGVzdE1ldGhvZCIsIndpbmRvdyIsIml0IiwieGl0IiwiZGVzY3JpYmUiLCJiZWZvcmVBbGwiLCJqZXN0IiwidXNlRmFrZVRpbWVycyIsImFmdGVyQWxsIiwidXNlUmVhbFRpbWVycyIsImZha2VSZXNpemVXaW5kb3dUbyIsIndyYXBwZXIiLCJ3aWR0aCIsIk9iamVjdCIsImRlZmluZVByb3BlcnRpZXMiLCJpbnN0YW5jZSIsImNvbnRhaW5lciIsIm9mZnNldFdpZHRoIiwiZ2V0IiwiY29uZmlndXJhYmxlIiwicmVzaXplVG8iLCJydW5BbGxUaW1lcnMiLCJ1cGRhdGUiLCJleHBlY3QiLCJmaW5kIiwibGVuZ3RoIiwidG9CZSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBLElBQU1BLFVBQVUsR0FBRyxPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLEdBQWdDQyxFQUFoQyxHQUFxQ0MsR0FBeEQ7QUFFQUMsUUFBUSxDQUFDLE1BQUQsRUFBUyxZQUFNO0FBQ3JCQyxFQUFBQSxTQUFTLENBQUMsWUFBTTtBQUNkQyxJQUFBQSxJQUFJLENBQUNDLGFBQUw7QUFDRCxHQUZRLENBQVQ7QUFJQUMsRUFBQUEsUUFBUSxDQUFDLFlBQU07QUFDYkYsSUFBQUEsSUFBSSxDQUFDRyxhQUFMO0FBQ0QsR0FGTyxDQUFSOztBQUlBLFdBQVNDLGtCQUFULENBQTRCQyxPQUE1QixFQUFxQ0MsS0FBckMsRUFBNEM7QUFDMUNDLElBQUFBLE1BQU0sQ0FBQ0MsZ0JBQVAsQ0FBd0JILE9BQU8sQ0FBQ0ksUUFBUixHQUFtQkMsU0FBM0MsRUFBc0Q7QUFDcERDLE1BQUFBLFdBQVcsRUFBRTtBQUNYQyxRQUFBQSxHQURXLGlCQUNMO0FBQUUsaUJBQU9OLEtBQVA7QUFBZSxTQURaO0FBRVhPLFFBQUFBLFlBQVksRUFBRTtBQUZIO0FBRHVDLEtBQXREO0FBTUFsQixJQUFBQSxNQUFNLENBQUNtQixRQUFQLENBQWdCUixLQUFoQjtBQUNEOztBQUVEWixFQUFBQSxVQUFVLENBQUMsNENBQUQsRUFBK0MsWUFBTTtBQUM3RCxRQUFNVyxPQUFPLEdBQUcsbUJBQU0sZ0NBQUMsaUJBQUQ7QUFBTSxNQUFBLEtBQUssRUFBQztBQUFaLGFBQU4sQ0FBaEI7QUFDQUQsSUFBQUEsa0JBQWtCLENBQUNDLE9BQUQsRUFBVSxJQUFWLENBQWxCO0FBQ0FMLElBQUFBLElBQUksQ0FBQ2UsWUFBTDtBQUNBVixJQUFBQSxPQUFPLENBQUNXLE1BQVI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDWixPQUFPLENBQUNhLElBQVIsQ0FBYSx5QkFBYixFQUF3Q0MsTUFBekMsQ0FBTixDQUF1REMsSUFBdkQsQ0FBNEQsQ0FBNUQ7QUFDQWhCLElBQUFBLGtCQUFrQixDQUFDQyxPQUFELEVBQVUsR0FBVixDQUFsQjtBQUNBTCxJQUFBQSxJQUFJLENBQUNlLFlBQUw7QUFDQVYsSUFBQUEsT0FBTyxDQUFDVyxNQUFSO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ1osT0FBTyxDQUFDYSxJQUFSLENBQWEseUJBQWIsRUFBd0NDLE1BQXpDLENBQU4sQ0FBdURDLElBQXZELENBQTRELENBQTVEO0FBQ0QsR0FWUyxDQUFWO0FBV0QsQ0E5Qk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtb3VudCB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgQ2FyZCBmcm9tICcuLi9pbmRleCc7XG5cbmNvbnN0IHRlc3RNZXRob2QgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IGl0IDogeGl0O1xuXG5kZXNjcmliZSgnQ2FyZCcsICgpID0+IHtcbiAgYmVmb3JlQWxsKCgpID0+IHtcbiAgICBqZXN0LnVzZUZha2VUaW1lcnMoKTtcbiAgfSk7XG5cbiAgYWZ0ZXJBbGwoKCkgPT4ge1xuICAgIGplc3QudXNlUmVhbFRpbWVycygpO1xuICB9KTtcblxuICBmdW5jdGlvbiBmYWtlUmVzaXplV2luZG93VG8od3JhcHBlciwgd2lkdGgpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh3cmFwcGVyLmluc3RhbmNlKCkuY29udGFpbmVyLCB7XG4gICAgICBvZmZzZXRXaWR0aDoge1xuICAgICAgICBnZXQoKSB7IHJldHVybiB3aWR0aDsgfSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgfSxcbiAgICB9KTtcbiAgICB3aW5kb3cucmVzaXplVG8od2lkdGgpO1xuICB9XG5cbiAgdGVzdE1ldGhvZCgncmVzaXplIGNhcmQgd2lsbCB0cmlnZ2VyIGRpZmZlcmVudCBwYWRkaW5nJywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudCg8Q2FyZCB0aXRsZT1cInh4eFwiPnh4eDwvQ2FyZD4pO1xuICAgIGZha2VSZXNpemVXaW5kb3dUbyh3cmFwcGVyLCAxMDAwKTtcbiAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgIHdyYXBwZXIudXBkYXRlKCk7XG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnLmM3bi1jYXJkLXdpZGVyLXBhZGRpbmcnKS5sZW5ndGgpLnRvQmUoMSk7XG4gICAgZmFrZVJlc2l6ZVdpbmRvd1RvKHdyYXBwZXIsIDgwMCk7XG4gICAgamVzdC5ydW5BbGxUaW1lcnMoKTtcbiAgICB3cmFwcGVyLnVwZGF0ZSgpO1xuICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJy5jN24tY2FyZC13aWRlci1wYWRkaW5nJykubGVuZ3RoKS50b0JlKDApO1xuICB9KTtcbn0pO1xuIl19