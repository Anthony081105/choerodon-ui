cbd479b648f8c3e93ec5e474bcd198ec
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = focusTest;

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

function focusTest(Component) {
  describe('focus and blur', function () {
    beforeAll(function () {
      jest.useFakeTimers();
    });
    var container;
    beforeEach(function () {
      container = document.createElement('div');
      document.body.appendChild(container);
    });
    afterAll(function () {
      jest.useRealTimers();
    });
    afterEach(function () {
      document.body.removeChild(container);
    });
    it('focus() and onFocus', function () {
      var handleFocus = jest.fn();
      var wrapper = (0, _enzyme.mount)(_react["default"].createElement(Component, {
        onFocus: handleFocus
      }), {
        attachTo: container
      });
      wrapper.instance().focus();
      jest.runAllTimers();
      expect(handleFocus).toHaveBeenCalled();
    });
    it('blur() and onBlur', function () {
      var handleBlur = jest.fn();
      var wrapper = (0, _enzyme.mount)(_react["default"].createElement(Component, {
        onBlur: handleBlur
      }), {
        attachTo: container
      });
      wrapper.instance().focus();
      jest.runAllTimers();
      wrapper.instance().blur();
      jest.runAllTimers();
      expect(handleBlur).toHaveBeenCalled();
    });
    it('autoFocus', function () {
      var handleFocus = jest.fn();
      (0, _enzyme.mount)(_react["default"].createElement(Component, {
        autoFocus: true,
        onFocus: handleFocus
      }), {
        attachTo: container
      });
      jest.runAllTimers();
      expect(handleFocus).toHaveBeenCalled();
    });
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvY3VzVGVzdC5qcyJdLCJuYW1lcyI6WyJmb2N1c1Rlc3QiLCJDb21wb25lbnQiLCJkZXNjcmliZSIsImJlZm9yZUFsbCIsImplc3QiLCJ1c2VGYWtlVGltZXJzIiwiY29udGFpbmVyIiwiYmVmb3JlRWFjaCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImFmdGVyQWxsIiwidXNlUmVhbFRpbWVycyIsImFmdGVyRWFjaCIsInJlbW92ZUNoaWxkIiwiaXQiLCJoYW5kbGVGb2N1cyIsImZuIiwid3JhcHBlciIsImF0dGFjaFRvIiwiaW5zdGFuY2UiLCJmb2N1cyIsInJ1bkFsbFRpbWVycyIsImV4cGVjdCIsInRvSGF2ZUJlZW5DYWxsZWQiLCJoYW5kbGVCbHVyIiwiYmx1ciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRWUsU0FBU0EsU0FBVCxDQUFtQkMsU0FBbkIsRUFBOEI7QUFDM0NDLEVBQUFBLFFBQVEsQ0FBQyxnQkFBRCxFQUFtQixZQUFNO0FBQy9CQyxJQUFBQSxTQUFTLENBQUMsWUFBTTtBQUNkQyxNQUFBQSxJQUFJLENBQUNDLGFBQUw7QUFDRCxLQUZRLENBQVQ7QUFJQSxRQUFJQyxTQUFKO0FBQ0FDLElBQUFBLFVBQVUsQ0FBQyxZQUFNO0FBQ2ZELE1BQUFBLFNBQVMsR0FBR0UsUUFBUSxDQUFDQyxhQUFULENBQXVCLEtBQXZCLENBQVo7QUFDQUQsTUFBQUEsUUFBUSxDQUFDRSxJQUFULENBQWNDLFdBQWQsQ0FBMEJMLFNBQTFCO0FBQ0QsS0FIUyxDQUFWO0FBS0FNLElBQUFBLFFBQVEsQ0FBQyxZQUFNO0FBQ2JSLE1BQUFBLElBQUksQ0FBQ1MsYUFBTDtBQUNELEtBRk8sQ0FBUjtBQUlBQyxJQUFBQSxTQUFTLENBQUMsWUFBTTtBQUNkTixNQUFBQSxRQUFRLENBQUNFLElBQVQsQ0FBY0ssV0FBZCxDQUEwQlQsU0FBMUI7QUFDRCxLQUZRLENBQVQ7QUFJQVUsSUFBQUEsRUFBRSxDQUFDLHFCQUFELEVBQXdCLFlBQU07QUFDOUIsVUFBTUMsV0FBVyxHQUFHYixJQUFJLENBQUNjLEVBQUwsRUFBcEI7QUFDQSxVQUFNQyxPQUFPLEdBQUcsbUJBQU0sZ0NBQUMsU0FBRDtBQUFXLFFBQUEsT0FBTyxFQUFFRjtBQUFwQixRQUFOLEVBQTJDO0FBQUVHLFFBQUFBLFFBQVEsRUFBRWQ7QUFBWixPQUEzQyxDQUFoQjtBQUNBYSxNQUFBQSxPQUFPLENBQUNFLFFBQVIsR0FBbUJDLEtBQW5CO0FBQ0FsQixNQUFBQSxJQUFJLENBQUNtQixZQUFMO0FBQ0FDLE1BQUFBLE1BQU0sQ0FBQ1AsV0FBRCxDQUFOLENBQW9CUSxnQkFBcEI7QUFDRCxLQU5DLENBQUY7QUFRQVQsSUFBQUEsRUFBRSxDQUFDLG1CQUFELEVBQXNCLFlBQU07QUFDNUIsVUFBTVUsVUFBVSxHQUFHdEIsSUFBSSxDQUFDYyxFQUFMLEVBQW5CO0FBQ0EsVUFBTUMsT0FBTyxHQUFHLG1CQUFNLGdDQUFDLFNBQUQ7QUFBVyxRQUFBLE1BQU0sRUFBRU87QUFBbkIsUUFBTixFQUF5QztBQUFFTixRQUFBQSxRQUFRLEVBQUVkO0FBQVosT0FBekMsQ0FBaEI7QUFDQWEsTUFBQUEsT0FBTyxDQUFDRSxRQUFSLEdBQW1CQyxLQUFuQjtBQUNBbEIsTUFBQUEsSUFBSSxDQUFDbUIsWUFBTDtBQUNBSixNQUFBQSxPQUFPLENBQUNFLFFBQVIsR0FBbUJNLElBQW5CO0FBQ0F2QixNQUFBQSxJQUFJLENBQUNtQixZQUFMO0FBQ0FDLE1BQUFBLE1BQU0sQ0FBQ0UsVUFBRCxDQUFOLENBQW1CRCxnQkFBbkI7QUFDRCxLQVJDLENBQUY7QUFVQVQsSUFBQUEsRUFBRSxDQUFDLFdBQUQsRUFBYyxZQUFNO0FBQ3BCLFVBQU1DLFdBQVcsR0FBR2IsSUFBSSxDQUFDYyxFQUFMLEVBQXBCO0FBQ0EseUJBQU0sZ0NBQUMsU0FBRDtBQUFXLFFBQUEsU0FBUyxNQUFwQjtBQUFxQixRQUFBLE9BQU8sRUFBRUQ7QUFBOUIsUUFBTixFQUFxRDtBQUFFRyxRQUFBQSxRQUFRLEVBQUVkO0FBQVosT0FBckQ7QUFDQUYsTUFBQUEsSUFBSSxDQUFDbUIsWUFBTDtBQUNBQyxNQUFBQSxNQUFNLENBQUNQLFdBQUQsQ0FBTixDQUFvQlEsZ0JBQXBCO0FBQ0QsS0FMQyxDQUFGO0FBTUQsR0EzQ08sQ0FBUjtBQTRDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtb3VudCB9IGZyb20gJ2VuenltZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZvY3VzVGVzdChDb21wb25lbnQpIHtcbiAgZGVzY3JpYmUoJ2ZvY3VzIGFuZCBibHVyJywgKCkgPT4ge1xuICAgIGJlZm9yZUFsbCgoKSA9PiB7XG4gICAgICBqZXN0LnVzZUZha2VUaW1lcnMoKTtcbiAgICB9KTtcblxuICAgIGxldCBjb250YWluZXI7XG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcbiAgICB9KTtcblxuICAgIGFmdGVyQWxsKCgpID0+IHtcbiAgICAgIGplc3QudXNlUmVhbFRpbWVycygpO1xuICAgIH0pO1xuXG4gICAgYWZ0ZXJFYWNoKCgpID0+IHtcbiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoY29udGFpbmVyKTtcbiAgICB9KTtcblxuICAgIGl0KCdmb2N1cygpIGFuZCBvbkZvY3VzJywgKCkgPT4ge1xuICAgICAgY29uc3QgaGFuZGxlRm9jdXMgPSBqZXN0LmZuKCk7XG4gICAgICBjb25zdCB3cmFwcGVyID0gbW91bnQoPENvbXBvbmVudCBvbkZvY3VzPXtoYW5kbGVGb2N1c30gLz4sIHsgYXR0YWNoVG86IGNvbnRhaW5lciB9KTtcbiAgICAgIHdyYXBwZXIuaW5zdGFuY2UoKS5mb2N1cygpO1xuICAgICAgamVzdC5ydW5BbGxUaW1lcnMoKTtcbiAgICAgIGV4cGVjdChoYW5kbGVGb2N1cykudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ2JsdXIoKSBhbmQgb25CbHVyJywgKCkgPT4ge1xuICAgICAgY29uc3QgaGFuZGxlQmx1ciA9IGplc3QuZm4oKTtcbiAgICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudCg8Q29tcG9uZW50IG9uQmx1cj17aGFuZGxlQmx1cn0gLz4sIHsgYXR0YWNoVG86IGNvbnRhaW5lciB9KTtcbiAgICAgIHdyYXBwZXIuaW5zdGFuY2UoKS5mb2N1cygpO1xuICAgICAgamVzdC5ydW5BbGxUaW1lcnMoKTtcbiAgICAgIHdyYXBwZXIuaW5zdGFuY2UoKS5ibHVyKCk7XG4gICAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgICAgZXhwZWN0KGhhbmRsZUJsdXIpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgICB9KTtcblxuICAgIGl0KCdhdXRvRm9jdXMnLCAoKSA9PiB7XG4gICAgICBjb25zdCBoYW5kbGVGb2N1cyA9IGplc3QuZm4oKTtcbiAgICAgIG1vdW50KDxDb21wb25lbnQgYXV0b0ZvY3VzIG9uRm9jdXM9e2hhbmRsZUZvY3VzfSAvPiwgeyBhdHRhY2hUbzogY29udGFpbmVyIH0pO1xuICAgICAgamVzdC5ydW5BbGxUaW1lcnMoKTtcbiAgICAgIGV4cGVjdChoYW5kbGVGb2N1cykudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgIH0pO1xuICB9KTtcbn1cbiJdfQ==