{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/Table.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport isFunction from 'lodash/isFunction';\nimport flatten from 'lodash/flatten';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\nimport eq from 'lodash/eq';\nimport omit from 'lodash/omit';\nimport merge from 'lodash/merge';\nimport bindElementResize, { unbind as unbindElementResize } from 'element-resize-event';\nimport { getTranslateDOMPositionXY } from 'dom-lib/lib/transition/translateDOMPositionXY';\nimport {\n  addStyle,\n  getWidth,\n  getHeight,\n  WheelHandler,\n  scrollLeft,\n  scrollTop,\n  on,\n  getOffset,\n} from 'dom-lib';\nimport { toPx } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport LocaleReceiver from 'choerodon-ui/lib/locale-provider/LocaleReceiver';\nimport { PerformanceTable as PerformanceTableLocal } from 'choerodon-ui/lib/locale-provider'\nimport defaultLocale from 'choerodon-ui/lib/locale-provider/default';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport TableContext from './TableContext';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT } from './constants';\nimport {\n  getTotalByColumns,\n  mergeCells,\n  getUnhandledProps,\n  defaultClassPrefix,\n  toggleClass,\n  flattenData,\n  prefix,\n  requestAnimationTimeout,\n  cancelAnimationTimeout,\n  isRTL,\n  isNumberOrTrue,\n  findRowKeys,\n  findAllParents,\n  shouldShowRowByExpanded,\n  resetLeftForCells,\n} from './utils';\n\nimport { TableProps } from './Table.d';\nimport { RowProps } from './Row.d';\nimport { SortType } from './common.d';\nimport ColumnGroup from './ColumnGroup';\nimport Column from './Column';\nimport Cell from './Cell';\nimport HeaderCell from './HeaderCell';\n\ninterface TableRowProps extends RowProps {\n  key?: string | number;\n  depth?: number;\n}\n\nconst SORT_TYPE = {\n  DESC: 'desc',\n  ASC: 'asc',\n};\n\ntype Offset = {\n  top?: number;\n  left?: number;\n  width?: number;\n  height?: number;\n};\n\ninterface TableState {\n  headerOffset?: Offset;\n  tableOffset?: Offset;\n  width: number;\n  columnWidth: number;\n  dataKey: number;\n  shouldFixedColumn: boolean;\n  contentHeight: number;\n  contentWidth: number;\n  tableRowsMaxHeight: number[];\n  isColumnResizing?: boolean;\n  expandedRowKeys: string[] | number[];\n  sortType?: SortType;\n  scrollY: number;\n  isScrolling?: boolean;\n  data: object[];\n  cacheData: object[];\n  fixedHeader: boolean;\n  fixedHorizontalScrollbar?: boolean;\n\n  [key: string]: any;\n}\n\nexport default class PerformanceTable extends React.Component<TableProps, TableState> {\n  static displayName = 'performance';\n\n  static Column = Column;\n\n  static Cell = Cell;\n\n  static HeaderCell = HeaderCell;\n\n  static propTypes = {\n    columns: PropTypes.array,\n    width: PropTypes.number,\n    data: PropTypes.arrayOf(PropTypes.object),\n    height: PropTypes.number,\n    autoHeight: PropTypes.bool,\n    minHeight: PropTypes.number,\n    rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    headerHeight: PropTypes.number,\n    rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    isTree: PropTypes.bool,\n    defaultExpandAllRows: PropTypes.bool,\n    defaultExpandedRowKeys: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    ),\n    expandedRowKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    renderTreeToggle: PropTypes.func,\n    renderRowExpanded: PropTypes.func,\n    rowExpandedHeight: PropTypes.number,\n    locale: PropTypes.object,\n    style: PropTypes.object,\n    sortColumn: PropTypes.string,\n    sortType: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    defaultSortType: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    disabledScroll: PropTypes.bool,\n    hover: PropTypes.bool,\n    loading: PropTypes.bool,\n    className: PropTypes.string,\n    classPrefix: PropTypes.string,\n    children: PropTypes.any,\n    bordered: PropTypes.bool,\n    cellBordered: PropTypes.bool,\n    wordWrap: PropTypes.bool,\n    onRowClick: PropTypes.func,\n    onRowContextMenu: PropTypes.func,\n    onScroll: PropTypes.func,\n    onSortColumn: PropTypes.func,\n    onExpandChange: PropTypes.func,\n    onTouchStart: PropTypes.func,\n    onTouchMove: PropTypes.func,\n    bodyRef: PropTypes.func,\n    loadAnimation: PropTypes.bool,\n    showHeader: PropTypes.bool,\n    rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    virtualized: PropTypes.bool,\n    renderEmpty: PropTypes.func,\n    renderLoading: PropTypes.func,\n    translate3d: PropTypes.bool,\n    affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    rtl: PropTypes.bool,\n    onDataUpdated: PropTypes.func,\n    shouldUpdateScroll: PropTypes.bool,\n  };\n  static defaultProps = {\n    classPrefix: defaultClassPrefix('performance-table'),\n    data: [],\n    defaultSortType: SORT_TYPE.DESC,\n    height: 200,\n    rowHeight: 30,\n    headerHeight: 30,\n    minHeight: 0,\n    rowExpandedHeight: 100,\n    hover: true,\n    showHeader: true,\n    rowKey: 'key',\n    translate3d: true,\n    shouldUpdateScroll: true,\n    locale: {\n      emptyMessage: 'No data found',\n      loading: 'Loading...',\n    },\n  };\n\n  static getDerivedStateFromProps(props: TableProps, state: TableState) {\n    if (props.data !== state.cacheData) {\n      return {\n        cacheData: props.data,\n        data: props.isTree ? flattenData(props.data) : props.data,\n      };\n    }\n    return null;\n  }\n\n  translateDOMPositionXY = null;\n  scrollListener: any = null;\n\n  tableRef: React.RefObject<any>;\n  scrollbarYRef: React.RefObject<any>;\n  scrollbarXRef: React.RefObject<any>;\n  tableBodyRef: React.RefObject<any>;\n  affixHeaderWrapperRef: React.RefObject<any>;\n  mouseAreaRef: React.RefObject<any>;\n  headerWrapperRef: React.RefObject<any>;\n  tableHeaderRef: React.RefObject<any>;\n  wheelWrapperRef: React.RefObject<any>;\n\n  tableRows: { [key: string]: [HTMLElement, any] } = {};\n  mounted = false;\n  disableEventsTimeoutId = null;\n  scrollY = 0;\n  scrollX = 0;\n  wheelHandler: any;\n  minScrollY: any;\n  minScrollX: any;\n  mouseArea: any;\n  touchX: any;\n  touchY: any;\n  wheelListener: any;\n  touchStartListener: any;\n  touchMoveListener: any;\n\n  _cacheCells: any = null;\n  _cacheChildrenSize = 0;\n  _visibleRows = [];\n\n  constructor(props: TableProps) {\n    super(props);\n    const {\n      width,\n      data,\n      rowKey,\n      defaultExpandAllRows,\n      renderRowExpanded,\n      defaultExpandedRowKeys,\n      children = [],\n      columns = [],\n      isTree,\n      defaultSortType,\n    } = props;\n\n    const expandedRowKeys = defaultExpandAllRows\n      ? findRowKeys(data, rowKey, isFunction(renderRowExpanded))\n      : defaultExpandedRowKeys || [];\n\n    let shouldFixedColumn = Array.from(children as Iterable<any>).some(\n      (child: any) => child && child.props && child.props.fixed,\n    );\n\n    if (columns && columns.length) {\n      shouldFixedColumn = Array.from(columns as Iterable<any>).some(\n        (child: any) => child && child.fixed,\n      );\n    }\n\n    if (isTree && !rowKey) {\n      throw new Error('The `rowKey` is required when set isTree');\n    }\n    this.state = {\n      expandedRowKeys,\n      shouldFixedColumn,\n      cacheData: data,\n      data: isTree ? flattenData(data) : data,\n      width: width || 0,\n      columnWidth: 0,\n      dataKey: 0,\n      contentHeight: 0,\n      contentWidth: 0,\n      tableRowsMaxHeight: [],\n      sortType: defaultSortType,\n      scrollY: 0,\n      isScrolling: false,\n      fixedHeader: false,\n    };\n\n    this.scrollY = 0;\n    this.scrollX = 0;\n    this.wheelHandler = new WheelHandler(\n      this.listenWheel,\n      this.shouldHandleWheelX,\n      this.shouldHandleWheelY,\n      false,\n    );\n\n    this._cacheChildrenSize = flatten(children as any[] || columns).length;\n\n    this.translateDOMPositionXY = getTranslateDOMPositionXY({\n      enable3DTransform: props.translate3d,\n    });\n    this.tableRef = React.createRef();\n    this.scrollbarYRef = React.createRef();\n    this.scrollbarXRef = React.createRef();\n    this.tableBodyRef = React.createRef();\n    this.affixHeaderWrapperRef = React.createRef();\n    this.mouseAreaRef = React.createRef();\n    this.headerWrapperRef = React.createRef();\n    this.wheelWrapperRef = React.createRef();\n    this.tableHeaderRef = React.createRef();\n  }\n\n  listenWheel = (deltaX: number, deltaY: number) => {\n    this.handleWheel(deltaX, deltaY);\n    this.scrollbarXRef.current?.onWheelScroll?.(deltaX);\n    this.scrollbarYRef.current?.onWheelScroll?.(deltaY);\n  };\n\n  componentDidMount() {\n    this.calculateTableWidth();\n    this.calculateTableContextHeight();\n    this.calculateRowMaxHeight();\n    this.setOffsetByAffix();\n    this.initPosition();\n    bindElementResize(this.tableRef.current, debounce(this.calculateTableWidth, 400));\n\n    const options = { passive: false };\n    const tableBody = this.tableBodyRef.current;\n    if (tableBody) {\n      this.wheelListener = on(tableBody, 'wheel', this.wheelHandler.onWheel, options);\n      this.touchStartListener = on(tableBody, 'touchstart', this.handleTouchStart, options);\n      this.touchMoveListener = on(tableBody, 'touchmove', this.handleTouchMove, options);\n    }\n\n    const { affixHeader, affixHorizontalScrollbar } = this.props;\n    if (isNumberOrTrue(affixHeader) || isNumberOrTrue(affixHorizontalScrollbar)) {\n      this.scrollListener = on(window, 'scroll', this.handleWindowScroll);\n    }\n\n    this.props?.bodyRef?.(this.wheelWrapperRef.current);\n  }\n\n  shouldComponentUpdate(nextProps: TableProps, nextState: TableState) {\n    const _cacheChildrenSize = flatten((nextProps.children as any[] || nextProps.columns) || []).length;\n\n    /**\n     * 单元格列的信息在初始化后会被缓存，在某些属性被更新以后，需要清除缓存。\n     */\n    if (_cacheChildrenSize !== this._cacheChildrenSize) {\n      this._cacheChildrenSize = _cacheChildrenSize;\n      this._cacheCells = null;\n    } else if (\n      this.props.children !== nextProps.children ||\n      this.props.columns !== nextProps.columns ||\n      this.props.sortColumn !== nextProps.sortColumn ||\n      this.props.sortType !== nextProps.sortType\n    ) {\n      this._cacheCells = null;\n    }\n\n    return !eq(this.props, nextProps) || !isEqual(this.state, nextState);\n  }\n\n  componentDidUpdate(prevProps: TableProps) {\n    this.calculateTableContextHeight(prevProps);\n    this.calculateTableContentWidth(prevProps);\n    this.calculateRowMaxHeight();\n    if (prevProps.data !== this.props.data) {\n      this.props.onDataUpdated?.(this.props.data, this.scrollTo);\n      if (this.props.shouldUpdateScroll) {\n        this.scrollTo({ x: 0, y: 0 });\n      }\n    } else {\n      this.updatePosition();\n    }\n  }\n\n  componentWillUnmount() {\n    this.wheelHandler = null;\n    if (this.tableRef.current) {\n      unbindElementResize(this.tableRef.current);\n    }\n    this.wheelListener?.off();\n    this.touchStartListener?.off();\n    this.touchMoveListener?.off();\n    this.scrollListener?.off();\n  }\n\n  getExpandedRowKeys() {\n    const { expandedRowKeys } = this.props;\n    return typeof expandedRowKeys === 'undefined' ? this.state.expandedRowKeys : expandedRowKeys;\n  }\n\n  getSortType() {\n    const { sortType } = this.props;\n    return typeof sortType === 'undefined' ? this.state.sortType : sortType;\n  }\n\n  getScrollCellGroups() {\n    return this.tableRef.current?.querySelectorAll(`.${this.addPrefix('cell-group-scroll')}`);\n  }\n\n  getFixedLeftCellGroups() {\n    return this.tableRef.current?.querySelectorAll(`.${this.addPrefix('cell-group-fixed-left')}`);\n  }\n\n  getFixedRightCellGroups() {\n    return this.tableRef.current?.querySelectorAll(`.${this.addPrefix('cell-group-fixed-right')}`);\n  }\n\n  isRTL() {\n    return this.props.rtl || isRTL();\n  }\n\n  getRowHeight(rowData = {}) {\n    const { rowHeight } = this.props;\n    return typeof rowHeight === 'function' ? rowHeight(rowData) : rowHeight;\n  }\n\n  /**\n   * 获取表头高度\n   */\n  getTableHeaderHeight() {\n    const { headerHeight, showHeader } = this.props;\n    return showHeader ? headerHeight : 0;\n  }\n\n  /**\n   * 获取 Table 需要渲染的高度\n   */\n  getTableHeight() {\n    const { contentHeight } = this.state;\n    const { minHeight, height, autoHeight, data } = this.props;\n    const headerHeight = this.getTableHeaderHeight();\n\n    if (data.length === 0 && autoHeight) {\n      return height;\n    }\n\n    return autoHeight ? Math.max(headerHeight + contentHeight, minHeight) : height;\n  }\n\n  /**\n   * 处理 column props\n   * @param column\n   */\n  getColumnProps(column) {\n    return omit(column, ['title', 'dataIndex', 'key', 'render']);\n  }\n\n  /**\n   * 处理columns json -> reactNode\n   * @param columns\n   */\n  processTableColumns(columns) {\n    return columns && columns.map((column) => {\n      const dataKey = column.dataIndex;\n      if (column.type === 'ColumnGroup') {\n        return <ColumnGroup {...this.getColumnProps(column)}>{this.processTableColumns(column.children)}</ColumnGroup>;\n      }\n      return (\n        // @ts-ignore\n        <Column {...this.getColumnProps(column)} dataKey={dataKey}>\n          {\n            // @ts-ignore\n            <HeaderCell>\n              {isFunction(column.title) ? column.title() : column.title}\n            </HeaderCell>\n          }\n          {typeof column.render === 'function' ? (\n            // @ts-ignore\n            <Cell dataKey={dataKey}>\n              {\n                (rowData, rowIndex) => column.render({ rowData, rowIndex, dataIndex: dataKey })\n              }\n            </Cell>\n            // @ts-ignore\n          ) : <Cell dataKey={dataKey} />}\n        </Column>\n      );\n    });\n  }\n\n  /**\n   * 获取 columns ReactElement 数组\n   * - 处理 children 中存在 <Column> 数组的情况\n   * - 过滤 children 中的空项\n   */\n  getTableColumns(): React.ReactNodeArray {\n    const { columns } = this.props;\n    let children = this.props.children;\n    if (columns && columns.length) {\n      children = this.processTableColumns(columns);\n    }\n\n    if (!Array.isArray(children)) {\n      return children as React.ReactNodeArray;\n    }\n\n    const flattenColumns = children.map((column: React.ReactElement) => {\n      if (column?.type === ColumnGroup) {\n        const { header, children: childColumns, align, fixed, verticalAlign } = column?.props;\n        return childColumns.map((childColumn, index) => {\n          // 把 ColumnGroup 设置的属性覆盖到 Column\n          const groupCellProps: any = {\n            align,\n            fixed,\n            verticalAlign,\n          };\n\n          /**\n           * 为分组中的第一列设置属性:\n           * groupCount: 分组子项个数\n           * groupHeader: 分组标题\n           * resizable: 设置为不可自定义列宽\n           */\n          if (index === 0) {\n            groupCellProps.groupCount = childColumns.length;\n            groupCellProps.groupHeader = header;\n            groupCellProps.resizable = false;\n          }\n\n          return React.cloneElement(childColumn, groupCellProps);\n        });\n      }\n      return column;\n    });\n\n    // 把 Columns 中的数组，展平为一维数组，计算 lastColumn 与 firstColumn。\n    return flatten(flattenColumns).filter(col => col);\n  }\n\n  getCellDescriptor() {\n    if (this._cacheCells) {\n      return this._cacheCells;\n    }\n    let hasCustomTreeCol = false;\n    let left = 0; // Cell left margin\n    const headerCells = []; // Table header cell\n    const bodyCells = []; // Table body cell\n    const { children, columns: columnsJson } = this.props;\n    let columnHack = children;\n    if (columnsJson && columnsJson.length) {\n      columnHack = columnsJson;\n    }\n\n    if (!columnHack) {\n      this._cacheCells = {\n        headerCells,\n        bodyCells,\n        hasCustomTreeCol,\n        allColumnsWidth: left,\n      };\n      return this._cacheCells;\n    }\n\n    const columns = this.getTableColumns();\n\n    const { width: tableWidth } = this.state;\n    const { sortColumn, rowHeight, showHeader } = this.props;\n    const { totalFlexGrow, totalWidth } = getTotalByColumns(columns);\n    const headerHeight = this.getTableHeaderHeight();\n\n    React.Children.forEach(columns, (column, index) => {\n      if (React.isValidElement(column)) {\n        const columnChildren = column.props.children;\n        const { width, resizable, flexGrow, minWidth, onResize, treeCol } = column.props;\n\n        if (treeCol) {\n          hasCustomTreeCol = true;\n        }\n\n        if (resizable && flexGrow) {\n          console.warn(\n            `Cannot set 'resizable' and 'flexGrow' together in <Column>, column index: ${index}`,\n          );\n        }\n\n        if (columnChildren.length !== 2) {\n          throw new Error(`Component <HeaderCell> and <Cell> is required, column index: ${index} `);\n        }\n\n        let nextWidth =\n          this.state[`${columnChildren[1].props.dataKey}_${index}_width`] || width || 0;\n\n        if (tableWidth && flexGrow && totalFlexGrow) {\n          nextWidth = Math.max(\n            ((tableWidth - totalWidth) / totalFlexGrow) * flexGrow,\n            minWidth || 60,\n          );\n        }\n\n        const cellProps = {\n          ...omit(column.props, ['children']),\n          left,\n          index,\n          headerHeight,\n          key: index,\n          width: nextWidth,\n          height: rowHeight,\n          firstColumn: index === 0,\n          lastColumn: index === columns.length - 1,\n        };\n\n        if (showHeader && headerHeight) {\n          const headerCellProps = {\n            dataKey: columnChildren[1].props.dataKey,\n            isHeaderCell: true,\n            sortable: column.props.sortable,\n            onSortColumn: this.handleSortColumn,\n            sortType: this.getSortType(),\n            sortColumn,\n            flexGrow,\n          };\n\n          if (resizable) {\n            merge(headerCellProps, {\n              onResize,\n              onColumnResizeEnd: this.handleColumnResizeEnd,\n              onColumnResizeStart: this.handleColumnResizeStart,\n              onColumnResizeMove: this.handleColumnResizeMove,\n            });\n          }\n\n          headerCells.push(\n            // @ts-ignore\n            React.cloneElement(columnChildren[0], { ...cellProps, ...headerCellProps }),\n          );\n        }\n\n        // @ts-ignore\n        bodyCells.push(React.cloneElement(columnChildren[1], cellProps));\n\n        left += nextWidth;\n      }\n    });\n\n    return (this._cacheCells = {\n      headerCells,\n      bodyCells,\n      allColumnsWidth: left,\n      hasCustomTreeCol,\n    });\n  }\n\n  setOffsetByAffix = () => {\n    const { affixHeader, affixHorizontalScrollbar } = this.props;\n    const headerNode = this.headerWrapperRef?.current;\n    if (isNumberOrTrue(affixHeader) && headerNode) {\n      this.setState(() => ({ headerOffset: getOffset(headerNode) }));\n    }\n\n    const tableNode = this.tableRef?.current;\n    if (isNumberOrTrue(affixHorizontalScrollbar) && tableNode) {\n      this.setState(() => ({ tableOffset: getOffset(tableNode) }));\n    }\n  };\n\n  handleWindowScroll = () => {\n    const { affixHeader, affixHorizontalScrollbar } = this.props;\n    if (isNumberOrTrue(affixHeader)) {\n      this.affixTableHeader();\n    }\n    if (isNumberOrTrue(affixHorizontalScrollbar)) {\n      this.affixHorizontalScrollbar();\n    }\n  };\n\n  affixHorizontalScrollbar = () => {\n    const scrollY = window.scrollY || window.pageYOffset;\n    const windowHeight = getHeight(window);\n    const height = this.getTableHeight();\n\n    const { tableOffset, fixedHorizontalScrollbar } = this.state;\n    const { affixHorizontalScrollbar } = this.props;\n    const headerHeight = this.getTableHeaderHeight();\n    const bottom = typeof affixHorizontalScrollbar === 'number' ? affixHorizontalScrollbar : 0;\n\n    const fixedScrollbar =\n      // @ts-ignore\n      scrollY + windowHeight < height + (tableOffset.top + bottom) &&\n      // @ts-ignore\n      scrollY + windowHeight - headerHeight > tableOffset?.top + bottom;\n\n    if (\n      this.scrollbarXRef?.current?.barRef?.current &&\n      fixedHorizontalScrollbar !== fixedScrollbar\n    ) {\n      this.setState({ fixedHorizontalScrollbar: fixedScrollbar });\n    }\n  };\n\n  affixTableHeader = () => {\n    const { affixHeader } = this.props;\n    const top = typeof affixHeader === 'number' ? affixHeader : 0;\n    const { headerOffset, contentHeight } = this.state;\n    const scrollY = window.scrollY || window.pageYOffset;\n    const fixedHeader =\n      // @ts-ignore\n      scrollY - (headerOffset.top - top) >= 0 && scrollY < headerOffset.top - top + contentHeight;\n\n    if (this.affixHeaderWrapperRef.current) {\n      toggleClass(this.affixHeaderWrapperRef.current, 'fixed', fixedHeader);\n    }\n  };\n\n  handleSortColumn = (dataKey: string) => {\n    let sortType = this.getSortType();\n\n    if (this.props.sortColumn === dataKey) {\n      sortType =\n        sortType === SORT_TYPE.ASC ? (SORT_TYPE.DESC as SortType) : (SORT_TYPE.ASC as SortType);\n      this.setState({ sortType });\n    }\n    this.props.onSortColumn?.(dataKey, sortType);\n  };\n\n  handleColumnResizeEnd = (\n    columnWidth: number,\n    _cursorDelta: number,\n    dataKey: any,\n    index: number,\n  ) => {\n    this._cacheCells = null;\n\n    this.setState({ isColumnResizing: false, [`${dataKey}_${index}_width`]: columnWidth });\n\n    addStyle(this.mouseAreaRef.current, { display: 'none' });\n  };\n\n  handleColumnResizeStart = (width: number, left: number, fixed: boolean) => {\n    this.setState({ isColumnResizing: true });\n    this.handleColumnResizeMove(width, left, fixed);\n  };\n\n  handleColumnResizeMove = (width: number, left: number, fixed: boolean) => {\n    let mouseAreaLeft = width + left;\n    let x = mouseAreaLeft;\n    let dir = 'left';\n\n    if (this.isRTL()) {\n      mouseAreaLeft += this.minScrollX + SCROLLBAR_WIDTH;\n      dir = 'right';\n    }\n\n    if (!fixed) {\n      x = mouseAreaLeft + (this.isRTL() ? -this.scrollX : this.scrollX);\n    }\n\n    addStyle(this.mouseAreaRef.current, { display: 'block', [dir]: `${x}px` });\n  };\n\n  handleTreeToggle = (rowKey: any, _rowIndex: number, rowData: any) => {\n    const expandedRowKeys = this.getExpandedRowKeys();\n\n    let open = false;\n    const nextExpandedRowKeys = [];\n\n    for (let i = 0; i < expandedRowKeys.length; i++) {\n      const key = expandedRowKeys[i];\n      if (key === rowKey) {\n        open = true;\n      } else {\n        // @ts-ignore\n        nextExpandedRowKeys.push(key);\n      }\n    }\n\n    if (!open) {\n      // @ts-ignore\n      nextExpandedRowKeys.push(rowKey);\n    }\n    this.setState({ expandedRowKeys: nextExpandedRowKeys });\n    this.props.onExpandChange?.(!open, rowData);\n  };\n\n  handleScrollX = (delta: number) => {\n    this.handleWheel(delta, 0);\n  };\n  handleScrollY = (delta: number) => {\n    this.handleWheel(0, delta);\n  };\n\n  handleWheel = (deltaX: number, deltaY: number) => {\n    const { onScroll, virtualized } = this.props;\n    const { contentWidth, width } = this.state;\n\n    if (!this.tableRef.current) {\n      return;\n    }\n\n    const nextScrollX = contentWidth <= width ? 0 : this.scrollX - deltaX;\n    const nextScrollY = this.scrollY - deltaY;\n\n    this.scrollY = Math.min(0, nextScrollY < this.minScrollY ? this.minScrollY : nextScrollY);\n    this.scrollX = Math.min(0, nextScrollX < this.minScrollX ? this.minScrollX : nextScrollX);\n    this.updatePosition();\n\n    onScroll?.(this.scrollX, this.scrollY);\n\n    if (virtualized) {\n      this.setState({\n        isScrolling: true,\n        scrollY: this.scrollY,\n      });\n\n      if (this.disableEventsTimeoutId) {\n        // @ts-ignore\n        cancelAnimationTimeout(this.disableEventsTimeoutId);\n      }\n\n      // @ts-ignore\n      this.disableEventsTimeoutId = requestAnimationTimeout(this.debounceScrollEndedCallback, 150);\n    }\n  };\n\n  debounceScrollEndedCallback = () => {\n    this.disableEventsTimeoutId = null;\n    this.setState({\n      isScrolling: false,\n    });\n  };\n\n  // 处理移动端 Touch 事件,  Start 的时候初始化 x,y\n  handleTouchStart = (event: React.TouchEvent) => {\n    if (event.touches) {\n      const { pageX, pageY } = event.touches[0];\n      this.touchX = pageX;\n      this.touchY = pageY;\n    }\n\n    this.props.onTouchStart?.(event);\n  };\n\n  // 处理移动端 Touch 事件, Move 的时候初始化，更新 scroll\n  handleTouchMove = (event: React.TouchEvent) => {\n    const { autoHeight } = this.props;\n\n    if (event.touches) {\n      const { pageX, pageY } = event.touches[0];\n      const deltaX = this.touchX - pageX;\n      const deltaY = autoHeight ? 0 : this.touchY - pageY;\n\n      if (!this.shouldHandleWheelY(deltaY) && !this.shouldHandleWheelX(deltaX)) {\n        return;\n      }\n\n      event.preventDefault?.();\n\n      this.handleWheel(deltaX, deltaY);\n      this.scrollbarXRef.current?.onWheelScroll?.(deltaX);\n      this.scrollbarYRef.current?.onWheelScroll?.(deltaY);\n\n      this.touchX = pageX;\n      this.touchY = pageY;\n    }\n\n    this.props.onTouchMove?.(event);\n  };\n\n  /**\n   * 当用户在 Table 内使用 tab 键，触发了 onScroll 事件，这个时候应该更新滚动条位置\n   * https://github.com/rsuite/rsuite/issues/234\n   */\n  handleBodyScroll = (event: React.UIEvent<HTMLDivElement>) => {\n    if (event.target !== this.tableBodyRef.current) {\n      return;\n    }\n\n    const left = scrollLeft(event.target);\n    const top = scrollTop(event.target);\n\n    if (top === 0 && left === 0) {\n      return;\n    }\n\n    this.listenWheel(left, top);\n\n    scrollLeft(event.target, 0);\n    scrollTop(event.target, 0);\n  };\n\n  initPosition() {\n    if (this.isRTL()) {\n      setTimeout(() => {\n        const { contentWidth, width } = this.state;\n\n        this.scrollX = width - contentWidth - SCROLLBAR_WIDTH;\n        this.updatePosition();\n        this.scrollbarXRef?.current?.resetScrollBarPosition?.(-this.scrollX);\n      }, 0);\n    }\n  }\n\n  updatePosition() {\n    /**\n     * 当存在锁定列情况处理\n     */\n    if (this.state.shouldFixedColumn) {\n      this.updatePositionByFixedCell();\n    } else {\n      const wheelStyle = {};\n      const headerStyle = {};\n\n      // @ts-ignore\n      this.translateDOMPositionXY(wheelStyle, this.scrollX, this.scrollY);\n      // @ts-ignore\n      this.translateDOMPositionXY(headerStyle, this.scrollX, 0);\n\n      const wheelElement = this.wheelWrapperRef?.current;\n      const headerElement = this.headerWrapperRef?.current;\n      const affixHeaderElement = this.affixHeaderWrapperRef?.current;\n\n      wheelElement && addStyle(wheelElement, wheelStyle);\n      headerElement && addStyle(headerElement, headerStyle);\n\n      if (affixHeaderElement?.hasChildNodes?.()) {\n        addStyle(affixHeaderElement.firstChild, headerStyle);\n      }\n    }\n\n    if (this.tableHeaderRef?.current) {\n      toggleClass(\n        this.tableHeaderRef.current,\n        this.addPrefix('cell-group-shadow'),\n        this.scrollY < 0,\n      );\n    }\n  }\n\n  updatePositionByFixedCell() {\n    const wheelGroupStyle = {};\n    const wheelStyle = {};\n    const scrollGroups = this.getScrollCellGroups();\n    const fixedLeftGroups = this.getFixedLeftCellGroups();\n    const fixedRightGroups = this.getFixedRightCellGroups();\n    const { contentWidth, width } = this.state;\n\n    // @ts-ignore\n    this.translateDOMPositionXY(wheelGroupStyle, this.scrollX, 0);\n    // @ts-ignore\n    this.translateDOMPositionXY(wheelStyle, 0, this.scrollY);\n\n    const scrollArrayGroups = Array.from(scrollGroups);\n\n    for (let i = 0; i < scrollArrayGroups.length; i++) {\n      const group = scrollArrayGroups[i];\n      addStyle(group, wheelGroupStyle);\n    }\n\n    if (this.wheelWrapperRef?.current) {\n      addStyle(this.wheelWrapperRef.current, wheelStyle);\n    }\n\n    const leftShadowClassName = this.addPrefix('cell-group-left-shadow');\n    const rightShadowClassName = this.addPrefix('cell-group-right-shadow');\n    const showLeftShadow = this.scrollX < 0;\n    const showRightShadow = width - contentWidth - SCROLLBAR_WIDTH !== this.scrollX;\n\n    toggleClass(fixedLeftGroups, leftShadowClassName, showLeftShadow);\n    toggleClass(fixedRightGroups, rightShadowClassName, showRightShadow);\n  }\n\n  shouldHandleWheelX = (delta: number) => {\n    const { disabledScroll, loading } = this.props;\n\n    if (delta === 0 || disabledScroll || loading) {\n      return false;\n    }\n\n    return true;\n  };\n  shouldHandleWheelY = (delta: number) => {\n    const { disabledScroll, loading } = this.props;\n    if (delta === 0 || disabledScroll || loading) {\n      return false;\n    }\n    return (delta >= 0 && this.scrollY > this.minScrollY) || (delta < 0 && this.scrollY < 0);\n  };\n\n  shouldRenderExpandedRow(rowData: object) {\n    const { rowKey, renderRowExpanded, isTree } = this.props;\n    const expandedRowKeys = this.getExpandedRowKeys() || [];\n\n    return (\n      isFunction(renderRowExpanded) &&\n      !isTree &&\n      expandedRowKeys.some(key => key === rowData[rowKey])\n    );\n  }\n\n  // @ts-ignore\n  addPrefix = (name: string):string => prefix(this.props.classPrefix)(name);\n\n  calculateRowMaxHeight() {\n    const { wordWrap } = this.props;\n    if (wordWrap) {\n      const tableRowsMaxHeight = [];\n      const tableRows = Object.values(this.tableRows);\n\n      for (let i = 0; i < tableRows.length; i++) {\n        const [row] = tableRows[i];\n        if (row) {\n          const cells = row.querySelectorAll(`.${this.addPrefix('cell-wrap')}`) || [];\n          const cellArray = Array.from(cells);\n          let maxHeight = 0;\n\n          for (let j = 0; j < cellArray.length; j++) {\n            const cell = cellArray[j];\n            const h = getHeight(cell);\n            maxHeight = Math.max(maxHeight, h);\n          }\n\n          // @ts-ignore\n          tableRowsMaxHeight.push(maxHeight);\n        }\n      }\n\n      this.setState({ tableRowsMaxHeight });\n    }\n  }\n\n  calculateTableWidth = () => {\n    const table = this.tableRef?.current;\n    const { width } = this.state;\n\n    if (table) {\n      const nextWidth = getWidth(table);\n      if (width !== nextWidth) {\n        this.scrollX = 0;\n        this.scrollbarXRef?.current?.resetScrollBarPosition();\n      }\n\n      this._cacheCells = null;\n      this.setState({ width: nextWidth });\n    }\n    this.setOffsetByAffix();\n  };\n\n  calculateTableContentWidth(prevProps: TableProps) {\n    const table = this.tableRef?.current;\n    const row = table.querySelector(`.${this.addPrefix('row')}:not(.virtualized)`);\n    const contentWidth = row ? getWidth(row) : 0;\n\n    this.setState({ contentWidth });\n    // 这里 -SCROLLBAR_WIDTH 是为了让滚动条不挡住内容部分\n    this.minScrollX = -(contentWidth - this.state.width) - SCROLLBAR_WIDTH;\n\n    /**\n     * 1.判断 Table 列数是否发生变化\n     * 2.判断 Table 内容区域是否宽度有变化\n     *\n     * 满足 1 和 2 则更新横向滚动条位置\n     */\n\n    if (\n      flatten(this.props.children as any[]).length !==\n      flatten(prevProps.children as any[]).length &&\n      this.state.contentWidth !== contentWidth\n    ) {\n      this.scrollLeft(0);\n    }\n  }\n\n  calculateTableContextHeight(prevProps?: TableProps) {\n    const table = this.tableRef.current;\n    const rows = table.querySelectorAll(`.${this.addPrefix('row')}`) || [];\n    const { height, autoHeight, rowHeight } = this.props;\n    const headerHeight = this.getTableHeaderHeight();\n    const contentHeight = rows.length\n      ? Array.from(rows)\n        .map(row => getHeight(row) || rowHeight)\n        .reduce((x, y) => x + y)\n      : 0;\n\n    const nextContentHeight = contentHeight - headerHeight;\n\n    if (nextContentHeight !== this.state.contentHeight) {\n      this.setState({ contentHeight: nextContentHeight });\n    }\n\n    if (\n      prevProps &&\n      // 当 data 更新，或者表格高度更新，则更新滚动条\n      (prevProps.height !== height || prevProps.data !== this.props.data) &&\n      this.scrollY !== 0\n    ) {\n      this.scrollTop(Math.abs(this.scrollY));\n      this.updatePosition();\n    }\n\n    if (!autoHeight) {\n      // 这里 -SCROLLBAR_WIDTH 是为了让滚动条不挡住内容部分\n      this.minScrollY = -(contentHeight - height) - SCROLLBAR_WIDTH;\n    }\n\n    // 如果内容区域的高度小于表格的高度，则重置 Y 坐标滚动条\n    if (contentHeight < height) {\n      this.scrollTop(0);\n    }\n\n    // 如果 scrollTop 的值大于可以滚动的范围 ，则重置 Y 坐标滚动条\n    // 当 Table 为 virtualized 时， wheel 事件触发每次都会进入该逻辑， 避免在滚动到底部后滚动条重置, +SCROLLBAR_WIDTH\n    if (Math.abs(this.scrollY) + height - headerHeight > nextContentHeight + SCROLLBAR_WIDTH) {\n      this.scrollTop(this.scrollY);\n    }\n  }\n\n  getControlledScrollTopValue(value) {\n    if (this.props.autoHeight) {\n      return [0, 0];\n    }\n    const { contentHeight } = this.state;\n    const headerHeight = this.getTableHeaderHeight();\n    const height = this.getTableHeight();\n\n    // 滚动值的最大范围判断\n    value = Math.min(value, Math.max(0, contentHeight - (height - headerHeight)));\n\n    // value 值是表格理论滚动位置的一个值，通过 value 计算出 scrollY 坐标值与滚动条位置的值\n    return [-value, (value / contentHeight) * (height - headerHeight)];\n  }\n\n  getControlledScrollLeftValue(value) {\n    const { contentWidth, width } = this.state;\n\n    // 滚动值的最大范围判断\n    value = Math.min(value, Math.max(0, contentWidth - width));\n\n    return [-value, (value / contentWidth) * width];\n  }\n\n  /**\n   * public method\n   */\n  scrollTop = (top = 0) => {\n    const [scrollY, handleScrollY] = this.getControlledScrollTopValue(top);\n\n    this.scrollY = scrollY;\n    this.scrollbarYRef?.current?.resetScrollBarPosition?.(handleScrollY);\n    this.updatePosition();\n\n    /**\n     * 当开启 virtualized，调用 scrollTop 后会出现白屏现象，\n     * 原因是直接操作 DOM 的坐标，但是组件没有重新渲染，需要调用 forceUpdate 重新进入 render。\n     * Fix: rsuite#1044\n     */\n    if (this.props.virtualized && this.state.contentHeight > this.props.height) {\n      this.forceUpdate();\n    }\n  };\n\n  // public method\n  scrollLeft = (left = 0) => {\n    const [scrollX, handleScrollX] = this.getControlledScrollLeftValue(left);\n    this.scrollX = scrollX;\n    this.scrollbarXRef?.current?.resetScrollBarPosition?.(handleScrollX);\n    this.updatePosition();\n  };\n\n  scrollTo = (coord: { x: number; y: number }) => {\n    const { x, y } = coord || {};\n    if (typeof x === 'number') {\n      this.scrollLeft(x);\n    }\n    if (typeof y === 'number') {\n      this.scrollTop(y);\n    }\n  };\n\n  bindTableRowsRef = (index: number | string, rowData: any) => (ref: HTMLElement) => {\n    if (ref) {\n      this.tableRows[index] = [ref, rowData];\n    }\n  };\n\n  bindRowClick = (rowData: object) => {\n    return (event: React.MouseEvent) => {\n      this.props.onRowClick?.(rowData, event);\n    };\n  };\n\n  bindRowContextMenu = (rowData: object) => {\n    return (event: React.MouseEvent) => {\n      this.props.onRowContextMenu?.(rowData, event);\n    };\n  };\n\n  renderRowData(\n    bodyCells: any[],\n    rowData: any,\n    props: TableRowProps,\n    shouldRenderExpandedRow?: boolean,\n  ) {\n    const { renderTreeToggle, rowKey, wordWrap, isTree } = this.props;\n    const hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    const nextRowKey = typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n\n    const rowProps: TableRowProps = {\n      ...props,\n      // @ts-ignore\n      rowRef: this.bindTableRowsRef(props.key, rowData),\n      onClick: this.bindRowClick(rowData),\n      onContextMenu: this.bindRowContextMenu(rowData),\n    };\n\n    const expandedRowKeys = this.getExpandedRowKeys() || [];\n    const expanded = expandedRowKeys.some(key => key === rowData[rowKey]);\n    const cells = [];\n\n    for (let i = 0; i < bodyCells.length; i++) {\n      const cell = bodyCells[i];\n      cells.push(\n        // @ts-ignore\n        React.cloneElement(cell, {\n          hasChildren,\n          rowData,\n          wordWrap,\n          renderTreeToggle,\n          height: props.height,\n          rowIndex: props.key,\n          depth: props.depth,\n          onTreeToggle: this.handleTreeToggle,\n          rowKey: nextRowKey,\n          expanded,\n        }),\n      );\n    }\n\n    return this.renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  }\n\n  renderRow(props: TableRowProps, cells: any[], shouldRenderExpandedRow?: boolean, rowData?: any) {\n    const { rowClassName } = this.props;\n    const { shouldFixedColumn, width, contentWidth } = this.state;\n\n    if (typeof rowClassName === 'function') {\n      props.className = rowClassName(rowData);\n    } else {\n      props.className = rowClassName;\n    }\n\n    const rowStyles: React.CSSProperties = {};\n    let rowRight = 0;\n\n    if (this.isRTL() && contentWidth > width) {\n      rowRight = width - contentWidth;\n      rowStyles.right = rowRight;\n    }\n\n    // IF there are fixed columns, add a fixed group\n    if (shouldFixedColumn && contentWidth > width) {\n      const fixedLeftCells = [];\n      const fixedRightCells = [];\n      const scrollCells = [];\n      let fixedLeftCellGroupWidth = 0;\n      let fixedRightCellGroupWidth = 0;\n\n      for (let i = 0; i < cells.length; i++) {\n        const cell = cells[i];\n        const { fixed, width } = cell.props;\n\n        let isFixedStart = fixed === 'left' || fixed === true;\n        let isFixedEnd = fixed === 'right';\n\n        if (this.isRTL()) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n\n        if (isFixedStart) {\n          // @ts-ignore\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          // @ts-ignore\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          // @ts-ignore\n          scrollCells.push(cell);\n        }\n      }\n\n      return (\n        <Row {...props} style={rowStyles}>\n          {fixedLeftCellGroupWidth ? (\n            <CellGroup\n              fixed=\"left\"\n              height={props.isHeaderRow ? props.headerHeight : props.height}\n              width={fixedLeftCellGroupWidth}\n              // @ts-ignore\n              style={this.isRTL() ? { right: width - fixedLeftCellGroupWidth - rowRight } : null}\n            >\n              {mergeCells(resetLeftForCells(fixedLeftCells))}\n            </CellGroup>\n          ) : null}\n\n          <CellGroup>{mergeCells(scrollCells)}</CellGroup>\n\n          {fixedRightCellGroupWidth ? (\n            <CellGroup\n              fixed=\"right\"\n              style={\n                this.isRTL()\n                  ? { right: 0 - rowRight - SCROLLBAR_WIDTH }\n                  : { left: width - fixedRightCellGroupWidth - SCROLLBAR_WIDTH }\n              }\n              height={props.isHeaderRow ? props.headerHeight : props.height}\n              width={fixedRightCellGroupWidth}\n            >\n              {mergeCells(resetLeftForCells(fixedRightCells))}\n            </CellGroup>\n          ) : null}\n\n          {shouldRenderExpandedRow && this.renderRowExpanded(rowData)}\n        </Row>\n      );\n    }\n\n    return (\n      <Row {...props} style={rowStyles}>\n        <CellGroup>{mergeCells(cells)}</CellGroup>\n        {shouldRenderExpandedRow && this.renderRowExpanded(rowData)}\n      </Row>\n    );\n  }\n\n  renderRowExpanded(rowData?: object) {\n    const { renderRowExpanded, rowExpandedHeight } = this.props;\n    const styles = { height: rowExpandedHeight };\n\n    if (typeof renderRowExpanded === 'function') {\n      return (\n        <div className={this.addPrefix('row-expanded')} style={styles}>\n          {renderRowExpanded(rowData)}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  renderMouseArea() {\n    const headerHeight = this.getTableHeaderHeight();\n    const styles = { height: this.getTableHeight() };\n    const spanStyles = { height: headerHeight - 1 };\n\n    return (\n      <div ref={this.mouseAreaRef} className={this.addPrefix('mouse-area')} style={styles}>\n        <span style={spanStyles} />\n      </div>\n    );\n  }\n\n  renderTableHeader(headerCells: any[], rowWidth: number) {\n    const { affixHeader } = this.props;\n    const { width: tableWidth } = this.state;\n    const top = typeof affixHeader === 'number' ? affixHeader : 0;\n    const headerHeight = this.getTableHeaderHeight();\n    const rowProps: TableRowProps = {\n      rowRef: this.tableHeaderRef,\n      width: rowWidth,\n      height: this.getRowHeight(),\n      headerHeight,\n      isHeaderRow: true,\n      top: 0,\n    };\n\n    const fixedStyle: React.CSSProperties = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: this.getTableHeaderHeight(),\n      width: tableWidth,\n      top,\n    };\n\n    // Affix header\n    const header = (\n      <div\n        className={classNames(this.addPrefix('affix-header'))}\n        style={fixedStyle}\n        ref={this.affixHeaderWrapperRef}\n      >\n        {this.renderRow(rowProps, headerCells)}\n      </div>\n    );\n\n    return (\n      <React.Fragment>\n        {(affixHeader === 0 || affixHeader) && header}\n        <div className={this.addPrefix('header-row-wrapper')} ref={this.headerWrapperRef}>\n          {this.renderRow(rowProps, headerCells)}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  renderTableBody(bodyCells: any[], rowWidth: number) {\n    const {\n      rowExpandedHeight,\n      renderRowExpanded,\n      isTree,\n      rowKey,\n      wordWrap,\n      virtualized,\n      rowHeight,\n    } = this.props;\n\n    const headerHeight = this.getTableHeaderHeight();\n    const { tableRowsMaxHeight, isScrolling, data } = this.state;\n    const height = this.getTableHeight();\n    const bodyHeight = height - headerHeight;\n    const bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight,\n    };\n\n    let contentHeight = 0;\n    let topHideHeight = 0;\n    let bottomHideHeight = 0;\n\n    this._visibleRows = [];\n\n    if (data) {\n      let top = 0; // Row position\n      const minTop = Math.abs(this.scrollY);\n      // @ts-ignore\n      const maxTop = minTop + height + rowExpandedHeight;\n      const isCustomRowHeight = typeof rowHeight === 'function';\n      const isUncertainHeight = !!(renderRowExpanded || isCustomRowHeight || isTree);\n\n      /**\n       如果开启了 virtualized  同时 Table 中的的行高是可变的，\n       则需要循环遍历 data, 获取每一行的高度。\n       */\n      if ((isUncertainHeight && virtualized) || !virtualized) {\n        for (let index = 0; index < data.length; index++) {\n          const rowData = data[index];\n          const maxHeight = tableRowsMaxHeight[index];\n          const shouldRenderExpandedRow = this.shouldRenderExpandedRow(rowData);\n\n          let nextRowHeight = 0;\n          let depth = 0;\n\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(rowData);\n          } else {\n            nextRowHeight = maxHeight\n              ? Math.max(maxHeight + CELL_PADDING_HEIGHT, rowHeight)\n              : rowHeight;\n            if (shouldRenderExpandedRow) {\n              // @ts-ignore\n              nextRowHeight += rowExpandedHeight;\n            }\n          }\n\n          if (isTree) {\n            const parents = findAllParents(rowData, rowKey);\n            const expandedRowKeys = this.getExpandedRowKeys();\n            depth = parents.length;\n\n            // 树节点如果被关闭，则不渲染\n            // @ts-ignore\n            if (!shouldShowRowByExpanded(expandedRowKeys, parents)) {\n              continue;\n            }\n          }\n\n          contentHeight += nextRowHeight;\n\n          const rowProps = {\n            key: index,\n            top,\n            width: rowWidth,\n            depth,\n            height: nextRowHeight,\n          };\n\n          top += nextRowHeight;\n\n          if (virtualized && !wordWrap) {\n            if (top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n\n          this._visibleRows.push(\n            // @ts-ignore\n            this.renderRowData(bodyCells, rowData, rowProps, shouldRenderExpandedRow),\n          );\n        }\n      } else {\n        /**\n         如果 Table 的行高是固定的，则直接通过行高与行数进行计算，\n         减少遍历所有 data 带来的性能消耗\n         */\n        const nextRowHeight = this.getRowHeight();\n        const startIndex = Math.max(Math.floor(minTop / nextRowHeight), 0);\n        const endIndex = Math.min(startIndex + Math.ceil(bodyHeight / nextRowHeight), data.length);\n\n        contentHeight = data.length * nextRowHeight;\n        topHideHeight = startIndex * nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * nextRowHeight;\n\n        for (let index = startIndex; index < endIndex; index++) {\n          const rowData = data[index];\n          const rowProps = {\n            key: index,\n            top: index * nextRowHeight,\n            width: rowWidth,\n            height: nextRowHeight,\n          };\n          // @ts-ignore\n          this._visibleRows.push(this.renderRowData(bodyCells, rowData, rowProps, false));\n        }\n      }\n    }\n\n    const wheelStyles: React.CSSProperties = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined,\n    };\n    const topRowStyles = { height: topHideHeight };\n    const bottomRowStyles = { height: bottomHideHeight };\n\n    return (\n      <LocaleReceiver componentName=\"PerformanceTable\" defaultLocale={defaultLocale.PerformanceTable}>\n        {(locale: PerformanceTableLocal) => {\n          return (\n            <div\n          ref={this.tableBodyRef}\n          className={this.addPrefix('body-row-wrapper')}\n          style={bodyStyles}\n          onScroll={this.handleBodyScroll}\n        >\n          <div\n            style={wheelStyles}\n            className={this.addPrefix('body-wheel-area')}\n            ref={this.wheelWrapperRef}\n          >\n            {topHideHeight ? <Row style={topRowStyles} className=\"virtualized\" /> : null}\n            {this._visibleRows}\n            {bottomHideHeight ? <Row style={bottomRowStyles} className=\"virtualized\" /> : null}\n          </div>\n\n          {this.renderInfo(locale)}\n          {this.renderScrollbar()}\n          {this.renderLoading(locale)}\n        </div>\n          )\n        }}\n      </LocaleReceiver>\n    );\n  }\n\n  renderInfo(locale: PerformanceTableLocal) {\n    const { renderEmpty, loading } = this.props;\n    if (this._visibleRows.length || loading) {\n      return null;\n    }\n    const emptyMessage = <div className={this.addPrefix('body-info')}>{locale.emptyMessage}</div>;\n\n    return renderEmpty ? renderEmpty(emptyMessage) : emptyMessage;\n  }\n\n  renderScrollbar() {\n    const { disabledScroll, affixHorizontalScrollbar } = this.props;\n    const { contentWidth, contentHeight, width, fixedHorizontalScrollbar } = this.state;\n    const bottom = typeof affixHorizontalScrollbar === 'number' ? affixHorizontalScrollbar : 0;\n\n    const headerHeight = this.getTableHeaderHeight();\n    const height = this.getTableHeight();\n\n    if (disabledScroll) {\n      return null;\n    }\n\n    return (\n      <div>\n        <Scrollbar\n          className={classNames({ fixed: fixedHorizontalScrollbar })}\n          style={{ width, bottom: fixedHorizontalScrollbar ? bottom : undefined }}\n          length={this.state.width}\n          onScroll={this.handleScrollX}\n          scrollLength={contentWidth}\n          ref={this.scrollbarXRef}\n        />\n        <Scrollbar\n          vertical\n          length={height - headerHeight}\n          scrollLength={contentHeight}\n          onScroll={this.handleScrollY}\n          ref={this.scrollbarYRef}\n        />\n      </div>\n    );\n  }\n\n  /**\n   *  show loading\n   */\n  renderLoading(locale: PerformanceTableLocal) {\n    const {loading, loadAnimation, renderLoading } = this.props;\n\n    if (!loadAnimation && !loading) {\n      return null;\n    }\n\n    const loadingElement = (\n      <div className={this.addPrefix('loader-wrapper')}>\n        <div className={this.addPrefix('loader')}>\n          <i className={this.addPrefix('loader-icon')} />\n          <span className={this.addPrefix('loader-text')}>{locale.loading}</span>\n        </div>\n      </div>\n    );\n\n    return renderLoading ? renderLoading(loadingElement) : loadingElement;\n  }\n\n  render() {\n    const {\n      children,\n      columns,\n      className,\n      width = 0,\n      style,\n      isTree,\n      hover,\n      bordered,\n      cellBordered,\n      wordWrap,\n      classPrefix,\n      loading,\n      showHeader,\n      ...rest\n    } = this.props;\n\n    const { isColumnResizing } = this.state;\n    const { headerCells, bodyCells, allColumnsWidth, hasCustomTreeCol } = this.getCellDescriptor();\n    const rowWidth = allColumnsWidth > width ? allColumnsWidth : width;\n    const clesses = classNames(classPrefix, className, {\n      [this.addPrefix('word-wrap')]: wordWrap,\n      [this.addPrefix('treetable')]: isTree,\n      [this.addPrefix('bordered')]: bordered,\n      [this.addPrefix('cell-bordered')]: cellBordered,\n      [this.addPrefix('column-resizing')]: isColumnResizing,\n      [this.addPrefix('hover')]: hover,\n      [this.addPrefix('loading')]: loading,\n    });\n\n    const styles = {\n      width: width || 'auto',\n      height: this.getTableHeight(),\n      lineHeight: `${toPx(this.getRowHeight())}px`,\n      ...style,\n    };\n\n    const unhandled = getUnhandledProps(PerformanceTable, rest);\n\n    return (\n      <TableContext.Provider\n        value={{\n          // @ts-ignore\n          translateDOMPositionXY: this.translateDOMPositionXY,\n          rtl: this.isRTL(),\n          hasCustomTreeCol,\n        }}\n      >\n        <div {...unhandled} className={clesses} style={styles} ref={this.tableRef}>\n          {showHeader && this.renderTableHeader(headerCells, rowWidth)}\n          {columns && columns.length ? this.renderTableBody(bodyCells, rowWidth) : children && this.renderTableBody(bodyCells, rowWidth)}\n          {showHeader && this.renderMouseArea()}\n        </div>\n      </TableContext.Provider>\n    );\n  }\n}\n"]}