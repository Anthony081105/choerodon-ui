{"version":3,"sources":["util/PureRenderMixin.jsx"],"names":["shallowEqual","require","instance","ReactComponentWithPureRenderMixin","shouldComponentUpdate","shallowCompare","module"],"mappings":";AAAA;;;;;;;;;;;AAWA,IAAMA,YAAY,GAAGC,OAAO,CAA5B,gBAA4B,CAA5B;;AAEA,SAAA,cAAA,CAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAwD;AACtD,SAAO,CAACD,YAAY,CAACE,QAAQ,CAAT,KAAA,EAAb,SAAa,CAAb,IAA4C,CAACF,YAAY,CAACE,QAAQ,CAAT,KAAA,EAAhE,SAAgE,CAAhE;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAMC,iCAAiC,GAAG;AACxCC,EAAAA,qBADwC,EAAA,SAAA,qBAAA,CAAA,SAAA,EAAA,SAAA,EACI;AAC1C,WAAOC,cAAc,CAAA,IAAA,EAAA,SAAA,EAArB,SAAqB,CAArB;AACD;AAHuC,CAA1C;AAMAC,MAAM,CAANA,OAAAA,GAAAA,iCAAAA","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentWithPureRenderMixin\n */\n\nconst shallowEqual = require('lodash/isEqual');\n\nfunction shallowCompare(instance, nextProps, nextState) {\n  return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);\n}\n\n/**\n * If your React component's render function is \"pure\", e.g. it will render the\n * same result given the same props and state, provide this mixin for a\n * considerable performance boost.\n *\n * Most React components have pure render functions.\n *\n * Example:\n *\n *   var ReactComponentWithPureRenderMixin =\n *     require('ReactComponentWithPureRenderMixin');\n *   React.createClass({\n *     mixins: [ReactComponentWithPureRenderMixin],\n *\n *     render: function() {\n *       return <div className={this.props.className}>foo</div>;\n *     }\n *   });\n *\n * Note: This only checks shallow equality for props and state. If these contain\n * complex data structures this mixin may have false-negatives for deeper\n * differences. Only mixin to components which have simple props and state, or\n * use `forceUpdate()` when you know deep data structures have changed.\n *\n * See https://facebook.github.io/react/docs/pure-render-mixin.html\n */\nconst ReactComponentWithPureRenderMixin = {\n  shouldComponentUpdate(nextProps, nextState) {\n    return shallowCompare(this, nextProps, nextState);\n  },\n};\n\nmodule.exports = ReactComponentWithPureRenderMixin;\n"]}