37391eee87dfeaf15f1b80eeb9436caa
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.destroyFns = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _tslib = require("tslib");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _omit = _interopRequireDefault(require("lodash/omit"));

var _defer = _interopRequireDefault(require("lodash/defer"));

var _noop = _interopRequireDefault(require("lodash/noop"));

var _classnames = _interopRequireDefault(require("classnames"));

var _componentClasses = _interopRequireDefault(require("component-classes"));

var _UnitConvertor = require("choerodon-ui/lib/_util/UnitConvertor");

var _KeyCode = _interopRequireDefault(require("choerodon-ui/lib/_util/KeyCode"));

var _configure = require("choerodon-ui/lib/configure");

var _ViewComponent2 = _interopRequireDefault(require("../core/ViewComponent"));

var _icon = _interopRequireDefault(require("../icon"));

var _autobind = _interopRequireDefault(require("../_util/autobind"));

var _Button = _interopRequireDefault(require("../button/Button"));

var _EventManager = _interopRequireDefault(require("../_util/EventManager"));

var _isEmpty = _interopRequireDefault(require("../_util/isEmpty"));

var _AsyncComponent = _interopRequireDefault(require("../_util/AsyncComponent"));

var _message = _interopRequireDefault(require("../message"));

var _exception = _interopRequireDefault(require("../_util/exception"));

var _localeContext = require("../locale-context");

var _DataSetRequestError = _interopRequireDefault(require("../data-set/DataSetRequestError"));

var _utils = require("./utils");

var destroyFns = [];
exports.destroyFns = destroyFns;

var Modal =
/*#__PURE__*/
function (_ViewComponent) {
  (0, _inherits2["default"])(Modal, _ViewComponent);

  function Modal() {
    var _this;

    (0, _classCallCheck2["default"])(this, Modal);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Modal).apply(this, arguments));
    _this.moveEvent = new _EventManager["default"](typeof window === 'undefined' ? undefined : document);
    _this.okCancelEvent = new _EventManager["default"]();

    _this.saveCancelRef = function (node) {
      return _this.cancelButton = node;
    };

    _this.handleKeyDown = function (e) {
      var _assertThisInitialize = (0, _assertThisInitialized2["default"])(_this),
          cancelButton = _assertThisInitialize.cancelButton;

      if (cancelButton && !cancelButton.isDisabled() && e.keyCode === _KeyCode["default"].ESC) {
        cancelButton.handleClickWait(e);
      }
    };

    _this.registerOk = function (ok) {
      _this.okCancelEvent.removeEventListener('ok');

      _this.okCancelEvent.addEventListener('ok', ok);
    };

    _this.registerCancel = function (cancel) {
      _this.okCancelEvent.removeEventListener('cancel');

      _this.okCancelEvent.addEventListener('cancel', cancel);
    };

    _this.getDefaultFooter = function (okBtn, cancelBtn) {
      var _this$props = _this.props,
          okCancel = _this$props.okCancel,
          _this$props$okFirst = _this$props.okFirst,
          okFirst = _this$props$okFirst === void 0 ? (0, _configure.getConfig)('modalOkFirst') : _this$props$okFirst,
          drawer = _this$props.drawer;
      var buttons = [okBtn];

      if (okCancel) {
        if (okFirst || drawer) {
          buttons.push(cancelBtn);
        } else {
          buttons.unshift(cancelBtn);
        }
      }

      return _react["default"].createElement("div", null, buttons);
    };

    return _this;
  }

  (0, _createClass2["default"])(Modal, [{
    key: "getOtherProps",
    value: function getOtherProps() {
      var otherProps = (0, _omit["default"])((0, _get2["default"])((0, _getPrototypeOf2["default"])(Modal.prototype), "getOtherProps", this).call(this), ['closable', 'movable', 'maskClosable', 'maskStyle', 'mask', 'maskClassName', 'keyboardClosable', 'fullScreen', 'title', 'footer', 'close', 'update', 'okText', 'cancelText', 'okCancel', 'onClose', 'onOk', 'onCancel', 'destroyOnClose', 'drawer', 'afterClose', 'okProps', 'cancelProps', 'border', 'okFirst', 'drawerTransitionName']);

      if (this.props.keyboardClosable) {
        otherProps.autoFocus = true;
        otherProps.tabIndex = -1;
        otherProps.onKeyDown = this.handleKeyDown;
      }

      return otherProps;
    }
  }, {
    key: "getClassName",
    value: function getClassName() {
      var _get$call;

      var prefixCls = this.prefixCls,
          _this$props2 = this.props,
          _this$props2$style = _this$props2.style,
          style = _this$props2$style === void 0 ? {} : _this$props2$style,
          fullScreen = _this$props2.fullScreen,
          drawer = _this$props2.drawer,
          _this$props2$border = _this$props2.border,
          border = _this$props2$border === void 0 ? (0, _configure.getConfig)('modalSectionBorder') : _this$props2$border;
      return (0, _get2["default"])((0, _getPrototypeOf2["default"])(Modal.prototype), "getClassName", this).call(this, (_get$call = {}, (0, _defineProperty2["default"])(_get$call, "".concat(prefixCls, "-center"), !drawer && !('left' in style || 'right' in style) && !this.offset), (0, _defineProperty2["default"])(_get$call, "".concat(prefixCls, "-fullscreen"), fullScreen), (0, _defineProperty2["default"])(_get$call, "".concat(prefixCls, "-drawer"), drawer), (0, _defineProperty2["default"])(_get$call, "".concat(prefixCls, "-border"), border), _get$call));
    }
  }, {
    key: "render",
    value: function render() {
      var prefixCls = this.prefixCls;
      var header = this.getHeader();
      var body = this.getBody();
      var footer = this.getFooter();
      return _react["default"].createElement("div", (0, _extends2["default"])({}, this.getMergedProps()), _react["default"].createElement("div", {
        className: "".concat(prefixCls, "-content")
      }, header, body, footer));
    }
  }, {
    key: "componentWillUpdate",
    value: function componentWillUpdate(_ref) {
      var _this2 = this;

      var hidden = _ref.hidden;

      if (hidden === false && hidden !== this.props.hidden) {
        (0, _defer["default"])(function () {
          return _this2.focus();
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.moveEvent.clear();
      this.okCancelEvent.clear();
    }
  }, {
    key: "handleHeaderMouseDown",
    value: function handleHeaderMouseDown(downEvent) {
      var _this3 = this;

      var element = this.element;

      if (element) {
        var prefixCls = this.prefixCls;
        var clientX = downEvent.clientX,
            clientY = downEvent.clientY;
        var offsetLeft = element.offsetLeft,
            offsetTop = element.offsetTop;
        this.moveEvent.addEventListener('mousemove', function (moveEvent) {
          var moveX = moveEvent.clientX,
              moveY = moveEvent.clientY;
          (0, _componentClasses["default"])(element).remove("".concat(prefixCls, "-center"));
          var left = (0, _UnitConvertor.pxToRem)(Math.max(offsetLeft + moveX - clientX, 0));
          var top = (0, _UnitConvertor.pxToRem)(Math.max(offsetTop + moveY - clientY, 0));
          _this3.offset = [left, top];
          (0, _extends2["default"])(element.style, {
            left: left,
            top: top
          });
        }).addEventListener('mouseup', function () {
          _this3.moveEvent.clear();
        });
      }
    }
  }, {
    key: "handleOk",
    value: function () {
      var _handleOk = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee() {
        var _this$props$onOk, onOk, promise, _ref2, _ref3, ret1, ret2;

        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this$props$onOk = this.props.onOk, onOk = _this$props$onOk === void 0 ? _noop["default"] : _this$props$onOk;
                promise = Promise.all([onOk(), this.okCancelEvent.fireEvent('ok')]);
                _context.prev = 2;
                _context.next = 5;
                return promise;

              case 5:
                _ref2 = _context.sent;
                _ref3 = (0, _slicedToArray2["default"])(_ref2, 2);
                ret1 = _ref3[0];
                ret2 = _ref3[1];

                if (ret1 !== false && ret2) {
                  this.close();
                }

                _context.next = 16;
                break;

              case 12:
                _context.prev = 12;
                _context.t0 = _context["catch"](2);

                if (!(_context.t0 instanceof _DataSetRequestError["default"])) {
                  _message["default"].error((0, _exception["default"])(_context.t0));
                }

                throw _context.t0;

              case 16:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[2, 12]]);
      }));

      function handleOk() {
        return _handleOk.apply(this, arguments);
      }

      return handleOk;
    }()
  }, {
    key: "handleCancel",
    value: function () {
      var _handleCancel = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee2() {
        var _this$props$onCancel, onCancel, promise, _ref4, _ref5, ret1, ret2;

        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _this$props$onCancel = this.props.onCancel, onCancel = _this$props$onCancel === void 0 ? _noop["default"] : _this$props$onCancel;
                promise = Promise.all([onCancel(), this.okCancelEvent.fireEvent('cancel')]);
                _context2.prev = 2;
                _context2.next = 5;
                return promise;

              case 5:
                _ref4 = _context2.sent;
                _ref5 = (0, _slicedToArray2["default"])(_ref4, 2);
                ret1 = _ref5[0];
                ret2 = _ref5[1];

                if (ret1 !== false && ret2) {
                  this.close();
                }

                _context2.next = 16;
                break;

              case 12:
                _context2.prev = 12;
                _context2.t0 = _context2["catch"](2);

                if (!(_context2.t0 instanceof _DataSetRequestError["default"])) {
                  _message["default"].error((0, _exception["default"])(_context2.t0));
                }

                throw _context2.t0;

              case 16:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[2, 12]]);
      }));

      function handleCancel() {
        return _handleCancel.apply(this, arguments);
      }

      return handleCancel;
    }()
  }, {
    key: "getTitle",
    value: function getTitle() {
      var title = this.props.title,
          prefixCls = this.prefixCls;

      if (title) {
        return _react["default"].createElement("div", {
          className: "".concat(prefixCls, "-title")
        }, title);
      }
    }
  }, {
    key: "getHeader",
    value: function getHeader() {
      var prefixCls = this.prefixCls,
          _this$props3 = this.props,
          closable = _this$props3.closable,
          movable = _this$props3.movable,
          fullScreen = _this$props3.fullScreen,
          drawer = _this$props3.drawer;
      var title = this.getTitle();
      var buttons = this.getHeaderButtons();

      if (title || closable || movable) {
        var headerProps = {
          className: (0, _classnames["default"])("".concat(prefixCls, "-header"), (0, _defineProperty2["default"])({}, "".concat(prefixCls, "-movable"), movable && !fullScreen && !drawer))
        };

        if (movable && !fullScreen && !drawer) {
          headerProps.onMouseDown = this.handleHeaderMouseDown;
        }

        return _react["default"].createElement("div", (0, _extends2["default"])({}, headerProps), title, buttons);
      }
    }
  }, {
    key: "getHeaderButtons",
    value: function getHeaderButtons() {
      var prefixCls = this.prefixCls;
      var closeButton = this.getCloseButton();

      if (closeButton) {
        return _react["default"].createElement("div", {
          className: "".concat(prefixCls, "-header-buttons")
        }, closeButton);
      }
    }
  }, {
    key: "getCloseButton",
    value: function getCloseButton() {
      var prefixCls = this.prefixCls,
          closable = this.props.closable;

      if (closable) {
        return _react["default"].createElement("button", {
          type: "button",
          className: "".concat(prefixCls, "-header-button"),
          onClick: this.close
        }, _react["default"].createElement(_icon["default"], {
          type: "close"
        }));
      }
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(children) {
      if (children) {
        var prefixCls = this.prefixCls,
            props = this.props;
        var _props$close = props.close,
            close = _props$close === void 0 ? _noop["default"] : _props$close,
            _props$update = props.update,
            update = _props$update === void 0 ? _noop["default"] : _props$update;
        var modal = {
          close: close,
          update: update,
          props: props,
          handleOk: this.registerOk,
          handleCancel: this.registerCancel
        };
        return _react["default"].createElement("div", {
          className: "".concat(prefixCls, "-body")
        }, (0, _react.isValidElement)(children) ? (0, _react.cloneElement)(children, {
          modal: modal
        }) : children);
      }
    }
  }, {
    key: "getBody",
    value: function getBody() {
      var children = this.props.children;
      return this.renderChildren(typeof children === 'function' ? (0, _AsyncComponent["default"])(children) : children);
    }
  }, {
    key: "getFooter",
    value: function getFooter() {
      var _this$props4 = this.props,
          okProps = _this$props4.okProps,
          cancelProps = _this$props4.cancelProps,
          drawer = _this$props4.drawer,
          _this$props4$okText = _this$props4.okText,
          okText = _this$props4$okText === void 0 ? (0, _localeContext.$l)('Modal', 'ok') : _this$props4$okText,
          _this$props4$cancelTe = _this$props4.cancelText,
          cancelText = _this$props4$cancelTe === void 0 ? (0, _localeContext.$l)('Modal', 'cancel') : _this$props4$cancelTe,
          _this$props4$footer = _this$props4.footer,
          footer = _this$props4$footer === void 0 ? this.getDefaultFooter : _this$props4$footer;
      var funcType = drawer ? "raised"
      /* raised */
      : (0, _configure.getConfig)('buttonFuncType');

      var okBtn = _react["default"].createElement(_Button["default"], (0, _extends2["default"])({
        key: "ok",
        funcType: funcType,
        color: "primary"
        /* primary */
        ,
        onClick: this.handleOk
      }, okProps), okText);

      var cancelBtn = _react["default"].createElement(_Button["default"], (0, _extends2["default"])({
        key: "cancel",
        ref: this.saveCancelRef,
        funcType: funcType,
        onClick: this.handleCancel
      }, cancelProps), cancelText);

      if (typeof footer === 'function') {
        return this.getWrappedFooter(footer(okBtn, cancelBtn));
      }

      if (!(0, _isEmpty["default"])(footer, true)) {
        return this.getWrappedFooter(footer);
      }
    }
  }, {
    key: "getWrappedFooter",
    value: function getWrappedFooter(footer) {
      var prefixCls = this.prefixCls;
      var drawer = this.props.drawer;
      var className = (0, _classnames["default"])("".concat(prefixCls, "-footer"), (0, _defineProperty2["default"])({}, "".concat(prefixCls, "-footer-drawer"), !!drawer));
      return _react["default"].createElement("div", {
        className: className
      }, footer);
    }
  }, {
    key: "close",
    value: function close() {
      var _this$props$close = this.props.close,
          close = _this$props$close === void 0 ? _noop["default"] : _this$props$close;
      close();
    }
  }]);
  return Modal;
}(_ViewComponent2["default"]);

exports["default"] = Modal;
Modal.displayName = 'Modal';
Modal.propTypes = (0, _objectSpread2["default"])({}, _ViewComponent2["default"].propTypes, {
  closable: _propTypes["default"].bool,
  movable: _propTypes["default"].bool,
  fullScreen: _propTypes["default"].bool,
  maskClosable: _propTypes["default"].bool,
  maskStyle: _propTypes["default"].object,
  mask: _propTypes["default"].bool,
  maskClassName: _propTypes["default"].string,
  keyboardClosable: _propTypes["default"].bool,
  footer: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].node, _propTypes["default"].bool]),
  destroyOnClose: _propTypes["default"].bool,
  okText: _propTypes["default"].node,
  cancelText: _propTypes["default"].node,
  okProps: _propTypes["default"].object,
  cancelProps: _propTypes["default"].object,
  onClose: _propTypes["default"].func,
  onOk: _propTypes["default"].func,
  onCancel: _propTypes["default"].func,
  afterClose: _propTypes["default"].func,
  okCancel: _propTypes["default"].bool,
  drawer: _propTypes["default"].bool,
  // title: PropTypes.node,
  // 此处原本允许title传入node，但是类型为PropTypes.node时无法正确继承ViewComponent
  // 父类中的title指的是HTML元素的title属性，此处title指modal标题，产生歧义，暂时设置为string
  // TODO: 添加modalTitle属性替代此处的title
  title: _propTypes["default"].string,
  okFirst: _propTypes["default"].bool
});
Modal.defaultProps = {
  suffixCls: _utils.suffixCls,
  closable: false,
  movable: true,
  maskClosable: false,
  mask: true,
  keyboardClosable: true,
  okCancel: true,
  destroyOnClose: true,
  fullScreen: false,
  drawer: false,
  autoFocus: true
};
(0, _tslib.__decorate)([_autobind["default"]], Modal.prototype, "handleHeaderMouseDown", null);
(0, _tslib.__decorate)([_autobind["default"]], Modal.prototype, "handleOk", null);
(0, _tslib.__decorate)([_autobind["default"]], Modal.prototype, "handleCancel", null);
(0, _tslib.__decorate)([_autobind["default"]], Modal.prototype, "close", null);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,