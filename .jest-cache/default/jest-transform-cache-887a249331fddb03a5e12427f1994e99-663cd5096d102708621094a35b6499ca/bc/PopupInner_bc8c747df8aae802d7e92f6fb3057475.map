{"version":3,"sources":["trigger/PopupInner.jsx"],"names":["PopupInner","Component","hiddenClassName","PropTypes","className","prefixCls","onMouseEnter","onMouseLeave","children","any","props","style","hidden"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;;IAEqBA,U;;;;;;;;;;;;6BAUV;AACP,UAAMU,KAAK,GAAG,KAAd,KAAA;AACA,UAAIN,SAAS,GAAGM,KAAK,CAArB,SAAA;;AACA,UAAIA,KAAK,CAAT,MAAA,EAAkB;AAChBN,QAAAA,SAAS,IAAA,IAAA,MAAA,CAAQM,KAAK,CAAtBN,eAAS,CAATA;AACD;;AACD,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,SAAS,EADX,SAAA;AAEE,QAAA,YAAY,EAAEM,KAAK,CAFrB,YAAA;AAGE,QAAA,YAAY,EAAEA,KAAK,CAHrB,YAAA;AAIE,QAAA,KAAK,EAAEA,KAAK,CAACC;AAJf,OAAA,EAME,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,cAAA,CAAD,SAAC,CAAD,EAAA;AAAe,QAAA,SAAS,EAAA,GAAA,MAAA,CAAKD,KAAK,CAAV,SAAA,EAAxB,UAAwB,CAAxB;AAAwD,QAAA,MAAM,EAAEA,KAAK,CAACE;AAAtE,OAAA,EACGF,KAAK,CARZ,QAOI,CANF,CADF;AAYD;;;EA5BqCT,MAAAA,CAAAA,S;;;iCAAnBD,U,eACA;AACjBE,EAAAA,eAAe,EAAEC,UAAAA,CAAAA,SAAAA,CAAAA,CADA,MAAA;AAEjBC,EAAAA,SAAS,EAAED,UAAAA,CAAAA,SAAAA,CAAAA,CAFM,MAAA;AAGjBE,EAAAA,SAAS,EAAEF,UAAAA,CAAAA,SAAAA,CAAAA,CAHM,MAAA;AAIjBG,EAAAA,YAAY,EAAEH,UAAAA,CAAAA,SAAAA,CAAAA,CAJG,IAAA;AAKjBI,EAAAA,YAAY,EAAEJ,UAAAA,CAAAA,SAAAA,CAAAA,CALG,IAAA;AAMjBK,EAAAA,QAAQ,EAAEL,UAAAA,CAAAA,SAAAA,CAAAA,CAAUM;AANH,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LazyRenderBox from './LazyRenderBox';\n\nexport default class PopupInner extends Component {\n  static propTypes = {\n    hiddenClassName: PropTypes.string,\n    className: PropTypes.string,\n    prefixCls: PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    children: PropTypes.any,\n  };\n\n  render() {\n    const props = this.props;\n    let className = props.className;\n    if (props.hidden) {\n      className += ` ${props.hiddenClassName}`;\n    }\n    return (\n      <div\n        className={className}\n        onMouseEnter={props.onMouseEnter}\n        onMouseLeave={props.onMouseLeave}\n        style={props.style}\n      >\n        <LazyRenderBox className={`${props.prefixCls}-content`} hidden={props.hidden}>\n          {props.children}\n        </LazyRenderBox>\n      </div>\n    );\n  }\n}\n"]}