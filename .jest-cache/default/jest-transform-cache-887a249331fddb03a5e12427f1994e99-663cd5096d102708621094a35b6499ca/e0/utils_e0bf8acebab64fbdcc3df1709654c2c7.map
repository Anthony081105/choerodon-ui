{"version":3,"sources":["form/utils.js"],"names":["defaultLabelWidth","defaultLabelLayout","defaultColumns","FIELD_SUFFIX","labelWidths","labelWidth","props","name","field","record","dataSet","fieldProperty"],"mappings":";;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;;AACO,IAAMA,iBAAiB,GAAvB,GAAA;;AACA,IAAMC,kBAAkB,GAAG;AAAa;AAAxC;;AACA,IAAMC,cAAc,GAApB,CAAA;;AACA,IAAMC,YAAY,GAAlB,OAAA;;;AACA,SAAA,mBAAA,CAAA,UAAA,EAAA,OAAA,EAAkD;AACrD,MAAI,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,EAAJ,UAAI,CAAJ,EAA0B;AACtB,WAAO,IAAA,KAAA,CAAA,OAAA,EAAA,IAAA,CAAP,UAAO,CAAP;AACH;;AACD,MAAMC,WAAW,GAAG,IAAA,KAAA,CAAA,OAAA,EAAA,IAAA,CAApB,iBAAoB,CAApB;AACAC,EAAAA,UAAU,CAAVA,KAAAA,CAAAA,CAAAA,EAAAA,OAAAA,EAAAA,OAAAA,CAAqC,UAAA,KAAA,EAAA,KAAA,EAAA;AAAA,WAAmBD,WAAW,CAAXA,KAAW,CAAXA,GAAnB,KAAA;AAArCC,GAAAA;AACA,SAAA,WAAA;AACH;;AACM,SAAA,WAAA,CAAA,KAAA,EAAA,GAAA,EAAA,OAAA,EAAA,MAAA,EAAkD;AACrD,MAAIC,KAAK,CAAT,GAAS,CAAT,EAAgB;AACZ,WAAOA,KAAK,CAAZ,GAAY,CAAZ;AACH;;AAHoD,MAI7CC,IAJ6C,GAIpCD,KAJoC,CAAA,IAAA;AAKrD,MAAME,KAAK,GAAGC,MAAM,GAAGA,MAAM,CAANA,QAAAA,CAAH,IAAGA,CAAH,GAA2BC,OAAO,IAAIA,OAAO,CAAPA,QAAAA,CAA1D,IAA0DA,CAA1D;;AACA,MAAA,KAAA,EAAW;AACP,QAAMC,aAAa,GAAGH,KAAK,CAALA,GAAAA,CAAtB,GAAsBA,CAAtB;;AACA,QAAA,aAAA,EAAmB;AACf,aAAA,aAAA;AACH;AACJ;AACJ","sourcesContent":["import isNumber from 'lodash/isNumber';\nexport const defaultLabelWidth = 100;\nexport const defaultLabelLayout = \"horizontal\" /* horizontal */;\nexport const defaultColumns = 1;\nexport const FIELD_SUFFIX = 'field';\nexport function normalizeLabelWidth(labelWidth, columns) {\n    if (isNumber(labelWidth)) {\n        return new Array(columns).fill(labelWidth);\n    }\n    const labelWidths = new Array(columns).fill(defaultLabelWidth);\n    labelWidth.slice(0, columns).forEach((width, index) => (labelWidths[index] = width));\n    return labelWidths;\n}\nexport function getProperty(props, key, dataSet, record) {\n    if (props[key]) {\n        return props[key];\n    }\n    const { name } = props;\n    const field = record ? record.getField(name) : dataSet && dataSet.getField(name);\n    if (field) {\n        const fieldProperty = field.get(key);\n        if (fieldProperty) {\n            return fieldProperty;\n        }\n    }\n}\n"]}