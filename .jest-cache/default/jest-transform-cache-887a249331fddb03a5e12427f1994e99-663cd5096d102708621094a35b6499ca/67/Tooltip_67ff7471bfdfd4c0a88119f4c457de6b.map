{"version":3,"sources":["Tooltip.jsx"],"names":["Tooltip","props","arrowContent","overlay","prefixCls","id","node","trigger","getPopupDomNode","overlayClassName","mouseEnterDelay","mouseLeaveDelay","overlayStyle","children","onVisibleChange","afterVisibleChange","transitionName","animation","placement","align","destroyTooltipOnHide","defaultVisible","getTooltipContainer","restProps","extraProps","popupVisible","visible","saveTrigger","getPopupElement","placements","Component","PropTypes","any","bool","string","oneOfType","object","func","isRequired","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Trigger from '../trigger';\nimport { placements } from './placements';\n\nclass Tooltip extends Component {\n  static propTypes = {\n    trigger: PropTypes.any,\n    children: PropTypes.any,\n    defaultVisible: PropTypes.bool,\n    visible: PropTypes.bool,\n    placement: PropTypes.string,\n    transitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animation: PropTypes.any,\n    onVisibleChange: PropTypes.func,\n    afterVisibleChange: PropTypes.func,\n    overlay: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    overlayStyle: PropTypes.object,\n    overlayClassName: PropTypes.string,\n    prefixCls: PropTypes.string,\n    mouseEnterDelay: PropTypes.number,\n    mouseLeaveDelay: PropTypes.number,\n    getTooltipContainer: PropTypes.func,\n    destroyTooltipOnHide: PropTypes.bool,\n    align: PropTypes.object,\n    arrowContent: PropTypes.any,\n    id: PropTypes.string,\n  };\n\n  static defaultProps = {\n    prefixCls: 'rc-tooltip',\n    mouseEnterDelay: 0,\n    destroyTooltipOnHide: false,\n    mouseLeaveDelay: 0.1,\n    align: {},\n    placement: 'right',\n    trigger: ['hover'],\n    arrowContent: null,\n  };\n\n  getPopupElement = () => {\n    const { arrowContent, overlay, prefixCls, id } = this.props;\n    return [\n      <div className={`${prefixCls}-arrow`} key=\"arrow\">\n        {arrowContent}\n      </div>,\n      <div className={`${prefixCls}-inner`} key=\"content\" id={id}>\n        {typeof overlay === 'function' ? overlay() : overlay}\n      </div>,\n    ];\n  };\n\n  getPopupDomNode() {\n    return this.trigger.getPopupDomNode();\n  }\n\n  saveTrigger = node => {\n    this.trigger = node;\n  };\n\n  render() {\n    const {\n      overlayClassName,\n      trigger,\n      mouseEnterDelay,\n      mouseLeaveDelay,\n      overlayStyle,\n      prefixCls,\n      children,\n      onVisibleChange,\n      afterVisibleChange,\n      transitionName,\n      animation,\n      placement,\n      align,\n      destroyTooltipOnHide,\n      defaultVisible,\n      getTooltipContainer,\n      ...restProps\n    } = this.props;\n    const extraProps = { ...restProps };\n    if ('visible' in this.props) {\n      extraProps.popupVisible = this.props.visible;\n    }\n    return (\n      <Trigger\n        popupClassName={overlayClassName}\n        ref={this.saveTrigger}\n        prefixCls={prefixCls}\n        popup={this.getPopupElement}\n        action={trigger}\n        builtinPlacements={placements}\n        popupPlacement={placement}\n        popupAlign={align}\n        getPopupContainer={getTooltipContainer}\n        onPopupVisibleChange={onVisibleChange}\n        afterPopupVisibleChange={afterVisibleChange}\n        popupTransitionName={transitionName}\n        popupAnimation={animation}\n        defaultPopupVisible={defaultVisible}\n        destroyPopupOnHide={destroyTooltipOnHide}\n        mouseLeaveDelay={mouseLeaveDelay}\n        popupStyle={overlayStyle}\n        mouseEnterDelay={mouseEnterDelay}\n        {...extraProps}\n      >\n        {children}\n      </Trigger>\n    );\n  }\n}\n\nexport default Tooltip;\n"]}