{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/upload/Upload.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { action, observable, runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport omit from 'lodash/omit';\nimport uniqBy from 'lodash/uniqBy';\nimport { T } from 'choerodon-ui/lib/upload/utils';\nimport isEmpty from 'lodash/isEmpty';\nimport Button from '../button/Button';\nimport { ButtonColor } from '../button/enum';\nimport autobind from '../_util/autobind';\nimport { FormField, FormFieldProps } from '../field/FormField';\nimport Icon from '../icon';\nimport message from '../message';\nimport Modal from '../modal';\nimport { UploadFile } from './interface';\nimport UploadList from './UploadList';\nimport Tooltip from '../tooltip/Tooltip';\nimport { $l } from '../locale-context';\nimport isIE from '../_util/isIE';\n\n/**\n * 把XMLHttpRequest对象的返回信息转化为字符串\n *\n * @param {XMLHttpRequest} xhr\n * @returns {string}\n * @memberof Upload\n */\nfunction getResponse(xhr: XMLHttpRequest): string {\n  const res = xhr.responseText || xhr.response;\n  if (!res) {\n    return res;\n  }\n\n  try {\n    return JSON.parse(res).message;\n  } catch (e) {\n    return '';\n  }\n}\n\nexport interface UploadProps extends FormFieldProps {\n  /**\n   *  可接受的上传文件类型\n   */\n  accept?: string[];\n  /**\n   * 上传文件路径\n   */\n  action: string;\n  /**\n   * 上传所需参数或者返回上传参数的方法\n   */\n  data?: object | Function;\n  /**\n   * 设置上传的请求头部\n   */\n  headers?: any;\n  /**\n   * 是否支持多选文件\n   */\n  multiple?: boolean;\n  /**\n   * 是否在选择文件后立即上传\n   *\n   * @type {boolean}\n   * @memberof UploadProps\n   */\n  uploadImmediately?: boolean;\n  /**\n   * 组件右上角的帮助信息\n   *\n   * @type {ReactNode}\n   * @memberof UploadProps\n   */\n  extra?: ReactNode;\n  /**\n   * input元素内已选择文件变化的回调\n   *\n   * @memberof UploadProps\n   */\n  onFileChange?: (fileList: UploadFile[]) => void;\n  /**\n   * 上传之前的回调\n   *\n   * @memberof UploadProps\n   */\n  beforeUpload?: (file: UploadFile, FileList: UploadFile[]) => boolean | PromiseLike<void>;\n  /**\n   * 删除后的回调\n   *\n   * @memberof UploadProps\n   */\n  onRemoveFile?: (file: UploadFile) => void | boolean | Promise<void | boolean>;\n  /**\n   * 上传进度变化的回调\n   *\n   * @memberof UploadProps\n   */\n  onUploadProgress?: (percent: number, file: UploadFile) => void;\n  /**\n   * 上传成功的回调\n   *\n   * @memberof UploadProps\n   */\n  onUploadSuccess?: (response: any, file: UploadFile) => void;\n  /**\n   * 上传出错的回调\n   *\n   * @memberof UploadProps\n   */\n  onUploadError?: (error: Error, response: any, file: UploadFile) => void;\n  /**\n   * 文件上传队列的最大长度，0表示不限制\n   *\n   * @type {number}\n   * @memberof UploadProps\n   */\n  fileListMaxLength?: number;\n  /**\n   * 控制图片预览的配置对象\n   *\n   * @type {boolean}\n   * @memberof UploadProps\n   */\n  showPreviewImage?: boolean;\n  /**\n   * 预览图片的宽度\n   *\n   * @type {number}\n   * @memberof UploadProps\n   */\n  previewImageWidth?: number;\n  /**\n   * 是否显示上传按钮\n   *\n   * @type {boolean}\n   * @memberof UploadProps\n   */\n  showUploadBtn?: boolean;\n  /**\n   * 是否显示上传列表\n   *\n   * @type {boolean}\n   * @memberof UploadProps\n   */\n  showUploadList?: boolean;\n  /**\n   * 默认显示的上传列表\n   *\n   * @type {array}\n   * @memberof UploadProps\n   */\n  defaultFileList?: Array<UploadFile>;\n  /**\n   * 已经上传的列表\n   *\n   * @type {array}\n   * @memberof UploadProps\n   */\n  uploadFileList?: Array<UploadFile>;\n  /**\n   * 上传请求时是否携带 cookie\n   *\n   * @type {boolean}\n   * @memberof UploadProps\n   */\n  withCredentials?: boolean;\n  /**\n   * 是否以追加形式添加文件至列表中\n   *\n   * @type {boolean}\n   * @memberof UploadProps\n   */\n  appendUpload?: boolean;\n  /**\n   * 是否每次上传全部文件\n   *\n   * @type {boolean}\n   * @memberof UploadProps\n   */\n  partialUpload?: boolean;\n}\n\n@observer\nexport default class Upload extends FormField<UploadProps> {\n  static displayName = 'Upload';\n\n  static propTypes = {\n    /**\n     * 可接受的上传文件类型\n     * 可选值: MIME类型字符串组成的数组\n     */\n    accept: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * 上传文件路径\n     */\n    action: PropTypes.string,\n    /**\n     * 上传所需参数或者返回上传参数的方法\n     * @default\n     * {}\n     */\n    data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    /**\n     * 设置上传的请求头部\n     * @default\n     * {}\n     */\n    headers: PropTypes.object,\n    /**\n     * 是否支持多选文件\n     * @default\n     * false\n     */\n    multiple: PropTypes.bool,\n    uploadImmediately: PropTypes.bool,\n    fileListMaxLength: PropTypes.number,\n    showPreviewImage: PropTypes.bool,\n    previewImageWidth: PropTypes.number,\n    extra: PropTypes.any,\n    onFileChange: PropTypes.func,\n    beforeUpload: PropTypes.func,\n    onRemoveFile: PropTypes.func,\n    onUploadProgress: PropTypes.func,\n    onUploadSuccess: PropTypes.func,\n    onUploadError: PropTypes.func,\n    showUploadBtn: PropTypes.bool,\n    showUploadList: PropTypes.bool,\n    uploadFileList: PropTypes.array,\n    withCredentials: PropTypes.bool,\n    appendUpload: PropTypes.bool,\n    partialUpload: PropTypes.bool,\n    ...FormField.propTypes,\n  };\n\n  static defaultProps = {\n    ...FormField.defaultProps,\n    suffixCls: 'upload',\n    multiple: false,\n    headers: {},\n    data: {},\n    action: '',\n    name: 'file',\n    withCredentials: false,\n    appendUpload: false,\n    partialUpload: true,\n    uploadImmediately: true,\n    fileListMaxLength: 0,\n    showPreviewImage: true,\n    previewImageWidth: 100,\n    showUploadBtn: true,\n    showUploadList: true,\n    beforeUpload: T,\n    onUploadSuccess: () => message.success($l('Upload', 'upload_success')),\n    onUploadError: () => message.error($l('Upload', 'upload_failure')),\n  };\n\n  /**\n   * 保存上传的文件对象\n   *\n   * 若直接传递，浏览器会认为它是Mobx对象，因此有时需要手动复制并传值调用\n   *\n   * @type {UploadFile[]}\n   * @memberof Upload\n   */\n  @observable fileList: UploadFile[];\n\n  /**\n   * 原生<input>元素的引用\n   *\n   * @private\n   * @type {HTMLInputElement}\n   * @memberof Upload\n   */\n  private nativeInputElement: HTMLInputElement;\n\n  constructor(props, context) {\n    super(props, context);\n    runInAction(() => {\n      this.fileList = props.uploadFileList || props.defaultFileList || [];\n    });\n  }\n\n  @action\n  componentWillReceiveProps(nextProps) {\n    const { uploadFileList } = nextProps;\n    if (uploadFileList !== this.fileList && uploadFileList !== undefined) {\n      this.fileList = uniqBy(uploadFileList, (item: UploadFile) => item.uid);\n    }\n  }\n\n  getOtherProps() {\n    const otherProps = omit(super.getOtherProps(), [\n      'accept',\n      'action',\n      'data',\n      'header',\n      'multiple',\n      'onChange',\n      'ref',\n      'uploadImmediately',\n      'fileListMaxLength',\n      'showPreviewImage',\n      'previewImageWidth',\n      'showUploadBtn',\n      'showUploadList',\n      'onRemoveFile',\n      'onUploadSuccess',\n      'onUploadError',\n      'onFileChange',\n      'beforeUpload',\n      'withCredentials',\n      'partialUpload',\n      'appendUpload',\n      'uploadFileList',\n    ]);\n    return otherProps;\n  }\n\n  saveNativeInputElement = elem => (this.nativeInputElement = elem);\n\n  /**\n   * 传递包装按钮的点击事件\n   *\n   */\n  handleWrapperBtnClick = () => {\n    this.nativeInputElement.click();\n  };\n\n  render() {\n    const {\n      prefixCls,\n      props: {\n        action: formAction,\n        children,\n        multiple,\n        accept,\n        name = 'file', // <-- convince ts\n        uploadImmediately,\n        showPreviewImage,\n        previewImageWidth,\n        showUploadBtn,\n        showUploadList,\n        extra,\n      },\n    } = this;\n\n    const uploadProps = {\n      multiple,\n      accept: accept ? accept.join(',') : undefined,\n      action: formAction,\n      name,\n      type: 'file',\n      ref: this.saveNativeInputElement,\n      onChange: this.handleChange,\n      ...this.getOtherProps(),\n    };\n\n    const inputWrapperBtn = [\n      <Button key=\"upload-btn\" onClick={this.handleWrapperBtnClick}>\n        <Icon type=\"insert_drive_file\" />\n        <span>{children || $l('Upload', 'file_selection')}</span>\n      </Button>,\n      <input key=\"upload\" {...uploadProps} hidden />,\n    ];\n\n    const uploadBtn = (\n      <Tooltip title={$l('Upload', 'click_to_upload')} placement=\"right\">\n        <Button color={ButtonColor.primary} onClick={this.handleUploadBtnClick}>\n          <Icon type=\"file_upload\" />\n        </Button>\n      </Tooltip>\n    );\n\n    /**\n     * to solve the ie11 dispaly inline-block with the button cause unaligned\n     */\n    const IeStyle = isIE() ? {display: '-ms-inline-flexbox'} : {} ;\n\n    return (\n      <div className={`${prefixCls}`} style={IeStyle}>\n        <div className=\"flex-wrapper\">\n          <div className={`${prefixCls}-select`}>\n            {inputWrapperBtn}\n            {!uploadImmediately && showUploadBtn ? uploadBtn : null}\n          </div>\n          <div>{extra}</div>\n        </div>\n        {showUploadList ? (\n          <UploadList\n            previewImageWidth={previewImageWidth as number}\n            showPreviewImage={showPreviewImage as boolean}\n            items={[...this.fileList]}\n            remove={this.handleRemove}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  handleUploadBtnClick = () => {\n    this.startUpload();\n  };\n\n  /**\n   * 文件上传前的回调\n   *\n   * @param {UploadFile}\n   * @param {UploadFile[]}\n   * @memberof Upload\n   */\n  beforeUpload = (file: UploadFile, fileList: UploadFile[]) => {\n    const { beforeUpload } = this.props;\n    if (!beforeUpload) {\n      return true;\n    }\n    const result = beforeUpload(file, fileList);\n    if (result === false) {\n      this.removeFileItem(file);\n      return false;\n    }\n    if (result && (result as PromiseLike<any>).then) {\n      return result;\n    }\n    return true;\n  };\n\n  startUpload = () => {\n    const fileList = [...this.fileList];\n    if (fileList.length) {\n      // <-- 当有文件时才上传\n      this.uploadFiles(fileList);\n      // this.nativeInputElement.value = '';\n    } else {\n      Modal.error($l('Upload', 'no_file'));\n    }\n  };\n\n  /**\n   * 处理<input type=\"file\">元素的change事件，\n   * 主要是取出事件对象中的files对象并传递给uploadFiles方法\n   *\n   * @param {*} e <input>元素的change事件对象\n   * @memberof Upload\n   */\n  @autobind\n  @action\n  handleChange(e: any) {\n    if (e.target.value === '') {\n      return;\n    }\n    const { appendUpload, defaultFileList, uploadFileList } = this.props;\n    const fileList = e.target.files;\n    const files: any = Array.from(fileList).slice(0);\n    const tempFileList =\n      appendUpload || defaultFileList || uploadFileList ? this.fileList.slice() : [];\n    const fileBuffer: UploadFile[] = [];\n    files.forEach((file: UploadFile, index: number) => {\n      file.uid = this.getUid(index);\n      file.url = URL.createObjectURL(file);\n      const res = this.beforeUpload(file, files);\n      if (!res) {\n        return;\n      }\n      fileBuffer.push(file);\n    });\n    this.fileList = [...tempFileList, ...fileBuffer];\n    const { uploadImmediately, onFileChange } = this.props;\n    e.target.value = '';\n    if (uploadImmediately) {\n      if(!isEmpty(fileBuffer)) {\n        this.uploadFiles(this.fileList);\n      }\n    }\n    if (onFileChange) {\n      onFileChange(this.fileList.slice());\n    }\n  }\n\n  /**\n   * 分别上传fileList中的每个文件对象\n   *\n   * @param {UploadFile[]} fileList 文件对象数组\n   * @returns {void}\n   * @memberof Upload\n   */\n  @autobind\n  @action\n  uploadFiles(fileList: UploadFile[]): void {\n    const {\n      action: formAction,\n      accept,\n      fileListMaxLength = 0, // <-- convince ts\n      partialUpload,\n    } = this.props;\n    if (!formAction) {\n      Modal.error($l('Upload', 'upload_path_unset'));\n      return;\n    }\n\n    if (!this.isAcceptFiles(fileList)) {\n      Modal.error($l('Upload', 'not_acceptable_prompt') + accept!.join(','));\n      return;\n    }\n    if (fileListMaxLength !== 0 && this.fileList.length > fileListMaxLength) {\n      Modal.error(`${$l('Upload', 'file_list_max_length')}: ${fileListMaxLength}`);\n      return;\n    }\n    const files = partialUpload\n      ? Array.from(fileList)\n          .slice(0)\n          .filter(item => !item.status || item.status !== 'success')\n      : Array.from(fileList).slice(0);\n    const that = this;\n    if (!files.length) {\n      message.info($l('Upload', 'been_uploaded'));\n    }\n    files.forEach((file: UploadFile, index: number) => {\n      file.uid = this.getUid(index);\n      setTimeout(() => {\n        that.upload(file);\n      }, 0);\n    });\n  }\n\n  /**\n   * 上传每个文件对象\n   *\n   * @param {*} file\n   * @returns {void}\n   * @memberof Upload\n   */\n  /* istanbul ignore next */\n  @autobind\n  @action\n  upload(file: any): void {\n    const {\n      data,\n      action: formAction,\n      headers,\n      name: filename,\n      withCredentials: xhrWithCredentials,\n    } = this.props;\n    if (typeof XMLHttpRequest === 'undefined') {\n      return;\n    }\n    const xhr = new XMLHttpRequest();\n    const formData = new FormData();\n\n    // 修改文件状态，方便UploadList判断是否展示进度条\n    file.status = 'uploading';\n    if (xhr.upload) {\n      xhr.upload.onprogress = e => {\n        let percent = 0;\n        if (e.total > 0) {\n          percent = (e.loaded / e.total) * 100;\n        }\n        this.handleProgress(percent, file);\n      };\n    }\n    if (data) {\n      const newData = typeof data === 'function' ? data(file) : data;\n      Object.keys(newData).forEach(key => formData.append(key, newData[key]));\n    }\n    // TODO: `filename` default value needs better implementation\n    formData.append(filename || 'file', file);\n    const errorMsg = `cannot post ${formAction} ${xhr.status}`;\n    if (xhrWithCredentials && 'withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n    xhr.open('post', formAction, true);\n    xhr.onload = () => {\n      // 以二开头的状态码都认为是成功，暂定？\n      const isSuccessful = xhr.status.toString().startsWith('2');\n      if (isSuccessful) {\n        this.handleSuccess(xhr.status, xhr.response, file);\n      } else {\n        this.handleError(new Error(errorMsg), getResponse(xhr), xhr.response, file);\n      }\n    };\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    if (headers !== undefined) {\n      Object.keys(headers).forEach(key => {\n        if ({}.hasOwnProperty.call(headers, key)) {\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      });\n    }\n    xhr.send(formData);\n    xhr.onerror = () => {\n      this.handleError(new Error(errorMsg), getResponse(xhr), xhr.response, file);\n    };\n    xhr.ontimeout = () => {\n      const timeoutMsg = `The request post for ${action} timed out`;\n      this.handleError(new Error(timeoutMsg), getResponse(xhr), xhr.response, file);\n    };\n  }\n\n  /**\n   * 处理上传成功的函数，根据结果设置文件对象的状态，\n   * 用于在UploadList中的展示\n   *\n   * @param {number} status HTTP状态码\n   * @param {string} response 响应对象\n   * @param {UploadFile} file 文件对象\n   * @returns\n   */\n  @action\n  handleSuccess(status: number, response: any, file: UploadFile) {\n    const targetItem = this.getFileItem(file);\n    if (targetItem) {\n      const { onUploadSuccess } = this.props;\n      targetItem.status = status === 200 ? 'success' : 'done';\n      targetItem.response = response;\n      if (onUploadSuccess) {\n        onUploadSuccess(response, file);\n      }\n      this.forceUpdate();\n    }\n  }\n\n  /**\n   * 处理上传进度变化的函数，更新文件对象中的percent值，\n   * 用于在UploadList中展示\n   *\n   * @param {number} percent 上传百分比\n   * @param {UploadFile} file 文件对象\n   * @returns\n   */\n  @action\n  handleProgress(percent: number, file: UploadFile) {\n    const { onUploadProgress } = this.props;\n    const targetItem = this.getFileItem(file);\n    if (targetItem) {\n      targetItem.percent = percent;\n      if (onUploadProgress) {\n        onUploadProgress(percent, file);\n      }\n      this.forceUpdate();\n    }\n  }\n\n  /**\n   * 处理上传出错的函数，用于设置文件对象的status值，\n   *\n   * @param {Error} error 错误对象\n   * @param {string} responseText 处理成字符串的响应对象\n   * @param {UploadFile} file 文件对象\n   * @returns\n   */\n  @action\n  handleError(error: Error, responseText: string, response: any, file: UploadFile) {\n    const { onUploadError } = this.props;\n    const targetItem = this.getFileItem(file);\n    if (targetItem) {\n      targetItem.status = 'error';\n      targetItem.error = error;\n      targetItem.response = responseText;\n      if (onUploadError) {\n        onUploadError(error, response, file);\n      }\n      this.forceUpdate();\n    }\n  }\n\n  @action\n  handleRemove = (file: UploadFile) => {\n    // this.removeFileItem(file);\n    // this.upload.abort(file);\n    file.status = 'removed';\n    this.handleOnRemove(file);\n  };\n\n  handleOnRemove(file: UploadFile) {\n    const { onRemoveFile } = this.props;\n    Promise.resolve(typeof onRemoveFile === 'function' ? onRemoveFile(file) : onRemoveFile).then(\n      ret => {\n        if (ret === false) {\n          return;\n        }\n        this.removeFileItem(file);\n      },\n    );\n  }\n\n  /**\n   * 判断文件后缀名是否合格\n   * this.props.accept值为falsy时返回true，否则正常判断\n   *\n   * @param {UploadFile[]} fileList 文件对象数组\n   * @returns {boolean}\n   * @memberof Upload\n   */\n  isAcceptFiles(fileList: UploadFile[]): boolean {\n    const { accept } = this.props;\n    if (!accept) {\n      return true;\n    }\n    const acceptTypes = accept.map(type => {\n      type = type.replace(/\\./g, '\\\\.');\n      type = type.replace(/\\*/g, '.*');\n      return new RegExp(type);\n    });\n    return fileList.some(({ name, type }) =>\n      acceptTypes.some(acceptType => acceptType.test(name) || acceptType.test(type)),\n    );\n  }\n\n  /**\n   * 使用日期获取一个uid\n   *\n   * @param {number} index 索引\n   * @returns {string}\n   * @memberof Upload\n   */\n  getUid(index: number): string {\n    const { prefixCls } = this;\n    const now = new Date();\n    return `${prefixCls}-${now}-${index}`;\n  }\n\n  /**\n   * 从文件对象数组中获取一个文件对象的引用，\n   * 首先尝试通过uid属性匹配文件对象，若失败则尝试name\n   *\n   * @param {UploadFile} file\n   * @param {UploadFile[]} fileList 文件对象数组\n   * @returns {UploadFile}\n   * @memberof Upload\n   */\n  getFileItem(file: UploadFile): UploadFile | undefined {\n    const matchKey = file.uid !== undefined ? 'uid' : 'name';\n    return this.fileList.find(item => item[matchKey] === file[matchKey]);\n  }\n\n  /**\n   * 从文件对象数组中移除一个文件对象，\n   * 首先尝试通过uid属性匹配文件对象，若失败则尝试name\n   *\n   * @param {UploadFile} file\n   * @param {UploadFile[]} fileList\n   * @returns {UploadFile[]}\n   * @memberof Upload\n   */\n  @action\n  removeFileItem(file: UploadFile): void {\n    const matchKey = file.uid !== undefined ? 'uid' : 'name';\n    const index = this.fileList.findIndex(item => item[matchKey] === file[matchKey]);\n    const { uploadFileList } = this.props;\n    if (uploadFileList && uploadFileList.length) {\n      uploadFileList.splice(index, 1);\n      this.fileList.splice(index, 1);\n    } else {\n      this.fileList.splice(index, 1);\n    }\n  }\n}\n"]}