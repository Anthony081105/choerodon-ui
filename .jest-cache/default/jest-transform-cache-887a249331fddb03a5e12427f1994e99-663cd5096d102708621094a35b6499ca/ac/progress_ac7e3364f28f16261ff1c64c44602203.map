{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/progress/progress.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, CSSProperties } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { Circle } from '../rc-components/progress';\nimport Loading from './Loading';\nimport { Size } from '../_util/enum';\nimport { ProgressPosition, ProgressStatus, ProgressType } from './enum';\nimport { getPrefixCls } from '../configure';\n\nexport interface ProgressProps {\n  prefixCls?: string;\n  className?: string;\n  type?: ProgressType;\n  percent?: number;\n  successPercent?: number;\n  format?: (percent: number) => React.ReactNode;\n  status?: ProgressStatus;\n  showInfo?: boolean;\n  showPointer?: boolean;\n  strokeWidth?: number;\n  trailColor?: string;\n  strokeColor?: string;\n  width?: number;\n  style?: CSSProperties;\n  gapDegree?: number;\n  gapPosition?: ProgressPosition;\n  size?: Size;\n}\n\nexport default class Progress extends Component<ProgressProps, {}> {\n  static displayName = 'Progress';\n\n  static Line: any;\n\n  static Circle: any;\n\n  static Loading: any;\n\n  static defaultProps = {\n    type: ProgressType.line,\n    percent: 0,\n    showInfo: true,\n    showPointer: false,\n    trailColor: '#f3f3f3',\n    size: Size.default,\n  };\n\n  static propTypes = {\n    status: PropTypes.oneOf([\n      ProgressStatus.normal,\n      ProgressStatus.exception,\n      ProgressStatus.active,\n      ProgressStatus.success,\n    ]),\n    type: PropTypes.oneOf([\n      ProgressType.line,\n      ProgressType.circle,\n      ProgressType.dashboard,\n      ProgressType.loading,\n    ]),\n    showInfo: PropTypes.bool,\n    showPointer: PropTypes.bool,\n    percent: PropTypes.number,\n    width: PropTypes.number,\n    strokeWidth: PropTypes.number,\n    strokeColor: PropTypes.string,\n    trailColor: PropTypes.string,\n    format: PropTypes.func,\n    gapDegree: PropTypes.number,\n    size: PropTypes.oneOf([Size.default, Size.small, Size.large]),\n  };\n\n  renderPointer = () => {\n    const props = this.props;\n    const {\n      prefixCls: customizePrefixCls,\n      // strokeColor,\n      percent = 0,\n      status,\n      successPercent,\n    } = props;\n    const prefixCls = getPrefixCls('progress', customizePrefixCls);\n    const progressStatus =\n      parseInt(successPercent ? successPercent.toString() : percent.toString(), 10) >= 100 &&\n      !('status' in props)\n        ? ProgressStatus.success\n        : status || ProgressStatus.normal;\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"32\" viewBox=\"0 0 38 32\">\n        <path\n          // style={{\n          //   fill: strokeColor ? strokeColor : '',\n          // }}\n          className={`${prefixCls}-status-pointer-${progressStatus}`}\n          fill=\"#6887E8\" d=\"M103.371587,49.724578 C103.681687,50.1292204 103.634794,50.6951896 103.280961,51.0440945 L103.186137,51.1265795 L78.8502947,69.7769214 C79.5504585,70.8623565 79.9567807,72.1551739 79.9567807,73.5428929 C79.9567807,77.3850168 76.8421239,80.4996736 73,80.4996736 C69.1578761,80.4996736 66.0432193,77.3850168 66.0432193,73.5428929 C66.0432193,69.700769 69.1578761,66.5861122 73,66.5861122 C74.7317808,66.5861122 76.3157678,67.218893 77.5333601,68.265854 L101.969586,49.5391281 C102.407948,49.2031866 103.035646,49.2862154 103.371587,49.724578 Z M73,68.5861122 C70.2624456,68.5861122 68.0432193,70.8053385 68.0432193,73.5428929 C68.0432193,76.2804473 70.2624456,78.4996736 73,78.4996736 C75.7375544,78.4996736 77.9567807,76.2804473 77.9567807,73.5428929 C77.9567807,70.8053385 75.7375544,68.5861122 73,68.5861122 Z\"\n          transform=\"translate(-66 -49)\"\n        />\n      </svg>\n    );\n  };\n\n  /**\n   * 计算指针角度\n   */\n  getPointerDeg = () => {\n    const {\n      percent = 0,\n      gapDegree = 0,\n    } = this.props;\n    // 缺口角度\n    const gapDeg = gapDegree || 75;\n    // percent 角度\n    const percentDeg = (360 - gapDeg) * (percent / 100);\n    // 初始位置 0 -> 126 + 缺口角度/2 + percent 角度 + diffDeg\n    let diffDeg = 0;\n    if (percent <= 75 && percent > 50) {\n      diffDeg = -3;\n    } else if (percent > 75) {\n      diffDeg = -5;\n    } else if (percent < 50) {\n      diffDeg = 5;\n    }\n    const deg = 128 + gapDeg / 2 + percentDeg + diffDeg;\n    return { transform: `rotate(${deg}deg)` };\n  };\n\n  render() {\n    const props = this.props;\n    const {\n      prefixCls: customizePrefixCls,\n      className,\n      percent = 0,\n      status,\n      format,\n      trailColor,\n      size,\n      successPercent,\n      type,\n      strokeWidth,\n      strokeColor,\n      width,\n      showInfo,\n      gapDegree = 0,\n      gapPosition,\n      showPointer,\n      ...restProps\n    } = props;\n    const prefixCls = getPrefixCls('progress', customizePrefixCls);\n    const progressStatus =\n      parseInt(successPercent ? successPercent.toString() : percent.toString(), 10) >= 100 &&\n      !('status' in props)\n        ? ProgressStatus.success\n        : status || ProgressStatus.normal;\n    let progressInfo;\n    let progressCenter;\n    let progress;\n    const textFormatter = format || (percentNumber => `${percentNumber}%`);\n\n    if (showInfo) {\n      let text;\n      const circleType = type === ProgressType.circle || type === ProgressType.dashboard;\n      if (progressStatus === ProgressStatus.exception) {\n        text = format ? textFormatter(percent) : <Icon type={circleType ? 'close' : 'cancel'} />;\n      } else if (progressStatus === ProgressStatus.success) {\n        text = format ? (\n          textFormatter(percent)\n        ) : (\n          <Icon type={circleType ? 'check' : 'check_circle'} />\n        );\n      } else {\n        text = textFormatter(percent);\n      }\n      progressInfo = <span className={`${prefixCls}-text`}>{text}</span>;\n      if (showPointer) {\n        progressCenter = (\n          <div className={`${prefixCls}-pointer`} style={this.getPointerDeg()}>\n            {this.renderPointer()}\n          </div>\n        );\n        progressInfo = <span className={`${prefixCls}-text-bottom`}>{text}</span>;\n      }\n    }\n\n    if (type === ProgressType.line) {\n      const percentStyle = {\n        width: `${percent}%`,\n        height: strokeWidth || (size === Size.small ? 6 : 8),\n        background: strokeColor,\n      };\n      const successPercentStyle = {\n        width: `${successPercent}%`,\n        height: strokeWidth || (size === Size.small ? 6 : 8),\n      };\n      const successSegment =\n        successPercent !== undefined ? (\n          <div className={`${prefixCls}-success-bg`} style={successPercentStyle} />\n        ) : null;\n      progress = (\n        <div>\n          <div className={`${prefixCls}-outer`}>\n            <div className={`${prefixCls}-inner`}>\n              <div className={`${prefixCls}-bg`} style={percentStyle} />\n              {successSegment}\n            </div>\n          </div>\n          {progressInfo}\n        </div>\n      );\n    } else if (type === ProgressType.circle || type === ProgressType.dashboard) {\n      const circleSize = width || 120;\n      const circleStyle = {\n        width: circleSize,\n        height: circleSize,\n        fontSize: circleSize * 0.15 + 6,\n      };\n      const circleWidth = strokeWidth || 6;\n      const gapPos =\n        gapPosition ||\n        (type === ProgressType.dashboard && ProgressPosition.bottom) ||\n        ProgressPosition.top;\n      const gapDeg = gapDegree || (type === ProgressType.dashboard && 75);\n      progress = (\n        <div className={`${prefixCls}-inner`} style={circleStyle}>\n          <Circle\n            percent={percent}\n            strokeWidth={circleWidth}\n            trailWidth={circleWidth}\n            trailColor={trailColor}\n            strokeColor={strokeColor}\n            prefixCls={prefixCls}\n            gapDegree={gapDeg}\n            gapPosition={gapPos}\n          />\n          {progressCenter}\n          {progressInfo}\n        </div>\n      );\n    } else if (type === ProgressType.loading) {\n      progress = (\n        <div className={`${prefixCls}-inner`}>\n          <Loading />\n        </div>\n      );\n    }\n\n    const classString = classNames(\n      prefixCls,\n      {\n        [`${prefixCls}-${(type === ProgressType.dashboard && ProgressType.circle) || type}`]: true,\n        [`${prefixCls}-status-${progressStatus}`]: true,\n        [`${prefixCls}-show-info`]: showInfo,\n        [`${prefixCls}-${size}`]: size,\n      },\n      className,\n    );\n\n    return (\n      <div {...restProps} className={classString}>\n        {progress}\n      </div>\n    );\n  }\n}\n"]}