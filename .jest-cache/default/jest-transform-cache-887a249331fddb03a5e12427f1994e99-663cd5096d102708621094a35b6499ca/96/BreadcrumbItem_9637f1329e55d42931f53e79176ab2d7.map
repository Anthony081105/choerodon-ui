{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/breadcrumb/BreadcrumbItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ReactNode, useState, useCallback } from 'react';\nimport classNames from 'classnames';\nimport DropDown, { DropDownProps } from '../dropdown';\nimport { Placements } from '../dropdown/enum';\nimport { getPrefixCls } from '../configure';\nimport Icon from '../icon';\nimport List, { ListProps } from '../list';\nimport buildPlacements from './placements'\n\n\nexport interface menuListItemProps {\n  href?: string;\n  listItemName?: string;\n  listChildren?: ({ listItemName, href }: { listItemName: string, href: string }) => React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLAnchorElement | HTMLSpanElement>;\n}\n\nexport interface BreadcrumbItemProps {\n  prefixCls?: string;\n  separator?: ReactNode;\n  href?: string;\n  overlay?: DropDownProps['overlay'];\n  dropdownProps?: DropDownProps;\n  listProps?: ListProps;\n  menuList?: menuListItemProps[];\n  onClick?: React.MouseEventHandler<HTMLAnchorElement | HTMLSpanElement>;\n}\n\ninterface BreadcrumbItemInterface extends React.FC<BreadcrumbItemProps> {\n  __ANT_BREADCRUMB_ITEM: boolean;\n}\n\nconst BreadcrumbItem: BreadcrumbItemInterface = ({\n  prefixCls: customizePrefixCls,\n  separator = '/',\n  menuList = [],\n  children,\n  overlay,\n  listProps,\n  dropdownProps,\n  ...restProps\n}) => {\n  const prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n  const [active, setActive] = useState(false)\n  const isMenuListOn = !!(menuList && menuList.length > 0);\n  const onVisibleChange = async (visible: boolean) => {\n    if (menuList.length > 0) {\n      setActive(visible)\n    }\n  }\n  /**\n   * 渲染Link\n   * @param childrenLink\n   * @param restPropsLink\n   */\n  const renderLink = (childrenLink, restPropsLink, classNameLink, key): React.ReactNode => {\n    if (key in restPropsLink) {\n      return (\n        <a className={`${prefixCls}-${classNameLink}`} {...restPropsLink}>\n          {childrenLink}\n        </a>\n      )\n    }\n    return (\n      <span className={`${prefixCls}-${classNameLink}`} {...restPropsLink}>\n        {childrenLink}\n      </span>\n    )\n  }\n\n  /**\n   * 渲染List列表\n   */\n  const renderList = (\n    <List\n      className={`${prefixCls}-overlay-menu-list`}\n      grid={{ gutter: 0, column: 3 }}\n      {...listProps}\n      dataSource={menuList}\n      renderItem={item => {\n        const { href } = item\n        const { listChildren, listItemName, ...listRestProps } = item\n        let titleItem = listItemName || href;\n        titleItem = listChildren ? listChildren({ href, listItemName }) : listItemName;\n        return (\n          <List.Item>\n            {renderLink(titleItem, listRestProps, 'overlay-menu-list-item', 'href')}\n          </List.Item>\n        )\n      }}\n    />\n  );\n\n  const overlayMenu = overlay || (isMenuListOn && renderList);\n\n  const onOverlayClick = useCallback(() => {\n    setTimeout(() => {\n      setActive(false)\n    }, 300)\n  }, [])\n\n  const renderBreadcrumbMenu = (linkItem: React.ReactNode) => {\n    if (overlayMenu) {\n      const buildASPlacements = buildPlacements as unknown as Placements\n      const dropDownProps = {\n        overlayClassName: isMenuListOn ? `${prefixCls}-overlay-popup` : undefined,\n        onOverlayClick,\n        overlay: overlayMenu,\n        placement: isMenuListOn ? Placements.bottomLeft : Placements.bottomCenter,\n        onVisibleChange,\n        overlayPlacements: buildASPlacements,\n        ...dropdownProps,\n      }\n      return (\n        <DropDown {...dropDownProps}>\n          <span className={classNames(`${prefixCls}-overlay-link`, {\n            [`${prefixCls}-overlay-border`]: active,\n            [`${prefixCls}-overlay-menu`]: isMenuListOn,\n          })}>\n            {linkItem}\n            {isMenuListOn || <Icon type=\"arrow_drop_down\" />}\n            <i className={classNames(`${prefixCls}-overlay-cover`, {\n              [`${prefixCls}-overlay-cover-active`]: active,\n            })} />\n          </span>\n        </DropDown>\n      )\n    }\n    return linkItem;\n  }\n\n  let link: string | React.ReactNode = renderLink(children, restProps, `link`, 'href');\n\n\n\n  // wrap to dropDown\n  link = renderBreadcrumbMenu(link);\n\n  if (children) {\n    return (\n      <span>\n        {link}\n        {separator && separator !== '' && (\n          <span className={`${prefixCls}-separator`}>{separator}</span>\n        )}\n      </span>\n    );\n  }\n  return null;\n}\n\nBreadcrumbItem.__ANT_BREADCRUMB_ITEM = true;\n\nexport default BreadcrumbItem;\n"]}