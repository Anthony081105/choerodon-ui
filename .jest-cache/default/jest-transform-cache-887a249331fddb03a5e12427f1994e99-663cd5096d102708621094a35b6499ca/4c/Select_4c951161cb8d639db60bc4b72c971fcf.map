{"version":3,"sources":["Select.jsx"],"names":["filterFn","input","child","String","props","treeNodeFilterProp","indexOf","loopTreeData","data","level","treeCheckable","map","item","index","pos","label","value","disabled","key","hasOwnProperty","selectable","children","isLeaf","otherProps","title","ret","length","Select","event","val","target","setState","inputValue","open","getValue","state","onSearch","document","activeElement","getInputDOMNode","setTimeout","setOpenState","undefined","keyCode","onInputKeyDown","KeyCode","ENTER","DOWN","preventDefault","BACKSPACE","concat","popValue","pop","removeSelected","isLabelInValue","openIfHasChildren","stopPropagation","ESC","selectedKeys","info","node","selectedValue","selectedLabel","getLabelFromNode","checkableSelect","selected","onDeselect","onSelect","checkEvt","clearSearchInput","getCheckedNodes","n","some","i","extraInfo","triggerValue","triggerNode","checked","allCheckedNodes","treeCheckStrictly","checkedNodes","checkedNodesPositions","_checkedNodes","_tree","trigger","popupEle","_treeNodesStates","checkKeys","fireChange","focus","_cacheTreeNodesStates","forcePopupAlign","e","onDropdownVisibleChange","placeholder","prefixCls","defaultValue","renderedTreeData","renderTreeData","addLabelToValue","defaultOpen","focused","autoFocus","inputNode","style","width","inputMirrorInstance","clientWidth","nextProps","_savedValue","treeData","clearDelayTimer","dropdownContainer","body","removeChild","treeNodeLabelProp","createElement","appendChild","hidden","searchPlaceholder","display","onPlaceholderClick","onInputChange","getSearchPlaceholderElement","inputInstance","getPopupDOMNode","getPopupEleRefs","_props","init","_strict","halfCheckedValues","forEach","halfChecked","push","checkedTreeNodes","_cachetreeData","mapLabVal","arr","itemObj","checkedValues","showCheckedStrategy","SHOW_ALL","SHOW_PARENT","posArr","filter","checkNodeProps","unCheckPos","newVals","newCkTns","nv","clear","needFocus","documentClickClose","Promise","resolve","then","selection","value_","v","Object","prototype","toString","call","getLabelFromProps","delayTimer","clearTimeout","selectedVal","getDeselectedValue","singleValue","canMultiple","Children","count","vals","sv","every","ex","preValue","labs","vls","_vls","ii","includeVal","ind","splice","onChange","labelInValue","blur","allowClear","UNSELECTABLE_STYLE","UNSELECTABLE_ATTRIBUTE","onClearSelection","preventDefaultEvent","choiceTransitionName","maxTagTextLength","choiceRender","multiple","innerNode","getPlaceholderElement","renderClear","showArrow","onArrowClick","selectedValueNodes","content","slice","bind","getInputElement","className","onChoiceAnimationLeave","validProps","treeDataSimpleMode","simpleFormat","id","pId","rootPId","includes","ctrlNode","renderTopControlNode","extraSelectionProps","onKeyDown","tabIndex","rootCls","getPopupContainer","onClick","onBlur","onFocus","getUnderLine","Component","SelectPropTypes","filterTreeNode","showSearch","noop","dropdownMatchSelectWidth","dropdownStyle","optionLabelProp","notFoundContent","SHOW_CHILD","treeIcon","treeLine","treeDefaultExpandAll"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAkBA;;AACA;;AACA;;AACA;;AACA;;AAGA,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgC;AAC9B,SACEC,MAAM,CAAC,wBAAaD,KAAb,EAAoB,2BAAgB,KAAKE,KAAL,CAAWC,kBAA3B,CAApB,CAAD,CAAN,CAA4EC,OAA5E,CAAoFL,KAApF,IAA6F,CAAC,CADhG;AAGD;;AAED,SAASM,YAAT,CAAsBC,IAAtB,EAAsD;AAAA,MAA1BC,KAA0B,uEAAlB,CAAkB;AAAA,MAAfC,aAAe;AACpD,SAAOF,IAAI,CAACG,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC/B,QAAMC,GAAG,aAAML,KAAN,cAAeI,KAAf,CAAT;AAD+B,QAG7BE,KAH6B,GAY3BH,IAZ2B,CAG7BG,KAH6B;AAAA,QAI7BC,KAJ6B,GAY3BJ,IAZ2B,CAI7BI,KAJ6B;AAAA,QAK7BC,QAL6B,GAY3BL,IAZ2B,CAK7BK,QAL6B;AAAA,QAM7BC,GAN6B,GAY3BN,IAZ2B,CAM7BM,GAN6B;AAAA,QAO7BC,cAP6B,GAY3BP,IAZ2B,CAO7BO,cAP6B;AAAA,QAQ7BC,UAR6B,GAY3BR,IAZ2B,CAQ7BQ,UAR6B;AAAA,QAS7BC,QAT6B,GAY3BT,IAZ2B,CAS7BS,QAT6B;AAAA,QAU7BC,MAV6B,GAY3BV,IAZ2B,CAU7BU,MAV6B;AAAA,QAW1BC,UAX0B,6CAY3BX,IAZ2B;AAa/B,QAAMR,KAAK;AACTY,MAAAA,KAAK,EAALA,KADS;AAETQ,MAAAA,KAAK,EAAET,KAFE;AAGT;AACAG,MAAAA,GAAG,EAAEA,GAAG,IAAIF,KAAP,IAAgBF,GAJZ;AAKTG,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,KALb;AAMTG,MAAAA,UAAU,EAAEA,UAAU,KAAK,KAAf,GAAuBA,UAAvB,GAAoC,CAACV;AANxC,OAONa,UAPM,CAAX;AASA,QAAIE,GAAJ;;AACA,QAAIJ,QAAQ,IAAIA,QAAQ,CAACK,MAAzB,EAAiC;AAC/BD,MAAAA,GAAG,GAAG,gCAAC,qBAAD,EAAerB,KAAf,EAAuBG,YAAY,CAACc,QAAD,EAAWP,GAAX,EAAgBJ,aAAhB,CAAnC,CAAN;AACD,KAFD,MAEO;AACLe,MAAAA,GAAG,GAAG,gCAAC,qBAAD,gCAAerB,KAAf;AAAsB,QAAA,MAAM,EAAEkB;AAA9B,SAAN;AACD;;AACD,WAAOG,GAAP;AACD,GA7BM,CAAP;AA8BD;;IAEoBE,M;;;;;AAwCnB,kBAAYvB,OAAZ,EAAmB;AAAA;;AAAA;AACjB,kHAAMA,OAAN;AADiB,sGAoHH,UAAAwB,KAAK,EAAI;AACvB,UAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAad,KAAzB;;AADuB;AAAA,UAEfZ,KAFe,yBAEfA,KAFe;;AAGvB,YAAK2B,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEH,GADA;AAEZI,QAAAA,IAAI,EAAE;AAFM,OAAd;;AAIA,UAAI7B,KAAK,CAACM,aAAN,IAAuB,CAACmB,GAA5B,EAAiC;AAC/B,cAAKE,QAAL,CAAc;AACZf,UAAAA,KAAK,EAAE,MAAKkB,QAAL,CAAc9B,KAAd,sCAAyB,MAAK+B,KAAL,CAAWnB,KAApC,GAA4C,KAA5C;AADK,SAAd;AAGD;;AACDZ,MAAAA,KAAK,CAACgC,QAAN,CAAeP,GAAf;AACD,KAjIkB;AAAA,gHAmIO,UAAAI,IAAI,EAAI;AAChC;AACA,UAAI,CAACA,IAAD,IAASI,QAAQ,CAACC,aAAT,KAA2B,MAAKC,eAAL,EAAxC,EAAgE,CAE/D,CAFD,CACE;AAEF;AACA;;;AACAC,MAAAA,UAAU,CAAC,YAAM;AACf,cAAKC,YAAL,CAAkBR,IAAlB,EAAwBS,SAAxB,EAAmC,CAACT,IAApC;AACD,OAFS,EAEP,EAFO,CAAV;AAGD,KA7IkB;AAAA,kGAgJP,UAAAL,KAAK,EAAI;AACnB,UAAMxB,KAAK,GAAG,MAAKA,KAAnB;;AACA,UAAIA,KAAK,CAACa,QAAV,EAAoB;AAClB;AACD;;AACD,UAAM0B,OAAO,GAAGf,KAAK,CAACe,OAAtB;;AACA,UAAI,MAAKR,KAAL,CAAWF,IAAX,IAAmB,CAAC,MAAKM,eAAL,EAAxB,EAAgD;AAC9C,cAAKK,cAAL,CAAoBhB,KAApB;AACD,OAFD,MAEO,IAAIe,OAAO,KAAKE,oBAAQC,KAApB,IAA6BH,OAAO,KAAKE,oBAAQE,IAArD,EAA2D;AAChE,cAAKN,YAAL,CAAkB,IAAlB;;AACAb,QAAAA,KAAK,CAACoB,cAAN;AACD;AACF,KA5JkB;AAAA,uGA8JF,UAAApB,KAAK,EAAI;AACxB,UAAMxB,KAAK,GAAG,MAAKA,KAAnB;;AACA,UAAIA,KAAK,CAACa,QAAV,EAAoB;AAClB;AACD;;AACD,UAAMkB,KAAK,GAAG,MAAKA,KAAnB;AACA,UAAMQ,OAAO,GAAGf,KAAK,CAACe,OAAtB;;AACA,UAAI,sBAAWvC,KAAX,KAAqB,CAACwB,KAAK,CAACE,MAAN,CAAad,KAAnC,IAA4C2B,OAAO,KAAKE,oBAAQI,SAApE,EAA+E;AAC7E,YAAMjC,KAAK,GAAGmB,KAAK,CAACnB,KAAN,CAAYkC,MAAZ,EAAd;;AACA,YAAIlC,KAAK,CAACU,MAAV,EAAkB;AAChB,cAAMyB,QAAQ,GAAGnC,KAAK,CAACoC,GAAN,EAAjB;;AACA,gBAAKC,cAAL,CAAoB,MAAKC,cAAL,KAAwBH,QAAxB,GAAmCA,QAAQ,CAACnC,KAAhE;AACD;;AACD;AACD;;AACD,UAAI2B,OAAO,KAAKE,oBAAQE,IAAxB,EAA8B;AAC5B,YAAI,CAACZ,KAAK,CAACF,IAAX,EAAiB;AACf,gBAAKsB,iBAAL;;AACA3B,UAAAA,KAAK,CAACoB,cAAN;AACApB,UAAAA,KAAK,CAAC4B,eAAN;AACA;AACD;AACF,OAPD,MAOO,IAAIb,OAAO,KAAKE,oBAAQY,GAAxB,EAA6B;AAClC,YAAItB,KAAK,CAACF,IAAV,EAAgB;AACd,gBAAKQ,YAAL,CAAkB,KAAlB;;AACAb,UAAAA,KAAK,CAACoB,cAAN;AACApB,UAAAA,KAAK,CAAC4B,eAAN;AACD;;AACD;AACD;AACF,KA5LkB;AAAA,iGAgMR,UAACE,YAAD,EAAeC,IAAf,EAAwB;AACjC,UAAM/C,IAAI,GAAG+C,IAAI,CAACC,IAAlB;AACA,UAAI5C,KAAK,GAAG,MAAKmB,KAAL,CAAWnB,KAAvB;AACA,UAAMZ,KAAK,GAAG,MAAKA,KAAnB;AACA,UAAMyD,aAAa,GAAG,6BAAkBjD,IAAlB,CAAtB;;AACA,UAAMkD,aAAa,GAAG,MAAKC,gBAAL,CAAsBnD,IAAtB,CAAtB;;AACA,UAAMoD,eAAe,GAAG5D,KAAK,CAACM,aAAN,IAAuBiD,IAAI,CAAC/B,KAAL,KAAe,QAA9D;AACA,UAAIA,KAAK,GAAGiC,aAAZ;;AACA,UAAI,MAAKP,cAAL,EAAJ,EAA2B;AACzB1B,QAAAA,KAAK,GAAG;AACNZ,UAAAA,KAAK,EAAEY,KADD;AAENb,UAAAA,KAAK,EAAE+C;AAFD,SAAR;AAID;;AACD,UAAIH,IAAI,CAACM,QAAL,KAAkB,KAAtB,EAA6B;AAC3B,cAAKC,UAAL,CAAgBP,IAAhB;;AACA,YAAI,CAACK,eAAL,EAAsB;AACvB;;AACD5D,MAAAA,KAAK,CAAC+D,QAAN,CAAevC,KAAf,EAAsBhB,IAAtB,EAA4B+C,IAA5B;AAEA,UAAMS,QAAQ,GAAGT,IAAI,CAAC/B,KAAL,KAAe,OAAhC;;AACA,UAAI,sBAAWxB,KAAX,CAAJ,EAAuB;AACrB,cAAKiE,gBAAL;;AACA,YAAID,QAAJ,EAAc;AACZpD,UAAAA,KAAK,GAAG,MAAKsD,eAAL,CAAqBX,IAArB,EAA2BvD,KAA3B,EAAkCO,GAAlC,CAAsC,UAAA4D,CAAC,EAAI;AACjD,mBAAO;AACLvD,cAAAA,KAAK,EAAE,6BAAkBuD,CAAlB,CADF;AAELxD,cAAAA,KAAK,EAAE,MAAKgD,gBAAL,CAAsBQ,CAAtB;AAFF,aAAP;AAID,WALO,CAAR;AAMD,SAPD,MAOO;AACL,cAAIvD,KAAK,CAACwD,IAAN,CAAW,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACzD,KAAF,KAAY6C,aAAhB;AAAA,WAAZ,CAAJ,EAAgD;AAC9C;AACD;;AACD7C,UAAAA,KAAK,GAAGA,KAAK,CAACkC,MAAN,CAAa,CACnB;AACElC,YAAAA,KAAK,EAAE6C,aADT;AAEE9C,YAAAA,KAAK,EAAE+C;AAFT,WADmB,CAAb,CAAR;AAMD;AACF,OApBD,MAoBO;AACL,YAAI9C,KAAK,CAACU,MAAN,IAAgBV,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,KAAmB6C,aAAvC,EAAsD;AACpD,gBAAKpB,YAAL,CAAkB,KAAlB;;AACA;AACD;;AACDzB,QAAAA,KAAK,GAAG,CACN;AACEA,UAAAA,KAAK,EAAE6C,aADT;AAEE9C,UAAAA,KAAK,EAAE+C;AAFT,SADM,CAAR;;AAMA,cAAKrB,YAAL,CAAkB,KAAlB;AACD;;AAED,UAAMiC,SAAS,GAAG;AAChBC,QAAAA,YAAY,EAAEd,aADE;AAEhBe,QAAAA,WAAW,EAAEhE;AAFG,OAAlB;;AAIA,UAAIwD,QAAJ,EAAc;AACZM,QAAAA,SAAS,CAACG,OAAV,GAAoBlB,IAAI,CAACkB,OAAzB,CADY,CAEZ;;AACAH,QAAAA,SAAS,CAACI,eAAV,GACE1E,KAAK,CAAC2E,iBAAN,IAA2B,MAAK5C,KAAL,CAAWH,UAAtC,GACI2B,IAAI,CAACqB,YADT,GAEI,2BAAgBrB,IAAI,CAACsB,qBAArB,CAHN;AAIA,cAAKC,aAAL,GAAqBvB,IAAI,CAACsB,qBAA1B;AACA,YAAME,KAAK,GAAG,MAAKC,OAAL,CAAaC,QAA3B;AACA,cAAKC,gBAAL,GAAwBH,KAAK,CAACI,SAA9B;AACD,OAVD,MAUO;AACLb,QAAAA,SAAS,CAACT,QAAV,GAAqBN,IAAI,CAACM,QAA1B;AACD;;AAED,YAAKuB,UAAL,CAAgBxE,KAAhB,EAAuB0D,SAAvB;;AACA,UAAItE,KAAK,CAAC4B,UAAN,KAAqB,IAAzB,EAA+B;AAC7B,cAAKD,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD;AACF,KA/QkB;AAAA,mGAiRN,UAAA2B,IAAI,EAAI;AACnB,YAAKN,cAAL,CAAoB,6BAAkBM,IAAI,CAACC,IAAvB,CAApB;;AACA,UAAI,CAAC,sBAAW,MAAKxD,KAAhB,CAAL,EAA6B;AAC3B,cAAKqC,YAAL,CAAkB,KAAlB;AACD,OAFD,MAEO;AACL,cAAK4B,gBAAL;AACD;AACF,KAxRkB;AAAA,2GA0RE,YAAM;AACzB,YAAK9B,eAAL,GAAuBkD,KAAvB;AACD,KA5RkB;AAAA,yGA8RA,UAAA7D,KAAK,EAAI;AAC1B,UAAMxB,KAAK,GAAG,MAAKA,KAAnB;AACA,UAAM+B,KAAK,GAAG,MAAKA,KAAnB;;AACA,UAAI/B,KAAK,CAACa,QAAV,EAAoB;AAClB;AACD;;AACDW,MAAAA,KAAK,CAAC4B,eAAN;AACA,YAAKkC,qBAAL,GAA6B,IAA7B;AACA,YAAKR,aAAL,GAAqB,EAArB;;AACA,UAAI/C,KAAK,CAACH,UAAN,IAAoBG,KAAK,CAACnB,KAAN,CAAYU,MAApC,EAA4C;AAC1C,cAAKe,YAAL,CAAkB,KAAlB;;AACA,YAAI,OAAOrC,KAAK,CAAC4B,UAAb,KAA4B,WAAhC,EAA6C;AAC3C,gBAAKD,QAAL,CACE;AACEC,YAAAA,UAAU,EAAE;AADd,WADF,EAIE,YAAM;AACJ,kBAAKwD,UAAL,CAAgB,EAAhB;AACD,WANH;AAQD,SATD,MASO;AACL,gBAAKA,UAAL,CAAgB,EAAhB;AACD;AACF;AACF,KAtTkB;AAAA,+GAwTM,YAAM;AAC7B,YAAKJ,OAAL,CAAaA,OAAb,CAAqBO,eAArB;AACD,KA1TkB;AAAA,qGAqwBJ,UAAAC,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACpC,eAAF;AACAoC,MAAAA,CAAC,CAAC5C,cAAF;;AACA,UAAI,CAAC,MAAK5C,KAAL,CAAWa,QAAhB,EAA0B;AACxB,cAAK4E,uBAAL,CAA6B,CAAC,MAAK1D,KAAL,CAAWF,IAAzC;AACD;AACF,KA3wBkB;AAAA,8GA6wBK,YAAM;AAAA;AAAA,UACpB7B,KADoB,0BACpBA,KADoB;AAAA,UACb+B,KADa,0BACbA,KADa;;AAE5B,UAAM2D,WAAW,GAAG1F,KAAK,CAAC0F,WAA1B;;AACA,UAAIA,WAAJ,EAAiB;AACf,eAAO;AAAK,UAAA,SAAS,YAAK1F,KAAK,CAAC2F,SAAX;AAAd,WAA8DD,WAA9D,CAAP;AACD;;AACD,aAAO,IAAP;AACD,KApxBkB;AAEjB,QAAI9E,MAAK,GAAG,EAAZ;;AACA,QAAI,WAAWZ,OAAf,EAAsB;AACpBY,MAAAA,MAAK,GAAG,mBAAQZ,OAAK,CAACY,KAAd,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,MAAK,GAAG,mBAAQZ,OAAK,CAAC4F,YAAd,CAAR;AACD,KAPgB,CAQjB;;;AACA,UAAKC,gBAAL,GAAwB,MAAKC,cAAL,EAAxB;AACAlF,IAAAA,MAAK,GAAG,MAAKmF,eAAL,CAAqB/F,OAArB,EAA4BY,MAA5B,CAAR;AACAA,IAAAA,MAAK,GAAG,MAAKkB,QAAL,CAAc9B,OAAd,EAAqBY,MAArB,EAA4BZ,OAAK,CAAC4B,UAAN,GAAmB,UAAnB,GAAgC,IAA5D,CAAR;AACA,QAAMA,UAAU,GAAG5B,OAAK,CAAC4B,UAAN,IAAoB,EAAvC,CAZiB,CAajB;AACA;AACA;;AACA,UAAKG,KAAL,GAAa;AACXnB,MAAAA,KAAK,EAALA,MADW;AAEXgB,MAAAA,UAAU,EAAVA,UAFW;AAGXC,MAAAA,IAAI,EAAE7B,OAAK,CAAC6B,IAAN,IAAc7B,OAAK,CAACgG,WAHf;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAhBiB;AAsBlB;;;;wCAEmB;AAAA,wBACc,KAAKjG,KADnB;AAAA,UACVkG,SADU,eACVA,SADU;AAAA,UACCrF,QADD,eACCA,QADD;;AAElB,UAAI,sBAAW,KAAKb,KAAhB,CAAJ,EAA4B;AAC1B,YAAMmG,SAAS,GAAG,KAAKhE,eAAL,EAAlB;;AACA,YAAIgE,SAAS,CAACvF,KAAd,EAAqB;AACnBuF,UAAAA,SAAS,CAACC,KAAV,CAAgBC,KAAhB,GAAwB,EAAxB;AACAF,UAAAA,SAAS,CAACC,KAAV,CAAgBC,KAAhB,aAA2B,KAAKC,mBAAL,CAAyBC,WAApD;AACD,SAHD,MAGO;AACLJ,UAAAA,SAAS,CAACC,KAAV,CAAgBC,KAAhB,GAAwB,EAAxB;AACD;AACF;;AACD,UAAIH,SAAS,IAAI,CAACrF,QAAlB,EAA4B;AAC1B,aAAKwE,KAAL;AACD;AACF;;;8CAEyBmB,S,EAAW;AACnC;AACA,WAAKX,gBAAL,GAAwB,KAAKC,cAAL,CAAoBU,SAApB,CAAxB,CAFmC,CAGnC;AACA;;AACA,WAAKlB,qBAAL,GACE,KAAKA,qBAAL,KAA+B,IAA/B,IACA,KAAKmB,WADL,IAEAD,SAAS,CAAC5F,KAAV,KAAoB,KAAK6F,WAH3B;;AAIA,UAAI,KAAKzG,KAAL,CAAW0G,QAAX,KAAwBF,SAAS,CAACE,QAAlC,IAA8C,KAAK1G,KAAL,CAAWiB,QAAX,KAAwBuF,SAAS,CAACvF,QAApF,EAA8F;AAC5F;AACA,aAAKiE,gBAAL,GAAwB,8BACtB,KAAKW,gBAAL,IAAyBW,SAAS,CAACvF,QADb,EAEtB,KAAKc,KAAL,CAAWnB,KAAX,CAAiBL,GAAjB,CAAqB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACI,KAAT;AAAA,SAAzB,CAFsB,CAAxB;AAID;;AACD,UAAI,WAAW4F,SAAf,EAA0B;AACxB,YAAI5F,KAAK,GAAG,mBAAQ4F,SAAS,CAAC5F,KAAlB,CAAZ;AACAA,QAAAA,KAAK,GAAG,KAAKmF,eAAL,CAAqBS,SAArB,EAAgC5F,KAAhC,CAAR;AACAA,QAAAA,KAAK,GAAG,KAAKkB,QAAL,CAAc0E,SAAd,EAAyB5F,KAAzB,CAAR;AACA,aAAKe,QAAL,CAAc;AACZf,UAAAA,KAAK,EAALA;AADY,SAAd,EAJwB,CAOxB;AACA;AACA;AACA;AACA;AACD;;AACD,UAAI4F,SAAS,CAAC5E,UAAV,KAAyB,KAAK5B,KAAL,CAAW4B,UAAxC,EAAoD;AAClD,aAAKD,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAE4E,SAAS,CAAC5E;AADV,SAAd;AAGD;;AACD,UAAI,UAAU4E,SAAd,EAAyB;AACvB,aAAK7E,QAAL,CAAc;AACZE,UAAAA,IAAI,EAAE2E,SAAS,CAAC3E;AADJ,SAAd;AAGD;AACF;;;wCAEmB2E,S,EAAW;AAC7B,UACE,KAAKC,WAAL,IACAD,SAAS,CAAC5F,KADV,IAEA4F,SAAS,CAAC5F,KAAV,KAAoB,KAAK6F,WAFzB,IAGAD,SAAS,CAAC5F,KAAV,KAAoB,KAAKZ,KAAL,CAAWY,KAJjC,EAKE;AACA,aAAK0E,qBAAL,GAA6B,KAA7B;AACA,aAAKxD,QAAL,CAAc0E,SAAd,EAAyB,KAAKT,eAAL,CAAqBS,SAArB,EAAgC,mBAAQA,SAAS,CAAC5F,KAAlB,CAAhC,CAAzB;AACD;AACF;;;yCAEoB;AACnB,UAAMmB,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAM/B,KAAK,GAAG,KAAKA,KAAnB;;AACA,UAAI+B,KAAK,CAACF,IAAN,IAAc,sBAAW7B,KAAX,CAAlB,EAAqC;AACnC,YAAMmG,SAAS,GAAG,KAAKhE,eAAL,EAAlB;;AACA,YAAIgE,SAAS,CAACvF,KAAd,EAAqB;AACnBuF,UAAAA,SAAS,CAACC,KAAV,CAAgBC,KAAhB,GAAwB,EAAxB;AACAF,UAAAA,SAAS,CAACC,KAAV,CAAgBC,KAAhB,aAA2B,KAAKC,mBAAL,CAAyBC,WAApD;AACD,SAHD,MAGO;AACLJ,UAAAA,SAAS,CAACC,KAAV,CAAgBC,KAAhB,GAAwB,EAAxB;AACD;AACF;AACF;;;2CAEsB;AACrB,WAAKM,eAAL;;AACA,UAAI,KAAKC,iBAAT,EAA4B;AAC1B,8CAAuB,KAAKA,iBAA5B;AACA3E,QAAAA,QAAQ,CAAC4E,IAAT,CAAcC,WAAd,CAA0B,KAAKF,iBAA/B;AACA,aAAKA,iBAAL,GAAyB,IAAzB;AACD;AACF;;;qCA0MgB9G,K,EAAO;AACtB,aAAO,wBAAaA,KAAb,EAAoB,KAAKE,KAAL,CAAW+G,iBAA/B,CAAP;AACD;;;sCAEiB/G,K,EAAOY,K,EAAO;AAAA;;AAC9B,UAAIA,KAAK,KAAK0B,SAAd,EAAyB;AACvB,eAAO,IAAP;AACD;;AACD,UAAI3B,KAAK,GAAG,IAAZ;AACA,iCAAgB,KAAKkF,gBAAL,IAAyB7F,KAAK,CAACiB,QAA/C,EAAyD,UAAAT,IAAI,EAAI;AAC/D,YAAI,6BAAkBA,IAAlB,MAA4BI,KAAhC,EAAuC;AACrCD,UAAAA,KAAK,GAAG,MAAI,CAACgD,gBAAL,CAAsBnD,IAAtB,CAAR;AACD;AACF,OAJD;;AAKA,UAAIG,KAAK,KAAK,IAAd,EAAoB;AAClB,eAAOC,KAAP;AACD;;AACD,aAAOD,KAAP;AACD;;;2CAEsB;AACrB,UAAI,CAAC,KAAKiG,iBAAV,EAA6B;AAC3B,aAAKA,iBAAL,GAAyB3E,QAAQ,CAAC+E,aAAT,CAAuB,KAAvB,CAAzB;AACA/E,QAAAA,QAAQ,CAAC4E,IAAT,CAAcI,WAAd,CAA0B,KAAKL,iBAA/B;AACD;;AACD,aAAO,KAAKA,iBAAZ;AACD;;;gDAE2BM,M,EAAQ;AAClC,UAAMlH,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAI0F,WAAJ;;AACA,UAAI,sBAAW1F,KAAX,CAAJ,EAAuB;AACrB0F,QAAAA,WAAW,GAAG1F,KAAK,CAAC0F,WAAN,IAAqB1F,KAAK,CAACmH,iBAAzC;AACD,OAFD,MAEO;AACLzB,QAAAA,WAAW,GAAG1F,KAAK,CAACmH,iBAApB;AACD;;AACD,UAAIzB,WAAJ,EAAiB;AACf,eACE;AACE,UAAA,KAAK,EAAE;AAAE0B,YAAAA,OAAO,EAAEF,MAAM,GAAG,MAAH,GAAY;AAA7B,WADT;AAEE,UAAA,OAAO,EAAE,KAAKG,kBAFhB;AAGE,UAAA,SAAS,YAAKrH,KAAK,CAAC2F,SAAX;AAHX,WAKGD,WALH,CADF;AASD;;AACD,aAAO,IAAP;AACD;;;sCAEiB;AAAA,UACR9D,UADQ,GACO,KAAKG,KADZ,CACRH,UADQ;AAAA,yBAEgB,KAAK5B,KAFrB;AAAA,UAER2F,SAFQ,gBAERA,SAFQ;AAAA,UAEG9E,QAFH,gBAEGA,QAFH;AAGhB,aACE;AAAM,QAAA,SAAS,YAAK8E,SAAL;AAAf,SACE;AACE,QAAA,GAAG,EAAE,mBAAQ,IAAR,EAAc,eAAd,CADP;AAEE,QAAA,QAAQ,EAAE,KAAK2B,aAFjB;AAGE,QAAA,SAAS,EAAE,KAAK9E,cAHlB;AAIE,QAAA,KAAK,EAAEZ,UAJT;AAKE,QAAA,QAAQ,EAAEf,QALZ;AAME,QAAA,SAAS,YAAK8E,SAAL,mBANX;AAOE,QAAA,IAAI,EAAC;AAPP,QADF,EAUE;AACE,QAAA,GAAG,EAAE,mBAAQ,IAAR,EAAc,qBAAd,CADP;AAEE,QAAA,SAAS,YAAKA,SAAL;AAFX,SAIG/D,UAJH,SAVF,EAgBG,sBAAW,KAAK5B,KAAhB,IAAyB,IAAzB,GAAgC,KAAKuH,2BAAL,CAAiC,CAAC,CAAC3F,UAAnC,CAhBnC,CADF;AAoBD;;;sCAEiB;AAChB,aAAO,KAAK4F,aAAZ;AACD;;;sCAEiB;AAChB,aAAO,KAAKxC,OAAL,CAAayC,eAAb,EAAP;AACD;;;4CAEuB;AACtB,aAAO,KAAKzC,OAAL,CAAa0C,eAAb,EAAP;AACD;;;6BAEQC,M,EAAQlG,G,EAAkB;AAAA;;AAAA,UAAbmG,IAAa,uEAAN,IAAM;AACjC,UAAIhH,KAAK,GAAGa,GAAZ,CADiC,CAEjC;;AACA,UAAMoG,OAAO,GACXD,IAAI,KAAK,UAAT,IACCA,IAAI,KACD,KAAK7F,KAAL,IAAc,KAAKA,KAAL,CAAWH,UAA1B,IAAyC,KAAK5B,KAAL,CAAW4B,UAAX,KAA0B+F,MAAM,CAAC/F,UADxE,CAFP;;AAIA,UAAI+F,MAAM,CAACrH,aAAP,KAAyBqH,MAAM,CAAChD,iBAAP,IAA4BkD,OAArD,CAAJ,EAAmE;AACjE,aAAKC,iBAAL,GAAyB,EAAzB;AACAlH,QAAAA,KAAK,GAAG,EAAR;AACAa,QAAAA,GAAG,CAACsG,OAAJ,CAAY,UAAA1D,CAAC,EAAI;AACf,cAAI,CAACA,CAAC,CAAC2D,WAAP,EAAoB;AAClBpH,YAAAA,KAAK,CAACqH,IAAN,CAAW5D,CAAX;AACD,WAFD,MAEO;AACL,YAAA,MAAI,CAACyD,iBAAL,CAAuBG,IAAvB,CAA4B5D,CAA5B;AACD;AACF,SAND;AAOD,OAjBgC,CAkBjC;;;AACA,UACE,CAAC,CAAC,CAACsD,MAAM,CAACrH,aAAV,IACCqH,MAAM,CAACrH,aAAP,KAAyBqH,MAAM,CAAChD,iBAAP,IAA4BkD,OAArD,CAFH,EAGE;AACA,eAAOjH,KAAP;AACD;;AACD,UAAIsH,gBAAJ;;AACA,UACE,KAAKC,cAAL,IACA,KAAK7C,qBADL,IAEA,KAAKR,aAFL,IAGA,KAAK/C,KAHL,IAIA,CAAC,KAAKA,KAAL,CAAWH,UALd,EAME;AACA,aAAKsG,gBAAL,GAAwBA,gBAAgB,GAAG,KAAKpD,aAAhD;AACD,OARD,MAQO;AACL;;;;;;;;AAQA;AACA,aAAKI,gBAAL,GAAwB,8BACtB,KAAKW,gBAAL,IAAyB8B,MAAM,CAAC1G,QADV,EAEtBL,KAAK,CAACL,GAAN,CAAU,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACI,KAAT;AAAA,SAAd,CAFsB,CAAxB;AAIA,aAAKsH,gBAAL,GAAwBA,gBAAgB,GAAG,KAAKhD,gBAAL,CAAsBN,YAAjE;AACD;;AACD,UAAMwD,SAAS,GAAG,SAAZA,SAAY,CAAAC,GAAG;AAAA,eACnBA,GAAG,CAAC9H,GAAJ,CAAQ,UAAA+H,OAAO,EAAI;AACjB,iBAAO;AACL1H,YAAAA,KAAK,EAAE,6BAAkB0H,OAAO,CAAC9E,IAA1B,CADF;AAEL7C,YAAAA,KAAK,EAAE,wBAAa2H,OAAO,CAAC9E,IAArB,EAA2BmE,MAAM,CAACZ,iBAAlC;AAFF,WAAP;AAID,SALD,CADmB;AAAA,OAArB;;AAOA,UAAM/G,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAIuI,aAAa,GAAG,EAApB;;AACA,UAAIvI,KAAK,CAACwI,mBAAN,KAA8BC,oBAAlC,EAA4C;AAC1CF,QAAAA,aAAa,GAAGH,SAAS,CAACF,gBAAD,CAAzB;AACD,OAFD,MAEO,IAAIlI,KAAK,CAACwI,mBAAN,KAA8BE,uBAAlC,EAA+C;AACpD,YAAMC,MAAM,GAAG,gCAAqBT,gBAAgB,CAAC3H,GAAjB,CAAqB,UAAA+H,OAAO;AAAA,iBAAIA,OAAO,CAAC5H,GAAZ;AAAA,SAA5B,CAArB,CAAf;AACA6H,QAAAA,aAAa,GAAGH,SAAS,CACvBF,gBAAgB,CAACU,MAAjB,CAAwB,UAAAN,OAAO;AAAA,iBAAIK,MAAM,CAACzI,OAAP,CAAeoI,OAAO,CAAC5H,GAAvB,MAAgC,CAAC,CAArC;AAAA,SAA/B,CADuB,CAAzB;AAGD,OALM,MAKA;AACL6H,QAAAA,aAAa,GAAGH,SAAS,CAACF,gBAAgB,CAACU,MAAjB,CAAwB,UAAAN,OAAO;AAAA,iBAAI,CAACA,OAAO,CAAC9E,IAAR,CAAaxD,KAAb,CAAmBiB,QAAxB;AAAA,SAA/B,CAAD,CAAzB;AACD;;AACD,aAAOsH,aAAP;AACD;;;oCAEehF,I,EAAMvD,K,EAAO;AAC3B;AAD2B,UAErB4E,YAFqB,GAEJrB,IAFI,CAErBqB,YAFqB;AAG3B,UAAIiE,cAAc,GAAGjE,YAAY,CAACmD,OAAb,CAAqB,UAAAvH,IAAI,EAAI;AAChD,YAAG,CAACA,IAAI,CAACR,KAAT,EAAe;AACbQ,UAAAA,IAAI,CAACR,KAAL,GAAaQ,IAAb;AACD;;AACD,eAAOA,IAAP;AACD,OALoB,CAArB;;AAMA,UAAIR,KAAK,CAAC2E,iBAAN,IAA2B,KAAK5C,KAAL,CAAWH,UAA1C,EAAsD;AACpD,eAAOiH,cAAP;AACD;;AACD,UAAMhE,qBAAqB,GAAGtB,IAAI,CAACsB,qBAAnC;;AACA,UAAI7E,KAAK,CAACwI,mBAAN,KAA8BC,oBAAlC,EAA4C;AAC1CI,QAAAA,cAAc,GAAGA,cAAjB;AACD,OAFD,MAEO,IAAI7I,KAAK,CAACwI,mBAAN,KAA8BE,uBAAlC,EAA+C;AACpD,YAAMC,MAAM,GAAG,gCAAqB9D,qBAAqB,CAACtE,GAAtB,CAA0B,UAAA+H,OAAO;AAAA,iBAAIA,OAAO,CAAC5H,GAAZ;AAAA,SAAjC,CAArB,CAAf;AACAmI,QAAAA,cAAc,GAAGhE,qBAAqB,CACnC+D,MADc,CACP,UAAAN,OAAO;AAAA,iBAAIK,MAAM,CAACzI,OAAP,CAAeoI,OAAO,CAAC5H,GAAvB,MAAgC,CAAC,CAArC;AAAA,SADA,EAEdH,GAFc,CAEV,UAAA+H,OAAO;AAAA,iBAAIA,OAAO,CAAC9E,IAAZ;AAAA,SAFG,CAAjB;AAGD,OALM,MAKA;AACLqF,QAAAA,cAAc,GAAGA,cAAc,CAACD,MAAf,CAAsB,UAAAzE,CAAC;AAAA,iBAAI,CAACA,CAAC,CAACnE,KAAF,CAAQiB,QAAb;AAAA,SAAvB,CAAjB;AACD;;AACD,aAAO4H,cAAP;AACD;;;uCAEkBpF,a,EAAe;AAChC,UAAMyE,gBAAgB,GAAG,KAAKA,gBAA9B;AACA,UAAIY,UAAJ;AACAZ,MAAAA,gBAAgB,CAACH,OAAjB,CAAyB,UAAAO,OAAO,EAAI;AAClC,YAAIA,OAAO,CAAC9E,IAAR,CAAaxD,KAAb,CAAmBY,KAAnB,KAA6B6C,aAAjC,EAAgD;AAC9CqF,UAAAA,UAAU,GAAGR,OAAO,CAAC5H,GAArB;AACD;AACF,OAJD;AAKA,UAAMqI,OAAO,GAAG,EAAhB;AACA,UAAMC,QAAQ,GAAG,EAAjB;AACAd,MAAAA,gBAAgB,CAACH,OAAjB,CAAyB,UAAAO,OAAO,EAAI;AAClC,YAAI,4BAAiBA,OAAO,CAAC5H,GAAzB,EAA8BoI,UAA9B,KAA6C,4BAAiBA,UAAjB,EAA6BR,OAAO,CAAC5H,GAArC,CAAjD,EAA4F;AAC1F;AACA;AACD;;AACDsI,QAAAA,QAAQ,CAACf,IAAT,CAAcK,OAAd;AACAS,QAAAA,OAAO,CAACd,IAAR,CAAaK,OAAO,CAAC9E,IAAR,CAAaxD,KAAb,CAAmBY,KAAhC;AACD,OAPD;AAQA,WAAKsH,gBAAL,GAAwB,KAAKpD,aAAL,GAAqBkE,QAA7C;AACA,UAAMC,EAAE,GAAG,KAAKlH,KAAL,CAAWnB,KAAX,CAAiBgI,MAAjB,CAAwB,UAAAnH,GAAG;AAAA,eAAIsH,OAAO,CAAC7I,OAAR,CAAgBuB,GAAG,CAACb,KAApB,MAA+B,CAAC,CAApC;AAAA,OAA3B,CAAX;AACA,WAAKwE,UAAL,CAAgB6D,EAAhB,EAAoB;AAAE1E,QAAAA,YAAY,EAAEd,aAAhB;AAA+ByF,QAAAA,KAAK,EAAE;AAAtC,OAApB;AACD;;;iCAEYrH,I,EAAMsH,S,EAAuC;AAAA;;AAAA,UAA5BC,kBAA4B,uEAAP,KAAO;AACxD,WAAKzC,eAAL;AADwD,UAEhD3G,KAFgD,GAEtC,IAFsC,CAEhDA,KAFgD,EAGxD;AACA;AACA;AACA;;AACA,UAAI,CAAC,KAAKA,KAAL,CAAWyF,uBAAX,CAAmC5D,IAAnC,EAAyC;AAAEuH,QAAAA,kBAAkB,EAAlBA;AAAF,OAAzC,CAAL,EAAuE;AACrE;AACD;;AACD,WAAKzH,QAAL,CACE;AACEE,QAAAA,IAAI,EAAJA;AADF,OADF,EAIE,YAAM;AACJ,YAAIsH,SAAS,IAAItH,IAAjB,EAAuB;AACrB;AACA;AACAwH,UAAAA,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAM;AAC3B,gBAAI1H,IAAI,IAAI,sBAAW7B,KAAX,CAAZ,EAA+B;AAC7B,kBAAMH,KAAK,GAAG,MAAI,CAACsC,eAAL,EAAd;;AACA,kBAAItC,KAAK,IAAIoC,QAAQ,CAACC,aAAT,KAA2BrC,KAAxC,EAA+C;AAC7CA,gBAAAA,KAAK,CAACwF,KAAN;AACD;AACF,aALD,MAKO,IAAI,MAAI,CAACmE,SAAT,EAAoB;AACzB,cAAA,MAAI,CAACA,SAAL,CAAenE,KAAf;AACD;AACF,WATD;AAUD;AACF,OAnBH;AAqBD;;;uCAEkB;AACjB,WAAKlD,eAAL,GAAuBkD,KAAvB;;AACA,UAAI,EAAE,gBAAgB,KAAKrF,KAAvB,CAAJ,EAAmC;AACjC,aAAK2B,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;AACF;;;oCAEe5B,K,EAAOyJ,M,EAAQ;AAAA;;AAC7B,UAAI7I,KAAK,GAAG6I,MAAZ;;AACA,UAAI,KAAKvG,cAAL,EAAJ,EAA2B;AACzBtC,QAAAA,KAAK,CAACmH,OAAN,CAAc,UAAC2B,CAAD,EAAIrF,CAAJ,EAAU;AACtB,cAAIsF,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BlJ,KAAK,CAACyD,CAAD,CAApC,MAA6C,iBAAjD,EAAoE;AAClEzD,YAAAA,KAAK,CAACyD,CAAD,CAAL,GAAW;AACTzD,cAAAA,KAAK,EAAE,EADE;AAETD,cAAAA,KAAK,EAAE;AAFE,aAAX;AAIA;AACD;;AACD+I,UAAAA,CAAC,CAAC/I,KAAF,GAAU+I,CAAC,CAAC/I,KAAF,IAAW,MAAI,CAACoJ,iBAAL,CAAuB/J,KAAvB,EAA8B0J,CAAC,CAAC9I,KAAhC,CAArB;AACD,SATD;AAUD,OAXD,MAWO;AACLA,QAAAA,KAAK,GAAGA,KAAK,CAACL,GAAN,CAAU,UAAAmJ,CAAC,EAAI;AACrB,iBAAO;AACL9I,YAAAA,KAAK,EAAE8I,CADF;AAEL/I,YAAAA,KAAK,EAAE,MAAI,CAACoJ,iBAAL,CAAuB/J,KAAvB,EAA8B0J,CAA9B;AAFF,WAAP;AAID,SALO,CAAR;AAMD;;AACD,aAAO9I,KAAP;AACD;;;sCAEiB;AAChB,UAAI,KAAKoJ,UAAT,EAAqB;AACnBC,QAAAA,YAAY,CAAC,KAAKD,UAAN,CAAZ;AACA,aAAKA,UAAL,GAAkB,IAAlB;AACD;AACF;AAED;;;;;;;mCAIeE,W,EAAa;AAC1B,UAAMlK,KAAK,GAAG,KAAKA,KAAnB;;AACA,UAAIA,KAAK,CAACa,QAAV,EAAoB;AAClB;AACD;;AACD,WAAKyE,qBAAL,GAA6B,IAA7B;;AACA,UACEtF,KAAK,CAACM,aAAN,KACCN,KAAK,CAACwI,mBAAN,KAA8BC,oBAA9B,IAA0CzI,KAAK,CAACwI,mBAAN,KAA8BE,uBADzE,KAEA,EAAE1I,KAAK,CAAC2E,iBAAN,IAA2B,KAAK5C,KAAL,CAAWH,UAAxC,CAHF,EAIE;AACA,aAAKuI,kBAAL,CAAwBD,WAAxB;AACA;AACD,OAbyB,CAc1B;AACA;AACA;;;AACA,UAAIvJ,KAAJ;AACA,UAAMC,KAAK,GAAG,KAAKmB,KAAL,CAAWnB,KAAX,CAAiBgI,MAAjB,CAAwB,UAAAwB,WAAW,EAAI;AACnD,YAAIA,WAAW,CAACxJ,KAAZ,KAAsBsJ,WAA1B,EAAuC;AACrCvJ,UAAAA,KAAK,GAAGyJ,WAAW,CAACzJ,KAApB;AACD;;AACD,eAAOyJ,WAAW,CAACxJ,KAAZ,KAAsBsJ,WAA7B;AACD,OALa,CAAd;AAMA,UAAMG,WAAW,GAAG,sBAAWrK,KAAX,CAApB;;AAEA,UAAIqK,WAAJ,EAAiB;AACf,YAAI7I,KAAK,GAAG0I,WAAZ;;AACA,YAAI,KAAKhH,cAAL,EAAJ,EAA2B;AACzB1B,UAAAA,KAAK,GAAG;AACNZ,YAAAA,KAAK,EAAEsJ,WADD;AAENvJ,YAAAA,KAAK,EAALA;AAFM,WAAR;AAID;;AACDX,QAAAA,KAAK,CAAC8D,UAAN,CAAiBtC,KAAjB;AACD;;AACD,UAAIxB,KAAK,CAACM,aAAV,EAAyB;AACvB,YAAI,KAAK4H,gBAAL,IAAyB,KAAKA,gBAAL,CAAsB5G,MAAnD,EAA2D;AACzD,eAAK4G,gBAAL,GAAwB,KAAKpD,aAAL,GAAqB,KAAKoD,gBAAL,CAAsBU,MAAtB,CAA6B,UAAApI,IAAI,EAAI;AAChF,mBAAOI,KAAK,CAACwD,IAAN,CAAW,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACzD,KAAF,KAAYJ,IAAI,CAACgD,IAAL,CAAUxD,KAAV,CAAgBY,KAAhC;AAAA,aAAZ,CAAP;AACD,WAF4C,CAA7C;AAGD;AACF;;AACD,WAAKwE,UAAL,CAAgBxE,KAAhB,EAAuB;AAAE2D,QAAAA,YAAY,EAAE2F,WAAhB;AAA6BhB,QAAAA,KAAK,EAAE;AAApC,OAAvB;AACD;;;wCAEmB;AAClB,UAAMlJ,KAAK,GAAG,KAAKA,KAAnB;;AACA,UAAIsK,gBAASC,KAAT,CAAevK,KAAK,CAACiB,QAArB,KAAkC,CAAC,sBAAWjB,KAAX,CAAvC,EAA0D;AACxD,aAAKqC,YAAL,CAAkB,IAAlB;AACD;AACF;;;+BAEUzB,K,EAAuB;AAAA;;AAAA,UAAhB0D,SAAgB,uEAAJ,EAAI;AAChC,UAAMtE,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMwK,IAAI,GAAG5J,KAAK,CAACL,GAAN,CAAU,UAAA8D,CAAC;AAAA,eAAIA,CAAC,CAACzD,KAAN;AAAA,OAAX,CAAb;AACA,UAAM6J,EAAE,GAAG,KAAK1I,KAAL,CAAWnB,KAAX,CAAiBL,GAAjB,CAAqB,UAAA8D,CAAC;AAAA,eAAIA,CAAC,CAACzD,KAAN;AAAA,OAAtB,CAAX;;AACA,UAAI4J,IAAI,CAAClJ,MAAL,KAAgBmJ,EAAE,CAACnJ,MAAnB,IAA6B,CAACkJ,IAAI,CAACE,KAAL,CAAW,UAACjJ,GAAD,EAAMhB,KAAN;AAAA,eAAgBgK,EAAE,CAAChK,KAAD,CAAF,KAAcgB,GAA9B;AAAA,OAAX,CAAlC,EAAiF;AAC/E,YAAMkJ,EAAE;AACNC,UAAAA,QAAQ,sCAAM,KAAK7I,KAAL,CAAWnB,KAAjB;AADF,WAEH0D,SAFG,CAAR;AAIA,YAAIuG,IAAI,GAAG,IAAX;AACA,YAAIC,GAAG,GAAGlK,KAAV;;AACA,YAAI,CAAC,KAAKsC,cAAL,EAAL,EAA4B;AAC1B2H,UAAAA,IAAI,GAAGjK,KAAK,CAACL,GAAN,CAAU,UAAA8D,CAAC;AAAA,mBAAIA,CAAC,CAAC1D,KAAN;AAAA,WAAX,CAAP;AACAmK,UAAAA,GAAG,GAAGA,GAAG,CAACvK,GAAJ,CAAQ,UAAAmJ,CAAC;AAAA,mBAAIA,CAAC,CAAC9I,KAAN;AAAA,WAAT,CAAN;AACD,SAHD,MAGO,IAAI,KAAKkH,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBxG,MAArD,EAA6D;AAClE,eAAKwG,iBAAL,CAAuBC,OAAvB,CAA+B,UAAA1D,CAAC,EAAI;AAClC,gBAAI,CAACyG,GAAG,CAAC1G,IAAJ,CAAS,UAAAsF,CAAC;AAAA,qBAAIA,CAAC,CAAC9I,KAAF,KAAYyD,CAAC,CAACzD,KAAlB;AAAA,aAAV,CAAL,EAAyC;AACvCkK,cAAAA,GAAG,CAAC7C,IAAJ,CAAS5D,CAAT;AACD;AACF,WAJD;AAKD;;AACD,YAAIrE,KAAK,CAACM,aAAN,IAAuBqK,EAAE,CAACzB,KAA9B,EAAqC;AACnC,cAAMxC,QAAQ,GAAG,KAAKb,gBAAL,IAAyB7F,KAAK,CAACiB,QAAhD;AACA0J,UAAAA,EAAE,CAACjG,eAAH,GAAqB,2BAAgB,gCAAqB8F,IAArB,EAA2B9D,QAA3B,CAAhB,CAArB;AACD;;AACD,YAAI1G,KAAK,CAACM,aAAN,IAAuB,KAAKyB,KAAL,CAAWH,UAAtC,EAAkD;AAChD,cAAMmJ,IAAI,uCAAO,KAAKhJ,KAAL,CAAWnB,KAAlB,CAAV;;AACA,cAAI+J,EAAE,CAAClG,OAAP,EAAgB;AACd7D,YAAAA,KAAK,CAACmH,OAAN,CAAc,UAAA1D,CAAC,EAAI;AACjB,kBAAI0G,IAAI,CAACL,KAAL,CAAW,UAAAM,EAAE;AAAA,uBAAIA,EAAE,CAACpK,KAAH,KAAayD,CAAC,CAACzD,KAAnB;AAAA,eAAb,CAAJ,EAA4C;AAC1CmK,gBAAAA,IAAI,CAAC9C,IAAL,oCAAe5D,CAAf;AACD;AACF,aAJD;AAKD,WAND,MAMO;AACL,gBAAI5D,KAAJ;;AACA,gBAAMwK,UAAU,GAAGF,IAAI,CAAC3G,IAAL,CAAU,UAACC,CAAD,EAAI6G,GAAJ,EAAY;AACvC,kBAAI7G,CAAC,CAACzD,KAAF,KAAY+J,EAAE,CAACpG,YAAnB,EAAiC;AAC/B9D,gBAAAA,KAAK,GAAGyK,GAAR;AACA,uBAAO,IAAP;AACD;AACF,aALkB,CAAnB;;AAMA,gBAAID,UAAJ,EAAgB;AACdF,cAAAA,IAAI,CAACI,MAAL,CAAY1K,KAAZ,EAAmB,CAAnB;AACD;AACF;;AACDqK,UAAAA,GAAG,GAAGC,IAAN;;AACA,cAAI,CAAC,KAAK7H,cAAL,EAAL,EAA4B;AAC1B2H,YAAAA,IAAI,GAAGE,IAAI,CAACxK,GAAL,CAAS,UAAAmJ,CAAC;AAAA,qBAAIA,CAAC,CAAC/I,KAAN;AAAA,aAAV,CAAP;AACAmK,YAAAA,GAAG,GAAGC,IAAI,CAACxK,GAAL,CAAS,UAAAmJ,CAAC;AAAA,qBAAIA,CAAC,CAAC9I,KAAN;AAAA,aAAV,CAAN;AACD;AACF;;AACD,aAAK6F,WAAL,GAAmB,sBAAWzG,KAAX,IAAoB8K,GAApB,GAA0BA,GAAG,CAAC,CAAD,CAAhD;AACA9K,QAAAA,KAAK,CAACoL,QAAN,CAAe,KAAK3E,WAApB,EAAiCoE,IAAjC,EAAuCF,EAAvC;;AACA,YAAI,EAAE,WAAW3K,KAAb,CAAJ,EAAyB;AACvB,eAAKsF,qBAAL,GAA6B,KAA7B;AACA,eAAK3D,QAAL,CAAc;AACZf,YAAAA,KAAK,EAAE,KAAKkB,QAAL,CACL9B,KADK,EAEL,mBAAQ,KAAKyG,WAAb,EAA0BlG,GAA1B,CAA8B,UAACmJ,CAAD,EAAIrF,CAAJ,EAAU;AACtC,qBAAO,MAAI,CAACnB,cAAL,KACHwG,CADG,GAEH;AACE9I,gBAAAA,KAAK,EAAE8I,CADT;AAEE/I,gBAAAA,KAAK,EAAEkK,IAAI,IAAIA,IAAI,CAACxG,CAAD;AAFrB,eAFJ;AAMD,aAPD,CAFK;AADK,WAAd;AAaD;AACF;AACF;;;qCAEgB;AAAA,yBAC4C,KAAKrE,KADjD;AAAA,UACPM,aADO,gBACPA,aADO;AAAA,UACQqE,iBADR,gBACQA,iBADR;AAAA,UAC2B0G,YAD3B,gBAC2BA,YAD3B;;AAEf,UAAI/K,aAAa,IAAIqE,iBAArB,EAAwC;AACtC,eAAO,IAAP;AACD;;AACD,aAAO0G,YAAY,IAAI,KAAvB;AACD;;;4BAEO;AACN,UAAI,CAAC,sBAAW,KAAKrL,KAAhB,CAAL,EAA6B;AAC3B,aAAKwJ,SAAL,CAAenE,KAAf;AACD,OAFD,MAEO;AACL,aAAKlD,eAAL,GAAuBkD,KAAvB;AACD;AACF;;;2BAEM;AACL,UAAI,CAAC,sBAAW,KAAKrF,KAAhB,CAAL,EAA6B;AAC3B,aAAKwJ,SAAL,CAAe8B,IAAf;AACD,OAFD,MAEO;AACL,aAAKnJ,eAAL,GAAuBmJ,IAAvB;AACD;AACF;;;kCAEa;AAAA,yBACsB,KAAKtL,KAD3B;AAAA,UACJ2F,SADI,gBACJA,SADI;AAAA,UACO4F,UADP,gBACOA,UADP;AAAA,wBAEkB,KAAKxJ,KAFvB;AAAA,UAEJnB,KAFI,eAEJA,KAFI;AAAA,UAEGgB,UAFH,eAEGA,UAFH;;AAGZ,UAAMsH,KAAK,GACT,gCAAC,kBAAD;AACE,QAAA,GAAG,EAAC,OADN;AAEE,QAAA,SAAS,YAAKvD,SAAL,WAFX;AAGE,QAAA,KAAK,EAAE6F;AAHT,SAIMC,4BAJN;AAKE,QAAA,KAAK,EAAC,QALR;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,IAAI,EAAC,OAPP;AAQE,QAAA,OAAO,EAAE,KAAKC,gBARhB;AASE,QAAA,WAAW,EAAEC;AATf,SADF;;AAaA,UAAI,CAACJ,UAAL,EAAiB;AACf,eAAO,IAAP;AACD;;AACD,UAAI3J,UAAU,IAAIhB,KAAK,CAACU,MAAxB,EAAgC;AAC9B,eAAO4H,KAAP;AACD;;AACD,aAAO,IAAP;AACD;;;2CAmBsB;AAAA;;AAAA,UACbtI,KADa,GACH,KAAKmB,KADF,CACbnB,KADa;AAErB,UAAMZ,KAAK,GAAG,KAAKA,KAAnB;AAFqB,UAGb4L,oBAHa,GAGuD5L,KAHvD,CAGb4L,oBAHa;AAAA,UAGSjG,SAHT,GAGuD3F,KAHvD,CAGS2F,SAHT;AAAA,UAGoBkG,gBAHpB,GAGuD7L,KAHvD,CAGoB6L,gBAHpB;AAAA,UAGsCC,YAHtC,GAGuD9L,KAHvD,CAGsC8L,YAHtC;AAIrB,UAAMC,QAAQ,GAAG,sBAAW/L,KAAX,CAAjB,CAJqB,CAMrB;;AACA,UAAI,CAAC+L,QAAL,EAAe;AACb,YAAM3B,WAAW,GAAGxJ,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAlC;;AADa,mBAEKwJ,WAAW,IAAI,EAFpB;AAAA,YAELzJ,KAFK,QAELA,KAFK;;AAGb,YAAMqL,SAAS,GACb;AAAM,UAAA,GAAG,EAAC,OAAV;AAAkB,UAAA,KAAK,EAAErL,KAAzB;AAAgC,UAAA,SAAS,YAAKgF,SAAL;AAAzC,WACGmG,YAAY,GAAGA,YAAY,CAACnL,KAAD,CAAf,GAAyBA,KADxC,CADF;;AAKA,eACE;AAAK,UAAA,SAAS,YAAKgF,SAAL;AAAd,WACG,KAAKsG,qBAAL,EADH,EAEGD,SAFH,EAGG,KAAKE,WAAL,EAHH,EAIGH,QAAQ,IAAI,CAAC/L,KAAK,CAACmM,SAAnB,GAA+B,IAA/B,GACC;AACE,UAAA,GAAG,EAAC,OADN;AAEE,UAAA,SAAS,YAAKxG,SAAL,WAFX;AAGE,UAAA,KAAK,EAAE6F;AAHT,WAIMC,4BAJN;AAKE,UAAA,OAAO,EAAE,KAAKW;AALhB,YAOE;AAAG,UAAA,SAAS,EAAC;AAAb,UAPF,EAQE,0CARF,CALJ,CADF;AAmBD;;AAED,UAAMC,kBAAkB,GAAGzL,KAAK,CAACL,GAAN,CAAU,UAAA6J,WAAW,EAAI;AAClD,YAAIkC,OAAO,GAAGlC,WAAW,CAACzJ,KAA1B;AACA,YAAMS,KAAK,GAAGkL,OAAd;;AACA,YAAIT,gBAAgB,IAAI,OAAOS,OAAP,KAAmB,QAAvC,IAAmDA,OAAO,CAAChL,MAAR,GAAiBuK,gBAAxE,EAA0F;AACxFS,UAAAA,OAAO,aAAMA,OAAO,CAACC,KAAR,CAAc,CAAd,EAAiBV,gBAAjB,CAAN,QAAP;AACD;;AACD,eACE;AACE,UAAA,KAAK,EAAEL;AADT,WAEMC,4BAFN;AAGE,UAAA,WAAW,EAAEE,yBAHf;AAIE,UAAA,SAAS,YAAKhG,SAAL,uBAJX;AAKE,UAAA,GAAG,EAAEyE,WAAW,CAACxJ,KALnB;AAME,UAAA,KAAK,EAAEQ;AANT,YAQE;AACE,UAAA,SAAS,YAAKuE,SAAL,+BADX;AAEE,UAAA,OAAO,EAAE,MAAI,CAAC1C,cAAL,CAAoBuJ,IAApB,CAAyB,MAAzB,EAA+BpC,WAAW,CAACxJ,KAA3C;AAFX,WAIE;AAAG,UAAA,SAAS,EAAC;AAAb,UAJF,CARF,EAcE;AAAM,UAAA,SAAS,YAAK+E,SAAL;AAAf,WAA6D2G,OAA7D,CAdF,CADF;AAkBD,OAxB0B,CAA3B;AA0BAD,MAAAA,kBAAkB,CAACpE,IAAnB,CACE;AAAI,QAAA,SAAS,YAAKtC,SAAL,qBAAyBA,SAAzB,oBAAb;AAAkE,QAAA,GAAG,EAAC;AAAtE,SACG,KAAK8G,eAAL,EADH,CADF;AAKA,UAAMC,SAAS,aAAM/G,SAAN,yBAAf;;AACA,UAAIiG,oBAAJ,EAA0B;AACxB,eACE;AAAK,UAAA,SAAS,EAAEc;AAAhB,WACE,gCAAC,mBAAD;AACE,UAAA,SAAS,EAAC,IADZ;AAEE,UAAA,cAAc,EAAEd,oBAFlB;AAGE,UAAA,OAAO,EAAE,KAAKe;AAHhB,WAKGN,kBALH,CADF,CADF;AAWD;;AACD,aAAO;AAAI,QAAA,SAAS,EAAEK;AAAf,SAA2BL,kBAA3B,CAAP;AACD;;;mCAEcrM,K,EAAO;AACpB,UAAM4M,UAAU,GAAG5M,KAAK,IAAI,KAAKA,KAAjC;;AACA,UAAI4M,UAAU,CAAClG,QAAf,EAAyB;AACvB,YAAI1G,KAAK,IAAIA,KAAK,CAAC0G,QAAN,KAAmB,KAAK1G,KAAL,CAAW0G,QAAvC,IAAmD,KAAKb,gBAA5D,EAA8E;AAC5E;AACA,eAAKsC,cAAL,GAAsB,IAAtB;AACA,iBAAO,KAAKtC,gBAAZ;AACD;;AACD,aAAKsC,cAAL,GAAsB,KAAtB;AACA,YAAIzB,QAAQ,uCAAOkG,UAAU,CAAClG,QAAlB,CAAZ,CAPuB,CAQvB;;AACA,YAAIkG,UAAU,CAACC,kBAAf,EAAmC;AACjC,cAAIC,YAAY,GAAG;AACjBC,YAAAA,EAAE,EAAE,IADa;AAEjBC,YAAAA,GAAG,EAAE,KAFY;AAGjBC,YAAAA,OAAO,EAAE;AAHQ,WAAnB;;AAKA,cAAItD,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+B8C,UAAU,CAACC,kBAA1C,MAAkE,iBAAtE,EAAyF;AACvFC,YAAAA,YAAY,sCAAQA,YAAR,MAAyBF,UAAU,CAACC,kBAApC,CAAZ;AACD;;AACDnG,UAAAA,QAAQ,GAAG,iCAAsBA,QAAtB,EAAgCoG,YAAhC,CAAX;AACD;;AACD,eAAO3M,YAAY,CAACuG,QAAD,EAAWpE,SAAX,EAAsB,KAAKtC,KAAL,CAAWM,aAAjC,CAAnB;AACD;AACF;;;mCAEc;AAAA,yBACoB,KAAKN,KADzB;AAAA,UACL2F,SADK,gBACLA,SADK;AAAA,UACM+G,SADN,gBACMA,SADN;;AAGb,UAAIA,SAAS,IAAIA,SAAS,CAACQ,QAAV,WAAsBvH,SAAtB,oBAAjB,EAAmE;AACjE,eAAO,IAAP;AACD;;AAED,aACE;AAAK,QAAA,SAAS,YAAKA,SAAL;AAAd,SACE;AAAM,QAAA,SAAS,YAAKA,SAAL;AAAf,QADF,CADF;AAKD;;;6BAEQ;AAAA;;AACP,UAAM3F,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAM+L,QAAQ,GAAG,sBAAW/L,KAAX,CAAjB;AAFO,yBAGsC,KAAK+B,KAH3C;AAAA,UAGCF,IAHD,gBAGCA,IAHD;AAAA,UAGOoE,OAHP,gBAGOA,OAHP;AAAA,UAGgBrE,UAHhB,gBAGgBA,UAHhB;AAAA,UAG4BhB,KAH5B,gBAG4BA,KAH5B;AAAA,UAIC8L,SAJD,GAI2C1M,KAJ3C,CAIC0M,SAJD;AAAA,UAIY7L,QAJZ,GAI2Cb,KAJ3C,CAIYa,QAJZ;AAAA,UAIsBF,KAJtB,GAI2CX,KAJ3C,CAIsBW,KAJtB;AAAA,UAI6BgF,SAJ7B,GAI2C3F,KAJ3C,CAI6B2F,SAJ7B;AAKP,UAAMwH,QAAQ,GAAG,KAAKC,oBAAL,EAAjB;AACA,UAAIC,mBAAmB,GAAG,EAA1B;;AACA,UAAI,CAACtB,QAAL,EAAe;AACbsB,QAAAA,mBAAmB,GAAG;AACpBC,UAAAA,SAAS,EAAE,KAAKA,SADI;AAEpBC,UAAAA,QAAQ,EAAE;AAFU,SAAtB;AAID;;AACD,UAAMC,OAAO,8DACVd,SADU,EACE,CAAC,CAACA,SADJ,8CAEV/G,SAFU,EAEE,CAFF,wDAGPA,SAHO,kBAGkB,CAHlB,wDAIPA,SAJO,YAIY9D,IAJZ,wDAKP8D,SALO,eAKe9D,IAAI,IAAIoE,OALvB,wDAMPN,SANO,iBAMiB/D,UAAU,IAAKhB,KAAK,CAACU,MAAN,IAAgBV,KAAK,CAAC,CAAD,CANrD,wDAOP+E,SAPO,iBAOiBhF,KAPjB,wDAQPgF,SARO,gBAQgBoG,QARhB,wDAUPpG,SAVO,gBAUgB9E,QAVhB,wDAWP8E,SAXO,eAWe,CAAC9E,QAXhB,wDAYP8E,SAZO,mBAYmB,CAAC,CAAC3F,KAAK,CAACuL,UAZ3B,YAAb;AAeA,aACE,gCAAC,yBAAD,gCACMvL,KADN;AAEE,QAAA,SAAS,EAAEA,KAAK,CAACiB,QAFnB;AAGE,QAAA,QAAQ,EAAE,KAAK4E,gBAHjB;AAIE,QAAA,cAAc,EAAE,KAAKsC,cAJvB;AAKE,QAAA,gBAAgB,EAAE,KAAKjD,gBALzB;AAME,QAAA,iBAAiB,EAAE,KAAK4C,iBAN1B;AAOE,QAAA,QAAQ,EAAEiE,QAPZ;AAQE,QAAA,QAAQ,EAAElL,QARZ;AASE,QAAA,OAAO,EAAEgB,IATX;AAUE,QAAA,UAAU,EAAED,UAVd;AAWE,QAAA,YAAY,EAAE,KAAK6K,eAAL,EAXhB;AAYE,QAAA,KAAK,EAAE7L,KAZT;AAaE,QAAA,uBAAuB,EAAE,KAAK6E,uBAbhC;AAcE,QAAA,iBAAiB,EAAEzF,KAAK,CAACyN,iBAd3B;AAeE,QAAA,QAAQ,EAAE,KAAK1J,QAfjB;AAgBE,QAAA,GAAG,EAAE,mBAAQ,IAAR,EAAc,SAAd;AAhBP,UAkBE;AACE,QAAA,KAAK,EAAE/D,KAAK,CAACoG,KADf;AAEE,QAAA,OAAO,EAAEpG,KAAK,CAAC0N,OAFjB;AAGE,QAAA,SAAS,EAAE,4BAAWF,OAAX,CAHb;AAIE,QAAA,MAAM,EAAExN,KAAK,CAAC2N,MAJhB;AAKE,QAAA,OAAO,EAAE3N,KAAK,CAAC4N;AALjB,SAOE;AACE,QAAA,GAAG,EAAE,mBAAQ,IAAR,EAAc,WAAd,CADP;AAEE,QAAA,GAAG,EAAC,WAFN;AAGE,QAAA,SAAS,YAAKjI,SAAL,qCACPA,SADO,yBACiBoG,QAAQ,GAAG,UAAH,GAAgB,QADzC,CAHX;AAKE,QAAA,IAAI,EAAC,UALP;AAME,6BAAkB,MANpB;AAOE,yBAAc,MAPhB;AAQE,yBAAelK;AARjB,SASMwL,mBATN,GAWGF,QAXH,EAYGpB,QAAQ,GAAG,KAAKxE,2BAAL,CAAiC,CAAC,CAAC3F,UAAF,IAAgBhB,KAAK,CAACU,MAAvD,CAAH,GAAoE,IAZ/E,CAPF,EAqBG,KAAKuM,YAAL,EArBH,CAlBF,CADF;AA4CD;;;EAlgCiCC,gB;;;iCAAfvM,M,eACAwM,0B;iCADAxM,M,kBAGG;AACpBoE,EAAAA,SAAS,EAAE,gBADS;AAEpBqI,EAAAA,cAAc,EAAEpO,QAFI;AAGpBqO,EAAAA,UAAU,EAAE,IAHQ;AAIpB1C,EAAAA,UAAU,EAAE,KAJQ;AAKpB7F,EAAAA,WAAW,EAAE,EALO;AAMpByB,EAAAA,iBAAiB,EAAE,EANC;AAOpBkE,EAAAA,YAAY,EAAE,KAPM;AAQpBqC,EAAAA,OAAO,EAAEQ,gBARW;AASpB9C,EAAAA,QAAQ,EAAE8C,gBATU;AAUpBnK,EAAAA,QAAQ,EAAEmK,gBAVU;AAWpBpK,EAAAA,UAAU,EAAEoK,gBAXQ;AAYpBlM,EAAAA,QAAQ,EAAEkM,gBAZU;AAapB/B,EAAAA,SAAS,EAAE,IAbS;AAcpBgC,EAAAA,wBAAwB,EAAE,IAdN;AAepBC,EAAAA,aAAa,EAAE,EAfK;AAgBpB3I,EAAAA,uBAAuB,EAAE,mCAAM;AAC7B,WAAO,IAAP;AACD,GAlBmB;AAmBpB4I,EAAAA,eAAe,EAAE,OAnBG;AAoBpBC,EAAAA,eAAe,EAAE,WApBG;AAqBpB9F,EAAAA,mBAAmB,EAAE+F,sBArBD;AAsBpB;AACA5J,EAAAA,iBAAiB,EAAE,KAvBC;AAwBpB6J,EAAAA,QAAQ,EAAE,KAxBU;AAyBpBC,EAAAA,QAAQ,EAAE,KAzBU;AA0BpB5B,EAAAA,kBAAkB,EAAE,KA1BA;AA2BpB6B,EAAAA,oBAAoB,EAAE,KA3BF;AA4BpBpO,EAAAA,aAAa,EAAE,KA5BK;AA6BpBL,EAAAA,kBAAkB,EAAE,OA7BA;AA8BpB8G,EAAAA,iBAAiB,EAAE;AA9BC,C;iCAHHxF,M,cAoCDkH,oB;iCApCClH,M,iBAqCEmH,uB;iCArCFnH,M,gBAsCCgN,sB","sourcesContent":["import React, { Children, Component } from 'react';\nimport { unmountComponentAtNode } from 'react-dom';\nimport classnames from 'classnames';\nimport noop from 'lodash/noop';\nimport KeyCode from '../../_util/KeyCode';\nimport Animate from '../../animate';\nimport {\n  filterAllCheckedData,\n  filterParentPosition,\n  flatToHierarchy,\n  getPropValue,\n  getTreeNodesStates,\n  getValuePropValue,\n  isMultiple,\n  isPositionPrefix,\n  labelCompatible,\n  loopAllChildren,\n  preventDefaultEvent,\n  processSimpleTreeData,\n  saveRef,\n  toArray,\n  UNSELECTABLE_ATTRIBUTE,\n  UNSELECTABLE_STYLE,\n} from './util';\nimport SelectTrigger from './SelectTrigger';\nimport _TreeNode from './TreeNode';\nimport { SHOW_ALL, SHOW_CHILD, SHOW_PARENT } from './strategies';\nimport { SelectPropTypes } from './PropTypes';\nimport Button from '../../button/Button';\nimport { getLabelFromPropsValue, getMapKey } from '../select/util';\n\nfunction filterFn(input, child) {\n  return (\n    String(getPropValue(child, labelCompatible(this.props.treeNodeFilterProp))).indexOf(input) > -1\n  );\n}\n\nfunction loopTreeData(data, level = 0, treeCheckable) {\n  return data.map((item, index) => {\n    const pos = `${level}-${index}`;\n    const {\n      label,\n      value,\n      disabled,\n      key,\n      hasOwnProperty,\n      selectable,\n      children,\n      isLeaf,\n      ...otherProps\n    } = item;\n    const props = {\n      value,\n      title: label,\n      // value: value || String(key || label), // cause onChange callback error\n      key: key || value || pos,\n      disabled: disabled || false,\n      selectable: selectable === false ? selectable : !treeCheckable,\n      ...otherProps,\n    };\n    let ret;\n    if (children && children.length) {\n      ret = <_TreeNode {...props}>{loopTreeData(children, pos, treeCheckable)}</_TreeNode>;\n    } else {\n      ret = <_TreeNode {...props} isLeaf={isLeaf} />;\n    }\n    return ret;\n  });\n}\n\nexport default class Select extends Component {\n  static propTypes = SelectPropTypes;\n\n  static defaultProps = {\n    prefixCls: 'rc-tree-select',\n    filterTreeNode: filterFn,\n    showSearch: true,\n    allowClear: false,\n    placeholder: '',\n    searchPlaceholder: '',\n    labelInValue: false,\n    onClick: noop,\n    onChange: noop,\n    onSelect: noop,\n    onDeselect: noop,\n    onSearch: noop,\n    showArrow: true,\n    dropdownMatchSelectWidth: true,\n    dropdownStyle: {},\n    onDropdownVisibleChange: () => {\n      return true;\n    },\n    optionLabelProp: 'value',\n    notFoundContent: 'Not Found',\n    showCheckedStrategy: SHOW_CHILD,\n    // skipHandleInitValue: false, // Deprecated (use treeCheckStrictly)\n    treeCheckStrictly: false,\n    treeIcon: false,\n    treeLine: false,\n    treeDataSimpleMode: false,\n    treeDefaultExpandAll: false,\n    treeCheckable: false,\n    treeNodeFilterProp: 'value',\n    treeNodeLabelProp: 'title',\n  };\n\n  static SHOW_ALL = SHOW_ALL;\n  static SHOW_PARENT = SHOW_PARENT;\n  static SHOW_CHILD = SHOW_CHILD;\n\n  constructor(props) {\n    super(props);\n    let value = [];\n    if ('value' in props) {\n      value = toArray(props.value);\n    } else {\n      value = toArray(props.defaultValue);\n    }\n    // save parsed treeData, for performance (treeData may be very big)\n    this.renderedTreeData = this.renderTreeData();\n    value = this.addLabelToValue(props, value);\n    value = this.getValue(props, value, props.inputValue ? '__strict' : true);\n    const inputValue = props.inputValue || '';\n    // if (props.combobox) {\n    //   inputValue = value.length ? String(value[0].value) : '';\n    // }\n    this.state = {\n      value,\n      inputValue,\n      open: props.open || props.defaultOpen,\n      focused: false,\n    };\n  }\n\n  componentDidMount() {\n    const { autoFocus, disabled } = this.props;\n    if (isMultiple(this.props)) {\n      const inputNode = this.getInputDOMNode();\n      if (inputNode.value) {\n        inputNode.style.width = '';\n        inputNode.style.width = `${this.inputMirrorInstance.clientWidth}px`;\n      } else {\n        inputNode.style.width = '';\n      }\n    }\n    if (autoFocus && !disabled) {\n      this.focus();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // save parsed treeData, for performance (treeData may be very big)\n    this.renderedTreeData = this.renderTreeData(nextProps);\n    // Detecting whether the object of `onChange`'s argument  is old ref.\n    // Better to do a deep equal later.\n    this._cacheTreeNodesStates =\n      this._cacheTreeNodesStates !== 'no' &&\n      this._savedValue &&\n      nextProps.value === this._savedValue;\n    if (this.props.treeData !== nextProps.treeData || this.props.children !== nextProps.children) {\n      // refresh this._treeNodesStates cache\n      this._treeNodesStates = getTreeNodesStates(\n        this.renderedTreeData || nextProps.children,\n        this.state.value.map(item => item.value),\n      );\n    }\n    if ('value' in nextProps) {\n      let value = toArray(nextProps.value);\n      value = this.addLabelToValue(nextProps, value);\n      value = this.getValue(nextProps, value);\n      this.setState({\n        value,\n      });\n      // if (nextProps.combobox) {\n      //   this.setState({\n      //     inputValue: value.length ? String(value[0].key) : '',\n      //   });\n      // }\n    }\n    if (nextProps.inputValue !== this.props.inputValue) {\n      this.setState({\n        inputValue: nextProps.inputValue,\n      });\n    }\n    if ('open' in nextProps) {\n      this.setState({\n        open: nextProps.open,\n      });\n    }\n  }\n\n  componentWillUpdate(nextProps) {\n    if (\n      this._savedValue &&\n      nextProps.value &&\n      nextProps.value !== this._savedValue &&\n      nextProps.value === this.props.value\n    ) {\n      this._cacheTreeNodesStates = false;\n      this.getValue(nextProps, this.addLabelToValue(nextProps, toArray(nextProps.value)));\n    }\n  }\n\n  componentDidUpdate() {\n    const state = this.state;\n    const props = this.props;\n    if (state.open && isMultiple(props)) {\n      const inputNode = this.getInputDOMNode();\n      if (inputNode.value) {\n        inputNode.style.width = '';\n        inputNode.style.width = `${this.inputMirrorInstance.clientWidth}px`;\n      } else {\n        inputNode.style.width = '';\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearDelayTimer();\n    if (this.dropdownContainer) {\n      unmountComponentAtNode(this.dropdownContainer);\n      document.body.removeChild(this.dropdownContainer);\n      this.dropdownContainer = null;\n    }\n  }\n\n  onInputChange = event => {\n    const val = event.target.value;\n    const { props } = this;\n    this.setState({\n      inputValue: val,\n      open: true,\n    });\n    if (props.treeCheckable && !val) {\n      this.setState({\n        value: this.getValue(props, [...this.state.value], false),\n      });\n    }\n    props.onSearch(val);\n  };\n\n  onDropdownVisibleChange = open => {\n    // selection inside combobox cause click\n    if (!open && document.activeElement === this.getInputDOMNode()) {\n      // return;\n    }\n    // this.setOpenState(open);\n    // setTimeout, then have animation. why?\n    setTimeout(() => {\n      this.setOpenState(open, undefined, !open);\n    }, 10);\n  };\n\n  // combobox ignore\n  onKeyDown = event => {\n    const props = this.props;\n    if (props.disabled) {\n      return;\n    }\n    const keyCode = event.keyCode;\n    if (this.state.open && !this.getInputDOMNode()) {\n      this.onInputKeyDown(event);\n    } else if (keyCode === KeyCode.ENTER || keyCode === KeyCode.DOWN) {\n      this.setOpenState(true);\n      event.preventDefault();\n    }\n  };\n\n  onInputKeyDown = event => {\n    const props = this.props;\n    if (props.disabled) {\n      return;\n    }\n    const state = this.state;\n    const keyCode = event.keyCode;\n    if (isMultiple(props) && !event.target.value && keyCode === KeyCode.BACKSPACE) {\n      const value = state.value.concat();\n      if (value.length) {\n        const popValue = value.pop();\n        this.removeSelected(this.isLabelInValue() ? popValue : popValue.value);\n      }\n      return;\n    }\n    if (keyCode === KeyCode.DOWN) {\n      if (!state.open) {\n        this.openIfHasChildren();\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n    } else if (keyCode === KeyCode.ESC) {\n      if (state.open) {\n        this.setOpenState(false);\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      return;\n    }\n  };\n  /**\n   * 选择值\n   */\n  onSelect = (selectedKeys, info) => {\n    const item = info.node;\n    let value = this.state.value;\n    const props = this.props;\n    const selectedValue = getValuePropValue(item);\n    const selectedLabel = this.getLabelFromNode(item);\n    const checkableSelect = props.treeCheckable && info.event === 'select';\n    let event = selectedValue;\n    if (this.isLabelInValue()) {\n      event = {\n        value: event,\n        label: selectedLabel,\n      };\n    }\n    if (info.selected === false) {\n      this.onDeselect(info);\n      if (!checkableSelect) return;\n    }\n    props.onSelect(event, item, info);\n\n    const checkEvt = info.event === 'check';\n    if (isMultiple(props)) {\n      this.clearSearchInput();\n      if (checkEvt) {\n        value = this.getCheckedNodes(info, props).map(n => {\n          return {\n            value: getValuePropValue(n),\n            label: this.getLabelFromNode(n),\n          };\n        });\n      } else {\n        if (value.some(i => i.value === selectedValue)) {\n          return;\n        }\n        value = value.concat([\n          {\n            value: selectedValue,\n            label: selectedLabel,\n          },\n        ]);\n      }\n    } else {\n      if (value.length && value[0].value === selectedValue) {\n        this.setOpenState(false);\n        return;\n      }\n      value = [\n        {\n          value: selectedValue,\n          label: selectedLabel,\n        },\n      ];\n      this.setOpenState(false);\n    }\n\n    const extraInfo = {\n      triggerValue: selectedValue,\n      triggerNode: item,\n    };\n    if (checkEvt) {\n      extraInfo.checked = info.checked;\n      // if inputValue existing, tree is checkStrictly\n      extraInfo.allCheckedNodes =\n        props.treeCheckStrictly || this.state.inputValue\n          ? info.checkedNodes\n          : flatToHierarchy(info.checkedNodesPositions);\n      this._checkedNodes = info.checkedNodesPositions;\n      const _tree = this.trigger.popupEle;\n      this._treeNodesStates = _tree.checkKeys;\n    } else {\n      extraInfo.selected = info.selected;\n    }\n\n    this.fireChange(value, extraInfo);\n    if (props.inputValue === null) {\n      this.setState({\n        inputValue: '',\n      });\n    }\n  };\n\n  onDeselect = info => {\n    this.removeSelected(getValuePropValue(info.node));\n    if (!isMultiple(this.props)) {\n      this.setOpenState(false);\n    } else {\n      this.clearSearchInput();\n    }\n  };\n\n  onPlaceholderClick = () => {\n    this.getInputDOMNode().focus();\n  };\n\n  onClearSelection = event => {\n    const props = this.props;\n    const state = this.state;\n    if (props.disabled) {\n      return;\n    }\n    event.stopPropagation();\n    this._cacheTreeNodesStates = 'no';\n    this._checkedNodes = [];\n    if (state.inputValue || state.value.length) {\n      this.setOpenState(false);\n      if (typeof props.inputValue === 'undefined') {\n        this.setState(\n          {\n            inputValue: '',\n          },\n          () => {\n            this.fireChange([]);\n          },\n        );\n      } else {\n        this.fireChange([]);\n      }\n    }\n  };\n\n  onChoiceAnimationLeave = () => {\n    this.trigger.trigger.forcePopupAlign();\n  };\n\n  getLabelFromNode(child) {\n    return getPropValue(child, this.props.treeNodeLabelProp);\n  }\n\n  getLabelFromProps(props, value) {\n    if (value === undefined) {\n      return null;\n    }\n    let label = null;\n    loopAllChildren(this.renderedTreeData || props.children, item => {\n      if (getValuePropValue(item) === value) {\n        label = this.getLabelFromNode(item);\n      }\n    });\n    if (label === null) {\n      return value;\n    }\n    return label;\n  }\n\n  getDropdownContainer() {\n    if (!this.dropdownContainer) {\n      this.dropdownContainer = document.createElement('div');\n      document.body.appendChild(this.dropdownContainer);\n    }\n    return this.dropdownContainer;\n  }\n\n  getSearchPlaceholderElement(hidden) {\n    const props = this.props;\n    let placeholder;\n    if (isMultiple(props)) {\n      placeholder = props.placeholder || props.searchPlaceholder;\n    } else {\n      placeholder = props.searchPlaceholder;\n    }\n    if (placeholder) {\n      return (\n        <span\n          style={{ display: hidden ? 'none' : 'block' }}\n          onClick={this.onPlaceholderClick}\n          className={`${props.prefixCls}-search__field__placeholder`}\n        >\n          {placeholder}\n        </span>\n      );\n    }\n    return null;\n  }\n\n  getInputElement() {\n    const { inputValue } = this.state;\n    const { prefixCls, disabled } = this.props;\n    return (\n      <span className={`${prefixCls}-search__field__wrap`}>\n        <input\n          ref={saveRef(this, 'inputInstance')}\n          onChange={this.onInputChange}\n          onKeyDown={this.onInputKeyDown}\n          value={inputValue}\n          disabled={disabled}\n          className={`${prefixCls}-search__field`}\n          role=\"textbox\"\n        />\n        <span\n          ref={saveRef(this, 'inputMirrorInstance')}\n          className={`${prefixCls}-search__field__mirror`}\n        >\n          {inputValue}&nbsp;\n        </span>\n        {isMultiple(this.props) ? null : this.getSearchPlaceholderElement(!!inputValue)}\n      </span>\n    );\n  }\n\n  getInputDOMNode() {\n    return this.inputInstance;\n  }\n\n  getPopupDOMNode() {\n    return this.trigger.getPopupDOMNode();\n  }\n\n  getPopupComponentRefs() {\n    return this.trigger.getPopupEleRefs();\n  }\n\n  getValue(_props, val, init = true) {\n    let value = val;\n    // if inputValue existing, tree is checkStrictly\n    const _strict =\n      init === '__strict' ||\n      (init &&\n        ((this.state && this.state.inputValue) || this.props.inputValue !== _props.inputValue));\n    if (_props.treeCheckable && (_props.treeCheckStrictly || _strict)) {\n      this.halfCheckedValues = [];\n      value = [];\n      val.forEach(i => {\n        if (!i.halfChecked) {\n          value.push(i);\n        } else {\n          this.halfCheckedValues.push(i);\n        }\n      });\n    }\n    // if (!(_props.treeCheckable && !_props.treeCheckStrictly)) {\n    if (\n      !!!_props.treeCheckable ||\n      (_props.treeCheckable && (_props.treeCheckStrictly || _strict))\n    ) {\n      return value;\n    }\n    let checkedTreeNodes;\n    if (\n      this._cachetreeData &&\n      this._cacheTreeNodesStates &&\n      this._checkedNodes &&\n      this.state &&\n      !this.state.inputValue\n    ) {\n      this.checkedTreeNodes = checkedTreeNodes = this._checkedNodes;\n    } else {\n      /**\n       * Note: `this._treeNodesStates`'s treeNodesStates must correspond to nodes of the\n       * final tree (`processTreeNode` function from SelectTrigger.jsx produce the final tree).\n       *\n       * And, `this._treeNodesStates` from `onSelect` is previous value,\n       * so it perhaps only have a few nodes, but the newly filtered tree can have many nodes,\n       * thus, you cannot use previous _treeNodesStates.\n       */\n      // getTreeNodesStates is not effective.\n      this._treeNodesStates = getTreeNodesStates(\n        this.renderedTreeData || _props.children,\n        value.map(item => item.value),\n      );\n      this.checkedTreeNodes = checkedTreeNodes = this._treeNodesStates.checkedNodes;\n    }\n    const mapLabVal = arr =>\n      arr.map(itemObj => {\n        return {\n          value: getValuePropValue(itemObj.node),\n          label: getPropValue(itemObj.node, _props.treeNodeLabelProp),\n        };\n      });\n    const props = this.props;\n    let checkedValues = [];\n    if (props.showCheckedStrategy === SHOW_ALL) {\n      checkedValues = mapLabVal(checkedTreeNodes);\n    } else if (props.showCheckedStrategy === SHOW_PARENT) {\n      const posArr = filterParentPosition(checkedTreeNodes.map(itemObj => itemObj.pos));\n      checkedValues = mapLabVal(\n        checkedTreeNodes.filter(itemObj => posArr.indexOf(itemObj.pos) !== -1),\n      );\n    } else {\n      checkedValues = mapLabVal(checkedTreeNodes.filter(itemObj => !itemObj.node.props.children));\n    }\n    return checkedValues;\n  }\n\n  getCheckedNodes(info, props) {\n    // TODO treeCheckable does not support tags/dynamic\n    let { checkedNodes } = info;\n    let checkNodeProps = checkedNodes.forEach(item => {\n      if(!item.props){\n        item.props = item\n      }\n      return item\n    })\n    if (props.treeCheckStrictly || this.state.inputValue) {\n      return checkNodeProps;\n    }\n    const checkedNodesPositions = info.checkedNodesPositions;\n    if (props.showCheckedStrategy === SHOW_ALL) {\n      checkNodeProps = checkNodeProps;\n    } else if (props.showCheckedStrategy === SHOW_PARENT) {\n      const posArr = filterParentPosition(checkedNodesPositions.map(itemObj => itemObj.pos));\n      checkNodeProps = checkedNodesPositions\n        .filter(itemObj => posArr.indexOf(itemObj.pos) !== -1)\n        .map(itemObj => itemObj.node);\n    } else {\n      checkNodeProps = checkNodeProps.filter(n => !n.props.children);\n    }\n    return checkNodeProps;\n  }\n\n  getDeselectedValue(selectedValue) {\n    const checkedTreeNodes = this.checkedTreeNodes;\n    let unCheckPos;\n    checkedTreeNodes.forEach(itemObj => {\n      if (itemObj.node.props.value === selectedValue) {\n        unCheckPos = itemObj.pos;\n      }\n    });\n    const newVals = [];\n    const newCkTns = [];\n    checkedTreeNodes.forEach(itemObj => {\n      if (isPositionPrefix(itemObj.pos, unCheckPos) || isPositionPrefix(unCheckPos, itemObj.pos)) {\n        // Filter ancestral and children nodes when uncheck a node.\n        return;\n      }\n      newCkTns.push(itemObj);\n      newVals.push(itemObj.node.props.value);\n    });\n    this.checkedTreeNodes = this._checkedNodes = newCkTns;\n    const nv = this.state.value.filter(val => newVals.indexOf(val.value) !== -1);\n    this.fireChange(nv, { triggerValue: selectedValue, clear: true });\n  }\n\n  setOpenState(open, needFocus, documentClickClose = false) {\n    this.clearDelayTimer();\n    const { props } = this;\n    // can not optimize, if children is empty\n    // if (this.state.open === open) {\n    //   return;\n    // }\n    if (!this.props.onDropdownVisibleChange(open, { documentClickClose })) {\n      return;\n    }\n    this.setState(\n      {\n        open,\n      },\n      () => {\n        if (needFocus || open) {\n          // Input dom init after first time component render\n          // Add delay for this to get focus\n          Promise.resolve().then(() => {\n            if (open || isMultiple(props)) {\n              const input = this.getInputDOMNode();\n              if (input && document.activeElement !== input) {\n                input.focus();\n              }\n            } else if (this.selection) {\n              this.selection.focus();\n            }\n          });\n        }\n      },\n    );\n  }\n\n  clearSearchInput() {\n    this.getInputDOMNode().focus();\n    if (!('inputValue' in this.props)) {\n      this.setState({ inputValue: '' });\n    }\n  }\n\n  addLabelToValue(props, value_) {\n    let value = value_;\n    if (this.isLabelInValue()) {\n      value.forEach((v, i) => {\n        if (Object.prototype.toString.call(value[i]) !== '[object Object]') {\n          value[i] = {\n            value: '',\n            label: '',\n          };\n          return;\n        }\n        v.label = v.label || this.getLabelFromProps(props, v.value);\n      });\n    } else {\n      value = value.map(v => {\n        return {\n          value: v,\n          label: this.getLabelFromProps(props, v),\n        };\n      });\n    }\n    return value;\n  }\n\n  clearDelayTimer() {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n  }\n\n  /**\n   * 移除select值\n   * @param {*} selectedVal \n   */\n  removeSelected(selectedVal) {\n    const props = this.props;\n    if (props.disabled) {\n      return;\n    }\n    this._cacheTreeNodesStates = 'no';\n    if (\n      props.treeCheckable &&\n      (props.showCheckedStrategy === SHOW_ALL || props.showCheckedStrategy === SHOW_PARENT) &&\n      !(props.treeCheckStrictly || this.state.inputValue)\n    ) {\n      this.getDeselectedValue(selectedVal);\n      return;\n    }\n    // click the node's `x`(in select box), likely trigger the TreeNode's `unCheck` event,\n    // cautiously, they are completely different, think about it, the tree may not render at first,\n    // but the nodes in select box are ready.\n    let label;\n    const value = this.state.value.filter(singleValue => {\n      if (singleValue.value === selectedVal) {\n        label = singleValue.label;\n      }\n      return singleValue.value !== selectedVal;\n    });\n    const canMultiple = isMultiple(props);\n\n    if (canMultiple) {\n      let event = selectedVal;\n      if (this.isLabelInValue()) {\n        event = {\n          value: selectedVal,\n          label,\n        };\n      }\n      props.onDeselect(event);\n    }\n    if (props.treeCheckable) {\n      if (this.checkedTreeNodes && this.checkedTreeNodes.length) {\n        this.checkedTreeNodes = this._checkedNodes = this.checkedTreeNodes.filter(item => {\n          return value.some(i => i.value === item.node.props.value);\n        });\n      }\n    }\n    this.fireChange(value, { triggerValue: selectedVal, clear: true });\n  }\n\n  openIfHasChildren() {\n    const props = this.props;\n    if (Children.count(props.children) || !isMultiple(props)) {\n      this.setOpenState(true);\n    }\n  }\n\n  fireChange(value, extraInfo = {}) {\n    const props = this.props;\n    const vals = value.map(i => i.value);\n    const sv = this.state.value.map(i => i.value);\n    if (vals.length !== sv.length || !vals.every((val, index) => sv[index] === val)) {\n      const ex = {\n        preValue: [...this.state.value],\n        ...extraInfo,\n      };\n      let labs = null;\n      let vls = value;\n      if (!this.isLabelInValue()) {\n        labs = value.map(i => i.label);\n        vls = vls.map(v => v.value);\n      } else if (this.halfCheckedValues && this.halfCheckedValues.length) {\n        this.halfCheckedValues.forEach(i => {\n          if (!vls.some(v => v.value === i.value)) {\n            vls.push(i);\n          }\n        });\n      }\n      if (props.treeCheckable && ex.clear) {\n        const treeData = this.renderedTreeData || props.children;\n        ex.allCheckedNodes = flatToHierarchy(filterAllCheckedData(vals, treeData));\n      }\n      if (props.treeCheckable && this.state.inputValue) {\n        const _vls = [...this.state.value];\n        if (ex.checked) {\n          value.forEach(i => {\n            if (_vls.every(ii => ii.value !== i.value)) {\n              _vls.push({ ...i });\n            }\n          });\n        } else {\n          let index;\n          const includeVal = _vls.some((i, ind) => {\n            if (i.value === ex.triggerValue) {\n              index = ind;\n              return true;\n            }\n          });\n          if (includeVal) {\n            _vls.splice(index, 1);\n          }\n        }\n        vls = _vls;\n        if (!this.isLabelInValue()) {\n          labs = _vls.map(v => v.label);\n          vls = _vls.map(v => v.value);\n        }\n      }\n      this._savedValue = isMultiple(props) ? vls : vls[0];\n      props.onChange(this._savedValue, labs, ex);\n      if (!('value' in props)) {\n        this._cacheTreeNodesStates = false;\n        this.setState({\n          value: this.getValue(\n            props,\n            toArray(this._savedValue).map((v, i) => {\n              return this.isLabelInValue()\n                ? v\n                : {\n                    value: v,\n                    label: labs && labs[i],\n                  };\n            }),\n          ),\n        });\n      }\n    }\n  }\n\n  isLabelInValue() {\n    const { treeCheckable, treeCheckStrictly, labelInValue } = this.props;\n    if (treeCheckable && treeCheckStrictly) {\n      return true;\n    }\n    return labelInValue || false;\n  }\n\n  focus() {\n    if (!isMultiple(this.props)) {\n      this.selection.focus();\n    } else {\n      this.getInputDOMNode().focus();\n    }\n  }\n\n  blur() {\n    if (!isMultiple(this.props)) {\n      this.selection.blur();\n    } else {\n      this.getInputDOMNode().blur();\n    }\n  }\n\n  renderClear() {\n    const { prefixCls, allowClear } = this.props;\n    const { value, inputValue } = this.state;\n    const clear = (\n      <Button\n        key=\"clear\"\n        className={`${prefixCls}-clear`}\n        style={UNSELECTABLE_STYLE}\n        {...UNSELECTABLE_ATTRIBUTE}\n        shape=\"circle\"\n        icon=\"close\"\n        size=\"small\"\n        onClick={this.onClearSelection}\n        onMouseDown={preventDefaultEvent}\n      />\n    );\n    if (!allowClear) {\n      return null;\n    }\n    if (inputValue || value.length) {\n      return clear;\n    }\n    return null;\n  }\n\n  onArrowClick = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (!this.props.disabled) {\n      this.onDropdownVisibleChange(!this.state.open);\n    }\n  };\n\n  getPlaceholderElement = () => {\n    const { props, state } = this;\n    const placeholder = props.placeholder;\n    if (placeholder) {\n      return <div className={`${props.prefixCls}-selection__placeholder`}>{placeholder}</div>;\n    }\n    return null;\n  };\n\n  renderTopControlNode() {\n    const { value } = this.state;\n    const props = this.props;\n    const { choiceTransitionName, prefixCls, maxTagTextLength, choiceRender } = props;\n    const multiple = isMultiple(props);\n\n    // single and not combobox, input is inside dropdown\n    if (!multiple) {\n      const singleValue = value && value[0];\n      const { label } = singleValue || {};\n      const innerNode = (\n        <span key=\"value\" title={label} className={`${prefixCls}-selection-selected-value`}>\n          {choiceRender ? choiceRender(label) : label}\n        </span>\n      );\n      return (\n        <div className={`${prefixCls}-selection__rendered`}>\n          {this.getPlaceholderElement()}\n          {innerNode}\n          {this.renderClear()}\n          {multiple || !props.showArrow ? null : (\n            <span\n              key=\"arrow\"\n              className={`${prefixCls}-arrow`}\n              style={UNSELECTABLE_STYLE}\n              {...UNSELECTABLE_ATTRIBUTE}\n              onClick={this.onArrowClick}\n            >\n              <i className=\"icon icon-arrow_drop_down\"></i>\n              <b />\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    const selectedValueNodes = value.map(singleValue => {\n      let content = singleValue.label;\n      const title = content;\n      if (maxTagTextLength && typeof content === 'string' && content.length > maxTagTextLength) {\n        content = `${content.slice(0, maxTagTextLength)}...`;\n      }\n      return (\n        <li\n          style={UNSELECTABLE_STYLE}\n          {...UNSELECTABLE_ATTRIBUTE}\n          onMouseDown={preventDefaultEvent}\n          className={`${prefixCls}-selection__choice`}\n          key={singleValue.value}\n          title={title}\n        >\n          <span\n            className={`${prefixCls}-selection__choice__remove`}\n            onClick={this.removeSelected.bind(this, singleValue.value)}\n          >\n            <i className=\"icon icon-cancel\" />\n          </span>\n          <span className={`${prefixCls}-selection__choice__content`}>{content}</span>\n        </li>\n      );\n    });\n\n    selectedValueNodes.push(\n      <li className={`${prefixCls}-search ${prefixCls}-search--inline`} key=\"__input\">\n        {this.getInputElement()}\n      </li>,\n    );\n    const className = `${prefixCls}-selection__rendered`;\n    if (choiceTransitionName) {\n      return (\n        <div className={className}>\n          <Animate\n            component=\"ul\"\n            transitionName={choiceTransitionName}\n            onLeave={this.onChoiceAnimationLeave}\n          >\n            {selectedValueNodes}\n          </Animate>\n        </div>\n      );\n    }\n    return <ul className={className}>{selectedValueNodes}</ul>;\n  }\n\n  renderTreeData(props) {\n    const validProps = props || this.props;\n    if (validProps.treeData) {\n      if (props && props.treeData === this.props.treeData && this.renderedTreeData) {\n        // cache and use pre data.\n        this._cachetreeData = true;\n        return this.renderedTreeData;\n      }\n      this._cachetreeData = false;\n      let treeData = [...validProps.treeData];\n      // process treeDataSimpleMode\n      if (validProps.treeDataSimpleMode) {\n        let simpleFormat = {\n          id: 'id',\n          pId: 'pId',\n          rootPId: null,\n        };\n        if (Object.prototype.toString.call(validProps.treeDataSimpleMode) === '[object Object]') {\n          simpleFormat = { ...simpleFormat, ...validProps.treeDataSimpleMode };\n        }\n        treeData = processSimpleTreeData(treeData, simpleFormat);\n      }\n      return loopTreeData(treeData, undefined, this.props.treeCheckable);\n    }\n  }\n\n  getUnderLine() {\n    const { prefixCls, className } = this.props;\n\n    if (className && className.includes(`${prefixCls}-auto-complete`)) {\n      return null;\n    }\n\n    return (\n      <div className={`${prefixCls}-underline`}>\n        <span className={`${prefixCls}-ripple`} />\n      </div>\n    );\n  }\n\n  render() {\n    const props = this.props;\n    const multiple = isMultiple(props);\n    const { open, focused, inputValue, value } = this.state;\n    const { className, disabled, label, prefixCls } = props;\n    const ctrlNode = this.renderTopControlNode();\n    let extraSelectionProps = {};\n    if (!multiple) {\n      extraSelectionProps = {\n        onKeyDown: this.onKeyDown,\n        tabIndex: 0,\n      };\n    }\n    const rootCls = {\n      [className]: !!className,\n      [prefixCls]: 1,\n      [`${prefixCls}-has-border`]: 1,\n      [`${prefixCls}-open`]: open,\n      [`${prefixCls}-focused`]: open || focused,\n      [`${prefixCls}-has-value`]: inputValue || (value.length && value[0]),\n      [`${prefixCls}-has-label`]: label,\n      [`${prefixCls}-multiple`]: multiple,\n      // [`${prefixCls}-combobox`]: isCombobox(props),\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-enabled`]: !disabled,\n      [`${prefixCls}-allow-clear`]: !!props.allowClear,\n    };\n\n    return (\n      <SelectTrigger\n        {...props}\n        treeNodes={props.children}\n        treeData={this.renderedTreeData}\n        _cachetreeData={this._cachetreeData}\n        _treeNodesStates={this._treeNodesStates}\n        halfCheckedValues={this.halfCheckedValues}\n        multiple={multiple}\n        disabled={disabled}\n        visible={open}\n        inputValue={inputValue}\n        inputElement={this.getInputElement()}\n        value={value}\n        onDropdownVisibleChange={this.onDropdownVisibleChange}\n        getPopupContainer={props.getPopupContainer}\n        onSelect={this.onSelect}\n        ref={saveRef(this, 'trigger')}\n      >\n        <div\n          style={props.style}\n          onClick={props.onClick}\n          className={classnames(rootCls)}\n          onBlur={props.onBlur}\n          onFocus={props.onFocus}\n        >\n          <div\n            ref={saveRef(this, 'selection')}\n            key=\"selection\"\n            className={`${prefixCls}-selection\n            ${prefixCls}-selection--${multiple ? 'multiple' : 'single'}`}\n            role=\"combobox\"\n            aria-autocomplete=\"list\"\n            aria-haspopup=\"true\"\n            aria-expanded={open}\n            {...extraSelectionProps}\n          >\n            {ctrlNode}\n            {multiple ? this.getSearchPlaceholderElement(!!inputValue || value.length) : null}\n          </div>\n          {this.getUnderLine()}\n        </div>\n      </SelectTrigger>\n    );\n  }\n}\n"]}