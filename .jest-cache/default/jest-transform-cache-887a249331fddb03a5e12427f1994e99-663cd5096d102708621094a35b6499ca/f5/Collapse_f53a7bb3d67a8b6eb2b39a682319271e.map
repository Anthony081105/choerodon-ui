{"version":3,"sources":["Collapse.jsx"],"names":["toArray","activeKey","currentActiveKey","Array","isArray","Collapse","props","defaultActiveKey","state","openAnimation","prefixCls","nextProps","setState","key","accordion","index","indexOf","isActive","splice","push","setActiveKey","destroyInactivePanel","expandIcon","newChildren","Children","forEach","children","child","String","header","headerClass","disabled","trigger","onItemClick","onClickItem","onChange","className","style","collapseClassName","getItems","Component","PropTypes","any","string","oneOfType","arrayOf","object","func","bool","CollapsePanel"],"mappings":"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","sourcesContent":["import React, { Children, cloneElement, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getConfig } from 'choerodon-ui/lib/configure';\nimport CollapsePanel from './Panel';\nimport openAnimationFactory from './openAnimationFactory';\n\nfunction toArray(activeKey) {\n  let currentActiveKey = activeKey;\n  if (!Array.isArray(currentActiveKey)) {\n    currentActiveKey = currentActiveKey ? [currentActiveKey] : [];\n  }\n  return currentActiveKey;\n}\n\nexport default class Collapse extends Component {\n  static propTypes = {\n    children: PropTypes.any,\n    prefixCls: PropTypes.string,\n    activeKey: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n    defaultActiveKey: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n    openAnimation: PropTypes.object,\n    onChange: PropTypes.func,\n    accordion: PropTypes.bool,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    destroyInactivePanel: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    prefixCls: 'rc-collapse',\n    onChange() {\n    },\n    accordion: false,\n    destroyInactivePanel: false,\n  };\n\n  static Panel = CollapsePanel;\n\n  constructor(props) {\n    super(props);\n\n    const { activeKey, defaultActiveKey } = this.props;\n    let currentActiveKey = defaultActiveKey;\n    if ('activeKey' in this.props) {\n      currentActiveKey = activeKey;\n    }\n\n    this.state = {\n      openAnimation: this.props.openAnimation || openAnimationFactory(this.props.prefixCls),\n      activeKey: toArray(currentActiveKey),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ('activeKey' in nextProps) {\n      this.setState({\n        activeKey: toArray(nextProps.activeKey),\n      });\n    }\n    if ('openAnimation' in nextProps) {\n      this.setState({\n        openAnimation: nextProps.openAnimation,\n      });\n    }\n  }\n\n  onClickItem(key) {\n    let activeKey = this.state.activeKey;\n    if (this.props.accordion) {\n      activeKey = activeKey[0] === key ? [] : [key];\n    } else {\n      activeKey = [...activeKey];\n      const index = activeKey.indexOf(key);\n      const isActive = index > -1;\n      if (isActive) {\n        // remove active state\n        activeKey.splice(index, 1);\n      } else {\n        activeKey.push(key);\n      }\n    }\n    this.setActiveKey(activeKey);\n  }\n\n  getItems() {\n    const activeKey = this.state.activeKey;\n    const { prefixCls, accordion, destroyInactivePanel, expandIcon } = this.props;\n    const newChildren = [];\n\n    Children.forEach(this.props.children, (child, index) => {\n      if (!child) return;\n      // If there is no key provide, use the panel order as default key\n      const key = child.key || String(index);\n      const { header, headerClass, disabled } = child.props;\n      let isActive = false;\n      if (accordion) {\n        isActive = activeKey[0] === key;\n      } else {\n        isActive = activeKey.indexOf(key) > -1;\n      }\n\n      const trigger = this.props.trigger || getConfig('collapseTrigger');\n\n      const props = {\n        key,\n        header,\n        headerClass,\n        isActive,\n        prefixCls,\n        destroyInactivePanel,\n        openAnimation: this.state.openAnimation,\n        children: child.props.children,\n        onItemClick: disabled ? null : () => this.onClickItem(key),\n        expandIcon,\n        trigger,\n      };\n\n      newChildren.push(cloneElement(child, props));\n    });\n\n    return newChildren;\n  }\n\n  setActiveKey(activeKey) {\n    if (!('activeKey' in this.props)) {\n      this.setState({ activeKey });\n    }\n    this.props.onChange(this.props.accordion ? activeKey[0] : activeKey);\n  }\n\n  render() {\n    const { prefixCls, className, style, accordion } = this.props;\n    const collapseClassName = classNames({\n      [prefixCls]: true,\n      [className]: !!className,\n    });\n    return (\n      <div className={collapseClassName} style={style} role={accordion ? 'tablist' : null}>\n        {this.getItems()}\n      </div>\n    );\n  }\n}\n"]}