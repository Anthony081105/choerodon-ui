{"version":3,"sources":["tooltip/index.js"],"names":["splitObject","picked","omited","keys","obj","key","Tooltip","Component","onVisibleChange","visible","placements","placement","align","rect","domNode","transformOrigin","top","left","props","defaultVisible","nextProps","builtinPlacements","arrowPointAtCenter","autoAdjustOverflow","verticalArrowShift","trigger","Array","element","elementType","spanStyle","display","cursor","buttonStyle","pointerEvents","child","style","className","title","overlay","state","customizePrefixCls","openClassName","getPopupContainer","getTooltipContainer","prefixCls","children","React","childProps","childCls","RcTooltip","ref","onPopupAlign","transitionName","mouseEnterDelay","mouseLeaveDelay"],"mappings":"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","sourcesContent":["import React, { cloneElement, Component, isValidElement, } from 'react';\nimport classNames from 'classnames';\nimport getPlacements from './placements';\nimport RcTooltip from '../rc-components/tooltip';\nimport { getPrefixCls } from '../configure';\nconst splitObject = (obj, keys) => {\n    const picked = {};\n    const omited = { ...obj };\n    keys.forEach(key => {\n        if (obj && key in obj) {\n            picked[key] = obj[key];\n            delete omited[key];\n        }\n    });\n    return { picked, omited };\n};\nexport default class Tooltip extends Component {\n    constructor(props) {\n        super(props);\n        this.onVisibleChange = (visible) => {\n            const { onVisibleChange } = this.props;\n            if (!('visible' in this.props)) {\n                this.setState({ visible: this.isNoTitle() ? false : visible });\n            }\n            if (onVisibleChange && !this.isNoTitle()) {\n                onVisibleChange(visible);\n            }\n        };\n        // 动态设置动画点\n        this.onPopupAlign = (domNode, align) => {\n            const placements = this.getPlacements();\n            // 当前返回的位置\n            const placement = Object.keys(placements).filter(key => placements[key].points[0] === align.points[0] &&\n                placements[key].points[1] === align.points[1])[0];\n            if (!placement) {\n                return;\n            }\n            // 根据当前坐标设置动画点\n            const rect = domNode.getBoundingClientRect();\n            const transformOrigin = {\n                top: '50%',\n                left: '50%',\n            };\n            if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {\n                transformOrigin.top = `${rect.height - align.offset[1]}px`;\n            }\n            else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {\n                transformOrigin.top = `${-align.offset[1]}px`;\n            }\n            if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {\n                transformOrigin.left = `${rect.width - align.offset[0]}px`;\n            }\n            else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {\n                transformOrigin.left = `${-align.offset[0]}px`;\n            }\n            domNode.style.transformOrigin = `${transformOrigin.left} ${transformOrigin.top}`;\n        };\n        this.saveTooltip = (node) => {\n            this.tooltip = node;\n        };\n        this.state = {\n            visible: !!props.visible || !!props.defaultVisible,\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        if ('visible' in nextProps) {\n            this.setState({ visible: nextProps.visible });\n        }\n    }\n    getPopupDomNode() {\n        return this.tooltip.getPopupDomNode();\n    }\n    getPlacements() {\n        const { builtinPlacements, arrowPointAtCenter, autoAdjustOverflow } = this.props;\n        return (builtinPlacements ||\n            getPlacements({\n                arrowPointAtCenter,\n                verticalArrowShift: 8,\n                autoAdjustOverflow,\n            }));\n    }\n    isHoverTrigger() {\n        const { trigger } = this.props;\n        if (!trigger || trigger === 'hover') {\n            return true;\n        }\n        if (Array.isArray(trigger)) {\n            return trigger.indexOf('hover') >= 0;\n        }\n        return false;\n    }\n    // Fix Tooltip won't hide at disabled button\n    // mouse events don't trigger at disabled button in Chrome\n    // https://github.com/react-component/tooltip/issues/18\n    getDisabledCompatibleChildren(element) {\n        const elementType = element.type;\n        if (((elementType.__Pro_BUTTON === true ||\n            elementType.__Pro_SWITCH === true ||\n            elementType.__Pro_CHECKBOX === true ||\n            element.type.__ANT_BUTTON ||\n            element.type === 'button') &&\n            element.props.disabled) &&\n            element.props.disabled &&\n            this.isHoverTrigger()) {\n            // Pick some layout related style properties up to span\n            const { picked, omited } = splitObject(element.props.style, [\n                'position',\n                'left',\n                'right',\n                'top',\n                'bottom',\n                'float',\n                'display',\n                'zIndex',\n            ]);\n            const spanStyle = {\n                display: 'inline-block',\n                ...picked,\n                cursor: 'not-allowed',\n            };\n            const buttonStyle = {\n                ...omited,\n                pointerEvents: 'none',\n            };\n            const child = cloneElement(element, {\n                style: buttonStyle,\n                className: null,\n            });\n            return (React.createElement(\"span\", { style: spanStyle, className: element.props.className }, child));\n        }\n        return element;\n    }\n    isNoTitle() {\n        const { title, overlay } = this.props;\n        return !title && !overlay; // overlay for old version compatibility\n    }\n    render() {\n        const { props, state } = this;\n        const { prefixCls: customizePrefixCls, title, overlay, openClassName, getPopupContainer, getTooltipContainer, } = props;\n        const prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n        const children = props.children;\n        let visible = state.visible;\n        // Hide tooltip when there is no title\n        if (!('visible' in props) && this.isNoTitle()) {\n            visible = false;\n        }\n        const child = this.getDisabledCompatibleChildren(isValidElement(children) ? children : React.createElement(\"span\", null, children));\n        const childProps = child.props;\n        const childCls = classNames(childProps.className, {\n            [openClassName || `${prefixCls}-open`]: true,\n        });\n        return (React.createElement(RcTooltip, Object.assign({}, this.props, { prefixCls: prefixCls, getTooltipContainer: getPopupContainer || getTooltipContainer, ref: this.saveTooltip, builtinPlacements: this.getPlacements(), overlay: overlay || title || '', visible: visible, onVisibleChange: this.onVisibleChange, onPopupAlign: this.onPopupAlign }), visible ? cloneElement(child, { className: childCls }) : child));\n    }\n}\nTooltip.displayName = 'Tooltip';\nTooltip.defaultProps = {\n    placement: 'top',\n    transitionName: 'zoom-big-fast',\n    mouseEnterDelay: 0.1,\n    mouseLeaveDelay: 0.1,\n    arrowPointAtCenter: false,\n    autoAdjustOverflow: true,\n};\n"]}