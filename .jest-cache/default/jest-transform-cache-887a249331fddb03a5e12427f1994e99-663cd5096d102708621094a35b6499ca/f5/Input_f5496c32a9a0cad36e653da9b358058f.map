{"version":3,"sources":["input/Input.js"],"names":["value","Input","Component","onPressEnter","onKeyDown","e","onFocus","readOnly","focused","onBlur","onChange","onCopy","document","showPassword","props","autoFocus","nextProps","rendered","suffix","prefix","margin","width","suffixWidth","prefixWidth","prefixCls","size","copy","className","onClick","handleCopy","Icon","type","handleTogglePassword","otherProps","fixControlledValue","ref","maxLength","showLengthInfo","inputLength","placeholder","label","border","name","disabled","style","showPasswordEye","saveRenderedRef","PropTypes","id","defaultValue","addonBefore","addonAfter","autosize","onKeyUp","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAA,kBAAA,CAAA,KAAA,EAAmC;AAC/B,MAAI,OAAA,KAAA,KAAA,WAAA,IAAgCA,KAAK,KAAzC,IAAA,EAAoD;AAChD,WAAA,EAAA;AACH;;AACD,SAAA,KAAA;AACH;;IACoBC,K;;;;;;;AACjB,WAAA,KAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,KAAA;;AAAA,KAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,IAAA,EAAA,KAAA;AACf,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AACA,IAAA,KAAA,CAAA,aAAA,GAAqB,UAAA,CAAA,EAAO;AAAA,UAAA,WAAA,GACY,KAAA,CADZ,KAAA;AAAA,UAChBE,YADgB,GAAA,WAAA,CAAA,YAAA;AAAA,UACFC,SADE,GAAA,WAAA,CAAA,SAAA;;AAExB,UAAIC,CAAC,CAADA,OAAAA,KAAAA,EAAAA,IAAJ,YAAA,EAAsC;AAClCF,QAAAA,YAAY,CAAZA,CAAY,CAAZA;AACH;;AACD,UAAA,SAAA,EAAe;AACXC,QAAAA,SAAS,CAATA,CAAS,CAATA;AACH;AAPL,KAAA;;AASA,IAAA,KAAA,CAAA,WAAA,GAAmB,UAAA,CAAA,EAAO;AAAA,UAAA,YAAA,GACQ,KAAA,CADR,KAAA;AAAA,UACdE,OADc,GAAA,YAAA,CAAA,OAAA;AAAA,UACLC,QADK,GAAA,YAAA,CAAA,QAAA;;AAEtB,UAAI,CAAJ,QAAA,EAAe;AACX,QAAA,KAAA,CAAA,QAAA,CAAc;AACVC,UAAAA,OAAO,EAAE;AADC,SAAd;AAGH;;AACD,UAAA,OAAA,EAAa;AACTF,QAAAA,OAAO,CAAPA,CAAO,CAAPA;AACH;AATL,KAAA;;AAWA,IAAA,KAAA,CAAA,UAAA,GAAkB,UAAA,CAAA,EAAO;AAAA,UAAA,YAAA,GACQ,KAAA,CADR,KAAA;AAAA,UACbG,MADa,GAAA,YAAA,CAAA,MAAA;AAAA,UACLF,QADK,GAAA,YAAA,CAAA,QAAA;;AAErB,UAAI,CAAJ,QAAA,EAAe;AACX,QAAA,KAAA,CAAA,QAAA,CAAc;AACVC,UAAAA,OAAO,EAAE;AADC,SAAd;AAGH;;AACD,UAAA,MAAA,EAAY;AACRC,QAAAA,MAAM,CAANA,CAAM,CAANA;AACH;AATL,KAAA;;AAWA,IAAA,KAAA,CAAA,YAAA,GAAoB,UAAA,CAAA,EAAK;AAAA,UACbC,QADa,GACA,KAAA,CADA,KACA,CADA,QAAA;;AAErB,UAAI,EAAE,WAAW,KAAA,CAAjB,KAAI,CAAJ,EAA8B;AAC1B,QAAA,KAAA,CAAA,QAAA,CAAc;AAAEV,UAAAA,KAAK,EAAEK,CAAC,CAADA,MAAAA,CAASL;AAAlB,SAAd;AACH;;AACD,UAAA,QAAA,EAAc;AACVU,QAAAA,QAAQ,CAARA,CAAQ,CAARA;AACH;AAPL,KAAA;;AASA,IAAA,KAAA,CAAA,UAAA,GAAkB,YAAM;AAAA,UACZC,MADY,GACD,KAAA,CADC,KACD,CADC,MAAA;;AAEpB,MAAA,KAAA,CAAA,KAAA,CAAA,MAAA;;AACAC,MAAAA,QAAQ,CAARA,WAAAA,CAAAA,MAAAA;;AACA,UAAA,MAAA,EAAY;AACRD,QAAAA,MAAM,CAAC,KAAA,CAAA,KAAA,CAAPA,KAAM,CAANA;AACH;AANL,KAAA;;AAQA,IAAA,KAAA,CAAA,oBAAA,GAA4B,YAAM;AAAA,UACtBE,YADsB,GACL,KAAA,CADK,KACL,CADK,YAAA;;AAE9B,MAAA,KAAA,CAAA,QAAA,CAAc;AACVA,QAAAA,YAAY,EAAE,CAACA;AADL,OAAd;AAFJ,KAAA;;AAMA,IAAA,KAAA,CAAA,SAAA,GAAiB,UAAA,IAAA,EAAU;AACvB,MAAA,KAAA,CAAA,KAAA,GAAA,IAAA;AADJ,KAAA;;AAGA,IAAA,KAAA,CAAA,eAAA,GAAuB,UAAA,IAAA,EAAU;AAC7B,MAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AADJ,KAAA;;AAGA,IAAA,KAAA,CAAA,UAAA,GAAkB,UAAA,IAAA,EAAU;AACxB,MAAA,KAAA,CAAA,MAAA,GAAA,IAAA;AADJ,KAAA;;AAGA,IAAA,KAAA,CAAA,UAAA,GAAkB,UAAA,IAAA,EAAU;AACxB,MAAA,KAAA,CAAA,MAAA,GAAA,IAAA;AADJ,KAAA;;AAGA,IAAA,KAAA,CAAA,KAAA,GAAa;AACTb,MAAAA,KAAK,EAAE,OAAOc,KAAK,CAAZ,KAAA,KAAA,WAAA,GAAqCA,KAAK,CAA1C,YAAA,GAA0DA,KAAK,CAD7D,KAAA;AAETN,MAAAA,OAAO,EAFE,KAAA;AAGTK,MAAAA,YAAY,EAAE;AAHL,KAAb;AApEe,WAAA,KAAA;AAyElB;;;;wCACmB;AAAA,UAAA,YAAA,GACe,KADf,KAAA;AAAA,UACRL,OADQ,GAAA,YAAA,CAAA,OAAA;AAAA,UACCO,SADD,GAAA,YAAA,CAAA,SAAA;;AAEhB,UAAA,SAAA,EAAe;AACX,aAAA,QAAA,CAAc;AACVP,UAAAA,OAAO,EAAE;AADC,SAAd;AAGH;;AACD,UAAI,OAAA,OAAA,KAAJ,SAAA,EAAkC;AAC9B,aAAA,QAAA,CAAc;AACVA,UAAAA,OAAO,EAAPA;AADU,SAAd;AAGH;;AACD,WAAA,gBAAA;AACH;;;8CACyBQ,S,EAAW;AAAA,UACzBhB,KADyB,GACf,KADe,KACf,CADe,KAAA;;AAEjC,UAAI,WAAA,SAAA,IAAwBA,KAAK,KAAKgB,SAAS,CAA/C,KAAA,EAAuD;AACnD,aAAA,QAAA,CAAc;AACVhB,UAAAA,KAAK,EAAEgB,SAAS,CAAChB;AADP,SAAd;AAGH;;AACD,UAAIgB,SAAS,CAAb,SAAA,EAAyB;AACrB,aAAA,QAAA,CAAc;AACVR,UAAAA,OAAO,EAAE;AADC,SAAd;AAGH;;AACD,UAAI,OAAOQ,SAAS,CAAhB,OAAA,KAAJ,SAAA,EAA4C;AACxC,aAAA,QAAA,CAAc;AACVR,UAAAA,OAAO,EAAEQ,SAAS,CAACR;AADT,SAAd;AAGH;;AACD,UAAIQ,SAAS,CAATA,IAAAA,KAAJ,UAAA,EAAmC;AAC/B,aAAA,QAAA,CAAc;AACVH,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH;AACJ;;;yCACoB;AACjB,WAAA,gBAAA;AACH;;;uCACkB;AAAA,UACPI,QADO,GAAA,KAAA,QAAA;AAAA,UACGC,MADH,GAAA,KAAA,MAAA;AAAA,UACWC,MADX,GAAA,KAAA,MAAA;AAEf,UAAA,WAAA;AACA,UAAA,WAAA;AACA,UAAIC,MAAM,GAAV,GAAA;AACA,UAAIC,KAAK,GAAT,MAAA;;AACA,UAAIH,MAAM,IAAV,MAAA,EAAsB;AAClBI,QAAAA,WAAW,GAAA,GAAA,MAAA,CAAM,CAACJ,MAAM,CAANA,WAAAA,IAAsB,CAAvB,CAAA,IAAN,CAAA,EAAXI,IAAW,CAAXA;AACAC,QAAAA,WAAW,GAAA,GAAA,MAAA,CAAM,CAACJ,MAAM,CAANA,WAAAA,IAAsB,CAAvB,CAAA,IAAN,CAAA,EAAXI,IAAW,CAAXA;AACAH,QAAAA,MAAM,GAAA,KAAA,MAAA,CAAA,WAAA,EAAA,KAAA,EAAA,MAAA,CAANA,WAAM,CAANA;AACAC,QAAAA,KAAK,GAAA,eAAA,MAAA,CAAA,WAAA,EAAA,KAAA,EAAA,MAAA,CAAA,WAAA,EAALA,GAAK,CAALA;AAJJ,OAAA,MAMK,IAAA,MAAA,EAAY;AACbC,QAAAA,WAAW,GAAA,GAAA,MAAA,CAAM,CAACJ,MAAM,CAANA,WAAAA,IAAsB,CAAvB,CAAA,IAAN,CAAA,EAAXI,IAAW,CAAXA;AACAF,QAAAA,MAAM,GAAA,KAAA,MAAA,CAAA,WAAA,EAANA,MAAM,CAANA;AACAC,QAAAA,KAAK,GAAA,eAAA,MAAA,CAAA,WAAA,EAALA,GAAK,CAALA;AAHC,OAAA,MAKA,IAAA,MAAA,EAAY;AACbE,QAAAA,WAAW,GAAA,GAAA,MAAA,CAAM,CAACJ,MAAM,CAANA,WAAAA,IAAsB,CAAvB,CAAA,IAAN,CAAA,EAAXI,IAAW,CAAXA;AACAH,QAAAA,MAAM,GAAA,SAAA,MAAA,CAANA,WAAM,CAANA;AACAC,QAAAA,KAAK,GAAA,eAAA,MAAA,CAAA,WAAA,EAALA,GAAK,CAALA;AACH;;AACDJ,MAAAA,QAAQ,CAARA,KAAAA,CAAAA,MAAAA,GAAAA,MAAAA;AACAA,MAAAA,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,GAAAA,KAAAA;AACH;;;4BACO;AACJ,WAAA,KAAA,CAAA,KAAA;AACH;;;2BACM;AACH,WAAA,KAAA,CAAA,IAAA;AACH;;;mCACc;AAAA,UACHO,SADG,GACW,KADX,KACW,CADX,SAAA;AAEX,aAAO,CAAA,GAAA,UAAA,CAAA,YAAA,EAAA,OAAA,EAAP,SAAO,CAAP;AACH;;;wCACmB;AAAA,UAAA,WAAA;;AAAA,UAAA,YAAA,GACO,KADP,KAAA;AAAA,UACRC,IADQ,GAAA,YAAA,CAAA,IAAA;AAAA,UACFC,IADE,GAAA,YAAA,CAAA,IAAA;AAEhB,UAAMF,SAAS,GAAG,KAAlB,YAAkB,EAAlB;AACA,aAAO,CAAA,GAAA,WAAA,CAAA,SAAA,CAAA,EAAA,SAAA,GAAA,WAAA,GAAA,EAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,KAAA,CAAA,EACkBC,IAAI,KADtB,OAAA,CAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,KAAA,CAAA,EAEkBA,IAAI,KAFtB,OAAA,CAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,WAAA,CAAA,EAAA,IAAA,CAAA,EAAP,WAAO,EAAP;AAKH;;;qCACgB;AAAA,UACLC,IADK,GACI,KADJ,KACI,CADJ,IAAA;AAEb,UAAMF,SAAS,GAAG,KAAlB,YAAkB,EAAlB;AACA,aAAOE,IAAI,GAAI,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,MAAA,EAA4B;AAAEC,QAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAX,OAAW,CAAX;AAAkCC,QAAAA,OAAO,EAAE,KAAKC;AAAhD,OAA5B,EACX,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAoBC,KAAAA,CAApB,SAAoBA,CAApB,EAA0B;AAAEH,QAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAX,YAAW,CAAX;AAAuCI,QAAAA,IAAI,EAAE;AAA7C,OAA1B,CADW,CAAJ,GAAX,IAAA;AAEH;;;yCACoB;AAAA,UACTA,IADS,GACA,KADA,KACA,CADA,IAAA;AAEjB,UAAMP,SAAS,GAAG,KAAlB,YAAkB,EAAlB;AAFiB,UAGTX,YAHS,GAGQ,KAHR,KAGQ,CAHR,YAAA;AAIjB,aAAO,IAAI,KAAJ,UAAA,GAAuB,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,MAAA,EAA4B;AAAEc,QAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAX,OAAW,CAAX;AAAkCC,QAAAA,OAAO,EAAE,KAAKI;AAAhD,OAA5B,EAC1B,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAoBF,KAAAA,CAApB,SAAoBA,CAApB,EAA0B;AAAEH,QAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAX,YAAW,CAAX;AAAuCI,QAAAA,IAAI,EAAElB,YAAY,GAAA,YAAA,GAAkB;AAA3E,OAA1B,CAD0B,CAAvB,GAAP,IAAA;AAEH;;;kCACa;AAAA,UAAA,YAAA,GACkB,KADlB,KAAA;AAAA,UACFc,SADE,GAAA,YAAA,CAAA,SAAA;AAAA,UACSI,IADT,GAAA,YAAA,CAAA,IAAA;AAAA,UAAA,WAAA,GAEsB,KAFtB,KAAA;AAAA,UAEFlB,YAFE,GAAA,WAAA,CAAA,YAAA;AAAA,UAEYb,KAFZ,GAAA,WAAA,CAAA,KAAA,CAAA,CAGV;;AACA,UAAMiC,UAAU,GAAG,CAAA,GAAA,KAAA,CAAA,SAAA,CAAA,EAAK,KAAL,KAAA,EAAiB,CAAA,aAAA,EAAA,WAAA,EAAA,cAAA,EAAA,aAAA,EAAA,YAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,MAAA,EAApC,QAAoC,CAAjB,CAAnB;AAiBA,aAAQ,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,OAAA,EAA6B,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,UAAA,EAA8B;AAAEjC,QAAAA,KAAK,EAAEkC,kBAAkB,CAA3B,KAA2B,CAA3B;AAAoCP,QAAAA,SAAS,EAAE,CAAA,GAAA,WAAA,CAAA,SAAA,CAAA,EAAW,KAAX,iBAAW,EAAX,EAA/C,SAA+C,CAA/C;AAAgGvB,QAAAA,SAAS,EAAE,KAA3G,aAAA;AAA+H+B,QAAAA,GAAG,EAAE,KAApI,SAAA;AAAoJ7B,QAAAA,OAAO,EAAE,KAA7J,WAAA;AAA+KG,QAAAA,MAAM,EAAE,KAAvL,UAAA;AAAwMC,QAAAA,QAAQ,EAAE,KAAlN,YAAA;AAAqOqB,QAAAA,IAAI,EAAElB,YAAY,GAAA,MAAA,GAAYkB;AAAnQ,OAA9B,CAA7B,CAAR;AACH;;;oCACe;AAAA,UAAA,YAAA,GAC0B,KAD1B,KAAA;AAAA,UACJK,SADI,GAAA,YAAA,CAAA,SAAA;AAAA,UACOC,cADP,GAAA,YAAA,CAAA,cAAA;AAEZ,UAAMb,SAAS,GAAG,KAAlB,YAAkB,EAAlB;AAFY,UAGJxB,KAHI,GAGM,KAHN,KAGM,CAHN,KAAA;AAIZ,UAAMsC,WAAW,GAAGtC,KAAK,GAAGA,KAAK,CAAR,MAAA,GAAzB,CAAA;AACA,aAAQoC,SAAS,IAAV,cAACA,IACHA,SAAS,IAAIA,SAAS,GAAtBA,CAAAA,IAA8BE,WAAW,KADvC,SAACF,GACyD,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAA2B;AAAET,QAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,cAAA;AAAX,OAA3B,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,GAAA,EAAA,MAAA,CAD1D,SAC0D,CAAA,CADzDS,GAAR,IAAA;AAEH;;;+BACU;AAAA,UAAA,YAAA,GACwB,KADxB,KAAA;AAAA,UACCG,WADD,GAAA,YAAA,CAAA,WAAA;AAAA,UACcC,KADd,GAAA,YAAA,CAAA,KAAA;;AAEP,UAAI,CAAC,KAAD,QAAC,EAAD,IAAJ,WAAA,EAAqC;AACjC,eAAA,WAAA;AACH;;AACD,aAAA,KAAA;AACH;;;uCACkB;AACf,UAAMA,KAAK,GAAG,KAAd,QAAc,EAAd;AADe,UAEPC,MAFO,GAEI,KAFJ,KAEI,CAFJ,MAAA;;AAGf,UAAID,KAAK,IAAT,MAAA,EAAqB;AACjB,YAAMhB,SAAS,GAAG,KAAlB,YAAkB,EAAlB;AACA,eAAQ,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAA2B;AAAEG,UAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,gBAAA;AAAX,SAA3B,EACJ,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAA2B;AAAEA,UAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,QAAA;AAAX,SAA3B,EADJ,KACI,CADI,CAAR;AAEH;AACJ;;;qCACgBe,I,EAAM;AAAA,UAAA,YAAA;;AAAA,UACXjB,IADW,GACF,KADE,KACF,CADE,IAAA;AAEnB,UAAMD,SAAS,GAAG,KAAlB,YAAkB,EAAlB;AACA,aAAO,CAAA,GAAA,WAAA,CAAA,SAAA,CAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,GAAA,EAAA,MAAA,CAAA,IAAA,CAAA,GAAA,YAAA,GAAA,EAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,GAAA,EAAA,MAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAC0BC,IAAI,KAD9B,OAAA,CAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,GAAA,EAAA,MAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAE0BA,IAAI,KAF9B,OAAA,CAAA,EAAP,YAAO,EAAP;AAIH;;;+BACU;AAAA,UACCzB,KADD,GACW,KADX,KACW,CADX,KAAA;AAEP,aAAOA,KAAK,IAAIA,KAAK,CAALA,MAAAA,KAAhB,CAAA;AACH;;;wCACmB;AAAA,UAAA,YAAA,GACgB,KADhB,KAAA;AAAA,UACRuC,WADQ,GAAA,YAAA,CAAA,WAAA;AAAA,UACKE,MADL,GAAA,YAAA,CAAA,MAAA;;AAEhB,UAAI,CAAA,MAAA,IAAJ,WAAA,EAA4B;AACxB,YAAMjB,SAAS,GAAG,KAAlB,YAAkB,EAAlB;AACA,eAAO,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAA2B;AAAEG,UAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,cAAA;AAAX,SAA3B,EAAP,WAAO,CAAP;AACH;AACJ;;;6BACQ;AAAA,UAAA,YAAA;;AACL,UAAMb,KAAK,GAAG,KAAd,KAAA;AADK,UAAA,aAAA,GAEuD,KAFvD,KAAA;AAAA,UAEG6B,QAFH,GAAA,aAAA,CAAA,QAAA;AAAA,UAEaH,KAFb,GAAA,aAAA,CAAA,KAAA;AAAA,UAEoBI,KAFpB,GAAA,aAAA,CAAA,KAAA;AAAA,UAE2BC,eAF3B,GAAA,aAAA,CAAA,eAAA;AAAA,UAE4CJ,MAF5C,GAAA,aAAA,CAAA,MAAA;AAGL,UAAMjB,SAAS,GAAG,KAAlB,YAAkB,EAAlB;AAHK,UAIGhB,OAJH,GAIe,KAJf,KAIe,CAJf,OAAA;AAKL,UAAMW,MAAM,GAAGL,KAAK,CAALA,MAAAA,GAAgB,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,MAAA,EAA4B;AAAEqB,QAAAA,GAAG,EAAE,KAAP,UAAA;AAAwBR,QAAAA,SAAS,EAAE,KAAA,gBAAA,CAAA,QAAA;AAAnC,OAA5B,EAAkGb,KAAK,CAAvHA,MAAgB,CAAhBA,GAAf,IAAA;AACA,UAAMI,MAAM,GAAGJ,KAAK,CAALA,MAAAA,GAAgB,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,MAAA,EAA4B;AAAEqB,QAAAA,GAAG,EAAE,KAAP,UAAA;AAAwBR,QAAAA,SAAS,EAAE,KAAA,gBAAA,CAAA,QAAA;AAAnC,OAA5B,EAAkGb,KAAK,CAAvHA,MAAgB,CAAhBA,GAAf,IAAA;AACA,UAAMa,SAAS,GAAG,CAAA,GAAA,WAAA,CAAA,SAAA,CAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA,CAAA,GAAA,YAAA,GAAA,EAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,YAAA,CAAA,EACc,KADd,QACc,EADd,CAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,WAAA,CAAA,EAAA,QAAA,CAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,YAAA,CAAA,EAIc,CAAC,CAJf,KAAA,CAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,aAAA,CAAA,EAKe,CAAC,CALhB,MAAA,CAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,aAAA,CAAA,EAMe,CAAC,CANhB,MAAA,CAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,aAAA,CAAA,EAAA,MAAA,CAAA,EAAlB,YAAkB,EAAlB;AASA,aAAQ,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,MAAA,EAA4B;AAAEA,QAAAA,SAAS,EAAX,SAAA;AAAwBiB,QAAAA,KAAK,EAAEA;AAA/B,OAA5B,EACJ,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAA2B;AAAEjB,QAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA;AAAX,OAA3B,EACI,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAA2B;AAAEA,QAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,mBAAA;AAAX,OAA3B,EAAA,MAAA,EAEI,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAA2B;AAAEA,QAAAA,SAAS,EAAE,KAAA,gBAAA,CAAb,UAAa,CAAb;AAAgDQ,QAAAA,GAAG,EAAE,KAAKW;AAA1D,OAA3B,EACI,KADJ,iBACI,EADJ,EAEI,KAFJ,WAEI,EAFJ,EAGI,KAHJ,gBAGI,EAHJ,EAII,KAJJ,cAII,EAJJ,EAKID,eAAe,GAAG,KAAH,kBAAG,EAAH,GAPvB,IAEI,CAFJ,EADJ,MACI,CADJ,EAUI,KAXR,aAWQ,EAVJ,CADI,CAAR;AAYH;;;EA1Q8B3C,MAAAA,CAAAA,S;;;AA4QnCD,KAAK,CAALA,WAAAA,GAAAA,OAAAA;AACAA,KAAK,CAALA,YAAAA,GAAqB;AACjB8B,EAAAA,IAAI,EADa,MAAA;AAEjBY,EAAAA,QAAQ,EAFS,KAAA;AAGjBpC,EAAAA,QAAQ,EAHS,KAAA;AAIjB8B,EAAAA,cAAc,EAJG,IAAA;AAKjBQ,EAAAA,eAAe,EALE,KAAA;AAMjBJ,EAAAA,MAAM,EAAE;AANS,CAArBxC;AAQAA,KAAK,CAALA,SAAAA,GAAkB;AACd8B,EAAAA,IAAI,EAAEgB,UAAAA,CAAAA,SAAAA,CAAAA,CADQ,MAAA;AAEdC,EAAAA,EAAE,EAAED,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,SAAAA,CAAoB,CAACA,UAAAA,CAAAA,SAAAA,CAAAA,CAAD,MAAA,EAAmBA,UAAAA,CAAAA,SAAAA,CAAAA,CAF7B,MAEU,CAApBA,CAFU;AAGdP,EAAAA,KAAK,EAAEO,UAAAA,CAAAA,SAAAA,CAAAA,CAHO,IAAA;AAIdtB,EAAAA,IAAI,EAAE,UAAA,CAAA,SAAA,CAAA,CAAA,KAAA,CAAgB,CAAC;AAAQ;AAAT,IAAsB;AAAU;AAAhC,IAA+C;AAAQ;AAAvD,GAAhB,CAJQ;AAKdW,EAAAA,SAAS,EAAEW,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,SAAAA,CAAoB,CAACA,UAAAA,CAAAA,SAAAA,CAAAA,CAAD,MAAA,EAAmBA,UAAAA,CAAAA,SAAAA,CAAAA,CALpC,MAKiB,CAApBA,CALG;AAMdJ,EAAAA,QAAQ,EAAEI,UAAAA,CAAAA,SAAAA,CAAAA,CANI,IAAA;AAOd/C,EAAAA,KAAK,EAAE+C,UAAAA,CAAAA,SAAAA,CAAAA,CAPO,GAAA;AAQdE,EAAAA,YAAY,EAAEF,UAAAA,CAAAA,SAAAA,CAAAA,CARA,GAAA;AASdpB,EAAAA,SAAS,EAAEoB,UAAAA,CAAAA,SAAAA,CAAAA,CATG,MAAA;AAUdG,EAAAA,WAAW,EAAEH,UAAAA,CAAAA,SAAAA,CAAAA,CAVC,IAAA;AAWdI,EAAAA,UAAU,EAAEJ,UAAAA,CAAAA,SAAAA,CAAAA,CAXE,IAAA;AAYdvB,EAAAA,SAAS,EAAEuB,UAAAA,CAAAA,SAAAA,CAAAA,CAZG,MAAA;AAadK,EAAAA,QAAQ,EAAEL,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,SAAAA,CAAoB,CAACA,UAAAA,CAAAA,SAAAA,CAAAA,CAAD,IAAA,EAAiBA,UAAAA,CAAAA,SAAAA,CAAAA,CAbjC,MAagB,CAApBA,CAbI;AAcd5C,EAAAA,YAAY,EAAE4C,UAAAA,CAAAA,SAAAA,CAAAA,CAdA,IAAA;AAed3C,EAAAA,SAAS,EAAE2C,UAAAA,CAAAA,SAAAA,CAAAA,CAfG,IAAA;AAgBdM,EAAAA,OAAO,EAAEN,UAAAA,CAAAA,SAAAA,CAAAA,CAhBK,IAAA;AAiBdzC,EAAAA,OAAO,EAAEyC,UAAAA,CAAAA,SAAAA,CAAAA,CAjBK,IAAA;AAkBdtC,EAAAA,MAAM,EAAEsC,UAAAA,CAAAA,SAAAA,CAAAA,CAlBM,IAAA;AAmBd5B,EAAAA,MAAM,EAAE4B,UAAAA,CAAAA,SAAAA,CAAAA,CAnBM,IAAA;AAoBd7B,EAAAA,MAAM,EAAE6B,UAAAA,CAAAA,SAAAA,CAAAA,CApBM,IAAA;AAqBdrB,EAAAA,IAAI,EAAEqB,UAAAA,CAAAA,SAAAA,CAAAA,CArBQ,IAAA;AAsBdpC,EAAAA,MAAM,EAAEoC,UAAAA,CAAAA,SAAAA,CAAAA,CAtBM,IAAA;AAuBdxC,EAAAA,QAAQ,EAAEwC,UAAAA,CAAAA,SAAAA,CAAAA,CAvBI,IAAA;AAwBdvC,EAAAA,OAAO,EAAEuC,UAAAA,CAAAA,SAAAA,CAAAA,CAxBK,IAAA;AAyBdN,EAAAA,MAAM,EAAEM,UAAAA,CAAAA,SAAAA,CAAAA,CAzBM,IAAA;AA0BdV,EAAAA,cAAc,EAAEU,UAAAA,CAAAA,SAAAA,CAAAA,CA1BF,IAAA;AA2BdF,EAAAA,eAAe,EAAEE,UAAAA,CAAAA,SAAAA,CAAAA,CAAUO;AA3Bb,CAAlBrD","sourcesContent":["import React, { Component, } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../configure';\nfunction fixControlledValue(value) {\n    if (typeof value === 'undefined' || value === null) {\n        return '';\n    }\n    return value;\n}\nexport default class Input extends Component {\n    constructor(props) {\n        super(props);\n        this.handleKeyDown = (e) => {\n            const { onPressEnter, onKeyDown } = this.props;\n            if (e.keyCode === 13 && onPressEnter) {\n                onPressEnter(e);\n            }\n            if (onKeyDown) {\n                onKeyDown(e);\n            }\n        };\n        this.handleFocus = (e) => {\n            const { onFocus, readOnly } = this.props;\n            if (!readOnly) {\n                this.setState({\n                    focused: true,\n                });\n            }\n            if (onFocus) {\n                onFocus(e);\n            }\n        };\n        this.handleBlur = (e) => {\n            const { onBlur, readOnly } = this.props;\n            if (!readOnly) {\n                this.setState({\n                    focused: false,\n                });\n            }\n            if (onBlur) {\n                onBlur(e);\n            }\n        };\n        this.handleChange = e => {\n            const { onChange } = this.props;\n            if (!('value' in this.props)) {\n                this.setState({ value: e.target.value });\n            }\n            if (onChange) {\n                onChange(e);\n            }\n        };\n        this.handleCopy = () => {\n            const { onCopy } = this.props;\n            this.input.select();\n            document.execCommand('Copy');\n            if (onCopy) {\n                onCopy(this.input.value);\n            }\n        };\n        this.handleTogglePassword = () => {\n            const { showPassword } = this.state;\n            this.setState({\n                showPassword: !showPassword,\n            });\n        };\n        this.saveInput = (node) => {\n            this.input = node;\n        };\n        this.saveRenderedRef = (node) => {\n            this.rendered = node;\n        };\n        this.savePrefix = (node) => {\n            this.prefix = node;\n        };\n        this.saveSuffix = (node) => {\n            this.suffix = node;\n        };\n        this.state = {\n            value: typeof props.value === 'undefined' ? props.defaultValue : props.value,\n            focused: false,\n            showPassword: false,\n        };\n    }\n    componentDidMount() {\n        const { focused, autoFocus } = this.props;\n        if (autoFocus) {\n            this.setState({\n                focused: true,\n            });\n        }\n        if (typeof focused === 'boolean') {\n            this.setState({\n                focused,\n            });\n        }\n        this.setRenderedStyle();\n    }\n    componentWillReceiveProps(nextProps) {\n        const { value } = this.state;\n        if ('value' in nextProps && value !== nextProps.value) {\n            this.setState({\n                value: nextProps.value,\n            });\n        }\n        if (nextProps.autoFocus) {\n            this.setState({\n                focused: true,\n            });\n        }\n        if (typeof nextProps.focused === 'boolean') {\n            this.setState({\n                focused: nextProps.focused,\n            });\n        }\n        if (nextProps.type !== 'password') {\n            this.setState({\n                showPassword: false,\n            });\n        }\n    }\n    componentDidUpdate() {\n        this.setRenderedStyle();\n    }\n    setRenderedStyle() {\n        const { rendered, suffix, prefix } = this;\n        let suffixWidth;\n        let prefixWidth;\n        let margin = '0';\n        let width = '100%';\n        if (suffix && prefix) {\n            suffixWidth = `${(suffix.clientWidth || -2) + 2}px`;\n            prefixWidth = `${(prefix.clientWidth || -2) + 2}px`;\n            margin = `0 ${suffixWidth} 0 ${prefixWidth}`;\n            width = `calc(100% - ${suffixWidth} - ${prefixWidth})`;\n        }\n        else if (suffix) {\n            suffixWidth = `${(suffix.clientWidth || -2) + 2}px`;\n            margin = `0 ${suffixWidth} 0 0`;\n            width = `calc(100% - ${suffixWidth})`;\n        }\n        else if (prefix) {\n            prefixWidth = `${(prefix.clientWidth || -2) + 2}px`;\n            margin = `0 0 0 ${prefixWidth}`;\n            width = `calc(100% - ${prefixWidth})`;\n        }\n        rendered.style.margin = margin;\n        rendered.style.width = width;\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    getPrefixCls() {\n        const { prefixCls } = this.props;\n        return getPrefixCls('input', prefixCls);\n    }\n    getInputClassName() {\n        const { size, copy } = this.props;\n        const prefixCls = this.getPrefixCls();\n        return classNames(prefixCls, {\n            [`${prefixCls}-sm`]: size === \"small\" /* small */,\n            [`${prefixCls}-lg`]: size === \"large\" /* large */,\n            [`${prefixCls}-has-copy`]: copy,\n        });\n    }\n    renderCopyIcon() {\n        const { copy } = this.props;\n        const prefixCls = this.getPrefixCls();\n        return copy ? (React.createElement(\"span\", { className: `${prefixCls}-icon`, onClick: this.handleCopy },\n            React.createElement(Icon, { className: `${prefixCls}-icon-copy`, type: \"library_books\" }))) : null;\n    }\n    renderShowPassword() {\n        const { type } = this.props;\n        const prefixCls = this.getPrefixCls();\n        const { showPassword } = this.state;\n        return type === 'password' ? (React.createElement(\"span\", { className: `${prefixCls}-icon`, onClick: this.handleTogglePassword },\n            React.createElement(Icon, { className: `${prefixCls}-icon-copy`, type: showPassword ? 'visibility' : 'visibility_off' }))) : null;\n    }\n    renderInput() {\n        const { className, type } = this.props;\n        const { showPassword, value } = this.state;\n        // Fix https://fb.me/react-unknown-prop\n        const otherProps = omit(this.props, [\n            'placeholder',\n            'prefixCls',\n            'onPressEnter',\n            'addonBefore',\n            'addonAfter',\n            'prefix',\n            'suffix',\n            'label',\n            'copy',\n            'style',\n            'focused',\n            'showLengthInfo',\n            'showPasswordEye',\n            'size',\n            'border',\n        ]);\n        return (React.createElement(\"input\", Object.assign({}, otherProps, { value: fixControlledValue(value), className: classNames(this.getInputClassName(), className), onKeyDown: this.handleKeyDown, ref: this.saveInput, onFocus: this.handleFocus, onBlur: this.handleBlur, onChange: this.handleChange, type: showPassword ? 'text' : type })));\n    }\n    getLengthInfo() {\n        const { maxLength, showLengthInfo } = this.props;\n        const prefixCls = this.getPrefixCls();\n        const { value } = this.state;\n        const inputLength = value ? value.length : 0;\n        return (maxLength && showLengthInfo) ||\n            (maxLength && maxLength > 0 && inputLength === maxLength) ? (React.createElement(\"div\", { className: `${prefixCls}-length-info` }, `${inputLength}/${maxLength}`)) : null;\n    }\n    getLabel() {\n        const { placeholder, label } = this.props;\n        if (!this.hasValue() && placeholder) {\n            return placeholder;\n        }\n        return label;\n    }\n    renderFloatLabel() {\n        const label = this.getLabel();\n        const { border } = this.props;\n        if (label && border) {\n            const prefixCls = this.getPrefixCls();\n            return (React.createElement(\"div\", { className: `${prefixCls}-label-wrapper` },\n                React.createElement(\"div\", { className: `${prefixCls}-label` }, label)));\n        }\n    }\n    getSizeClassName(name) {\n        const { size } = this.props;\n        const prefixCls = this.getPrefixCls();\n        return classNames(`${prefixCls}-${name}`, {\n            [`${prefixCls}-${name}-sm`]: size === \"small\" /* small */,\n            [`${prefixCls}-${name}-lg`]: size === \"large\" /* large */,\n        });\n    }\n    hasValue() {\n        const { value } = this.state;\n        return value && value.length !== 0;\n    }\n    renderPlaceholder() {\n        const { placeholder, border } = this.props;\n        if (!border && placeholder) {\n            const prefixCls = this.getPrefixCls();\n            return React.createElement(\"div\", { className: `${prefixCls}-placeholder` }, placeholder);\n        }\n    }\n    render() {\n        const props = this.props;\n        const { disabled, label, style, showPasswordEye, border } = this.props;\n        const prefixCls = this.getPrefixCls();\n        const { focused } = this.state;\n        const prefix = props.prefix ? (React.createElement(\"span\", { ref: this.savePrefix, className: this.getSizeClassName('prefix') }, props.prefix)) : null;\n        const suffix = props.suffix ? (React.createElement(\"span\", { ref: this.saveSuffix, className: this.getSizeClassName('suffix') }, props.suffix)) : null;\n        const className = classNames(`${prefixCls}-wrapper`, {\n            [`${prefixCls}-has-value`]: this.hasValue(),\n            [`${prefixCls}-focused`]: focused,\n            [`${prefixCls}-disabled`]: disabled,\n            [`${prefixCls}-has-label`]: !!label,\n            [`${prefixCls}-has-prefix`]: !!prefix,\n            [`${prefixCls}-has-suffix`]: !!suffix,\n            [`${prefixCls}-has-border`]: border,\n        });\n        return (React.createElement(\"span\", { className: className, style: style },\n            React.createElement(\"div\", { className: `${prefixCls}-content` },\n                React.createElement(\"div\", { className: `${prefixCls}-rendered-wrapper` },\n                    prefix,\n                    React.createElement(\"div\", { className: this.getSizeClassName('rendered'), ref: this.saveRenderedRef },\n                        this.renderPlaceholder(),\n                        this.renderInput(),\n                        this.renderFloatLabel(),\n                        this.renderCopyIcon(),\n                        showPasswordEye ? this.renderShowPassword() : null),\n                    suffix),\n                this.getLengthInfo())));\n    }\n}\nInput.displayName = 'Input';\nInput.defaultProps = {\n    type: 'text',\n    disabled: false,\n    readOnly: false,\n    showLengthInfo: true,\n    showPasswordEye: false,\n    border: true,\n};\nInput.propTypes = {\n    type: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    label: PropTypes.node,\n    size: PropTypes.oneOf([\"small\" /* small */, \"default\" /* default */, \"large\" /* large */]),\n    maxLength: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    disabled: PropTypes.bool,\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    className: PropTypes.string,\n    addonBefore: PropTypes.node,\n    addonAfter: PropTypes.node,\n    prefixCls: PropTypes.string,\n    autosize: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    onPressEnter: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    prefix: PropTypes.node,\n    suffix: PropTypes.node,\n    copy: PropTypes.bool,\n    onCopy: PropTypes.func,\n    readOnly: PropTypes.bool,\n    focused: PropTypes.bool,\n    border: PropTypes.bool,\n    showLengthInfo: PropTypes.bool,\n    showPasswordEye: PropTypes.bool,\n};\n"]}