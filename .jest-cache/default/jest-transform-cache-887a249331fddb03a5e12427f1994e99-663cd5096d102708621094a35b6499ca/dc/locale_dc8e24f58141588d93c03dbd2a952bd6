f9bff0d289826fcd05eacbb4d0163a0f
"use strict";

/* istanbul ignore next */
function cov_11we4hno79() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/modal/locale.tsx";
  var hash = "b831fc8867f8a015d4e9d8f2de8448a1bda37c94";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/modal/locale.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 50
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 44
        }
      },
      "4": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 92
        }
      },
      "5": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 76
        }
      },
      "6": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 81
        }
      },
      "7": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 85
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 82
        }
      },
      "10": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "changeConfirmLocale",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 28
          }
        },
        loc: {
          start: {
            line: 17,
            column: 40
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "getConfirmLocale",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 25
          }
        },
        loc: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        }, {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b831fc8867f8a015d4e9d8f2de8448a1bda37c94"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_11we4hno79 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_11we4hno79();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_11we4hno79().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_11we4hno79().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_11we4hno79().s[2]++;
exports.changeConfirmLocale = changeConfirmLocale;

/* istanbul ignore next */
cov_11we4hno79().s[3]++;
exports.getConfirmLocale = getConfirmLocale;

var _objectSpread2 =
/* istanbul ignore next */
(cov_11we4hno79().s[4]++, _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2")));

var _default =
/* istanbul ignore next */
(cov_11we4hno79().s[5]++, _interopRequireDefault(require("../locale-provider/default")));

var runtimeLocale =
/* istanbul ignore next */
(cov_11we4hno79().s[6]++, (0, _objectSpread2["default"])({}, _default["default"].Modal));

function changeConfirmLocale(newLocale) {
  /* istanbul ignore next */
  cov_11we4hno79().f[0]++;
  cov_11we4hno79().s[7]++;

  if (newLocale) {
    /* istanbul ignore next */
    cov_11we4hno79().b[0][0]++;
    cov_11we4hno79().s[8]++;
    runtimeLocale = (0, _objectSpread2["default"])({}, runtimeLocale, {}, newLocale);
  } else {
    /* istanbul ignore next */
    cov_11we4hno79().b[0][1]++;
    cov_11we4hno79().s[9]++;
    runtimeLocale = (0, _objectSpread2["default"])({}, _default["default"].Modal);
  }
}

function getConfirmLocale() {
  /* istanbul ignore next */
  cov_11we4hno79().f[1]++;
  cov_11we4hno79().s[10]++;
  return runtimeLocale;
}