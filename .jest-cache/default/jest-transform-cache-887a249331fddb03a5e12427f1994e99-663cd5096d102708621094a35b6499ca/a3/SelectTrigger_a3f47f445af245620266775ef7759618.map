{"version":3,"sources":["SelectTrigger.jsx"],"names":["Trigger","displayName","BUILT_IN_PLACEMENTS","bottomLeft","points","offset","overflow","adjustX","adjustY","topLeft","bottomRight","SelectTrigger","dropdownWidth","width","ReactDOM","findDOMNode","offsetWidth","state","setState","dropdownMenuRef","menuRef","filterRef","triggerRef","getPopupDomNode","newProps","props","loading","spinning","getDropdownPrefixCls","onMenuSelect","onMenuDeselect","onPopupScroll","onKeyDown","value","filterPlaceholder","checkAll","backfillValue","firstActiveValue","defaultActiveFirstOption","dropdownMenuStyle","onFilterChange","footer","onDropdownMouseDown","transitionName","animation","prefixCls","setDropdownWidth","onPopupFocus","multiple","visible","inputValue","dropdownAlign","disabled","showSearch","dropdownClassName","dropdownStyle","dropdownMatchSelectWidth","filter","filterValue","dropdownPrefixCls","popupClassName","popupElement","getDropdownElement","menuItems","options","popupStyle","widthProp","popupPlacement","builtinPlacements","getDropdownTransitionName","onDropdownVisibleChange","getPopupContainer","children","Component","PropTypes","func","bool","object","string","any","filterOption","getRootDomNode","oneOfType"],"mappings":"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","sourcesContent":["import Trigger from '../trigger';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DropdownMenu from './DropdownMenu';\nimport ReactDOM from 'react-dom';\nimport { isSingleMode, saveRef } from './util';\nimport Spin from '../../spin';\n\nTrigger.displayName = 'Trigger';\n\nconst BUILT_IN_PLACEMENTS = {\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1,\n    },\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1,\n    },\n  },\n  bottomRight: {\n    points: ['tr', 'br'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1,\n    },\n  },\n};\n\nexport default class SelectTrigger extends Component {\n  static propTypes = {\n    onPopupFocus: PropTypes.func,\n    onPopupScroll: PropTypes.func,\n    dropdownMatchSelectWidth: PropTypes.bool,\n    dropdownAlign: PropTypes.object,\n    visible: PropTypes.bool,\n    disabled: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    dropdownClassName: PropTypes.string,\n    onDropdownMouseDown: PropTypes.any,\n    dropdownStyle: PropTypes.any,\n    multiple: PropTypes.bool,\n    inputValue: PropTypes.string,\n    filterOption: PropTypes.any,\n    options: PropTypes.any,\n    prefixCls: PropTypes.string,\n    popupClassName: PropTypes.string,\n    popupPlacement: PropTypes.string,\n    children: PropTypes.any,\n    filter: PropTypes.bool,\n    builtinPlacements: PropTypes.any,\n    getRootDomNode: PropTypes.func,\n    loading: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.object,\n    ]),\n    onKeyDown: PropTypes.func,\n  };\n\n  static defaultProps = {\n    popupPlacement: 'bottomLeft',\n    loading: false,\n  };\n\n  state = {\n    dropdownWidth: null,\n  };\n\n  componentDidMount() {\n    this.setDropdownWidth();\n  }\n\n  componentDidUpdate() {\n    this.setDropdownWidth();\n  }\n\n  setDropdownWidth = () => {\n    const width = ReactDOM.findDOMNode(this).offsetWidth;\n    if (width !== this.state.dropdownWidth) {\n      this.setState({ dropdownWidth: width });\n    }\n  };\n\n  getInnerMenu = () => {\n    return this.dropdownMenuRef && this.dropdownMenuRef.menuRef;\n  };\n\n  getFilterInput = () => {\n    return this.dropdownMenuRef && this.dropdownMenuRef.filterRef;\n  }\n\n  getPopupDOMNode = () => {\n    return this.triggerRef.getPopupDomNode();\n  };\n\n  getDropdownElement = newProps => {\n    const props = this.props;\n    let loading = props.loading;\n    if (typeof loading === 'boolean') {\n      loading = {\n        spinning: loading,\n      };\n    }\n    return (\n      <Spin {...loading}>\n        <DropdownMenu\n          ref={saveRef(this, 'dropdownMenuRef')}\n          {...newProps}\n          prefixCls={this.getDropdownPrefixCls()}\n          onMenuSelect={props.onMenuSelect}\n          onMenuDeselect={props.onMenuDeselect}\n          onPopupScroll={props.onPopupScroll}\n          onKeyDown={props.onKeyDown}\n          value={props.value}\n          placeholder={props.filterPlaceholder}\n          checkAll={props.checkAll}\n          backfillValue={props.backfillValue}\n          firstActiveValue={props.firstActiveValue}\n          defaultActiveFirstOption={props.defaultActiveFirstOption}\n          dropdownMenuStyle={props.dropdownMenuStyle}\n          onFilterChange={props.onFilterChange}\n          footer={props.footer}\n          onMouseDown={props.onDropdownMouseDown}\n      />\n      </Spin>\n\n    );\n  };\n\n  getDropdownTransitionName = () => {\n    const props = this.props;\n    let transitionName = props.transitionName;\n    if (!transitionName && props.animation) {\n      transitionName = `${this.getDropdownPrefixCls()}-${props.animation}`;\n    }\n    return transitionName;\n  };\n\n  getDropdownPrefixCls = () => {\n    return `${this.props.prefixCls}-dropdown`;\n  };\n\n  render() {\n    const { onPopupFocus, ...props } = this.props;\n    const {\n      multiple,\n      visible,\n      inputValue,\n      dropdownAlign,\n      disabled,\n      showSearch,\n      dropdownClassName,\n      dropdownStyle,\n      dropdownMatchSelectWidth,\n      filter,\n      filterValue,\n    } = props;\n    const dropdownPrefixCls = this.getDropdownPrefixCls();\n    const popupClassName = {\n      [dropdownClassName]: !!dropdownClassName,\n      [`${dropdownPrefixCls}--${multiple ? 'multiple' : 'single'}`]: 1,\n    };\n    const popupElement = this.getDropdownElement({\n      menuItems: props.options,\n      onPopupFocus,\n      multiple,\n      inputValue,\n      visible,\n      filter,\n      filterValue,\n    });\n\n    const popupStyle = { ...dropdownStyle };\n    const widthProp = dropdownMatchSelectWidth ? 'width' : 'minWidth';\n    if (this.state.dropdownWidth && !popupStyle[widthProp]) {\n      popupStyle[widthProp] = `${this.state.dropdownWidth}px`;\n    }\n\n    return (\n      <Trigger\n        {...props}\n        action={disabled ? [] : ['click']}\n        ref={saveRef(this, 'triggerRef')}\n        popupPlacement={props.popupPlacement}\n        builtinPlacements={props.builtinPlacements || BUILT_IN_PLACEMENTS}\n        prefixCls={dropdownPrefixCls}\n        popupTransitionName={this.getDropdownTransitionName()}\n        onPopupVisibleChange={props.onDropdownVisibleChange}\n        popup={popupElement}\n        popupAlign={dropdownAlign}\n        popupVisible={visible}\n        getPopupContainer={props.getPopupContainer}\n        popupClassName={classnames(popupClassName)}\n        popupStyle={popupStyle}\n      >\n        {props.children}\n      </Trigger>\n    );\n  }\n}\n\nSelectTrigger.displayName = 'SelectTrigger';\n"]}