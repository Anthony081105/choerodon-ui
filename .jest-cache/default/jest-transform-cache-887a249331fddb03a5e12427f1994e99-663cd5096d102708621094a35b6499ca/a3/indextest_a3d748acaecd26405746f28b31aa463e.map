{"version":3,"sources":["index.test.js"],"names":["describe","it","wrapper","expect","toMatchSnapshot","wrapper1","wrapper2","type","__ANT_BUTTON","toBe","render"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,QAAD,EAAW,YAAM;AACvBC,EAAAA,EAAE,CAAC,mBAAD,EAAsB,YAAM;AAC5B,QAAMC,OAAO,GAAG,oBAAO,gCAAC,YAAD,iBAAP,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,eAAhB;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC/C,QAAMC,OAAO,GAAG,oBAAO,gCAAC,YAAD,uBAAP,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,eAAhB,GAF+C,CAG/C;;AACA,QAAMC,QAAQ,GAAG,oBAAO,gCAAC,YAAD;AAAQ,MAAA,IAAI,EAAC;AAAb,sBAAP,CAAjB;AACAF,IAAAA,MAAM,CAACE,QAAD,CAAN,CAAiBD,eAAjB,GAL+C,CAM/C;;AACA,QAAME,QAAQ,GAAG,oBACf,gCAAC,YAAD,QACE,gCAAC,gBAAD;AAAM,MAAA,IAAI,EAAC;AAAX,MADF,iBADe,CAAjB;AAMAH,IAAAA,MAAM,CAACG,QAAD,CAAN,CAAiBF,eAAjB;AACD,GAdC,CAAF;AAgBAH,EAAAA,EAAE,CAAC,yCAAD,EAA4C,YAAM;AAClD,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD,sBAAN,CAAhB,CADkD,CAElD;;AACAC,IAAAA,MAAM,CAACD,OAAO,CAACK,IAAR,GAAeC,YAAhB,CAAN,CAAoCC,IAApC,CAAyC,IAAzC;AACD,GAJC,CAAF;AAMAR,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACrC,QAAMC,OAAO,GAAG,mBACd,gCAAC,YAAD;AAAQ,MAAA,MAAM,EAAC,QAAf;AAAwB,MAAA,IAAI,EAAC;AAA7B,qBADc,CAAhB;AAKAC,IAAAA,MAAM,CAACD,OAAO,CAACQ,MAAR,EAAD,CAAN,CAAyBN,eAAzB;AACD,GAPC,CAAF;AASAH,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7C,QAAMC,OAAO,GAAG,oBAAO,gCAAC,YAAD,QAAS,CAAT,CAAP,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,eAAhB;AACA,QAAMC,QAAQ,GAAG,oBAAO,gCAAC,YAAD,YAAP,CAAjB;AACAF,IAAAA,MAAM,CAACE,QAAD,CAAN,CAAiBD,eAAjB;AACA,QAAME,QAAQ,GAAG,oBAAO,gCAAC,YAAD,QAAS,KAAT,CAAP,CAAjB;AACAH,IAAAA,MAAM,CAACG,QAAD,CAAN,CAAiBF,eAAjB;AACD,GAPC,CAAF;AAQD,CA7CO,CAAR","sourcesContent":["import React from 'react';\nimport { render, mount } from 'enzyme';\nimport Button from '..';\nimport Icon from '../../icon';\n\ndescribe('Button', () => {\n  it('renders correctly', () => {\n    const wrapper = render(<Button>Follow</Button>);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  it('renders Chinese characters correctly', () => {\n    const wrapper = render(<Button>按钮</Button>);\n    expect(wrapper).toMatchSnapshot();\n    // should not insert space when there is icon\n    const wrapper1 = render(<Button icon=\"search\">按钮</Button>);\n    expect(wrapper1).toMatchSnapshot();\n    // should not insert space when there is icon\n    const wrapper2 = render(\n      <Button>\n        <Icon type=\"search\" />\n        按钮\n      </Button>,\n    );\n    expect(wrapper2).toMatchSnapshot();\n  });\n\n  it('have static perperty for type detecting', () => {\n    const wrapper = mount(<Button>Button Text</Button>);\n    // eslint-disable-next-line\n    expect(wrapper.type().__ANT_BUTTON).toBe(true);\n  });\n\n  it('should support link button', () => {\n    const wrapper = mount(\n      <Button target=\"_blank\" href=\"https://choerodon.github.io/choerodon-ui/\">\n        link button\n      </Button>,\n    );\n    expect(wrapper.render()).toMatchSnapshot();\n  });\n\n  it('fixbug renders {0} , 0 and {false}', () => {\n    const wrapper = render(<Button>{0}</Button>);\n    expect(wrapper).toMatchSnapshot();\n    const wrapper1 = render(<Button>0</Button>);\n    expect(wrapper1).toMatchSnapshot();\n    const wrapper2 = render(<Button>{false}</Button>);\n    expect(wrapper2).toMatchSnapshot();\n  });\n});\n"]}