{"version":3,"sources":["index.test.js"],"names":["describe","it","onSelect","jest","fn","wrapper","find","at","simulate","expect","toHaveBeenCalledWith","anything","value","mock","calls","Moment","isMoment","toBe","validRange","length","elem","hasClass","toEqual","hostNodes","first","instance","disabledDate","getDateRange","monthMode","yearMode","state","mode","setProps","onPanelChangeStub","setType","toHaveBeenCalledTimes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Moment from 'moment';\nimport { mount } from 'enzyme';\nimport Calendar from '..';\n\ndescribe('Calendar', () => {\n  it('Calendar should be selectable', () => {\n    const onSelect = jest.fn();\n    const wrapper = mount(<Calendar onSelect={onSelect} />);\n    wrapper\n      .find('.c7n-fullcalendar-cell')\n      .at(0)\n      .simulate('click');\n    expect(onSelect).toHaveBeenCalledWith(expect.anything());\n    const value = onSelect.mock.calls[0][0];\n    expect(Moment.isMoment(value)).toBe(true);\n  });\n\n  it('only Valid range should be selectable', () => {\n    const onSelect = jest.fn();\n    const validRange = [Moment('2018-02-02'), Moment('2018-02-18')];\n    const wrapper = mount(\n      <Calendar onSelect={onSelect} validRange={validRange} defaultValue={Moment('2018-02-02')} />,\n    );\n    wrapper\n      .find('[title=\"February 1, 2018\"]')\n      .at(0)\n      .simulate('click');\n    wrapper\n      .find('[title=\"February 2, 2018\"]')\n      .at(0)\n      .simulate('click');\n    expect(onSelect.mock.calls.length).toBe(1);\n  });\n\n  it('dates other than in valid range should be disabled', () => {\n    const onSelect = jest.fn();\n    const validRange = [Moment('2018-02-02'), Moment('2018-02-18')];\n    const wrapper = mount(\n      <Calendar onSelect={onSelect} validRange={validRange} defaultValue={Moment('2018-02-02')} />,\n    );\n    wrapper\n      .find('[title=\"February 20, 2018\"]')\n      .at(0)\n      .simulate('click');\n    const elem = wrapper\n      .find('[title=\"February 20, 2018\"]')\n      .hasClass('c7n-fullcalendar-disabled-cell');\n    expect(elem).toEqual(true);\n    expect(onSelect.mock.calls.length).toBe(0);\n  });\n\n  it('months other than in valid range should be disabled', () => {\n    const onSelect = jest.fn();\n    const validRange = [Moment('2018-02-02'), Moment('2018-05-18')];\n    const wrapper = mount(\n      <Calendar\n        onSelect={onSelect}\n        validRange={validRange}\n        defaultValue={Moment('2018-02-02')}\n        mode=\"year\"\n      />,\n    );\n    expect(\n      wrapper\n        .find('[title=\"Jan\"]')\n        .at(0)\n        .hasClass('c7n-fullcalendar-month-panel-cell-disabled'),\n    ).toBe(true);\n    expect(\n      wrapper\n        .find('[title=\"Feb\"]')\n        .at(0)\n        .hasClass('c7n-fullcalendar-month-panel-cell-disabled'),\n    ).toBe(false);\n    expect(\n      wrapper\n        .find('[title=\"Jun\"]')\n        .at(0)\n        .hasClass('c7n-fullcalendar-month-panel-cell-disabled'),\n    ).toBe(true);\n    wrapper\n      .find('[title=\"Jan\"]')\n      .at(0)\n      .simulate('click');\n    wrapper\n      .find('[title=\"Mar\"]')\n      .at(0)\n      .simulate('click');\n    expect(onSelect.mock.calls.length).toBe(1);\n  });\n\n  it('months other than in valid range should not be shown in header', () => {\n    const validRange = [Moment('2017-02-02'), Moment('2018-05-18')];\n    const wrapper = mount(<Calendar validRange={validRange} />);\n    wrapper\n      .find('.c7n-fullcalendar-year-select')\n      .hostNodes()\n      .simulate('click');\n    wrapper\n      .find('.c7n-select-dropdown-menu-item')\n      .first()\n      .simulate('click');\n    wrapper\n      .find('.c7n-fullcalendar-month-select')\n      .hostNodes()\n      .simulate('click');\n    // 2 years and 11 months\n    expect(wrapper.find('.c7n-select-dropdown-menu-item').length).toBe(13);\n  });\n\n  it('getDateRange should returns a disabledDate function', () => {\n    const validRange = [Moment('2018-02-02'), Moment('2018-05-18')];\n    const wrapper = mount(<Calendar validRange={validRange} defaultValue={Moment('2018-02-02')} />);\n    const instance = wrapper.instance();\n    const disabledDate = instance.getDateRange(validRange);\n    expect(disabledDate(Moment('2018-06-02'))).toBe(true);\n    expect(disabledDate(Moment('2018-04-02'))).toBe(false);\n  });\n\n  it('Calendar should change mode by prop', () => {\n    const monthMode = 'month';\n    const yearMode = 'year';\n    const wrapper = mount(<Calendar />);\n    expect(wrapper.state().mode).toEqual(monthMode);\n    wrapper.setProps({ mode: 'year' });\n    expect(wrapper.state().mode).toEqual(yearMode);\n  });\n\n  it('Calendar should switch mode', () => {\n    const monthMode = 'month';\n    const yearMode = 'year';\n    const onPanelChangeStub = jest.fn();\n    const wrapper = mount(<Calendar mode={yearMode} onPanelChange={onPanelChangeStub} />);\n    expect(wrapper.state().mode).toEqual(yearMode);\n    wrapper.instance().setType('date');\n    expect(wrapper.state().mode).toEqual(monthMode);\n    expect(onPanelChangeStub).toHaveBeenCalledTimes(1);\n  });\n});\n"]}