{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/axios/cacheAdapterEnhancer.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAgBA,SAAS,eAAT,GAAwB;AACtB,MAAM,KAAK,GAAG,IAAI,iBAAJ,CAAgC,0BAAU,aAAV,CAAhC,CAAd;AACA,kCAAoB,KAApB;AACA,SAAO,KAAP;AACD;;AAEa,SAAU,oBAAV,CACZ,OADY,EAES;AAAA,MAArB,OAAqB,uEAAF,EAAE;AAAA,8BAMjB,OANiB,CAGnB,gBAHmB;AAAA,MAGnB,gBAHmB,sCAGA,IAHA;AAAA,2BAMjB,OANiB,CAInB,SAJmB;AAAA,MAInB,SAJmB,mCAIP,OAJO;AAAA,8BAMjB,OANiB,CAKnB,YALmB;AAAA,MAKnB,YALmB,sCAKJ,eAAe,EALX;AAQrB,SAAO,UAAA,MAAM,EAAG;AACd,QAAM,QAAQ,GACZ,MAAM,CAAC,SAAD,CAAN,KAAsB,SAAtB,IAAmC,MAAM,CAAC,SAAD,CAAN,KAAsB,IAAzD,GACI,MAAM,CAAC,SAAD,CADV,GAEI,gBAHN;;AAIA,QAAI,QAAJ,EAAc;AACZ,UAAM,KAAK,GAA6B,wBAAY,QAAZ,IAAwB,QAAxB,GAAmC,YAA3E;AACA,UAAM,KAAK,GAAG,oCAAwB,MAAxB,CAAd;AACA,UAAI,eAAe,GAAG,KAAK,CAAC,GAAN,CAAU,KAAV,CAAtB;;AAEA,UAAI,CAAC,eAAL,EAAsB;AACpB,QAAA,eAAe,GAAG;AAAA;AAAA,qCAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEF,OAAO,CAAC,MAAD,CAFL;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIf,kBAAA,KAAK,CAAC,GAAN,CAAU,KAAV;AAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD,IAAlB;;AASA,YAAI,OAAO,CAAC,GAAR,CAAY,YAAZ,KAA6B,MAAjC,EAAyC;AACvC;AACA,UAAA,OAAO,CAAC,IAAR,oBAAyB,KAAzB;AACD;;AACD,QAAA,KAAK,CAAC,GAAN,CAAU,KAAV,EAAiB,eAAjB;AAEA,eAAO,eAAP;AACD;;AAED,UAAI,OAAO,CAAC,GAAR,CAAY,YAAZ,KAA6B,MAAjC,EAAyC;AACvC;AACA,QAAA,OAAO,CAAC,IAAR,4CAAiD,KAAjD;AACD;;AAED,aAAO,eAAP;AACD;;AAED,WAAO,OAAO,CAAC,MAAD,CAAd;AACD,GAtCD;AAuCD","sourcesContent":["import { AxiosAdapter, AxiosPromise } from 'axios';\nimport { getConfig } from 'choerodon-ui/lib/configure';\nimport Cache, { refreshCacheOptions } from '../_util/Cache';\nimport { buildURLWithAxiosConfig, isCacheLike } from './utils';\n\nexport interface ICacheLike<T> {\n  get(key: string): T | undefined;\n\n  set(key: string, value: T, maxAge?: number): boolean;\n\n  del(key: string): void;\n}\n\nexport type Options = {\n  enabledByDefault?: boolean;\n  cacheFlag?: string;\n  defaultCache?: ICacheLike<AxiosPromise>;\n};\n\nfunction getDefaultCache() {\n  const cache = new Cache<string, AxiosPromise>(getConfig('lookupCache'));\n  refreshCacheOptions(cache);\n  return cache;\n}\n\nexport default function cacheAdapterEnhancer(\n  adapter: AxiosAdapter,\n  options: Options = {},\n): AxiosAdapter {\n  const {\n    enabledByDefault = true,\n    cacheFlag = 'cache',\n    defaultCache = getDefaultCache(),\n  } = options;\n\n  return config => {\n    const useCache =\n      config[cacheFlag] !== undefined && config[cacheFlag] !== null\n        ? config[cacheFlag]\n        : enabledByDefault;\n    if (useCache) {\n      const cache: ICacheLike<AxiosPromise> = isCacheLike(useCache) ? useCache : defaultCache;\n      const index = buildURLWithAxiosConfig(config);\n      let responsePromise = cache.get(index);\n\n      if (!responsePromise) {\n        responsePromise = (async () => {\n          try {\n            return await adapter(config);\n          } catch (reason) {\n            cache.del(index);\n            throw reason;\n          }\n        })();\n\n        if (process.env.LOGGER_LEVEL === 'info') {\n          // eslint-disable-next-line no-console\n          console.info(`request: ${index}`);\n        }\n        cache.set(index, responsePromise);\n\n        return responsePromise;\n      }\n\n      if (process.env.LOGGER_LEVEL === 'info') {\n        // eslint-disable-next-line no-console\n        console.info(`request cached by cache adapter: ${index}`);\n      }\n\n      return responsePromise;\n    }\n\n    return adapter(config);\n  };\n}\n"]}