{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/dropdown/dropdown-button.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA,IAAM,WAAW,GAAG,mBAAO,KAA3B;;AASc,SAAU,cAAV,CAAyB,KAAzB,EAAmD;AAAA,MAElD,kBAFkD,GAgB3D,KAhB2D,CAE7D,SAF6D;AAAA,MAG7D,IAH6D,GAgB3D,KAhB2D,CAG7D,IAH6D;AAAA,MAI7D,QAJ6D,GAgB3D,KAhB2D,CAI7D,QAJ6D;AAAA,MAK7D,OAL6D,GAgB3D,KAhB2D,CAK7D,OAL6D;AAAA,MAM7D,QAN6D,GAgB3D,KAhB2D,CAM7D,QAN6D;AAAA,MAO7D,SAP6D,GAgB3D,KAhB2D,CAO7D,SAP6D;AAAA,MAQ7D,OAR6D,GAgB3D,KAhB2D,CAQ7D,OAR6D;AAAA,MAS7D,OAT6D,GAgB3D,KAhB2D,CAS7D,OAT6D;AAAA,MAU7D,KAV6D,GAgB3D,KAhB2D,CAU7D,KAV6D;AAAA,MAW7D,OAX6D,GAgB3D,KAhB2D,CAW7D,OAX6D;AAAA,MAY7D,eAZ6D,GAgB3D,KAhB2D,CAY7D,eAZ6D;AAAA,MAa7D,SAb6D,GAgB3D,KAhB2D,CAa7D,SAb6D;AAAA,MAc7D,iBAd6D,GAgB3D,KAhB2D,CAc7D,iBAd6D;AAAA,MAe1D,SAf0D,6CAgB3D,KAhB2D;AAkB/D,MAAM,SAAS,GAAG,6BAAa,iBAAb,EAAgC,kBAAhC,CAAlB;AACA,MAAM,aAAa,GAAG;AACpB,IAAA,KAAK,EAAL,KADoB;AAEpB,IAAA,OAAO,EAAP,OAFoB;AAGpB,IAAA,QAAQ,EAAR,QAHoB;AAIpB,IAAA,OAAO,EAAE,QAAQ,GAAG,EAAH,GAAQ,OAJL;AAKpB,IAAA,eAAe,EAAf,eALoB;AAMpB,IAAA,SAAS,EAAT,SANoB;AAOpB,IAAA,iBAAiB,EAAjB;AAPoB,GAAtB;;AASA,MAAI,aAAa,KAAjB,EAAwB;AACrB,IAAA,aAAqB,CAAC,OAAtB,GAAgC,OAAhC;AACF;;AAED,SACE,kBAAA,aAAA,CAAC,WAAD,EAAY,0BAAA,EAAA,EAAK,SAAL,EAAc;AAAE,IAAA,SAAS,EAAE,4BAAW,SAAX,EAAsB,SAAtB;AAAb,GAAd,CAAZ,EACE,kBAAA,aAAA,CAAC,kBAAD,EAAO;AAAC,IAAA,IAAI,EAAE,IAAP;AAAa,IAAA,QAAQ,EAAE,QAAvB;AAAiC,IAAA,OAAO,EAAE;AAA1C,GAAP,EACG,QADH,CADF,EAIE,kBAAA,aAAA,CAAC,oBAAD,EAAS,0BAAA,EAAA,EAAK,aAAL,CAAT,EACE,kBAAA,aAAA,CAAC,kBAAD,EAAO;AAAC,IAAA,IAAI,EAAE;AAAP,GAAP,EACE,kBAAA,aAAA,CAAC,gBAAD,EAAK;AAAC,IAAA,IAAI,EAAC;AAAN,GAAL,CADF,CADF,CAJF,CADF;AAYD;;AAED,cAAc,CAAC,WAAf,GAA6B,gBAA7B;AAEA,cAAc,CAAC,YAAf,GAA8B;AAC5B,EAAA,SAAS,EAAE,aADiB;AAE5B,EAAA,IAAI,EAAE;AAFsB,CAA9B","sourcesContent":["import React, { MouseEventHandler } from 'react';\nimport classNames from 'classnames';\nimport Button from '../button';\nimport { ButtonGroupProps } from '../button/ButtonGroup';\nimport Icon from '../icon';\nimport Dropdown, { DropDownProps } from './dropdown';\nimport { getPrefixCls } from '../configure';\n\nconst ButtonGroup = Button.Group;\n\nexport interface DropdownButtonProps extends ButtonGroupProps, DropDownProps {\n  type?: 'primary' | 'ghost' | 'dashed';\n  disabled?: boolean;\n  onClick?: MouseEventHandler<any>;\n  children?: any;\n}\n\nexport default function DropdownButton(props: DropdownButtonProps) {\n  const {\n    prefixCls: customizePrefixCls,\n    type,\n    disabled,\n    onClick,\n    children,\n    className,\n    overlay,\n    trigger,\n    align,\n    visible,\n    onVisibleChange,\n    placement,\n    getPopupContainer,\n    ...restProps\n  } = props;\n\n  const prefixCls = getPrefixCls('dropdown-button', customizePrefixCls);\n  const dropdownProps = {\n    align,\n    overlay,\n    disabled,\n    trigger: disabled ? [] : trigger,\n    onVisibleChange,\n    placement,\n    getPopupContainer,\n  };\n  if ('visible' in props) {\n    (dropdownProps as any).visible = visible;\n  }\n\n  return (\n    <ButtonGroup {...restProps} className={classNames(prefixCls, className)}>\n      <Button type={type} disabled={disabled} onClick={onClick}>\n        {children}\n      </Button>\n      <Dropdown {...dropdownProps}>\n        <Button type={type}>\n          <Icon type=\"arrow_drop_down\" />\n        </Button>\n      </Dropdown>\n    </ButtonGroup>\n  );\n}\n\nDropdownButton.displayName = 'DropdownButton';\n\nDropdownButton.defaultProps = {\n  placement: 'bottomRight',\n  type: 'default',\n};\n"]}