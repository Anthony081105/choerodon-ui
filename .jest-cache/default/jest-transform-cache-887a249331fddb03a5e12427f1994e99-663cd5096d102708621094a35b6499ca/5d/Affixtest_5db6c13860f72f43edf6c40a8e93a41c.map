{"version":3,"sources":["Affix.test.js"],"names":["events","AffixMounter","container","scrollTop","addEventListener","jest","fn","mockImplementation","event","cb","height","overflowY","node","paddingTop","ele","affix","React","Component","describe","beforeAll","useFakeTimers","afterAll","useRealTimers","it","document","body","innerHTML","wrapper","attachTo","getElementById","runAllTimers","instance","fixedNode","parentNode","getBoundingClientRect","bottom","left","right","top","width","scroll","type","expect","state","affixStyle","not","toBe"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG,EAAf;;IAEMC,Y;;;;;;;;;;;;;;;;;kGAQQ,YAAM;AAChB,aAAO,MAAKC,SAAZ;AACD,K;;;;;;wCATmB;AAClB,WAAKA,SAAL,CAAeC,SAAf,GAA2B,GAA3B;AACA,WAAKD,SAAL,CAAeE,gBAAf,GAAkCC,IAAI,CAACC,EAAL,GAAUC,kBAAV,CAA6B,UAACC,KAAD,EAAQC,EAAR,EAAe;AAC5ET,QAAAA,MAAM,CAACQ,KAAD,CAAN,GAAgBC,EAAhB;AACD,OAFiC,CAAlC;AAGD;;;6BAMQ;AAAA;;AACP,aACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,GADH;AAELC,UAAAA,SAAS,EAAE;AAFN,SADT;AAKE,QAAA,GAAG,EAAE,aAACC,IAAD,EAAU;AAAE,UAAA,MAAI,CAACV,SAAL,GAAiBU,IAAjB;AAAwB;AAL3C,SAOE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,EADP;AAELH,UAAAA,MAAM,EAAE;AAFH;AAFT,SAOE,gCAAC,YAAD;AACE,QAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAACR,SAAX;AAAA,SADV;AAEE,QAAA,GAAG,EAAE,aAAAY,GAAG;AAAA,iBAAI,MAAI,CAACC,KAAL,GAAaD,GAAjB;AAAA;AAFV,SAIE,gCAAC,kBAAD;AAAQ,QAAA,IAAI,EAAC;AAAb,yCAJF,CAPF,CAPF,CADF;AA0BD;;;EAvCwBE,kBAAMC,S;;AA0CjCC,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BC,EAAAA,SAAS,CAAC,YAAM;AACdd,IAAAA,IAAI,CAACe,aAAL;AACD,GAFQ,CAAT;AAIAC,EAAAA,QAAQ,CAAC,YAAM;AACbhB,IAAAA,IAAI,CAACiB,aAAL;AACD,GAFO,CAAR;AAIAC,EAAAA,EAAE,CAAC,yBAAD,EAA4B,YAAM;AAClCC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,GAA0B,sBAA1B;AAEA,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD,OAAN,EAAwB;AAAEC,MAAAA,QAAQ,EAAEJ,QAAQ,CAACK,cAAT,CAAwB,SAAxB;AAAZ,KAAxB,CAAhB;AACAxB,IAAAA,IAAI,CAACyB,YAAL;AAEAH,IAAAA,OAAO,CAACI,QAAR,GAAmBhB,KAAnB,CAAyBiB,SAAzB,CAAmCC,UAAnC,CAA8CC,qBAA9C,GAAsE7B,IAAI,CAACC,EAAL,CAAQ,YAAM;AAClF,aAAO;AACL6B,QAAAA,MAAM,EAAE,GADH;AACQzB,QAAAA,MAAM,EAAE,EADhB;AACoB0B,QAAAA,IAAI,EAAE,CAD1B;AAC6BC,QAAAA,KAAK,EAAE,CADpC;AACuCC,QAAAA,GAAG,EAAE,CAAC,EAD7C;AACiDC,QAAAA,KAAK,EAAE;AADxD,OAAP;AAGD,KAJqE,CAAtE;AAMAvC,IAAAA,MAAM,CAACwC,MAAP,CAAc;AACZC,MAAAA,IAAI,EAAE;AADM,KAAd;AAIApC,IAAAA,IAAI,CAACyB,YAAL;AACAY,IAAAA,MAAM,CAACf,OAAO,CAACI,QAAR,GAAmBhB,KAAnB,CAAyB4B,KAAzB,CAA+BC,UAAhC,CAAN,CAAkDC,GAAlD,CAAsDC,IAAtD,CAA2D,IAA3D;AACD,GAlBC,CAAF;AAmBD,CA5BO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport Affix from '..';\nimport Button from '../../button';\n\nconst events = {};\n\nclass AffixMounter extends React.Component {\n  componentDidMount() {\n    this.container.scrollTop = 100;\n    this.container.addEventListener = jest.fn().mockImplementation((event, cb) => {\n      events[event] = cb;\n    });\n  }\n\n  getTarget = () => {\n    return this.container;\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          height: 100,\n          overflowY: 'scroll',\n        }}\n        ref={(node) => { this.container = node; }}\n      >\n        <div\n          className=\"background\"\n          style={{\n            paddingTop: 60,\n            height: 300,\n          }}\n        >\n          <Affix\n            target={() => this.container}\n            ref={ele => this.affix = ele}\n          >\n            <Button type=\"primary\">\n              Fixed at the top of container\n            </Button>\n          </Affix>\n        </div>\n      </div>\n    );\n  }\n}\n\ndescribe('Affix Render', () => {\n  beforeAll(() => {\n    jest.useFakeTimers();\n  });\n\n  afterAll(() => {\n    jest.useRealTimers();\n  });\n\n  it('Anchor render perfectly', () => {\n    document.body.innerHTML = '<div id=\"mounter\" />';\n\n    const wrapper = mount(<AffixMounter />, { attachTo: document.getElementById('mounter') });\n    jest.runAllTimers();\n\n    wrapper.instance().affix.fixedNode.parentNode.getBoundingClientRect = jest.fn(() => {\n      return {\n        bottom: 100, height: 28, left: 0, right: 0, top: -50, width: 195,\n      };\n    });\n\n    events.scroll({\n      type: 'scroll',\n    });\n\n    jest.runAllTimers();\n    expect(wrapper.instance().affix.state.affixStyle).not.toBe(null);\n  });\n});\n"]}