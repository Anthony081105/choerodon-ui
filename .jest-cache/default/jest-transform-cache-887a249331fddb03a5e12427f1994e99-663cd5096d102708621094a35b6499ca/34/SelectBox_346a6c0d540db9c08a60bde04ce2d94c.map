{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/select-box/SelectBox.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { computed, isArrayLike } from 'mobx';\nimport omit from 'lodash/omit';\nimport { Select, SelectProps } from '../select/Select';\nimport ObserverRadio from '../radio/Radio';\nimport ObserverCheckBox from '../check-box/CheckBox';\nimport autobind from '../_util/autobind';\nimport { ValidationMessages } from '../validator/Validator';\nimport Option from '../option/Option';\nimport OptGroup from '../option/OptGroup';\nimport { ViewMode } from '../radio/enum';\nimport { $l } from '../locale-context';\nimport { LabelLayout } from '../form/enum';\n\nconst GroupIdGen = (function*(id) {\n  while (true) {\n    yield `__group-${id++}__`;\n  }\n})(1);\n\nexport interface SelectBoxProps extends SelectProps {\n  /**\n   * 是否垂直显示\n   */\n  vertical?: boolean;\n  mode?: ViewMode;\n}\n\n@observer\nexport default class SelectBox extends Select<SelectBoxProps> {\n  static displayName = 'SelectBox';\n\n  static propTypes = {\n    /**\n     * 是否垂直显示\n     */\n    vertical: PropTypes.bool,\n    ...Select.propTypes,\n  };\n\n  static defaultProps = {\n    ...Select.defaultProps,\n    suffixCls: 'select-box',\n    vertical: false,\n  };\n\n  static Option = Option;\n\n  static OptGroup = OptGroup;\n\n  @computed\n  get defaultValidationMessages(): ValidationMessages {\n    const label = this.getProp('label');\n    return {\n      valueMissing: $l('SelectBox', label ? 'value_missing' : 'value_missing_no_label', {\n        label,\n      }),\n    };\n  }\n\n  @computed\n  get name(): string | undefined {\n    return this.observableProps.name || GroupIdGen.next().value;\n  }\n\n  getOtherProps() {\n    return omit(super.getOtherProps(), ['vertical']);\n  }\n\n  getClassName() {\n    const {\n      prefixCls,\n      props: { vertical },\n    } = this;\n    return super.getClassName({\n      [`${prefixCls}-vertical`]: vertical,\n    });\n  }\n\n  isEmpty() {\n    return false;\n  }\n\n  renderWrapper(): ReactNode {\n    const { options, textField, valueField } = this;\n    const { autoFocus, mode, onOption } = this.props;\n    const items = options.data.map((record, index) => {\n      const optionProps = onOption({ dataSet: options, record });\n      return this.renderItem({\n        ...optionProps,\n        key: index,\n        dataSet: null,\n        record: null,\n        value: record.get(valueField),\n        checked: this.isChecked(this.getValue(), record.get(valueField)),\n        name: this.name,\n        onChange: this.handleItemChange,\n        children: record.get(textField),\n        autoFocus: autoFocus && index === 0,\n        readOnly: this.isReadOnly(),\n        disabled: this.isDisabled() || (optionProps && optionProps.disabled),\n        mode,\n        noValidate: true,\n        labelLayout: LabelLayout.none,\n      });\n    });\n    const { className } = this.getOtherProps();\n    const Element = this.context.formNode ? 'div' : 'form';\n    return (\n      <span key=\"wrapper\" {...this.getWrapperProps()}>\n        <Element className={className}>{items}</Element>\n        {this.renderFloatLabel()}\n      </span>\n    );\n  }\n\n  @autobind\n  handleItemChange(value, oldValue) {\n    if (this.multiple) {\n      const values = this.getValues();\n      if (!value) {\n        values.splice(values.indexOf(oldValue), 1);\n      } else {\n        values.push(value);\n      }\n      this.setValue(values);\n    } else {\n      this.setValue(value);\n    }\n  }\n\n  isChecked(value, checkedValue) {\n    if (isArrayLike(value)) {\n      return value.indexOf(checkedValue) !== -1;\n    }\n    return value === checkedValue;\n  }\n\n  renderItem(props) {\n    if (this.multiple) {\n      return <ObserverCheckBox {...props} />;\n    }\n    return <ObserverRadio {...props} />;\n  }\n}\n"]}