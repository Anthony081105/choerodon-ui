{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/text-area/calculateNodeHeight.tsx"],"names":[],"mappings":"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","sourcesContent":["// Thanks to https://github.com/andreypopp/react-textarea-autosize/\n\n/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\n\nconst HIDDEN_TEXTAREA_STYLE = `\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n`;\n\nconst SIZING_STYLE = [\n  'letter-spacing',\n  'line-height',\n  'padding-top',\n  'padding-bottom',\n  'font-family',\n  'font-weight',\n  'font-size',\n  'text-rendering',\n  'text-transform',\n  'width',\n  'text-indent',\n  'padding-left',\n  'padding-right',\n  'border-width',\n  'box-sizing',\n];\n\nexport interface NodeType {\n  sizingStyle: string;\n  paddingSize: number;\n  borderSize: number;\n  boxSizing: string;\n}\n\nconst computedStyleCache: { [key: string]: NodeType } = {};\nlet hiddenTextarea: HTMLTextAreaElement;\n\nfunction calculateNodeStyling(node: HTMLElement, useCache = false) {\n  const nodeRef = (node.getAttribute('id') ||\n    node.getAttribute('data-reactid') ||\n    node.getAttribute('name')) as string;\n\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n\n  const style = window.getComputedStyle(node);\n\n  const boxSizing =\n    style.getPropertyValue('box-sizing') ||\n    style.getPropertyValue('-moz-box-sizing') ||\n    style.getPropertyValue('-webkit-box-sizing');\n\n  const paddingSize =\n    parseFloat(style.getPropertyValue('padding-bottom')) +\n    parseFloat(style.getPropertyValue('padding-top'));\n\n  const borderSize =\n    parseFloat(style.getPropertyValue('border-bottom-width')) +\n    parseFloat(style.getPropertyValue('border-top-width'));\n\n  const sizingStyle = SIZING_STYLE.map(name => `${name}:${style.getPropertyValue(name)}`).join(';');\n\n  const nodeInfo: NodeType = {\n    sizingStyle,\n    paddingSize,\n    borderSize,\n    boxSizing,\n  };\n\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\n\nexport default function calculateNodeHeight(\n  uiTextNode: HTMLTextAreaElement,\n  useCache = false,\n  minRows: number | null = null,\n  maxRows: number | null = null,\n) {\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  // Fix wrap=\"off\" issue\n\n  if (uiTextNode.getAttribute('wrap')) {\n    hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap') as string);\n  } else {\n    hiddenTextarea.removeAttribute('wrap');\n  }\n\n  // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n  const { paddingSize, borderSize, boxSizing, sizingStyle } = calculateNodeStyling(\n    uiTextNode,\n    useCache,\n  );\n\n  // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n  hiddenTextarea.setAttribute('style', `${sizingStyle};${HIDDEN_TEXTAREA_STYLE}`);\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n\n  let minHeight = Number.MIN_SAFE_INTEGER;\n  let maxHeight = Number.MAX_SAFE_INTEGER;\n  let height = hiddenTextarea.scrollHeight;\n  let overflowY: any;\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height += borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height -= paddingSize;\n  }\n\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = ' ';\n    const singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n      height = Math.max(minHeight, height);\n    }\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n      overflowY = height > maxHeight ? '' : 'hidden';\n      height = Math.min(maxHeight, height);\n    }\n  }\n\n  // Remove scroll bar flash when autosize without maxRows\n  if (!maxRows) {\n    overflowY = 'hidden';\n  }\n\n  return { height, minHeight, maxHeight, overflowY };\n}\n"]}