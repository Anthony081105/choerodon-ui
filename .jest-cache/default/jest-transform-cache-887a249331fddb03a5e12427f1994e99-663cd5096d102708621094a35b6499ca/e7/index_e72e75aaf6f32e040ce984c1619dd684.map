{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/notification/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { CSSProperties, ReactNode } from 'react';\nimport Icon from '../icon';\nimport Notification from '../rc-components/notification';\nimport { getPrefixCls } from '../configure';\n\nexport type NotificationPlacement = 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nexport type IconType = 'success' | 'info' | 'error' | 'warning';\n\nconst notificationInstance: { [key: string]: any } = {};\nlet defaultDuration = 4.5;\nlet defaultTop = 24;\nlet defaultBottom = 24;\nlet defaultPlacement: NotificationPlacement = 'topRight';\nlet defaultGetContainer: () => HTMLElement;\n\nexport interface ConfigProps {\n  top?: number;\n  bottom?: number;\n  duration?: number;\n  placement?: NotificationPlacement;\n  getContainer?: () => HTMLElement;\n}\n\nfunction setNotificationConfig(options: ConfigProps) {\n  const { duration, placement, bottom, top, getContainer } = options;\n  if (duration !== undefined) {\n    defaultDuration = duration;\n  }\n  if (placement !== undefined) {\n    defaultPlacement = placement;\n  }\n  if (bottom !== undefined) {\n    defaultBottom = bottom;\n  }\n  if (top !== undefined) {\n    defaultTop = top;\n  }\n  if (getContainer !== undefined) {\n    defaultGetContainer = getContainer;\n  }\n}\n\nfunction getPlacementStyle(placement: NotificationPlacement) {\n  let style;\n  switch (placement) {\n    case 'topLeft':\n      style = {\n        left: 0,\n        top: defaultTop,\n        bottom: 'auto',\n      };\n      break;\n    case 'topRight':\n      style = {\n        right: 0,\n        top: defaultTop,\n        bottom: 'auto',\n      };\n      break;\n    case 'bottomLeft':\n      style = {\n        left: 0,\n        top: 'auto',\n        bottom: defaultBottom,\n      };\n      break;\n    default:\n      style = {\n        right: 0,\n        top: 'auto',\n        bottom: defaultBottom,\n      };\n      break;\n  }\n  return style;\n}\n\nfunction getNotificationInstance(\n  prefixCls: string,\n  placement: NotificationPlacement,\n  callback: (n: any) => void,\n) {\n  const cacheKey = `${prefixCls}-${placement}`;\n  if (notificationInstance[cacheKey]) {\n    callback(notificationInstance[cacheKey]);\n    return;\n  }\n  (Notification as any).newInstance(\n    {\n      prefixCls,\n      className: `${prefixCls}-${placement}`,\n      style: getPlacementStyle(placement),\n      getContainer: defaultGetContainer,\n      closeIcon: <Icon className={`${prefixCls}-close-icon`} type=\"close\" />,\n    },\n    (notification: any) => {\n      notificationInstance[cacheKey] = notification;\n      callback(notification);\n    },\n  );\n}\n\nconst typeToIcon = {\n  success: 'check',\n  info: 'info',\n  error: 'error',\n  warning: 'warning',\n};\n\nexport interface ArgsProps {\n  message: ReactNode;\n  description: ReactNode;\n  btn?: ReactNode;\n  key?: string;\n  onClose?: () => void;\n  duration?: number | null;\n  icon?: ReactNode;\n  placement?: NotificationPlacement;\n  style?: CSSProperties;\n  prefixCls?: string;\n  className?: string;\n  readonly type?: IconType;\n}\n\nfunction notice(args: ArgsProps) {\n  const outerPrefixCls = getPrefixCls('notification', args.prefixCls);\n  const prefixCls = `${outerPrefixCls}-notice`;\n  const duration = args.duration === undefined ? defaultDuration : args.duration;\n\n  let iconNode: ReactNode = null;\n  if (args.icon) {\n    iconNode = <span className={`${prefixCls}-icon`}>{args.icon}</span>;\n  } else if (args.type) {\n    const iconType = typeToIcon[args.type];\n    iconNode = (\n      <Icon className={`${prefixCls}-icon ${prefixCls}-icon-${args.type}`} type={iconType} />\n    );\n  }\n\n  const autoMarginTag =\n    !args.description && iconNode ? (\n      <span className={`${prefixCls}-message-single-line-auto-margin`} />\n    ) : null;\n\n  getNotificationInstance(\n    outerPrefixCls,\n    args.placement || defaultPlacement,\n    (notification: any) => {\n      notification.notice({\n        content: (\n          <div className={iconNode ? `${prefixCls}-with-icon` : ''}>\n            {iconNode}\n            <div className={`${prefixCls}-message`}>\n              {autoMarginTag}\n              {args.message}\n            </div>\n            <div className={`${prefixCls}-description`}>{args.description}</div>\n            {args.btn ? <span className={`${prefixCls}-btn`}>{args.btn}</span> : null}\n          </div>\n        ),\n        duration,\n        closable: true,\n        onClose: args.onClose,\n        key: args.key,\n        style: args.style || {},\n        className: args.className,\n      });\n    },\n  );\n}\n\nconst api: any = {\n  open: notice,\n  close(key: string) {\n    Object.keys(notificationInstance).forEach(cacheKey =>\n      notificationInstance[cacheKey].removeNotice(key),\n    );\n  },\n  config: setNotificationConfig,\n  destroy() {\n    Object.keys(notificationInstance).forEach(cacheKey => {\n      notificationInstance[cacheKey].destroy();\n      delete notificationInstance[cacheKey];\n    });\n  },\n};\n\n['success', 'info', 'warning', 'error'].forEach(type => {\n  api[type] = (args: ArgsProps) =>\n    api.open({\n      ...args,\n      type,\n    });\n});\n\napi.warn = api.warning;\n\nexport interface NotificationApi {\n  success(args: ArgsProps): void;\n\n  error(args: ArgsProps): void;\n\n  info(args: ArgsProps): void;\n\n  warn(args: ArgsProps): void;\n\n  warning(args: ArgsProps): void;\n\n  open(args: ArgsProps): void;\n\n  close(key: string): void;\n\n  config(options: ConfigProps): void;\n\n  destroy(): void;\n}\n\nexport default api as NotificationApi;\n"]}