{"version":3,"sources":["trigger/Popup.jsx"],"names":["Popup","Component","visible","PropTypes","style","getClassNameFromAlign","onAlign","getRootDomNode","onMouseEnter","align","destroyPopupOnHide","className","prefixCls","onMouseLeave","stretch","children","node","stretchChecked","targetWidth","targetHeight","undefined","saveRef","props","currentAlignClassName","popupDomNode","$ele","height","width","ReactDOM","transitionName","animation","savePopupRef","hiddenClassName","sizeStyle","newStyle","popupInnerProps","ref","hidden","maskTransition","maskElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport Align from '../../align';\nimport Animate from '../../animate';\nimport PopupInner from './PopupInner';\nimport LazyRenderBox from './LazyRenderBox';\nimport { saveRef } from './utils';\n\nclass Popup extends Component {\n  static propTypes = {\n    visible: PropTypes.bool,\n    style: PropTypes.object,\n    getClassNameFromAlign: PropTypes.func,\n    onAlign: PropTypes.func,\n    getRootDomNode: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    align: PropTypes.any,\n    destroyPopupOnHide: PropTypes.bool,\n    className: PropTypes.string,\n    prefixCls: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    stretch: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Used for stretch\n      stretchChecked: false,\n      targetWidth: undefined,\n      targetHeight: undefined,\n    };\n\n    this.savePopupRef = saveRef.bind(this, 'popupInstance');\n    this.saveAlignRef = saveRef.bind(this, 'alignInstance');\n  }\n\n  componentDidMount() {\n    this.rootNode = this.getPopupDomNode();\n    this.setStretchSize();\n  }\n\n  componentDidUpdate() {\n    this.setStretchSize();\n  }\n\n  onAlign = (popupDomNode, align) => {\n    const props = this.props;\n    const currentAlignClassName = props.getClassNameFromAlign(align);\n    // FIX: https://github.com/react-component/trigger/issues/56\n    // FIX: https://github.com/react-component/tooltip/issues/79\n    if (this.currentAlignClassName !== currentAlignClassName) {\n      this.currentAlignClassName = currentAlignClassName;\n      popupDomNode.className = this.getClassName(currentAlignClassName);\n    }\n    props.onAlign(popupDomNode, align);\n  };\n\n  // Record size if stretch needed\n  setStretchSize = () => {\n    const { stretch, getRootDomNode, visible } = this.props;\n    const { stretchChecked, targetHeight, targetWidth } = this.state;\n\n    if (!stretch || !visible) {\n      if (stretchChecked) {\n        this.setState({ stretchChecked: false });\n      }\n      return;\n    }\n\n    const $ele = getRootDomNode();\n    if (!$ele) return;\n\n    const height = $ele.offsetHeight;\n    const width = $ele.offsetWidth;\n\n    if (targetHeight !== height || targetWidth !== width || !stretchChecked) {\n      this.setState({\n        stretchChecked: true,\n        targetHeight: height,\n        targetWidth: width,\n      });\n    }\n  };\n\n  getPopupDomNode() {\n    return ReactDOM.findDOMNode(this.popupInstance);\n  }\n\n  getTarget = () => {\n    return this.props.getRootDomNode();\n  };\n\n  getMaskTransitionName() {\n    const props = this.props;\n    let transitionName = props.maskTransitionName;\n    const animation = props.maskAnimation;\n    if (!transitionName && animation) {\n      transitionName = `${props.prefixCls}-${animation}`;\n    }\n    return transitionName;\n  }\n\n  getTransitionName() {\n    const props = this.props;\n    let transitionName = props.transitionName;\n    if (!transitionName && props.animation) {\n      transitionName = `${props.prefixCls}-${props.animation}`;\n    }\n    return transitionName;\n  }\n\n  getClassName(currentAlignClassName) {\n    return `${this.props.prefixCls} ${this.props.className} ${currentAlignClassName}`;\n  }\n\n  getPopupElement() {\n    const { savePopupRef } = this;\n    const { stretchChecked, targetHeight, targetWidth } = this.state;\n    const {\n      align, visible,\n      prefixCls, style, getClassNameFromAlign,\n      destroyPopupOnHide, stretch, children,\n      onMouseEnter, onMouseLeave,\n    } = this.props;\n    const className = this.getClassName(this.currentAlignClassName ||\n      getClassNameFromAlign(align));\n    const hiddenClassName = `${prefixCls}-hidden`;\n\n    if (!visible) {\n      this.currentAlignClassName = null;\n    }\n\n    const sizeStyle = {};\n    if (stretch) {\n      if (stretchChecked) {\n        // Stretch with target\n        if (stretch.indexOf('height') !== -1) {\n          sizeStyle.height = targetHeight;\n        } else if (stretch.indexOf('minHeight') !== -1) {\n          sizeStyle.minHeight = targetHeight;\n        }\n        if (stretch.indexOf('width') !== -1) {\n          sizeStyle.width = targetWidth;\n        } else if (stretch.indexOf('minWidth') !== -1) {\n          sizeStyle.minWidth = targetWidth;\n        }\n      } else {\n        // Do nothing when stretch not ready\n        return null;\n      }\n    }\n\n    const newStyle = {\n      ...sizeStyle,\n      ...style,\n      ...this.getZIndexStyle(),\n    };\n\n    const popupInnerProps = {\n      className,\n      prefixCls,\n      ref: savePopupRef,\n      onMouseEnter,\n      onMouseLeave,\n      style: newStyle,\n    };\n    if (destroyPopupOnHide) {\n      return (\n        <Animate\n          component=\"\"\n          exclusive\n          transitionAppear\n          transitionName={this.getTransitionName()}\n        >\n          {visible ? (\n            <Align\n              target={this.getTarget}\n              key=\"popup\"\n              ref={this.saveAlignRef}\n              monitorWindowResize\n              hidden={!visible}\n              childrenProps={{ hidden: 'hidden' }}\n              align={align}\n              onAlign={this.onAlign}\n            >\n              <PopupInner\n                {...popupInnerProps}\n              >\n                {children}\n              </PopupInner>\n            </Align>\n          ) : null}\n        </Animate>\n      );\n    }\n    return (\n      <Animate\n        component=\"\"\n        exclusive\n        transitionAppear\n        transitionName={this.getTransitionName()}\n        hiddenProp=\"hidden\"\n      >\n        <Align\n          target={this.getTarget}\n          key=\"popup\"\n          ref={this.saveAlignRef}\n          monitorWindowResize\n          hidden={!visible}\n          childrenProps={{ hidden: 'hidden' }}\n          disabled={!visible}\n          align={align}\n          onAlign={this.onAlign}\n        >\n          <PopupInner\n            hiddenClassName={hiddenClassName}\n            {...popupInnerProps}\n          >\n            {children}\n          </PopupInner>\n        </Align>\n      </Animate>\n    );\n  }\n\n  getZIndexStyle() {\n    const style = {};\n    const props = this.props;\n    if (props.zIndex !== undefined) {\n      style.zIndex = props.zIndex;\n    }\n    return style;\n  }\n\n  getMaskElement() {\n    const props = this.props;\n    let maskElement;\n    if (props.mask) {\n      const maskTransition = this.getMaskTransitionName();\n      maskElement = (\n        <LazyRenderBox\n          style={this.getZIndexStyle()}\n          key=\"mask\"\n          className={`${props.prefixCls}-mask`}\n          hiddenClassName={`${props.prefixCls}-mask-hidden`}\n          hidden={!props.visible}\n        />\n      );\n      if (maskTransition) {\n        maskElement = (\n          <Animate\n            key=\"mask\"\n            hiddenProp=\"hidden\"\n            transitionAppear\n            component=\"\"\n            transitionName={maskTransition}\n          >\n            {maskElement}\n          </Animate>\n        );\n      }\n    }\n    return maskElement;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.getMaskElement()}\n        {this.getPopupElement()}\n      </div>\n    );\n  }\n}\n\nexport default Popup;\n"]}