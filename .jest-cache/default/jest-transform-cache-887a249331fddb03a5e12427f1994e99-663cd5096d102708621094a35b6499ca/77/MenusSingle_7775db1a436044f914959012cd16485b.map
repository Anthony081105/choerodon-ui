{"version":3,"sources":["MenusSingle.jsx"],"names":["Menus","props","index","node","menuItems","scrollActiveItemToView","prevProps","visible","option","menuIndex","prefixCls","expandTrigger","singleMenuItemStyle","onSelect","bind","expandProps","onClick","hasChildren","children","length","menuItemCls","onMouseEnter","delayOnSelect","onMouseLeave","isActiveOption","ref","saveMenuItem","disabled","loading","title","label","key","value","values","activeValue","options","o","level","result","getActiveOptions","map","activeOption","filter","unshift","args","delayTimer","clearTimeout","setTimeout","optionsLength","getShowOptions","i","itemComponent","target","parentNode","scrollTop","offsetTop","singleMenuItemRender","singleMenuItemItem","dropdownMenuColumnStyle","isTabSelected","locale","singleMenuStyle","singlePleaseRender","showOptions","showOptionsIndex","activeOptions","dropdownMenuColumnStyleSingle","tabItemRender","item","indexItem","getTabItem","tabItemRenderResult","pleaseRenderProps","className","text","pleaseSelect","pleaseItem","getOption","Component","Locale","width","minWidth","PropTypes","array","isRequired","string","func","bool","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayTreeFilter from 'array-tree-filter';\nimport { findDOMNode } from 'react-dom';\nimport Locale from './locale/en_US';\nimport isFunction from 'lodash/isFunction';\nimport Icon from '../../icon';\n\nexport default class Menus extends Component {\n  static defaultProps = {\n    options: [],\n    value: [],\n    activeValue: [],\n    onSelect() {\n    },\n    prefixCls: 'rc-cascader-menus',\n    visible: false,\n    expandTrigger: 'click',\n    isTabSelected: false,\n    locale: Locale,\n    singleMenuStyle: { width:'3rem'},\n    singleMenuItemStyle: { minWidth: '1rem'},\n  };\n\n  static propTypes = {\n    // 选择的值\n    value: PropTypes.array,\n    // 当前激活的值\n    activeValue: PropTypes.array,\n    // 可选内容\n    options: PropTypes.array.isRequired,\n    // 注入样式开头\n    prefixCls: PropTypes.string,\n    // 触发展开事件\n    expandTrigger: PropTypes.string,\n    // 被选择后触发\n    onSelect: PropTypes.func,\n    // 是否可见\n    visible: PropTypes.bool,\n    // 下拉列表的样式配置\n    dropdownMenuColumnStyle: PropTypes.object,\n    // 标识是由于tab select 触发的事件\n    isTabSelected: PropTypes.bool,\n    locale: PropTypes.object,\n    singleMenuStyle: PropTypes.object,\n    singleMenuItemStyle: PropTypes.object,\n    singlePleaseRender: PropTypes.func,\n    singleMenuItemRender: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.menuItems = {};\n  }\n\n  componentDidMount() {\n    this.scrollActiveItemToView();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.visible && this.props.visible) {\n      this.scrollActiveItemToView();\n    }\n  }\n\n  /**\n   * render th li list\n   * @param {*} option\n   * @param {*} menuIndex\n   */\n  getOption(option, menuIndex) {\n    const { prefixCls, expandTrigger, singleMenuItemStyle } = this.props;\n    const onSelect = this.props.onSelect.bind(this, option, menuIndex, false);\n    let expandProps = {\n      onClick: onSelect,\n    };\n    const hasChildren = option.children && option.children.length > 0;\n    let menuItemCls = `${prefixCls}-menu-item`;\n    // TODO: add item style\n    if (expandTrigger === 'hover' && hasChildren) {\n      expandProps = {\n        onMouseEnter: this.delayOnSelect.bind(this, onSelect),\n        onMouseLeave: this.delayOnSelect.bind(this),\n        onClick: onSelect,\n      };\n    }\n    if (this.isActiveOption(option, menuIndex)) {\n      menuItemCls += ` ${prefixCls}-menu-item-active`;\n      expandProps.ref = this.saveMenuItem(menuIndex);\n    }\n    if (option.disabled) {\n      menuItemCls += ` ${prefixCls}-menu-item-disabled`;\n    }\n    if (option.loading) {\n      menuItemCls += ` ${prefixCls}-menu-item-loading`;\n    }\n    let title = '';\n    if (option.title) {\n      title = option.title;\n    } else if (typeof option.label === 'string') {\n      title = option.label;\n    }\n    return (\n      <li\n        key={option.key || option.value}\n        className={menuItemCls}\n        title={title}\n        style={singleMenuItemStyle}\n        {...expandProps}\n      >\n        {option.label}\n      </li>\n    );\n  }\n\n  /**\n   *  be active value is a array of items\n   * @param string[] values\n   */\n  getActiveOptions(values) {\n    const activeValue = values || this.props.activeValue;\n    const options = this.props.options;\n    return arrayTreeFilter(options, (o, level) => o.value === activeValue[level]);\n  }\n\n  getShowOptions() {\n    const { options } = this.props;\n    const result = this.getActiveOptions()\n      .map(activeOption => activeOption.children)\n      .filter(activeOption => !!activeOption);\n    result.unshift(options);\n    return result;\n  }\n\n  delayOnSelect(onSelect, ...args) {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n    if (typeof onSelect === 'function') {\n      this.delayTimer = setTimeout(() => {\n        onSelect(args);\n        this.delayTimer = null;\n      }, 150);\n    }\n  }\n\n  scrollActiveItemToView() {\n    // scroll into view\n    const optionsLength = this.getShowOptions().length;\n    for (let i = 0; i < optionsLength; i++) {\n      const itemComponent = this.menuItems[i];\n      if (itemComponent) {\n        const target = findDOMNode(itemComponent);\n        target.parentNode.scrollTop = target.offsetTop;\n      }\n    }\n  }\n\n  isActiveOption(option, menuIndex) {\n    const { activeValue = [] } = this.props;\n    return activeValue[menuIndex] === option.value;\n  }\n\n  saveMenuItem = (index) => (node) => {\n    this.menuItems[index] = node;\n  };\n\n  /**\n   * render th li list\n   * @param {*} option\n   * @param {*} menuIndex\n   */\n  getTabItem(option, menuIndex) {\n    const { prefixCls, singleMenuItemRender } = this.props;\n    const onSelect = this.props.onSelect.bind(this, option, menuIndex, true);\n    let expandProps = {\n      onClick: onSelect,\n    };\n    let menuItemCls = `${prefixCls}-menu-tab-item`;\n    let label = option.label\n    if(isFunction(singleMenuItemRender)){\n      label = singleMenuItemItem(option.label)\n    }\n    return (\n      <span\n        key={option.key || option.value}\n        className={menuItemCls}\n        {...expandProps}\n      >\n        {label}\n        <Icon type=\"arrow_drop_down\" />\n      </span>\n    );\n  }\n\n  render() {\n    const { prefixCls, dropdownMenuColumnStyle, isTabSelected, locale, singleMenuStyle, singlePleaseRender } = this.props;\n    const showOptions = this.getShowOptions()\n    let showOptionsIndex = showOptions.length - 1\n    const activeOptions = this.getActiveOptions()\n    const dropdownMenuColumnStyleSingle = {...dropdownMenuColumnStyle,...singleMenuStyle}\n    const tabItemRender = activeOptions.map((item,indexItem) => (this.getTabItem(item,indexItem)))\n    let tabItemRenderResult \n    if(showOptions && activeOptions && !isTabSelected && showOptions.length > activeOptions.length){\n       const pleaseRenderProps = {\n        key:\"please_check\" ,\n        className: `${prefixCls}-menu-tab-item ${prefixCls}-menu-tab-please`,\n        text:locale.pleaseSelect\n       }\n       if(isFunction(singlePleaseRender)){\n        tabItemRenderResult = singlePleaseRender(pleaseRenderProps)\n       }else{\n        const pleaseItem = (    \n            <span {...pleaseRenderProps}>\n              {pleaseRenderProps.text}\n              <Icon type=\"arrow_drop_down\" />\n            </span>\n        )\n        tabItemRenderResult = tabItemRender.length > 0 ? [...tabItemRender,pleaseItem] : pleaseItem;\n       }\n    }\n    if(isTabSelected){\n      showOptionsIndex = activeOptions.length - 1 < 0 ? 0 : activeOptions.length - 1\n    }\n\n    return (\n      <div className={`${prefixCls}-mode-single `}>\n        <div className={`${prefixCls}-menu-tab`}>\n          {tabItemRenderResult || tabItemRender }\n        </div>\n        <ul className={`${prefixCls}-menu ${prefixCls}-menu-single `} key={showOptionsIndex} style={dropdownMenuColumnStyleSingle}>\n            {showOptions[showOptionsIndex].map(option => this.getOption(option, showOptionsIndex))}\n        </ul>\n      </div>\n    );\n  }\n}\n"]}