{"version":3,"sources":["datePicker.test.js"],"names":["describe","DatePicker","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","it","wrapper","expect","find","at","prop","toBe","setProps","multiple","update","hasClass","props","name","toEqual","handleChange","fn","not","toHaveBeenCalled","simulate","runAllTimers","keyCode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport moment from 'moment';\nimport DatePicker from '..';\nimport DatePickerTest from './DatePicker';\nimport { openPanel, nextYear, nextMonth, simulateCode } from './utils';\nimport focusTest from '../../../tests/shared/focusTest';\nimport TriggerPopTest from '../../../tests/shared/triggerPopTest';\n\ndescribe('date-picker-pro', () => {\n  focusTest(DatePicker);\n  TriggerPopTest(DatePicker);\n\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  it('renders multiple correctly', () => {\n    const wrapper = mount(<DatePicker defaultValue=\"2020-02-10 18:18:18\" />);\n    expect(\n      wrapper\n        .find('input')\n        .at(0)\n        .prop('value'),\n    ).toBe('2020-02-10');\n    wrapper.setProps({ multiple: true });\n    wrapper.update();\n    expect(\n      wrapper\n        .find('.c7n-pro-calendar-picker-wrapper')\n        .at(0)\n        .hasClass('c7n-pro-calendar-picker-multiple'),\n    ).toBe(true);\n  });\n\n  it('renders dataSet date correctly', () => {\n    const wrapper = mount(<DatePickerTest />);\n    expect(wrapper.find('DatePicker').props().name).toEqual('date');\n    expect(\n      wrapper\n        .find('.c7n-pro-calendar-picker-wrapper')\n        .at(0)\n        .hasClass('c7n-pro-calendar-picker-multiple'),\n    ).toBe(false);\n    expect(\n      wrapper\n        .find('.c7n-pro-calendar-picker-range-end')\n        .at(0)\n        .prop('value'),\n    ).toBe('2020-02-09');\n    expect(\n      wrapper\n        .find('.c7n-pro-calendar-picker-range-start')\n        .at(0)\n        .prop('value'),\n    ).toBe('1984-11-22');\n  });\n\n  it('the onChange event only triggers when date was selected or changed', () => {\n    const handleChange = jest.fn();\n    const wrapper = mount(<DatePicker onChange={handleChange} />);\n    openPanel(wrapper);\n    nextYear(wrapper);\n    expect(handleChange).not.toHaveBeenCalled();\n    nextMonth(wrapper);\n    expect(handleChange).not.toHaveBeenCalled();\n  });\n\n  it('the keydown event should render correctly', () => {\n    const wrapper = mount(<DatePicker mode=\"date\" multiple={false} />);\n    wrapper.find('input').simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n    simulateCode(wrapper, 39);\n    simulateCode(wrapper, 37);\n    simulateCode(wrapper, 40);\n    simulateCode(wrapper, 38);\n    simulateCode(wrapper, 35);\n    simulateCode(wrapper, 36);\n    simulateCode(wrapper, 33);\n    simulateCode(wrapper, 34);\n    simulateCode(wrapper, 13);\n    simulateCode(wrapper, 10);\n    wrapper.update();\n  });\n\n  it('the keyDown event {space} keyCode should render correctly', () => {\n    const wrapper = mount(<DatePicker />);\n    wrapper.find('input').simulate('keydown', { keyCode: 32 });\n    jest.runAllTimers();\n    wrapper.update();\n  });\n\n  it('the mode { decade } should render correctly', () => {\n    const wrapper = mount(<DatePicker mode=\"decade\" />);\n    wrapper.find('input').simulate('keydown', { keyCode: 32 });\n    jest.runAllTimers();\n    wrapper.update();\n  });\n\n  it('the keyDown event { esc, enter } keyCode should render correctly', () => {\n    const wrapper = mount(<DatePicker />);\n    wrapper.find('input').simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n    simulateCode(wrapper, 9);\n    wrapper.update();\n    wrapper.find('input').simulate('click');\n    jest.runAllTimers();\n    simulateCode(wrapper, 27);\n    wrapper.update();\n  });\n\n  it('the { multiple, min, max } property should render correctly', () => {\n    const wrapper = mount(\n      <DatePicker mode=\"month\" multiple min={moment('2019-02-10')} max={moment('2021-02-10')} />,\n    );\n    wrapper\n      .find('input')\n      .at(0)\n      .simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n    wrapper\n      .find('input')\n      .at(0)\n      .simulate('keydown', { keyCode: 13 });\n    jest.runAllTimers();\n    wrapper.update();\n  });\n\n  it('the { min, max } property should render month-picker correctly', () => {\n    const wrapper = mount(\n      <DatePicker mode=\"month\" min={moment('2019-02-10')} max={moment('2021-02-10')} />,\n    );\n    wrapper\n      .find('input')\n      .at(0)\n      .simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n  });\n\n  it('the { min, max } property should render year-picker correctly', () => {\n    const wrapper = mount(\n      <DatePicker mode=\"year\" min={moment('2019-02-10')} max={moment('2021-02-10')} />,\n    );\n    wrapper\n      .find('input')\n      .at(0)\n      .simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n  });\n  it('the { min, max } property should render date-time-picker correctly', () => {\n    const wrapper = mount(\n      <DatePicker mode=\"dateTime\" min={moment('2019-02-10')} max={moment('2021-02-10')} />,\n    );\n    wrapper\n      .find('input')\n      .at(0)\n      .simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n  });\n\n  it('the { min, max } property should render decadeYear-picker correctly', () => {\n    const wrapper = mount(\n      <DatePicker mode=\"decade\" min={moment('2019-02-10')} max={moment('2021-02-10')} />,\n    );\n    wrapper\n      .find('input')\n      .at(0)\n      .simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n  });\n});\n"]}