55ae246dd4929f669b53f2942b582aea
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _trigger = _interopRequireDefault(require("../trigger"));

var _placements = _interopRequireDefault(require("./placements"));

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = (0, _getPrototypeOf2["default"])(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0, _possibleConstructorReturn2["default"])(this, result);
  };
}

var Dropdown =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(Dropdown, _Component);

  var _super = _createSuper(Dropdown);

  function Dropdown(_props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Dropdown);
    _this = _super.call(this, _props);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onClick", function (e) {
      var props = _this.props;
      var overlayProps = props.overlay.props; // do no call onVisibleChange, if you need click to hide, use onClick and control visible

      if (!('visible' in props)) {
        _this.setState({
          visible: false
        });
      }

      if (props.onOverlayClick) {
        props.onOverlayClick(e);
      }

      if (overlayProps.onClick) {
        overlayProps.onClick(e);
      }
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onVisibleChange", function (visible) {
      var props = _this.props;

      if (!('visible' in props)) {
        _this.setState({
          visible: visible
        });
      }

      props.onVisibleChange(visible);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "afterVisibleChange", function (visible) {
      if (visible && _this.props.minOverlayWidthMatchTrigger) {
        var overlayNode = _this.getPopupDomNode();

        var rootNode = _reactDom["default"].findDOMNode((0, _assertThisInitialized2["default"])(_this));

        if (rootNode && overlayNode && rootNode.offsetWidth > overlayNode.offsetWidth) {
          overlayNode.style.minWidth = "".concat(rootNode.offsetWidth, "px");

          if (_this.trigger && _this.trigger._component && _this.trigger._component.alignInstance) {
            _this.trigger._component.alignInstance.forceAlign();
          }
        }
      }
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "saveTrigger", function (node) {
      _this.trigger = node;
    });

    if ('visible' in _props) {
      _this.state = {
        visible: _props.visible
      };
    } else {
      _this.state = {
        visible: _props.defaultVisible
      };
    }

    return _this;
  }

  (0, _createClass2["default"])(Dropdown, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(_ref) {
      var visible = _ref.visible;

      if (visible !== undefined) {
        this.setState({
          visible: visible
        });
      }
    }
  }, {
    key: "getMenuElement",
    value: function getMenuElement() {
      var _this$props = this.props,
          overlay = _this$props.overlay,
          prefixCls = _this$props.prefixCls;
      var extraOverlayProps = {
        prefixCls: "".concat(prefixCls, "-menu"),
        onClick: this.onClick
      };

      if (typeof overlay.type === 'string') {
        delete extraOverlayProps.prefixCls;
      }

      return (0, _react.cloneElement)(overlay, extraOverlayProps);
    }
  }, {
    key: "getPopupDomNode",
    value: function getPopupDomNode() {
      return this.trigger.getPopupDomNode();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          children = _this$props2.children,
          transitionName = _this$props2.transitionName,
          animation = _this$props2.animation,
          align = _this$props2.align,
          placement = _this$props2.placement,
          getPopupContainer = _this$props2.getPopupContainer,
          showAction = _this$props2.showAction,
          hideAction = _this$props2.hideAction,
          overlayClassName = _this$props2.overlayClassName,
          overlayPlacements = _this$props2.overlayPlacements,
          overlayStyle = _this$props2.overlayStyle,
          trigger = _this$props2.trigger,
          otherProps = (0, _objectWithoutProperties2["default"])(_this$props2, ["prefixCls", "children", "transitionName", "animation", "align", "placement", "getPopupContainer", "showAction", "hideAction", "overlayClassName", "overlayPlacements", "overlayStyle", "trigger"]);
      var builtinPlacements = overlayPlacements || _placements["default"];
      return _react["default"].createElement(_trigger["default"], (0, _extends2["default"])({}, otherProps, {
        prefixCls: prefixCls,
        ref: this.saveTrigger,
        popupClassName: overlayClassName,
        popupStyle: overlayStyle,
        builtinPlacements: builtinPlacements,
        action: trigger,
        showAction: showAction,
        hideAction: hideAction,
        popupPlacement: placement,
        popupAlign: align,
        popupTransitionName: transitionName,
        popupAnimation: animation,
        popupVisible: this.state.visible,
        afterPopupVisibleChange: this.afterVisibleChange,
        popup: this.getMenuElement(),
        onPopupVisibleChange: this.onVisibleChange,
        getPopupContainer: getPopupContainer
      }), children);
    }
  }]);
  return Dropdown;
}(_react.Component);

exports["default"] = Dropdown;
(0, _defineProperty2["default"])(Dropdown, "propTypes", {
  minOverlayWidthMatchTrigger: _propTypes["default"].bool,
  onVisibleChange: _propTypes["default"].func,
  onOverlayClick: _propTypes["default"].func,
  prefixCls: _propTypes["default"].string,
  children: _propTypes["default"].any,
  transitionName: _propTypes["default"].string,
  overlayClassName: _propTypes["default"].string,
  animation: _propTypes["default"].any,
  align: _propTypes["default"].object,
  overlayStyle: _propTypes["default"].object,
  placement: _propTypes["default"].string,
  overlay: _propTypes["default"].node,
  trigger: _propTypes["default"].array,
  showAction: _propTypes["default"].array,
  hideAction: _propTypes["default"].array,
  getPopupContainer: _propTypes["default"].func,
  visible: _propTypes["default"].bool,
  defaultVisible: _propTypes["default"].bool,
  overlayPlacements: _propTypes["default"].object
});
(0, _defineProperty2["default"])(Dropdown, "defaultProps", {
  minOverlayWidthMatchTrigger: true,
  prefixCls: 'rc-dropdown',
  trigger: ['hover'],
  showAction: [],
  hideAction: [],
  overlayClassName: '',
  overlayStyle: {},
  defaultVisible: false,
  onVisibleChange: function onVisibleChange() {},
  placement: 'bottomLeft'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRyb3Bkb3duLmpzeCJdLCJuYW1lcyI6WyJEcm9wZG93biIsInByb3BzIiwiZSIsIm92ZXJsYXlQcm9wcyIsIm92ZXJsYXkiLCJzZXRTdGF0ZSIsInZpc2libGUiLCJvbk92ZXJsYXlDbGljayIsIm9uQ2xpY2siLCJvblZpc2libGVDaGFuZ2UiLCJtaW5PdmVybGF5V2lkdGhNYXRjaFRyaWdnZXIiLCJvdmVybGF5Tm9kZSIsImdldFBvcHVwRG9tTm9kZSIsInJvb3ROb2RlIiwiUmVhY3RET00iLCJmaW5kRE9NTm9kZSIsIm9mZnNldFdpZHRoIiwic3R5bGUiLCJtaW5XaWR0aCIsInRyaWdnZXIiLCJfY29tcG9uZW50IiwiYWxpZ25JbnN0YW5jZSIsImZvcmNlQWxpZ24iLCJub2RlIiwic3RhdGUiLCJkZWZhdWx0VmlzaWJsZSIsInVuZGVmaW5lZCIsInByZWZpeENscyIsImV4dHJhT3ZlcmxheVByb3BzIiwidHlwZSIsImNoaWxkcmVuIiwidHJhbnNpdGlvbk5hbWUiLCJhbmltYXRpb24iLCJhbGlnbiIsInBsYWNlbWVudCIsImdldFBvcHVwQ29udGFpbmVyIiwic2hvd0FjdGlvbiIsImhpZGVBY3Rpb24iLCJvdmVybGF5Q2xhc3NOYW1lIiwib3ZlcmxheVBsYWNlbWVudHMiLCJvdmVybGF5U3R5bGUiLCJvdGhlclByb3BzIiwiYnVpbHRpblBsYWNlbWVudHMiLCJwbGFjZW1lbnRzIiwic2F2ZVRyaWdnZXIiLCJhZnRlclZpc2libGVDaGFuZ2UiLCJnZXRNZW51RWxlbWVudCIsIkNvbXBvbmVudCIsIlByb3BUeXBlcyIsImJvb2wiLCJmdW5jIiwic3RyaW5nIiwiYW55Iiwib2JqZWN0IiwiYXJyYXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFcUJBLFE7Ozs7Ozs7QUFvQ25CLG9CQUFZQyxNQUFaLEVBQW1CO0FB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QUFBQSxPQUFPLEVBQUUwQyxzQkFBVUMsSUFqQkY7QUFrQmpCeEIsRUFBQUEsY0FBYyxFQUFFdUIsc0JBQVVDLElBbEJUO0FBbUJqQlYsRUFBQUEsaUJBQWlCLEVBQUNTLHNCQUFVSztBQW5CWCxDO2lDQURBckQsUSxrQkF1Qkc7QUFDcEJVLEVBQUFBLDJCQUEyQixFQUFFLElBRFQ7QUFFcEJpQixFQUFBQSxTQUFTLEVBQUUsYUFGUztBQUdwQlIsRUFBQUEsT0FBTyxFQUFFLENBQUMsT0FBRCxDQUhXO0FBSXBCaUIsRUFBQUEsVUFBVSxFQUFFLEVBSlE7QUFLcEJDLEVBQUFBLFVBQVUsRUFBRSxFQUxRO0FBTXBCQyxFQUFBQSxnQkFBZ0IsRUFBRSxFQU5FO0FBT3BCRSxFQUFBQSxZQUFZLEVBQUUsRUFQTTtBQVFwQmYsRUFBQUEsY0FBYyxFQUFFLEtBUkk7QUFTcEJoQixFQUFBQSxlQVRvQiw2QkFTRixDQUFFLENBVEE7QUFVcEJ5QixFQUFBQSxTQUFTLEVBQUU7QUFWUyxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGNsb25lRWxlbWVudCwgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IFRyaWdnZXIgZnJvbSAnLi4vdHJpZ2dlcic7XG5pbXBvcnQgcGxhY2VtZW50cyBmcm9tICcuL3BsYWNlbWVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEcm9wZG93biBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgbWluT3ZlcmxheVdpZHRoTWF0Y2hUcmlnZ2VyOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBvblZpc2libGVDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uT3ZlcmxheUNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBwcmVmaXhDbHM6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5hbnksXG4gICAgdHJhbnNpdGlvbk5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgb3ZlcmxheUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhbmltYXRpb246IFByb3BUeXBlcy5hbnksXG4gICAgYWxpZ246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgb3ZlcmxheVN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBsYWNlbWVudDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBvdmVybGF5OiBQcm9wVHlwZXMubm9kZSxcbiAgICB0cmlnZ2VyOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgc2hvd0FjdGlvbjogUHJvcFR5cGVzLmFycmF5LFxuICAgIGhpZGVBY3Rpb246IFByb3BUeXBlcy5hcnJheSxcbiAgICBnZXRQb3B1cENvbnRhaW5lcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgdmlzaWJsZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgZGVmYXVsdFZpc2libGU6IFByb3BUeXBlcy5ib29sLFxuICAgIG92ZXJsYXlQbGFjZW1lbnRzOlByb3BUeXBlcy5vYmplY3QsXG4gIH07XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBtaW5PdmVybGF5V2lkdGhNYXRjaFRyaWdnZXI6IHRydWUsXG4gICAgcHJlZml4Q2xzOiAncmMtZHJvcGRvd24nLFxuICAgIHRyaWdnZXI6IFsnaG92ZXInXSxcbiAgICBzaG93QWN0aW9uOiBbXSxcbiAgICBoaWRlQWN0aW9uOiBbXSxcbiAgICBvdmVybGF5Q2xhc3NOYW1lOiAnJyxcbiAgICBvdmVybGF5U3R5bGU6IHt9LFxuICAgIGRlZmF1bHRWaXNpYmxlOiBmYWxzZSxcbiAgICBvblZpc2libGVDaGFuZ2UoKSB7fSxcbiAgICBwbGFjZW1lbnQ6ICdib3R0b21MZWZ0JyxcbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICBpZiAoJ3Zpc2libGUnIGluIHByb3BzKSB7XG4gICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICB2aXNpYmxlOiBwcm9wcy52aXNpYmxlLFxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgdmlzaWJsZTogcHJvcHMuZGVmYXVsdFZpc2libGUsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoeyB2aXNpYmxlIH0pIHtcbiAgICBpZiAodmlzaWJsZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgdmlzaWJsZSxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIG9uQ2xpY2sgPSBlID0+IHtcbiAgICBjb25zdCBwcm9wcyA9IHRoaXMucHJvcHM7XG4gICAgY29uc3Qgb3ZlcmxheVByb3BzID0gcHJvcHMub3ZlcmxheS5wcm9wcztcbiAgICAvLyBkbyBubyBjYWxsIG9uVmlzaWJsZUNoYW5nZSwgaWYgeW91IG5lZWQgY2xpY2sgdG8gaGlkZSwgdXNlIG9uQ2xpY2sgYW5kIGNvbnRyb2wgdmlzaWJsZVxuICAgIGlmICghKCd2aXNpYmxlJyBpbiBwcm9wcykpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAocHJvcHMub25PdmVybGF5Q2xpY2spIHtcbiAgICAgIHByb3BzLm9uT3ZlcmxheUNsaWNrKGUpO1xuICAgIH1cbiAgICBpZiAob3ZlcmxheVByb3BzLm9uQ2xpY2spIHtcbiAgICAgIG92ZXJsYXlQcm9wcy5vbkNsaWNrKGUpO1xuICAgIH1cbiAgfTtcblxuICBvblZpc2libGVDaGFuZ2UgPSB2aXNpYmxlID0+IHtcbiAgICBjb25zdCBwcm9wcyA9IHRoaXMucHJvcHM7XG4gICAgaWYgKCEoJ3Zpc2libGUnIGluIHByb3BzKSkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHZpc2libGUsXG4gICAgICB9KTtcbiAgICB9XG4gICAgcHJvcHMub25WaXNpYmxlQ2hhbmdlKHZpc2libGUpO1xuICB9O1xuXG4gIGdldE1lbnVFbGVtZW50KCkge1xuICAgIGNvbnN0IHsgb3ZlcmxheSwgcHJlZml4Q2xzIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGV4dHJhT3ZlcmxheVByb3BzID0ge1xuICAgICAgcHJlZml4Q2xzOiBgJHtwcmVmaXhDbHN9LW1lbnVgLFxuICAgICAgb25DbGljazogdGhpcy5vbkNsaWNrLFxuICAgIH07XG4gICAgaWYgKHR5cGVvZiBvdmVybGF5LnR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICBkZWxldGUgZXh0cmFPdmVybGF5UHJvcHMucHJlZml4Q2xzO1xuICAgIH1cbiAgICByZXR1cm4gY2xvbmVFbGVtZW50KG92ZXJsYXksIGV4dHJhT3ZlcmxheVByb3BzKTtcbiAgfVxuXG4gIGdldFBvcHVwRG9tTm9kZSgpIHtcbiAgICByZXR1cm4gdGhpcy50cmlnZ2VyLmdldFBvcHVwRG9tTm9kZSgpO1xuICB9XG5cbiAgYWZ0ZXJWaXNpYmxlQ2hhbmdlID0gdmlzaWJsZSA9PiB7XG4gICAgaWYgKHZpc2libGUgJiYgdGhpcy5wcm9wcy5taW5PdmVybGF5V2lkdGhNYXRjaFRyaWdnZXIpIHtcbiAgICAgIGNvbnN0IG92ZXJsYXlOb2RlID0gdGhpcy5nZXRQb3B1cERvbU5vZGUoKTtcbiAgICAgIGNvbnN0IHJvb3ROb2RlID0gUmVhY3RET00uZmluZERPTU5vZGUodGhpcyk7XG4gICAgICBpZiAocm9vdE5vZGUgJiYgb3ZlcmxheU5vZGUgJiYgcm9vdE5vZGUub2Zmc2V0V2lkdGggPiBvdmVybGF5Tm9kZS5vZmZzZXRXaWR0aCkge1xuICAgICAgICBvdmVybGF5Tm9kZS5zdHlsZS5taW5XaWR0aCA9IGAke3Jvb3ROb2RlLm9mZnNldFdpZHRofXB4YDtcbiAgICAgICAgaWYgKHRoaXMudHJpZ2dlciAmJiB0aGlzLnRyaWdnZXIuX2NvbXBvbmVudCAmJiB0aGlzLnRyaWdnZXIuX2NvbXBvbmVudC5hbGlnbkluc3RhbmNlKSB7XG4gICAgICAgICAgdGhpcy50cmlnZ2VyLl9jb21wb25lbnQuYWxpZ25JbnN0YW5jZS5mb3JjZUFsaWduKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgc2F2ZVRyaWdnZXIgPSBub2RlID0+IHtcbiAgICB0aGlzLnRyaWdnZXIgPSBub2RlO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBwcmVmaXhDbHMsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIHRyYW5zaXRpb25OYW1lLFxuICAgICAgYW5pbWF0aW9uLFxuICAgICAgYWxpZ24sXG4gICAgICBwbGFjZW1lbnQsXG4gICAgICBnZXRQb3B1cENvbnRhaW5lcixcbiAgICAgIHNob3dBY3Rpb24sXG4gICAgICBoaWRlQWN0aW9uLFxuICAgICAgb3ZlcmxheUNsYXNzTmFtZSxcbiAgICAgIG92ZXJsYXlQbGFjZW1lbnRzLFxuICAgICAgb3ZlcmxheVN0eWxlLFxuICAgICAgdHJpZ2dlcixcbiAgICAgIC4uLm90aGVyUHJvcHNcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBidWlsdGluUGxhY2VtZW50cyA9IG92ZXJsYXlQbGFjZW1lbnRzIHx8IHBsYWNlbWVudHNcbiAgICByZXR1cm4gKFxuICAgICAgPFRyaWdnZXJcbiAgICAgICAgey4uLm90aGVyUHJvcHN9XG4gICAgICAgIHByZWZpeENscz17cHJlZml4Q2xzfVxuICAgICAgICByZWY9e3RoaXMuc2F2ZVRyaWdnZXJ9XG4gICAgICAgIHBvcHVwQ2xhc3NOYW1lPXtvdmVybGF5Q2xhc3NOYW1lfVxuICAgICAgICBwb3B1cFN0eWxlPXtvdmVybGF5U3R5bGV9XG4gICAgICAgIGJ1aWx0aW5QbGFjZW1lbnRzPXtidWlsdGluUGxhY2VtZW50c31cbiAgICAgICAgYWN0aW9uPXt0cmlnZ2VyfVxuICAgICAgICBzaG93QWN0aW9uPXtzaG93QWN0aW9ufVxuICAgICAgICBoaWRlQWN0aW9uPXtoaWRlQWN0aW9ufVxuICAgICAgICBwb3B1cFBsYWNlbWVudD17cGxhY2VtZW50fVxuICAgICAgICBwb3B1cEFsaWduPXthbGlnbn1cbiAgICAgICAgcG9wdXBUcmFuc2l0aW9uTmFtZT17dHJhbnNpdGlvbk5hbWV9XG4gICAgICAgIHBvcHVwQW5pbWF0aW9uPXthbmltYXRpb259XG4gICAgICAgIHBvcHVwVmlzaWJsZT17dGhpcy5zdGF0ZS52aXNpYmxlfVxuICAgICAgICBhZnRlclBvcHVwVmlzaWJsZUNoYW5nZT17dGhpcy5hZnRlclZpc2libGVDaGFuZ2V9XG4gICAgICAgIHBvcHVwPXt0aGlzLmdldE1lbnVFbGVtZW50KCl9XG4gICAgICAgIG9uUG9wdXBWaXNpYmxlQ2hhbmdlPXt0aGlzLm9uVmlzaWJsZUNoYW5nZX1cbiAgICAgICAgZ2V0UG9wdXBDb250YWluZXI9e2dldFBvcHVwQ29udGFpbmVyfVxuICAgICAgPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L1RyaWdnZXI+XG4gICAgKTtcbiAgfVxufVxuIl19