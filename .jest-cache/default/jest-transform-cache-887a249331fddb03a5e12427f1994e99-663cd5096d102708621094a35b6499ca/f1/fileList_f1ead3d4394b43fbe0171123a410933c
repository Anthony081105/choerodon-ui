943f36433c7ea427769c8f93d0c9c442
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _upload = _interopRequireDefault(require("../../../components/upload"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _button = _interopRequireDefault(require("../../../components/button"));

var _icon = _interopRequireDefault(require("../../../components/icon"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = (0, _getPrototypeOf2["default"])(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0, _possibleConstructorReturn2["default"])(this, result);
  };
}

var MyUpload =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(MyUpload, _React$Component);

  var _super = _createSuper(MyUpload);

  function MyUpload() {
    var _this;

    (0, _classCallCheck2["default"])(this, MyUpload);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      fileList: [{
        uid: -1,
        name: 'xxx.png',
        status: 'done',
        url: 'http://www.baidu.com/xxx.png'
      }]
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleChange", function (info) {
      var fileList = info.fileList; // 1. Limit the number of uploaded files
      //    Only to show two recent uploaded files, and old ones will be replaced by the new

      fileList = fileList.slice(-2); // 2. read from response and show file link

      fileList = fileList.map(function (file) {
        if (file.response) {
          // Component will show file.url as link
          file.url = file.response.url;
        }

        return file;
      }); // 3. filter successfully uploaded files according to response from server

      fileList = fileList.filter(function (file) {
        if (file.response) {
          return file.response.status === 'success';
        }

        return true;
      });

      _this.setState({
        fileList: fileList
      });
    });
    return _this;
  }

  (0, _createClass2["default"])(MyUpload, [{
    key: "render",
    value: function render() {
      var props = {
        action: '//jsonplaceholder.typicode.com/posts/',
        onChange: this.handleChange,
        multiple: true
      };
      return _react["default"].createElement(_upload["default"], (0, _extends2["default"])({}, props, {
        fileList: this.state.fileList
      }), _react["default"].createElement(_button["default"], null, _react["default"].createElement(_icon["default"], {
        type: "file_upload"
      }), " upload"));
    }
  }]);
  return MyUpload;
}(_react["default"].Component);

var __Demo = _react["default"].createElement(MyUpload, null);

var _default = __Demo;
exports["default"] = _default;