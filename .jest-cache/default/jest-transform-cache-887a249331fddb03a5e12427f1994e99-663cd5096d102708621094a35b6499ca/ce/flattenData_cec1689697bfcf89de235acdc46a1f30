0fe79d76de34ed85d1f9b24051dd888f
"use strict";

/* istanbul ignore next */
function cov_2j0qg8zg7t() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/flattenData.ts";
  var hash = "6e05301002e482670d4a4aaa29c33d2a4ba7cbad";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/flattenData.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 10,
          column: 21
        },
        end: {
          line: 10,
          column: 92
        }
      },
      "4": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 13,
          column: 23
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 5
        }
      },
      "6": {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 17,
          column: 13
        }
      },
      "7": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 28,
          column: 7
        }
      },
      "8": {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 21,
          column: 29
        }
      },
      "9": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 23,
          column: 66
        }
      },
      "10": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 27,
          column: 7
        }
      },
      "11": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "12": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "13": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "14": {
        start: {
          line: 35,
          column: 15
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "15": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "flattenData",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 20
          }
        },
        loc: {
          start: {
            line: 12,
            column: 27
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "loop",
        decl: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 15
          }
        },
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 20,
            column: 18
          }
        },
        loc: {
          start: {
            line: 20,
            column: 33
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 20
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        }, {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 27,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 27,
            column: 7
          }
        }, {
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 27,
            column: 7
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6e05301002e482670d4a4aaa29c33d2a4ba7cbad"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2j0qg8zg7t = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2j0qg8zg7t();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2j0qg8zg7t().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_2j0qg8zg7t().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2j0qg8zg7t().s[2]++;
exports["default"] = void 0;

var _objectSpread2 =
/* istanbul ignore next */
(cov_2j0qg8zg7t().s[3]++, _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2")));

function flattenData(data) {
  /* istanbul ignore next */
  cov_2j0qg8zg7t().f[0]++;
  var flattenItems =
  /* istanbul ignore next */
  (cov_2j0qg8zg7t().s[4]++, []);

  function loop(data, _parent) {
    /* istanbul ignore next */
    cov_2j0qg8zg7t().f[1]++;
    cov_2j0qg8zg7t().s[5]++;

    if (!Array.isArray(data)) {
      /* istanbul ignore next */
      cov_2j0qg8zg7t().b[0][0]++;
      cov_2j0qg8zg7t().s[6]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2j0qg8zg7t().b[0][1]++;
    }

    cov_2j0qg8zg7t().s[7]++;
    data.forEach(function (item) {
      /* istanbul ignore next */
      cov_2j0qg8zg7t().f[2]++;
      cov_2j0qg8zg7t().s[8]++;
      item._parent = _parent; // @ts-ignore

      /* istanbul ignore next */
      cov_2j0qg8zg7t().s[9]++;
      flattenItems.push((0, _objectSpread2["default"])({}, item));

      /* istanbul ignore next */
      cov_2j0qg8zg7t().s[10]++;

      if (item.children) {
        /* istanbul ignore next */
        cov_2j0qg8zg7t().b[1][0]++;
        cov_2j0qg8zg7t().s[11]++;
        loop(item.children, item);
      } else
      /* istanbul ignore next */
      {
        cov_2j0qg8zg7t().b[1][1]++;
      }
    });
  }

  /* istanbul ignore next */
  cov_2j0qg8zg7t().s[12]++;
  loop(data, null);

  /* istanbul ignore next */
  cov_2j0qg8zg7t().s[13]++;
  return flattenItems;
}

var _default =
/* istanbul ignore next */
(cov_2j0qg8zg7t().s[14]++, flattenData);

/* istanbul ignore next */
cov_2j0qg8zg7t().s[15]++;
exports["default"] = _default;