{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/trigger/Popup.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { CSSProperties, Key } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport shallowEqual from 'lodash/isEqual';\nimport noop from 'lodash/noop';\nimport Align from 'choerodon-ui/lib/align';\nimport { getProPrefixCls } from 'choerodon-ui/lib/configure';\nimport Animate from '../animate';\nimport ViewComponent, { ViewComponentProps } from '../core/ViewComponent';\nimport PopupInner from './PopupInner';\nimport autobind from '../_util/autobind';\n\nlet popupContainer;\n\nfunction getContainer() {\n  if (!popupContainer && typeof window !== 'undefined') {\n    const doc = window.document;\n    popupContainer = doc.createElement('div');\n    popupContainer.className = getProPrefixCls('popup-container');\n    doc.body.appendChild(popupContainer);\n  }\n  return popupContainer;\n}\n\n/**\n * 记录ID生成器\n */\nconst PopupKeyGen: IterableIterator<string> = (function*(start: number) {\n  while (true) {\n    yield `popup-key-${start++}`;\n  }\n})(1);\n\nexport interface PopupProps extends ViewComponentProps {\n  align: object;\n  onAlign?: (source: Node, align: object, target: Node | Window) => void;\n  getRootDomNode?: () => Node;\n  transitionName?: string;\n  onAnimateAppear?: (key: Key | null) => void;\n  onAnimateEnter?: (key: Key | null) => void;\n  onAnimateLeave?: (key: Key | null) => void;\n  onAnimateEnd?: (key: Key | null, exists: boolean) => void;\n  getStyleFromAlign?: (target: Node | Window, align: object) => object | undefined;\n  getClassNameFromAlign?: (align: object) => string | undefined;\n}\n\nexport default class Popup extends ViewComponent<PopupProps> {\n  static displayName = 'Popup';\n\n  static propTypes = {\n    align: PropTypes.object,\n    onAlign: PropTypes.func,\n    getRootDomNode: PropTypes.func,\n    transitionName: PropTypes.string,\n    onAnimateAppear: PropTypes.func,\n    onAnimateEnter: PropTypes.func,\n    onAnimateLeave: PropTypes.func,\n    onAnimateEnd: PropTypes.func,\n    getStyleFromAlign: PropTypes.func,\n    getClassNameFromAlign: PropTypes.func,\n    ...ViewComponent.propTypes,\n  };\n\n  static defaultProps = {\n    suffixCls: 'popup',\n    transitionName: 'zoom',\n  };\n\n  currentAlignClassName?: string;\n\n  currentAlignStyle?: CSSProperties;\n\n  align: Align | null;\n\n  contentRendered: boolean = false;\n\n  popupKey: string = PopupKeyGen.next().value;\n\n  saveRef = align => (this.align = align);\n\n  getOtherProps() {\n    const otherProps = omit(super.getOtherProps(), [\n      'align',\n      'transitionName',\n      'getRootDomNode',\n      'getClassNameFromAlign',\n      'getStyleFromAlign',\n      'onAlign',\n      'onAnimateAppear',\n      'onAnimateEnter',\n      'onAnimateLeave',\n      'onAnimateEnd',\n    ]);\n    return otherProps;\n  }\n\n  render() {\n    const {\n      hidden,\n      align,\n      transitionName,\n      getRootDomNode,\n      children,\n      onAnimateAppear = noop,\n      onAnimateEnter = noop,\n      onAnimateLeave = noop,\n      onAnimateEnd = noop,\n    } = this.props;\n    if (!hidden) {\n      this.contentRendered = true;\n    }\n    const container = getContainer();\n    return container && this.contentRendered\n      ? createPortal(\n          <Animate\n            component=\"\"\n            exclusive\n            transitionAppear\n            transitionName={transitionName}\n            hiddenProp=\"hidden\"\n            onAppear={onAnimateAppear}\n            onEnter={onAnimateEnter}\n            onLeave={onAnimateLeave}\n            onEnd={onAnimateEnd}\n          >\n            <Align\n              ref={this.saveRef}\n              key=\"align\"\n              childrenProps={{ hidden: 'hidden' }}\n              align={align}\n              onAlign={this.onAlign}\n              target={getRootDomNode}\n              hidden={hidden}\n              monitorWindowResize\n            >\n              <PopupInner {...omit(this.getMergedProps(), ['ref'])}>{children}</PopupInner>\n            </Align>\n          </Animate>,\n          container,\n          this.popupKey,\n        )\n      : null;\n  }\n\n  @autobind\n  onAlign(source, align, target) {\n    const { getClassNameFromAlign = noop, getStyleFromAlign = noop, onAlign = noop } = this.props;\n    const currentAlignClassName = getClassNameFromAlign(align);\n    if (this.currentAlignClassName !== currentAlignClassName) {\n      this.currentAlignClassName = currentAlignClassName;\n      source.className = this.getMergedClassNames(currentAlignClassName);\n    }\n    const currentAlignStyle = getStyleFromAlign(target, align);\n    if (!shallowEqual(this.currentAlignStyle, currentAlignStyle)) {\n      this.currentAlignStyle = currentAlignStyle;\n      Object.assign(source.style, currentAlignStyle);\n    }\n    onAlign(source, align, target);\n  }\n\n  forceAlign() {\n    if (this.align) {\n      this.align.forceAlign();\n    }\n  }\n}\n"]}