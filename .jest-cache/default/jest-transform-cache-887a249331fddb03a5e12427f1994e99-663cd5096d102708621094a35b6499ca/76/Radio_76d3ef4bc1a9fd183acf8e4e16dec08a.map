{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/radio/Radio.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { action, computed } from 'mobx';\nimport { observer } from 'mobx-react';\nimport omit from 'lodash/omit';\nimport noop from 'lodash/noop';\nimport { FormField, FormFieldProps } from '../field/FormField';\nimport autobind from '../_util/autobind';\nimport { ValidationMessages } from '../validator/Validator';\nimport { ViewMode } from './enum';\nimport { $l } from '../locale-context';\nimport { LabelLayout } from '../form/enum';\n\nexport interface RadioProps extends FormFieldProps {\n  /**\n   * <受控>是否选中\n   */\n  checked?: boolean;\n  /**\n   * 初始是否选中\n   */\n  defaultChecked?: boolean;\n  /**\n   * 显示模式\n   * 可选值： button | box\n   * @default box\n   */\n  mode?: ViewMode;\n}\n\nexport class Radio<T extends RadioProps> extends FormField<T & RadioProps> {\n  static displayName = 'Radio';\n\n  static propTypes = {\n    /**\n     * <受控>是否选中\n     */\n    checked: PropTypes.bool,\n    /**\n     * 初始是否选中\n     */\n    defaultChecked: PropTypes.bool,\n    /**\n     * 显示模式\n     * 可选值： button | box\n     * @default box\n     */\n    mode: PropTypes.oneOf([ViewMode.button, ViewMode.box]),\n    ...FormField.propTypes,\n  };\n\n  static defaultProps = {\n    ...FormField.defaultProps,\n    suffixCls: 'radio',\n  };\n\n  type: string = 'radio';\n\n  @computed\n  get defaultValidationMessages(): ValidationMessages {\n    const label = this.getProp('label');\n    return {\n      valueMissing: $l('Radio', label ? 'value_missing' : 'value_missing_no_label', { label }),\n    };\n  }\n\n  get checkedValue() {\n    const { value = 'on' } = this.props;\n    return value;\n  }\n\n  get isControlled() {\n    return this.props.checked !== undefined;\n  }\n\n  getOtherProps() {\n    const otherProps = omit(super.getOtherProps(), ['value', 'readOnly', 'mode']);\n    otherProps.type = this.type;\n    // if (this.isReadOnly()) {\n    //   otherProps.disabled = true;\n    // }\n    otherProps.onMouseDown = this.handleMouseDown;\n    otherProps.onClick = otherProps.onChange;\n    otherProps.onChange = noop;\n    return otherProps;\n  }\n\n  renderWrapper(): ReactNode {\n    const checked = this.isChecked();\n    return (\n      <label key=\"wrapper\" {...this.getWrapperProps()}>\n        <input {...this.getOtherProps()} checked={checked} value={this.checkedValue} />\n        {this.renderInner()}\n        {this.getTextNode()}\n        {this.renderFloatLabel()}\n      </label>\n    );\n  }\n\n  renderInner(): ReactNode {\n    return <span className={`${this.prefixCls}-inner`} />;\n  }\n\n  /**\n   * 当使用label代替children时，不需要展示float label\n   *\n   * @readonly\n   * @memberof Radio\n   */\n  get hasFloatLabel() {\n    return this.getLabelChildren() ? false : super.hasFloatLabel;\n  }\n\n  /**\n   * 没有children时，使用label替代children\n   *\n   * @returns {ReactNode} label\n   * @memberof Radio\n   */\n  getLabelChildren(): ReactNode {\n    const { labelLayout } = this;\n    return (\n      labelLayout &&\n      ![LabelLayout.horizontal, LabelLayout.vertical, LabelLayout.none].includes(labelLayout) &&\n      this.getLabel()\n    );\n  }\n\n  getChildrenText() {\n    return this.props.children;\n  }\n\n  getTextNode() {\n    const { prefixCls } = this;\n    const text = this.getChildrenText() || this.getLabelChildren();\n    if (text) {\n      return <span className={`${prefixCls}-label`}>{text}</span>;\n    }\n  }\n\n  getWrapperClassNames(...args) {\n    const {\n      prefixCls,\n      props: { mode },\n    } = this;\n    return super.getWrapperClassNames(\n      {\n        [`${prefixCls}-button`]: mode === ViewMode.button,\n      },\n      ...args,\n    );\n  }\n\n  isChecked() {\n    const { checked } = this.props;\n    const { name, dataSet, checkedValue } = this;\n    if (dataSet && name) {\n      return this.getDataSetValue() === checkedValue;\n    }\n    return checked;\n  }\n\n  @autobind\n  handleMouseDown(e) {\n    // e.stopPropagation();\n    const { onMouseDown } = this.props;\n    if (typeof onMouseDown === 'function') {\n      onMouseDown(e);\n    }\n  }\n\n  @autobind\n  handleChange(e) {\n    const { onClick = noop } = this.props;\n    const { checked } = e.target;\n    onClick(e);\n    this.setChecked(checked);\n  }\n\n  @action\n  setChecked(checked: boolean) {\n    if (checked) {\n      this.setValue(this.checkedValue);\n    }\n  }\n\n  getOldValue(): any {\n    return this.isChecked() ? this.checkedValue : undefined;\n  }\n}\n\n@observer\nexport default class ObserverRadio extends Radio<RadioProps> {\n  static defaultProps = Radio.defaultProps;\n}\n"]}