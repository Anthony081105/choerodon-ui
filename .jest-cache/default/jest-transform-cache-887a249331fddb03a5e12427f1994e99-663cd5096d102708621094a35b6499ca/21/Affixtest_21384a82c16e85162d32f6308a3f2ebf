bba1cec7d3d92082d65e504cc2e90dbc
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _ = _interopRequireDefault(require(".."));

var _button = _interopRequireDefault(require("../../button"));

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = (0, _getPrototypeOf2["default"])(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0, _possibleConstructorReturn2["default"])(this, result);
  };
}

var events = {};

var AffixMounter =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(AffixMounter, _React$Component);

  var _super = _createSuper(AffixMounter);

  function AffixMounter() {
    var _this;

    (0, _classCallCheck2["default"])(this, AffixMounter);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getTarget", function () {
      return _this.container;
    });
    return _this;
  }

  (0, _createClass2["default"])(AffixMounter, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.container.scrollTop = 100;
      this.container.addEventListener = jest.fn().mockImplementation(function (event, cb) {
        events[event] = cb;
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react["default"].createElement("div", {
        style: {
          height: 100,
          overflowY: 'scroll'
        },
        ref: function ref(node) {
          _this2.container = node;
        }
      }, _react["default"].createElement("div", {
        className: "background",
        style: {
          paddingTop: 60,
          height: 300
        }
      }, _react["default"].createElement(_["default"], {
        target: function target() {
          return _this2.container;
        },
        ref: function ref(ele) {
          return _this2.affix = ele;
        }
      }, _react["default"].createElement(_button["default"], {
        type: "primary"
      }, "Fixed at the top of container"))));
    }
  }]);
  return AffixMounter;
}(_react["default"].Component);

describe('Affix Render', function () {
  beforeAll(function () {
    jest.useFakeTimers();
  });
  afterAll(function () {
    jest.useRealTimers();
  });
  it('Anchor render perfectly', function () {
    document.body.innerHTML = '<div id="mounter" />';
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(AffixMounter, null), {
      attachTo: document.getElementById('mounter')
    });
    jest.runAllTimers();
    wrapper.instance().affix.fixedNode.parentNode.getBoundingClientRect = jest.fn(function () {
      return {
        bottom: 100,
        height: 28,
        left: 0,
        right: 0,
        top: -50,
        width: 195
      };
    });
    events.scroll({
      type: 'scroll'
    });
    jest.runAllTimers();
    expect(wrapper.instance().affix.state.affixStyle).not.toBe(null);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFmZml4LnRlc3QuanMiXSwibmFtZXMiOlsiZXZlbnRzIiwiQWZmaXhNb3VudGVyIiwiY29udGFpbmVyIiwic2Nyb2xsVG9wIiwiYWRkRXZlbnRMaXN0ZW5lciIsImplc3QiLCJmbiIsIm1vY2tJbXBsZW1lbnRhdGlvbiIsImV2ZW50IiwiY2IiLCJoZWlnaHQiLCJvdmVyZmxvd1kiLCJub2RlIiwicGFkZGluZ1RvcCIsImVsZSIsImFmZml4IiwiUmVhY3QiLCJDb21wb25lbnQiLCJkZXNjcmliZSIsImJlZm9yZUFsbCIsInVzZUZha2VUaW1lcnMiLCJhZnRlckFsbCIsInVzZVJlYWxUaW1lcnMiLCJpdCIsImRvY3VtZW50IiwiYm9keSIsImlubmVySFRNTCIsIndyYXBwZXIiLCJhdHRhY2hUbyIsImdldEVsZW1lbnRCeUlkIiwicnVuQWxsVGltZXJzIiwiaW5zdGFuY2UiLCJmaXhlZE5vZGUiLCJwYXJlbnROb2RlIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiYm90dG9tIiwibGVmdCIsInJpZ2h0IiwidG9wIiwid2lkdGgiLCJzY3JvbGwiLCJ0eXBlIiwiZXhwZWN0Iiwic3RhdGUiLCJhZmZpeFN0eWxlIiwibm90IiwidG9CZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsRUFBZjs7SUFFTUMsWTs7Ozs7Ozs7Ozs7Ozs7Ozs7a0dBUVEsWUFBTTtBQUNoQixhQUFPLE1BQUtDLFNBQVo7QUFDRCxLOzs7Ozs7d0NBVG1CO0FBQ2xCLFdBQUtBLFNBQUwsQ0FBZUMsU0FBZixHQUEyQixHQUEzQjtBQUNBLFdBQUtELFNBQUwsQ0FBZUUsZ0JBQWYsR0FBa0NDLElBQUksQ0FBQ0MsRUFBTCxHQUFVQyxrQkFBVixDQUE2QixVQUFDQyxLQUFELEVBQVFDLEVBQVIsRUFBZTtBQUM1RVQsUUFBQUEsTUFBTSxDQUFDUSxLQUFELENBQU4sR0FBZ0JDLEVBQWhCO0FBQ0QsT0FGaUMsQ0FBbEM7QUFHRDs7OzZCQU1RO0FBQUE7O0FBQ1AsYUFDRTtBQUNFLFFBQUEsS0FBSyxFQUFFO0FBQ0xDLFVBQUFBLE1BQU0sRUFBRSxHQURIO0FBRUxDLFVBQUFBLFNBQVMsRUFBRTtBQUZOLFNBRFQ7QUFLRSxRQUFBLEdBQUcsRUFBRSxhQUFDQyxJQUFELEVBQVU7QUFBRSxVQUFBLE1BQUksQ0FBQ1YsU0FBTCxHQUFpQlUsSUFBakI7QUFBd0I7QUFMM0MsU0FPRTtBQUNFLFFBQUEsU0FBUyxFQUFDLFlBRFo7QUFFRSxRQUFBLEtBQUssRUFBRTtBQUNMQyxVQUFBQSxVQUFVLEVBQUUsRUFEUDtBQUVMSCxVQUFBQSxNQUFNLEVBQUU7QUFGSDtBQUZULFNBT0UsZ0NBQUMsWUFBRDtBQUNFLFFBQUEsTUFBTSxFQUFFO0FBQUEsaUJBQU0sTUFBSSxDQUFDUixTQUFYO0FBQUEsU0FEVjtBQUVFLFFBQUEsR0FBRyxFQUFFLGFBQUFZLEdBQUc7QUFBQSxpQkFBSSxNQUFJLENBQUNDLEtBQUwsR0FBYUQsR0FBakI7QUFBQTtBQUZWLFNBSUUsZ0NBQUMsa0JBQUQ7QUFBUSxRQUFBLElBQUksRUFBQztBQUFiLHlDQUpGLENBUEYsQ0FQRixDQURGO0FBMEJEOzs7RUF2Q3dCRSxrQkFBTUMsUzs7QUEwQ2pDQyxRQUFRLENBQUMsY0FBRCxFQUFpQixZQUFNO0FBQzdCQyxFQUFBQSxTQUFTLENBQUMsWUFBTTtBQUNkZCxJQUFBQSxJQUFJLENBQUNlLGFBQUw7QUFDRCxHQUZRLENBQVQ7QUFJQUMsRUFBQUEsUUFBUSxDQUFDLFlBQU07QUFDYmhCLElBQUFBLElBQUksQ0FBQ2lCLGFBQUw7QUFDRCxHQUZPLENBQVI7QUFJQUMsRUFBQUEsRUFBRSxDQUFDLHlCQUFELEVBQTRCLFlBQU07QUFDbENDLElBQUFBLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjQyxTQUFkLEdBQTBCLHNCQUExQjtBQUVBLFFBQU1DLE9BQU8sR0FBRyxtQkFBTSxnQ0FBQyxZQUFELE9BQU4sRUFBd0I7QUFBRUMsTUFBQUEsUUFBUSxFQUFFSixRQUFRLENBQUNLLGNBQVQsQ0FBd0IsU0FBeEI7QUFBWixLQUF4QixDQUFoQjtBQUNBeEIsSUFBQUEsSUFBSSxDQUFDeUIsWUFBTDtBQUVBSCxJQUFBQSxPQUFPLENBQUNJLFFBQVIsR0FBbUJoQixLQUFuQixDQUF5QmlCLFNBQXpCLENBQW1DQyxVQUFuQyxDQUE4Q0MscUJBQTlDLEdBQXNFN0IsSUFBSSxDQUFDQyxFQUFMLENBQVEsWUFBTTtBQUNsRixhQUFPO0FBQ0w2QixRQUFBQSxNQUFNLEVBQUUsR0FESDtBQUNRekIsUUFBQUEsTUFBTSxFQUFFLEVBRGhCO0FBQ29CMEIsUUFBQUEsSUFBSSxFQUFFLENBRDFCO0FBQzZCQyxRQUFBQSxLQUFLLEVBQUUsQ0FEcEM7QUFDdUNDLFFBQUFBLEdBQUcsRUFBRSxDQUFDLEVBRDdDO0FBQ2lEQyxRQUFBQSxLQUFLLEVBQUU7QUFEeEQsT0FBUDtBQUdELEtBSnFFLENBQXRFO0FBTUF2QyxJQUFBQSxNQUFNLENBQUN3QyxNQUFQLENBQWM7QUFDWkMsTUFBQUEsSUFBSSxFQUFFO0FBRE0sS0FBZDtBQUlBcEMsSUFBQUEsSUFBSSxDQUFDeUIsWUFBTDtBQUNBWSxJQUFBQSxNQUFNLENBQUNmLE9BQU8sQ0FBQ0ksUUFBUixHQUFtQmhCLEtBQW5CLENBQXlCNEIsS0FBekIsQ0FBK0JDLFVBQWhDLENBQU4sQ0FBa0RDLEdBQWxELENBQXNEQyxJQUF0RCxDQUEyRCxJQUEzRDtBQUNELEdBbEJDLENBQUY7QUFtQkQsQ0E1Qk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtb3VudCB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgQWZmaXggZnJvbSAnLi4nO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi8uLi9idXR0b24nO1xuXG5jb25zdCBldmVudHMgPSB7fTtcblxuY2xhc3MgQWZmaXhNb3VudGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5jb250YWluZXIuc2Nyb2xsVG9wID0gMTAwO1xuICAgIHRoaXMuY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIgPSBqZXN0LmZuKCkubW9ja0ltcGxlbWVudGF0aW9uKChldmVudCwgY2IpID0+IHtcbiAgICAgIGV2ZW50c1tldmVudF0gPSBjYjtcbiAgICB9KTtcbiAgfVxuXG4gIGdldFRhcmdldCA9ICgpID0+IHtcbiAgICByZXR1cm4gdGhpcy5jb250YWluZXI7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICBoZWlnaHQ6IDEwMCxcbiAgICAgICAgICBvdmVyZmxvd1k6ICdzY3JvbGwnLFxuICAgICAgICB9fVxuICAgICAgICByZWY9eyhub2RlKSA9PiB7IHRoaXMuY29udGFpbmVyID0gbm9kZTsgfX1cbiAgICAgID5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzTmFtZT1cImJhY2tncm91bmRcIlxuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICBwYWRkaW5nVG9wOiA2MCxcbiAgICAgICAgICAgIGhlaWdodDogMzAwLFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICA8QWZmaXhcbiAgICAgICAgICAgIHRhcmdldD17KCkgPT4gdGhpcy5jb250YWluZXJ9XG4gICAgICAgICAgICByZWY9e2VsZSA9PiB0aGlzLmFmZml4ID0gZWxlfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxCdXR0b24gdHlwZT1cInByaW1hcnlcIj5cbiAgICAgICAgICAgICAgRml4ZWQgYXQgdGhlIHRvcCBvZiBjb250YWluZXJcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvQWZmaXg+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5kZXNjcmliZSgnQWZmaXggUmVuZGVyJywgKCkgPT4ge1xuICBiZWZvcmVBbGwoKCkgPT4ge1xuICAgIGplc3QudXNlRmFrZVRpbWVycygpO1xuICB9KTtcblxuICBhZnRlckFsbCgoKSA9PiB7XG4gICAgamVzdC51c2VSZWFsVGltZXJzKCk7XG4gIH0pO1xuXG4gIGl0KCdBbmNob3IgcmVuZGVyIHBlcmZlY3RseScsICgpID0+IHtcbiAgICBkb2N1bWVudC5ib2R5LmlubmVySFRNTCA9ICc8ZGl2IGlkPVwibW91bnRlclwiIC8+JztcblxuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudCg8QWZmaXhNb3VudGVyIC8+LCB7IGF0dGFjaFRvOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW91bnRlcicpIH0pO1xuICAgIGplc3QucnVuQWxsVGltZXJzKCk7XG5cbiAgICB3cmFwcGVyLmluc3RhbmNlKCkuYWZmaXguZml4ZWROb2RlLnBhcmVudE5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0ID0gamVzdC5mbigoKSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBib3R0b206IDEwMCwgaGVpZ2h0OiAyOCwgbGVmdDogMCwgcmlnaHQ6IDAsIHRvcDogLTUwLCB3aWR0aDogMTk1LFxuICAgICAgfTtcbiAgICB9KTtcblxuICAgIGV2ZW50cy5zY3JvbGwoe1xuICAgICAgdHlwZTogJ3Njcm9sbCcsXG4gICAgfSk7XG5cbiAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgIGV4cGVjdCh3cmFwcGVyLmluc3RhbmNlKCkuYWZmaXguc3RhdGUuYWZmaXhTdHlsZSkubm90LnRvQmUobnVsbCk7XG4gIH0pO1xufSk7XG4iXX0=