{"version":3,"sources":["index.test.js"],"names":["describe","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","optionData","text","value","data","name","optionDs","DataSet","selection","ds","fields","textField","valueField","options","it","wrapper","runAllTimers","expect","find","length","toBe","at","prop"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BC,EAAAA,UAAU,CAAC,YAAM;AACfC,IAAAA,IAAI,CAACC,aAAL;AACD,GAFS,CAAV;AAIAC,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,IAAI,CAACG,aAAL;AACD,GAFQ,CAAT;AAGA,MAAMC,UAAU,GAAG,CACjB;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADiB,EAEjB;AAAED,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAFiB,EAGjB;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAHiB,EAIjB;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAJiB,EAKjB;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GALiB,CAAnB;AAQA,MAAMC,IAAI,GAAG,CACX;AACEC,IAAAA,IAAI,EAAE;AADR,GADW,CAAb;AAKA,MAAMC,QAAQ,GAAG,IAAIC,mBAAJ,CAAY;AAC3BH,IAAAA,IAAI,EAAEH,UADqB;AAE3BO,IAAAA,SAAS,EAAE;AAFgB,GAAZ,CAAjB;AAIA,MAAMC,EAAE,GAAG,IAAIF,mBAAJ,CAAY;AACrBH,IAAAA,IAAI,EAAJA,IADqB;AAErBM,IAAAA,MAAM,EAAE,CAAC;AAAEL,MAAAA,IAAI,EAAE,MAAR;AAAgBM,MAAAA,SAAS,EAAE,MAA3B;AAAmCC,MAAAA,UAAU,EAAE,OAA/C;AAAwDC,MAAAA,OAAO,EAAEP;AAAjE,KAAD;AAFa,GAAZ,CAAX;AAIAQ,EAAAA,EAAE,CAAC,8DAAD,EAAiE,YAAM;AACvE,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAW,MAAA,OAAO,EAAEN,EAApB;AAAwB,MAAA,IAAI,EAAC;AAA7B,MAAN,CAAhB;AACAZ,IAAAA,IAAI,CAACmB,YAAL;AACAC,IAAAA,MAAM,CAACF,OAAO,CAACG,IAAR,CAAa,OAAb,EAAsBC,MAAvB,CAAN,CAAqCC,IAArC,CAA0C,CAA1C;AACD,GAJC,CAAF;AAKAN,EAAAA,EAAE,CAAC,4CAAD,EAA+C,YAAM;AACrD,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAW,MAAA,OAAO,EAAEN,EAApB;AAAwB,MAAA,IAAI,EAAC;AAA7B,MAAN,CAAhB;AACAZ,IAAAA,IAAI,CAACmB,YAAL;AACAC,IAAAA,MAAM,CACJF,OAAO,CACJG,IADH,CACQ,OADR,EAEGG,EAFH,CAEM,CAFN,EAGGC,IAHH,CAGQ,SAHR,CADI,CAAN,CAKEF,IALF,CAKO,IALP;AAMD,GATC,CAAF;AAUAN,EAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAM;AAC9C,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAW,MAAA,QAAQ,MAAnB;AAAoB,MAAA,OAAO,EAAEN,EAA7B;AAAiC,MAAA,IAAI,EAAC;AAAtC,MAAN,CAAhB;AACAZ,IAAAA,IAAI,CAACmB,YAAL;AACAC,IAAAA,MAAM,CAACF,OAAO,CAACG,IAAR,CAAa,yBAAb,EAAwCC,MAAzC,CAAN,CAAuDC,IAAvD,CAA4D,CAA5D;AACD,GAJC,CAAF;AAKD,CAjDO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport SelectBox from '..';\nimport DataSet from '../../data-set';\n\ndescribe('Select-Box-pro', () => {\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n  const optionData = [\n    { text: 'Jack', value: 'jack' },\n    { text: 'Huazhen', value: 'huazhen' },\n    { text: 'Lucy', value: 'lucy' },\n    { text: 'Niu', value: 'jiaqin' },\n    { text: 'Shao', value: 'shao' },\n  ];\n\n  const data = [\n    {\n      name: 'huazhen',\n    },\n  ];\n  const optionDs = new DataSet({\n    data: optionData,\n    selection: 'single',\n  });\n  const ds = new DataSet({\n    data,\n    fields: [{ name: 'name', textField: 'text', valueField: 'value', options: optionDs }],\n  });\n  it('dataset set SelectBox dataSet render Huazhen radio onchecked', () => {\n    const wrapper = mount(<SelectBox dataSet={ds} name=\"name\" />);\n    jest.runAllTimers();\n    expect(wrapper.find('input').length).toBe(5);\n  });\n  it('dataset set SelectBox only has one checked', () => {\n    const wrapper = mount(<SelectBox dataSet={ds} name=\"name\" />);\n    jest.runAllTimers();\n    expect(\n      wrapper\n        .find('input')\n        .at(1)\n        .prop('checked'),\n    ).toBe(true);\n  });\n  it('dataset set SelectBox disabled test', () => {\n    const wrapper = mount(<SelectBox disabled dataSet={ds} name=\"name\" />);\n    jest.runAllTimers();\n    expect(wrapper.find('.c7n-pro-radio-disabled').length).toBe(5);\n  });\n});\n"]}