{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/input/Input.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {\n  ChangeEventHandler,\n  Component,\n  CSSProperties,\n  FocusEvent,\n  FormEventHandler,\n  KeyboardEvent,\n  ReactNode,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport Group from './Group';\nimport Search from './Search';\nimport TextArea from './TextArea';\nimport Icon from '../icon';\nimport { Size } from '../_util/enum';\nimport { getPrefixCls } from '../configure';\n\nfunction fixControlledValue(value: undefined | null | string) {\n  if (typeof value === 'undefined' || value === null) {\n    return '';\n  }\n  return value;\n}\n\nexport interface AbstractInputProps {\n  prefixCls?: string;\n  className?: string;\n  defaultValue?: any;\n  value?: any;\n  tabIndex?: number;\n  style?: CSSProperties;\n  label?: ReactNode;\n  showLengthInfo?: boolean;\n  showPasswordEye?: boolean;\n}\n\nexport interface InputProps extends AbstractInputProps {\n  placeholder?: string;\n  copy?: boolean;\n  type?: string;\n  id?: string;\n  name?: string;\n  size?: Size;\n  maxLength?: number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  addonBefore?: ReactNode;\n  addonAfter?: ReactNode;\n  onPressEnter?: FormEventHandler<HTMLInputElement>;\n  onKeyDown?: FormEventHandler<HTMLInputElement>;\n  onKeyUp?: FormEventHandler<HTMLInputElement>;\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n  onClick?: FormEventHandler<HTMLInputElement>;\n  onFocus?: FormEventHandler<HTMLInputElement>;\n  onBlur?: FormEventHandler<HTMLInputElement>;\n  onInput?: FormEventHandler<HTMLInputElement>;\n  onCopy?: (value: any) => void;\n  autoComplete?: string;\n  prefix?: ReactNode;\n  suffix?: ReactNode;\n  spellCheck?: boolean;\n  autoFocus?: boolean;\n  focused?: boolean;\n  border?: boolean;\n}\n\nexport interface InputState {\n  value?: any;\n  focused?: boolean;\n  showPasswordEye?: boolean;\n  showPassword?: boolean;\n}\n\nexport default class Input extends Component<InputProps, any> {\n  static displayName = 'Input';\n\n  static Group: typeof Group;\n\n  static Search: typeof Search;\n\n  static TextArea: typeof TextArea;\n\n  static defaultProps = {\n    type: 'text',\n    disabled: false,\n    readOnly: false,\n    showLengthInfo: true,\n    showPasswordEye: false,\n    border: true,\n  };\n\n  static propTypes = {\n    type: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    label: PropTypes.node,\n    size: PropTypes.oneOf([Size.small, Size.default, Size.large]),\n    maxLength: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    disabled: PropTypes.bool,\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    className: PropTypes.string,\n    addonBefore: PropTypes.node,\n    addonAfter: PropTypes.node,\n    prefixCls: PropTypes.string,\n    autosize: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    onPressEnter: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    prefix: PropTypes.node,\n    suffix: PropTypes.node,\n    copy: PropTypes.bool,\n    onCopy: PropTypes.func,\n    readOnly: PropTypes.bool,\n    focused: PropTypes.bool,\n    border: PropTypes.bool,\n    showLengthInfo: PropTypes.bool,\n    showPasswordEye: PropTypes.bool,\n  };\n\n  state: InputState;\n\n  input: HTMLInputElement;\n\n  rendered: HTMLDivElement;\n\n  prefix: HTMLSpanElement;\n\n  suffix: HTMLSpanElement;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: typeof props.value === 'undefined' ? props.defaultValue : props.value,\n      focused: false,\n      showPassword: false,\n    };\n  }\n\n  handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    const { onPressEnter, onKeyDown } = this.props;\n    if (e.keyCode === 13 && onPressEnter) {\n      onPressEnter(e);\n    }\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n  };\n\n  componentDidMount() {\n    const { focused, autoFocus } = this.props;\n    if (autoFocus) {\n      this.setState({\n        focused: true,\n      });\n    }\n    if (typeof focused === 'boolean') {\n      this.setState({\n        focused,\n      });\n    }\n    this.setRenderedStyle();\n  }\n\n  componentWillReceiveProps(nextProps: InputProps) {\n    const { value } = this.state;\n    if ('value' in nextProps && value !== nextProps.value) {\n      this.setState({\n        value: nextProps.value,\n      });\n    }\n    if (nextProps.autoFocus) {\n      this.setState({\n        focused: true,\n      });\n    }\n    if (typeof nextProps.focused === 'boolean') {\n      this.setState({\n        focused: nextProps.focused,\n      });\n    }\n    if (nextProps.type !== 'password') {\n      this.setState({\n        showPassword: false,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.setRenderedStyle();\n  }\n\n  setRenderedStyle() {\n    const { rendered, suffix, prefix } = this;\n    let suffixWidth: string;\n    let prefixWidth: string;\n    let margin: string = '0';\n    let width: string = '100%';\n    if (suffix && prefix) {\n      suffixWidth = `${(suffix.clientWidth || -2) + 2}px`;\n      prefixWidth = `${(prefix.clientWidth || -2) + 2}px`;\n      margin = `0 ${suffixWidth} 0 ${prefixWidth}`;\n      width = `calc(100% - ${suffixWidth} - ${prefixWidth})`;\n    } else if (suffix) {\n      suffixWidth = `${(suffix.clientWidth || -2) + 2}px`;\n      margin = `0 ${suffixWidth} 0 0`;\n      width = `calc(100% - ${suffixWidth})`;\n    } else if (prefix) {\n      prefixWidth = `${(prefix.clientWidth || -2) + 2}px`;\n      margin = `0 0 0 ${prefixWidth}`;\n      width = `calc(100% - ${prefixWidth})`;\n    }\n    rendered.style.margin = margin;\n    rendered.style.width = width;\n  }\n\n  handleFocus = (e: FocusEvent<HTMLInputElement>) => {\n    const { onFocus, readOnly } = this.props;\n    if (!readOnly) {\n      this.setState({\n        focused: true,\n      });\n    }\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n\n  handleBlur = (e: FocusEvent<HTMLInputElement>) => {\n    const { onBlur, readOnly } = this.props;\n    if (!readOnly) {\n      this.setState({\n        focused: false,\n      });\n    }\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  handleChange = e => {\n    const { onChange } = this.props;\n    if (!('value' in this.props)) {\n      this.setState({ value: e.target.value });\n    }\n    if (onChange) {\n      onChange(e);\n    }\n  };\n\n  handleCopy = () => {\n    const { onCopy } = this.props;\n    this.input.select();\n    document.execCommand('Copy');\n    if (onCopy) {\n      onCopy(this.input.value);\n    }\n  };\n\n  handleTogglePassword = () => {\n    const { showPassword } = this.state;\n    this.setState({\n      showPassword: !showPassword,\n    });\n  };\n\n  saveInput = (node: HTMLInputElement) => {\n    this.input = node;\n  };\n\n  saveRenderedRef = (node: HTMLDivElement) => {\n    this.rendered = node;\n  };\n\n  savePrefix = (node: HTMLSpanElement) => {\n    this.prefix = node;\n  };\n\n  saveSuffix = (node: HTMLSpanElement) => {\n    this.suffix = node;\n  };\n\n  focus() {\n    this.input.focus();\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  getPrefixCls() {\n    const { prefixCls } = this.props;\n    return getPrefixCls('input', prefixCls);\n  }\n\n  getInputClassName() {\n    const { size, copy } = this.props;\n    const prefixCls = this.getPrefixCls();\n    return classNames(prefixCls, {\n      [`${prefixCls}-sm`]: size === Size.small,\n      [`${prefixCls}-lg`]: size === Size.large,\n      [`${prefixCls}-has-copy`]: copy,\n    });\n  }\n\n  renderCopyIcon() {\n    const { copy } = this.props;\n    const prefixCls = this.getPrefixCls();\n    return copy ? (\n      <span className={`${prefixCls}-icon`} onClick={this.handleCopy}>\n        <Icon className={`${prefixCls}-icon-copy`} type=\"library_books\" />\n      </span>\n    ) : null;\n  }\n\n  renderShowPassword() {\n    const { type } = this.props;\n    const prefixCls = this.getPrefixCls();\n    const { showPassword } = this.state;\n    return type === 'password' ? (\n      <span className={`${prefixCls}-icon`} onClick={this.handleTogglePassword}>\n        <Icon\n          className={`${prefixCls}-icon-copy`}\n          type={showPassword ? 'visibility' : 'visibility_off'}\n        />\n      </span>\n    ) : null;\n  }\n\n  renderInput() {\n    const { className, type } = this.props;\n    const { showPassword, value } = this.state;\n    // Fix https://fb.me/react-unknown-prop\n    const otherProps = omit<\n      InputProps,\n      | 'placeholder'\n      | 'prefixCls'\n      | 'onPressEnter'\n      | 'addonBefore'\n      | 'addonAfter'\n      | 'prefix'\n      | 'suffix'\n      | 'label'\n      | 'copy'\n      | 'style'\n      | 'focused'\n      | 'showLengthInfo'\n      | 'showPasswordEye'\n      | 'size'\n      | 'border'\n    >(this.props, [\n      'placeholder',\n      'prefixCls',\n      'onPressEnter',\n      'addonBefore',\n      'addonAfter',\n      'prefix',\n      'suffix',\n      'label',\n      'copy',\n      'style',\n      'focused',\n      'showLengthInfo',\n      'showPasswordEye',\n      'size',\n      'border',\n    ]);\n\n    return (\n      <input\n        {...otherProps}\n        value={fixControlledValue(value)}\n        className={classNames(this.getInputClassName(), className)}\n        onKeyDown={this.handleKeyDown}\n        ref={this.saveInput}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        type={showPassword ? 'text' : type}\n      />\n    );\n  }\n\n  getLengthInfo() {\n    const { maxLength, showLengthInfo } = this.props;\n    const prefixCls = this.getPrefixCls();\n    const { value } = this.state;\n    const inputLength = value ? value.length : 0;\n    return (maxLength && showLengthInfo) ||\n      (maxLength && maxLength > 0 && inputLength === maxLength) ? (\n      <div className={`${prefixCls}-length-info`}>{`${inputLength}/${maxLength}`}</div>\n    ) : null;\n  }\n\n  getLabel() {\n    const { placeholder, label } = this.props;\n    if (!this.hasValue() && placeholder) {\n      return placeholder;\n    }\n    return label;\n  }\n\n  renderFloatLabel(): ReactNode {\n    const label = this.getLabel();\n    const { border } = this.props;\n    if (label && border) {\n      const prefixCls = this.getPrefixCls();\n      return (\n        <div className={`${prefixCls}-label-wrapper`}>\n          <div className={`${prefixCls}-label`}>{label}</div>\n        </div>\n      );\n    }\n  }\n\n  getSizeClassName(name: string) {\n    const { size } = this.props;\n    const prefixCls = this.getPrefixCls();\n    return classNames(`${prefixCls}-${name}`, {\n      [`${prefixCls}-${name}-sm`]: size === Size.small,\n      [`${prefixCls}-${name}-lg`]: size === Size.large,\n    });\n  }\n\n  hasValue() {\n    const { value } = this.state;\n    return value && value.length !== 0;\n  }\n\n  renderPlaceholder() {\n    const { placeholder, border } = this.props;\n    if (!border && placeholder) {\n      const prefixCls = this.getPrefixCls();\n      return <div className={`${prefixCls}-placeholder`}>{placeholder}</div>;\n    }\n  }\n\n  render() {\n    const props = this.props;\n    const { disabled, label, style, showPasswordEye, border } = this.props;\n    const prefixCls = this.getPrefixCls();\n    const { focused } = this.state;\n    const prefix = props.prefix ? (\n      <span ref={this.savePrefix} className={this.getSizeClassName('prefix')}>\n        {props.prefix}\n      </span>\n    ) : null;\n    const suffix = props.suffix ? (\n      <span ref={this.saveSuffix} className={this.getSizeClassName('suffix')}>\n        {props.suffix}\n      </span>\n    ) : null;\n\n    const className = classNames(`${prefixCls}-wrapper`, {\n      [`${prefixCls}-has-value`]: this.hasValue(),\n      [`${prefixCls}-focused`]: focused,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-has-label`]: !!label,\n      [`${prefixCls}-has-prefix`]: !!prefix,\n      [`${prefixCls}-has-suffix`]: !!suffix,\n      [`${prefixCls}-has-border`]: border,\n    });\n\n    return (\n      <span className={className} style={style}>\n        <div className={`${prefixCls}-content`}>\n          <div className={`${prefixCls}-rendered-wrapper`}>\n            {prefix}\n            <div className={this.getSizeClassName('rendered')} ref={this.saveRenderedRef}>\n              {this.renderPlaceholder()}\n              {this.renderInput()}\n              {this.renderFloatLabel()}\n              {this.renderCopyIcon()}\n              {showPasswordEye ? this.renderShowPassword() : null}\n            </div>\n            {suffix}\n          </div>\n          {this.getLengthInfo()}\n        </div>\n      </span>\n    );\n  }\n}\n"]}