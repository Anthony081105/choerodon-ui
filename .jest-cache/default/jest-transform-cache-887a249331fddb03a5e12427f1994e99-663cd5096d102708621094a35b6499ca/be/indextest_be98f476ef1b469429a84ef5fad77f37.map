{"version":3,"sources":["index.test.js"],"names":["listCommonProps","dataSource","key","title","disabled","selectedKeys","targetKeys","lazy","listDisabledProps","searchTransferProps","description","chosen","describe","it","wrapper","expect","toMatchSnapshot","handleChange","jest","fn","find","TransferOperation","Button","at","simulate","toHaveBeenCalledWith","handleSelectChange","TransferItem","filterWhere","n","prop","toHaveBeenLastCalledWith","not","toHaveBeenCalled","filterOption","inputValue","option","TransferSearch","target","value","TransferList","Checkbox","toHaveLength","indexOf","renderFunc","item","first","text","trim","toEqual","sourceSelectedKeys","targetSelectedKeys","setProps","newProps","sortedTargetKeyProps"],"mappings":"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","sourcesContent":["/* eslint no-use-before-define: \"off\" */\nimport React from 'react';\nimport { render, mount } from 'enzyme';\nimport Transfer from '..';\nimport TransferList from '../list';\nimport TransferOperation from '../operation';\nimport TransferSearch from '../search';\nimport TransferItem from '../item';\nimport Button from '../../button';\nimport Checkbox from '../../checkbox';\n\nconst listCommonProps = {\n  dataSource: [\n    {\n      key: 'a',\n      title: 'a',\n    },\n    {\n      key: 'b',\n      title: 'b',\n    },\n    {\n      key: 'c',\n      title: 'c',\n      disabled: true,\n    },\n  ],\n  selectedKeys: ['a'],\n  targetKeys: ['b'],\n  lazy: false,\n};\n\nconst listDisabledProps = {\n  dataSource: [\n    {\n      key: 'a',\n      title: 'a',\n      disabled: true,\n    },\n    {\n      key: 'b',\n      title: 'b',\n    },\n  ],\n  selectedKeys: ['a', 'b'],\n  targetKeys: [],\n  lazy: false,\n};\n\nconst searchTransferProps = {\n  dataSource: [\n    {\n      key: '0',\n      title: 'content1',\n      description: 'description of content1',\n      chosen: false,\n    },\n    {\n      key: '1',\n      title: 'content2',\n      description: 'description of content2',\n      chosen: false,\n    },\n    {\n      key: '2',\n      title: 'content3',\n      description: 'description of content3',\n      chosen: false,\n    },\n    {\n      key: '3',\n      title: 'content4',\n      description: 'description of content4',\n      chosen: false,\n    },\n    {\n      key: '4',\n      title: 'content5',\n      description: 'description of content5',\n      chosen: false,\n    },\n    {\n      key: '5',\n      title: 'content6',\n      description: 'description of content6',\n      chosen: false,\n    },\n  ],\n  selectedKeys: [],\n  targetKeys: ['3', '4'],\n  lazy: false,\n};\n\ndescribe('Transfer', () => {\n  it('should render correctly', () => {\n    const wrapper = render(<Transfer {...listCommonProps} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  it('should move selected keys to corresponding list', () => {\n    const handleChange = jest.fn();\n    const wrapper = mount(<Transfer {...listCommonProps} onChange={handleChange} />);\n    wrapper\n      .find(TransferOperation)\n      .find(Button)\n      .at(1)\n      .simulate('click'); // move selected keys to right list\n    expect(handleChange).toHaveBeenCalledWith(['a', 'b'], 'right', ['a']);\n  });\n\n  it('should move selected keys expect disabled to corresponding list', () => {\n    const handleChange = jest.fn();\n    const wrapper = mount(<Transfer {...listDisabledProps} onChange={handleChange} />);\n    wrapper\n      .find(TransferOperation)\n      .find(Button)\n      .at(1)\n      .simulate('click'); // move selected keys to right list\n    expect(handleChange).toHaveBeenCalledWith(['b'], 'right', ['b']);\n  });\n\n  it('should uncheck checkbox when click on checked item', () => {\n    const handleSelectChange = jest.fn();\n    const wrapper = mount(<Transfer {...listCommonProps} onSelectChange={handleSelectChange} />);\n    wrapper\n      .find(TransferItem)\n      .filterWhere(n => n.prop('item').key === 'a')\n      .simulate('click');\n    expect(handleSelectChange).toHaveBeenLastCalledWith([], []);\n  });\n\n  it('should check checkbox when click on unchecked item', () => {\n    const handleSelectChange = jest.fn();\n    const wrapper = mount(<Transfer {...listCommonProps} onSelectChange={handleSelectChange} />);\n    wrapper\n      .find(TransferItem)\n      .filterWhere(n => n.prop('item').key === 'b')\n      .simulate('click');\n    expect(handleSelectChange).toHaveBeenLastCalledWith(['a'], ['b']);\n  });\n\n  it('should not check checkbox when click on disabled item', () => {\n    const handleSelectChange = jest.fn();\n    const wrapper = mount(<Transfer {...listCommonProps} onSelectChange={handleSelectChange} />);\n    wrapper\n      .find(TransferItem)\n      .filterWhere(n => n.prop('item').key === 'c')\n      .simulate('click');\n    expect(handleSelectChange).not.toHaveBeenCalled();\n  });\n\n  it('should check all item when click on check all', () => {\n    const handleSelectChange = jest.fn();\n    const wrapper = mount(<Transfer {...listCommonProps} onSelectChange={handleSelectChange} />);\n    wrapper\n      .find('.c7n-transfer-list-header input[type=\"checkbox\"]')\n      .filterWhere(n => !n.prop('checked'))\n      .simulate('change');\n    expect(handleSelectChange).toHaveBeenCalledWith(['a'], ['b']);\n  });\n\n  it('should uncheck all item when click on uncheck all', () => {\n    const handleSelectChange = jest.fn();\n    const wrapper = mount(<Transfer {...listCommonProps} onSelectChange={handleSelectChange} />);\n    wrapper\n      .find('.c7n-transfer-list-header input[type=\"checkbox\"]')\n      .filterWhere(n => n.prop('checked'))\n      .simulate('change');\n    expect(handleSelectChange).toHaveBeenCalledWith([], []);\n  });\n\n  it('should call `filterOption` when use input in search box', () => {\n    const filterOption = (inputValue, option) => inputValue === option.title;\n    const wrapper = mount(<Transfer {...listCommonProps} showSearch filterOption={filterOption} />);\n    wrapper\n      .find(TransferSearch)\n      .at(0)\n      .find('input')\n      .simulate('change', { target: { value: 'a' } });\n    expect(\n      wrapper\n        .find(TransferList)\n        .at(0)\n        .find(TransferItem)\n        .find(Checkbox),\n    ).toHaveLength(1);\n  });\n\n  it('should display the correct count of items when filter by input', () => {\n    const filterOption = (inputValue, option) => option.description.indexOf(inputValue) > -1;\n    const renderFunc = item => item.title;\n    const wrapper = mount(\n      <Transfer\n        {...searchTransferProps}\n        showSearch\n        filterOption={filterOption}\n        render={renderFunc}\n      />,\n    );\n    wrapper\n      .find(TransferSearch)\n      .at(0)\n      .find('input')\n      .simulate('change', { target: { value: 'content2' } });\n    expect(\n      wrapper\n        .find(TransferList)\n        .at(0)\n        .find('.c7n-transfer-list-header-selected > span')\n        .at(0)\n        .first()\n        .text()\n        .trim(),\n    ).toEqual('1 items');\n  });\n\n  it('should just check the filtered item when click on check all after search by input', () => {\n    const filterOption = (inputValue, option) => option.description.indexOf(inputValue) > -1;\n    const renderFunc = item => item.title;\n    const handleSelectChange = jest.fn();\n    const wrapper = mount(\n      <Transfer\n        {...searchTransferProps}\n        showSearch\n        filterOption={filterOption}\n        render={renderFunc}\n        onSelectChange={handleSelectChange}\n      />,\n    );\n    wrapper\n      .find(TransferSearch)\n      .at(0)\n      .find('input')\n      .simulate('change', { target: { value: 'content2' } });\n    wrapper\n      .find(TransferList)\n      .at(0)\n      .find('.c7n-transfer-list-header input[type=\"checkbox\"]')\n      .filterWhere(n => !n.prop('checked'))\n      .simulate('change');\n    expect(handleSelectChange).toHaveBeenCalledWith(['1'], []);\n  });\n\n  it('should transfer just the filtered item after search by input', () => {\n    const filterOption = (inputValue, option) => option.description.indexOf(inputValue) > -1;\n    const renderFunc = item => item.title;\n    const handleChange = jest.fn();\n    const handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\n      wrapper.setProps({\n        selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys],\n      });\n    };\n    const wrapper = mount(\n      <Transfer\n        {...searchTransferProps}\n        showSearch\n        filterOption={filterOption}\n        render={renderFunc}\n        onSelectChange={handleSelectChange}\n        onChange={handleChange}\n      />,\n    );\n    wrapper\n      .find(TransferSearch)\n      .at(0)\n      .find('input')\n      .simulate('change', { target: { value: 'content2' } });\n    wrapper\n      .find(TransferList)\n      .at(0)\n      .find('.c7n-transfer-list-header input[type=\"checkbox\"]')\n      .filterWhere(n => !n.prop('checked'))\n      .simulate('change');\n    wrapper\n      .find(TransferOperation)\n      .find(Button)\n      .at(1)\n      .simulate('click');\n    expect(handleChange).toHaveBeenCalledWith(['1', '3', '4'], 'right', ['1']);\n  });\n\n  it('should check correctly when there is a search text', () => {\n    const newProps = { ...listCommonProps };\n    delete newProps.targetKeys;\n    delete newProps.selectedKeys;\n    const handleSelectChange = jest.fn();\n    const wrapper = mount(\n      <Transfer\n        {...newProps}\n        showSearch\n        onSelectChange={handleSelectChange}\n        render={item => item.title}\n      />,\n    );\n    wrapper\n      .find(TransferItem)\n      .filterWhere(n => n.prop('item').key === 'b')\n      .simulate('click');\n    expect(handleSelectChange).toHaveBeenLastCalledWith(['b'], []);\n    wrapper\n      .find(TransferSearch)\n      .at(0)\n      .find('input')\n      .simulate('change', { target: { value: 'a' } });\n    wrapper\n      .find(TransferList)\n      .at(0)\n      .find('.c7n-transfer-list-header input[type=\"checkbox\"]')\n      .simulate('change');\n    expect(handleSelectChange).toHaveBeenLastCalledWith(['b', 'a'], []);\n    wrapper\n      .find(TransferList)\n      .at(0)\n      .find('.c7n-transfer-list-header input[type=\"checkbox\"]')\n      .simulate('change');\n    expect(handleSelectChange).toHaveBeenLastCalledWith(['b'], []);\n  });\n\n  it('should show sorted targetkey', () => {\n    const sortedTargetKeyProps = {\n      dataSource: [\n        {\n          key: 'a',\n          title: 'a',\n        },\n        {\n          key: 'b',\n          title: 'b',\n        },\n        {\n          key: 'c',\n          title: 'c',\n        },\n      ],\n      targetKeys: ['c', 'b'],\n      lazy: false,\n    };\n    const wrapper = render(<Transfer {...sortedTargetKeyProps} render={item => item.title} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n});\n"]}