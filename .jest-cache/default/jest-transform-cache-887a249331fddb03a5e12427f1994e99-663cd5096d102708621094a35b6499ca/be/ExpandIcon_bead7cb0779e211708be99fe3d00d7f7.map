{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/ExpandIcon.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQqB,U;;;;;;;;;;;;;;0CAOG,S,EAAS;AAC7B,aAAO,CAAC,yBAAa,SAAb,EAAwB,KAAK,KAA7B,CAAR;AACD;;;gCAGW,C,EAAC;AACX,MAAA,CAAC,CAAC,eAAF;AADW,UAEH,QAFG,GAEU,KAAK,KAFf,CAEH,QAFG;AAGX,MAAA,QAAQ,CAAC,CAAD,CAAR;AACD;;;6BAEK;AAAA;;AAAA,wBACwC,KAAK,KAD7C;AAAA,UACI,SADJ,eACI,SADJ;AAAA,UACe,QADf,eACe,QADf;AAAA,UACyB,UADzB,eACyB,UADzB;AAEJ,UAAM,aAAa,aAAM,SAAN,iBAAnB;AACA,UAAM,WAAW,GAAG,4BAAW,aAAX,6EACd,aADc,gBACa,QADb,2DAEd,aAFc,cAEW,CAAC,UAFZ,gBAApB;AAIA,aACE,kBAAA,aAAA,CAAC,gBAAD,EAAK;AACH,QAAA,IAAI,EAAC,sBADF;AAEH,QAAA,SAAS,EAAE,WAFR;AAGH,QAAA,OAAO,EAAE,UAAU,GAAG,KAAK,WAAR,GAAsB,SAHtC;AAIH,QAAA,QAAQ,EAAE,UAAU,GAAG,CAAH,GAAO,CAAC;AAJzB,OAAL,CADF;AAQD;;;EAjCqC,gB;;;AAC/B,UAAA,CAAA,SAAA,GAAY;AACjB,EAAA,UAAU,EAAE,sBAAU,IADL;AAEjB,EAAA,QAAQ,EAAE,sBAAU,IAFH;AAGjB,EAAA,QAAQ,EAAE,sBAAU,IAAV,CAAe;AAHR,CAAZ;AAWP,uBAAA,CADC,oBACD,CAAA,E,oBAAA,E,aAAA,EAIC,IAJD","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowequal from 'lodash/isEqual';\nimport Icon from '../icon';\nimport { ElementProps } from '../core/ViewComponent';\nimport autobind from '../_util/autobind';\n\nexport interface ExpandIconProps extends ElementProps {\n  expandable?: boolean;\n  expanded?: boolean;\n  onChange: (e) => void;\n}\n\nexport default class ExpandIcon extends Component<ExpandIconProps> {\n  static propTypes = {\n    expandable: PropTypes.bool,\n    expanded: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return !shallowequal(nextProps, this.props);\n  }\n\n  @autobind\n  handleClick(e) {\n    e.stopPropagation();\n    const { onChange } = this.props;\n    onChange(e);\n  }\n\n  render() {\n    const { prefixCls, expanded, expandable } = this.props;\n    const iconPrefixCls = `${prefixCls}-expand-icon`;\n    const classString = classNames(iconPrefixCls, {\n      [`${iconPrefixCls}-expanded`]: expanded,\n      [`${iconPrefixCls}-spaced`]: !expandable,\n    });\n    return (\n      <Icon\n        type=\"baseline-arrow_right\"\n        className={classString}\n        onClick={expandable ? this.handleClick : undefined}\n        tabIndex={expandable ? 0 : -1}\n      />\n    );\n  }\n}\n"]}