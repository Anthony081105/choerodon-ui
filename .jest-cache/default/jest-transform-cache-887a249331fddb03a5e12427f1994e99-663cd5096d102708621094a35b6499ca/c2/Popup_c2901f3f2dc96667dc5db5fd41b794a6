2de9b6238351b375cad1d1743f1db707
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _tslib = require("tslib");

var _react = _interopRequireDefault(require("react"));

var _reactDom = require("react-dom");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _omit = _interopRequireDefault(require("lodash/omit"));

var _isEqual = _interopRequireDefault(require("lodash/isEqual"));

var _noop = _interopRequireDefault(require("lodash/noop"));

var _isElement = _interopRequireDefault(require("lodash/isElement"));

var _align = _interopRequireDefault(require("choerodon-ui/lib/align"));

var _configure = require("choerodon-ui/lib/configure");

var _animate = _interopRequireDefault(require("../animate"));

var _ViewComponent2 = _interopRequireDefault(require("../core/ViewComponent"));

var _PopupInner = _interopRequireDefault(require("./PopupInner"));

var _autobind = _interopRequireDefault(require("../_util/autobind"));

var popupContainer;

function getContainer(getPopupContainer, getRootDomNode) {
  if (!popupContainer && typeof window !== 'undefined') {
    var doc = window.document;
    popupContainer = doc.createElement('div');
    popupContainer.className = (0, _configure.getProPrefixCls)('popup-container');
    var mountNode = getPopupContainer ? getPopupContainer(getRootDomNode) : doc.body;

    if ((0, _isElement["default"])(mountNode)) {
      mountNode.appendChild(popupContainer);
    } else {
      doc.body.appendChild(popupContainer);
    }
  }

  return popupContainer;
}
/**
 * 记录ID生成器
 */


var PopupKeyGen =
/*#__PURE__*/
_regenerator["default"].mark(function _callee(start) {
  return _regenerator["default"].wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!true) {
            _context.next = 5;
            break;
          }

          _context.next = 3;
          return "popup-key-".concat(start++);

        case 3:
          _context.next = 0;
          break;

        case 5:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
})(1);

var Popup =
/*#__PURE__*/
function (_ViewComponent) {
  (0, _inherits2["default"])(Popup, _ViewComponent);

  function Popup() {
    var _this;

    (0, _classCallCheck2["default"])(this, Popup);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Popup).apply(this, arguments));
    _this.contentRendered = false;
    _this.popupKey = PopupKeyGen.next().value;

    _this.saveRef = function (align) {
      return _this.align = align;
    };

    return _this;
  }

  (0, _createClass2["default"])(Popup, [{
    key: "getOtherProps",
    value: function getOtherProps() {
      var otherProps = (0, _omit["default"])((0, _get2["default"])((0, _getPrototypeOf2["default"])(Popup.prototype), "getOtherProps", this).call(this), ['align', 'transitionName', 'getRootDomNode', 'getPopupContainer', 'getClassNameFromAlign', 'getStyleFromAlign', 'onAlign', 'onAnimateAppear', 'onAnimateEnter', 'onAnimateLeave', 'onAnimateEnd']);
      return otherProps;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          hidden = _this$props.hidden,
          align = _this$props.align,
          transitionName = _this$props.transitionName,
          getRootDomNode = _this$props.getRootDomNode,
          getPopupContainer = _this$props.getPopupContainer,
          children = _this$props.children,
          _this$props$onAnimate = _this$props.onAnimateAppear,
          onAnimateAppear = _this$props$onAnimate === void 0 ? _noop["default"] : _this$props$onAnimate,
          _this$props$onAnimate2 = _this$props.onAnimateEnter,
          onAnimateEnter = _this$props$onAnimate2 === void 0 ? _noop["default"] : _this$props$onAnimate2,
          _this$props$onAnimate3 = _this$props.onAnimateLeave,
          onAnimateLeave = _this$props$onAnimate3 === void 0 ? _noop["default"] : _this$props$onAnimate3,
          _this$props$onAnimate4 = _this$props.onAnimateEnd,
          onAnimateEnd = _this$props$onAnimate4 === void 0 ? _noop["default"] : _this$props$onAnimate4;

      if (!hidden) {
        this.contentRendered = true;
      }

      var container = getContainer(getPopupContainer, getRootDomNode);
      return container && this.contentRendered ? (0, _reactDom.createPortal)(_react["default"].createElement(_animate["default"], {
        component: "",
        exclusive: true,
        transitionAppear: true,
        transitionName: transitionName,
        hiddenProp: "hidden",
        onAppear: onAnimateAppear,
        onEnter: onAnimateEnter,
        onLeave: onAnimateLeave,
        onEnd: onAnimateEnd
      }, _react["default"].createElement(_align["default"], {
        ref: this.saveRef,
        key: "align",
        childrenProps: {
          hidden: 'hidden'
        },
        align: align,
        onAlign: this.onAlign,
        target: getRootDomNode,
        hidden: hidden,
        monitorWindowResize: true
      }, _react["default"].createElement(_PopupInner["default"], (0, _extends2["default"])({}, (0, _omit["default"])(this.getMergedProps(), ['ref'])), children))), container, this.popupKey) : null;
    }
  }, {
    key: "onAlign",
    value: function onAlign(source, align, target) {
      var _this$props2 = this.props,
          _this$props2$getClass = _this$props2.getClassNameFromAlign,
          getClassNameFromAlign = _this$props2$getClass === void 0 ? _noop["default"] : _this$props2$getClass,
          _this$props2$getStyle = _this$props2.getStyleFromAlign,
          getStyleFromAlign = _this$props2$getStyle === void 0 ? _noop["default"] : _this$props2$getStyle,
          _this$props2$onAlign = _this$props2.onAlign,
          onAlign = _this$props2$onAlign === void 0 ? _noop["default"] : _this$props2$onAlign;
      var currentAlignClassName = getClassNameFromAlign(align);

      if (this.currentAlignClassName !== currentAlignClassName) {
        this.currentAlignClassName = currentAlignClassName;
        source.className = this.getMergedClassNames(currentAlignClassName);
      }

      var currentAlignStyle = getStyleFromAlign(target, align);

      if (!(0, _isEqual["default"])(this.currentAlignStyle, currentAlignStyle)) {
        this.currentAlignStyle = currentAlignStyle;
        (0, _extends2["default"])(source.style, currentAlignStyle);
      }

      onAlign(source, align, target);
    }
  }, {
    key: "forceAlign",
    value: function forceAlign() {
      if (this.align) {
        this.align.forceAlign();
      }
    }
  }]);
  return Popup;
}(_ViewComponent2["default"]);

exports["default"] = Popup;
Popup.displayName = 'Popup';
Popup.propTypes = (0, _objectSpread2["default"])({
  align: _propTypes["default"].object,
  onAlign: _propTypes["default"].func,
  getRootDomNode: _propTypes["default"].func,
  getPopupContainer: _propTypes["default"].func,
  transitionName: _propTypes["default"].string,
  onAnimateAppear: _propTypes["default"].func,
  onAnimateEnter: _propTypes["default"].func,
  onAnimateLeave: _propTypes["default"].func,
  onAnimateEnd: _propTypes["default"].func,
  getStyleFromAlign: _propTypes["default"].func,
  getClassNameFromAlign: _propTypes["default"].func
}, _ViewComponent2["default"].propTypes);
Popup.defaultProps = {
  suffixCls: 'popup',
  transitionName: 'zoom'
};
(0, _tslib.__decorate)([_autobind["default"]], Popup.prototype, "onAlign", null);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,