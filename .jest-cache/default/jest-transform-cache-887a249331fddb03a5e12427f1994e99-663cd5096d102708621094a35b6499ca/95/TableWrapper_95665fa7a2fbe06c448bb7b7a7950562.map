{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/TableWrapper.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { action, computed, get, set } from 'mobx';\nimport classNames from 'classnames';\nimport isNil from 'lodash/isNil';\nimport measureScrollbar from 'choerodon-ui/lib/_util/measureScrollbar';\nimport { pxToRem } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport TableContext from './TableContext';\nimport { ElementProps } from '../core/ViewComponent';\nimport { ColumnProps, minColumnWidth } from './Column';\nimport { ColumnLock } from './enum';\nimport TableEditor from './TableEditor';\nimport TableCol from './TableCol';\nimport { getColumnKey } from './utils';\nimport autobind from '../_util/autobind';\n\nexport interface TableWrapperProps extends ElementProps {\n  lock?: ColumnLock | boolean;\n  hasBody?: boolean;\n  hasHeader?: boolean;\n  hasFooter?: boolean;\n}\n\n@observer\nexport default class TableWrapper extends Component<TableWrapperProps, any> {\n  static contextType = TableContext;\n\n  static propTypes = {\n    lock: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf([ColumnLock.right, ColumnLock.left]),\n    ]),\n    hasBody: PropTypes.bool,\n    hasHeader: PropTypes.bool,\n    hasFooter: PropTypes.bool,\n  };\n\n  tableWrapper: HTMLTableElement | null;\n\n  @computed\n  get leafColumnsWidth(): number | undefined {\n    const { tableStore } = this.context;\n    const { lock } = this.props;\n    switch (lock) {\n      case ColumnLock.left:\n      case true:\n        return tableStore.leftLeafColumnsWidth;\n      case ColumnLock.right:\n        return tableStore.rightLeafColumnsWidth;\n      default:\n        if (tableStore.overflowX) {\n          return tableStore.totalLeafColumnsWidth;\n        }\n    }\n    return undefined;\n  }\n\n  @computed\n  get leafEditorColumns(): ColumnProps[] {\n    const { tableStore } = this.context;\n    const { lock } = this.props;\n    switch (lock) {\n      case ColumnLock.left:\n      case true:\n        return tableStore.leftLeafColumns.filter(\n          ({ editor, name, hidden }) => editor && name && !hidden,\n        );\n      case ColumnLock.right:\n        return tableStore.rightLeafColumns.filter(\n          ({ editor, name, hidden }) => editor && name && !hidden,\n        );\n      default:\n        return tableStore.leafColumns.filter(\n          ({ editor, name, hidden, lock: columnLock }) =>\n            editor && name && !hidden && (!columnLock || !tableStore.overflowX),\n        );\n    }\n  }\n\n  @computed\n  get leafColumns(): ColumnProps[] {\n    const { tableStore } = this.context;\n    const { lock } = this.props;\n    switch (lock) {\n      case ColumnLock.left:\n      case true:\n        return tableStore.leftLeafColumns.filter(({ hidden }) => !hidden);\n      case ColumnLock.right:\n        return tableStore.rightLeafColumns.filter(({ hidden }) => !hidden);\n      default:\n        return tableStore.leafColumns.filter(({ hidden }) => !hidden);\n    }\n  }\n\n  @autobind\n  handleResizeEnd() {\n    const { tableStore } = this.context;\n    if (tableStore.rowHeight === 'auto') {\n      this.syncFixedTableRowHeight();\n    }\n  }\n\n  getCol(column, width): ReactNode {\n    if (!column.hidden) {\n      const { prefixCls } = this.props;\n      return (\n        <TableCol\n          key={getColumnKey(column)}\n          prefixCls={prefixCls}\n          width={width}\n          minWidth={minColumnWidth(column)}\n          onResizeEnd={this.handleResizeEnd}\n        />\n      );\n    }\n  }\n\n  getColGroup(): ReactNode {\n    const { lock, hasHeader, hasFooter } = this.props;\n    const {\n      tableStore: { overflowY, overflowX },\n    } = this.context;\n    let hasEmptyWidth = false;\n    const cols = this.leafColumns.map((column, index, array) => {\n      let width = get(column, 'width');\n      if (!overflowX) {\n        if (!hasEmptyWidth && index === array.length - 1) {\n          width = undefined;\n        } else if (isNil(width)) {\n          hasEmptyWidth = true;\n        }\n      }\n      return this.getCol(column, width);\n    });\n    if (overflowY && lock !== ColumnLock.left && (hasHeader || hasFooter)) {\n      cols.push(<col key=\"fixed-column\" style={{ width: pxToRem(measureScrollbar()) }} />);\n    }\n    return <colgroup>{cols}</colgroup>;\n  }\n\n  getEditors() {\n    const { prefixCls } = this.props;\n    return this.leafEditorColumns.map(column => (\n      <TableEditor key={column.name} prefixCls={prefixCls} column={column} />\n    ));\n  }\n\n  @autobind\n  saveRef(node) {\n    this.tableWrapper = node;\n  }\n\n  @computed\n  get tableWidth() {\n    const { lock, hasBody } = this.props;\n    const {\n      tableStore: { overflowY, overflowX },\n    } = this.context;\n    if (overflowX) {\n      let tableWidth = this.leafColumnsWidth;\n      if (tableWidth !== undefined && overflowY && lock !== ColumnLock.left && !hasBody) {\n        tableWidth += measureScrollbar();\n      }\n      return pxToRem(tableWidth);\n    }\n    return '100%';\n  }\n\n  render() {\n    const { children, lock, hasBody, prefixCls } = this.props;\n    const {\n      tableStore: { overflowY, height },\n    } = this.context;\n    const editors = hasBody && this.getEditors();\n    const className = classNames({\n      [`${prefixCls}-last-row-bordered`]: hasBody && !overflowY && height !== undefined,\n    });\n    const table = (\n      <table\n        key=\"table\"\n        ref={lock ? undefined : this.saveRef}\n        className={className}\n        style={{ width: this.tableWidth }}\n      >\n        {this.getColGroup()}\n        {children}\n      </table>\n    );\n\n    return [editors, table];\n  }\n\n  @action\n  syncFixedTableRowHeight() {\n    const { prefixCls, hasFooter, hasBody, hasHeader } = this.props;\n    if (this.tableWrapper) {\n      const { tableStore } = this.context;\n      const {\n        lockColumnsHeadRowsHeight,\n        lockColumnsBodyRowsHeight,\n        lockColumnsFootRowsHeight,\n      } = tableStore;\n      if (hasHeader) {\n        const headRows = Array.from<HTMLTableRowElement>(\n          this.tableWrapper.querySelectorAll('thead tr'),\n        );\n        headRows.forEach((row, index) => set(lockColumnsHeadRowsHeight, index, row.offsetHeight));\n      }\n      if (hasBody) {\n        const bodyRows = Array.from<HTMLTableRowElement>(\n          this.tableWrapper.querySelectorAll(`.${prefixCls}-row`),\n        );\n        bodyRows.forEach(row =>\n          set(lockColumnsBodyRowsHeight, row.dataset.index, row.offsetHeight),\n        );\n      }\n      if (hasFooter) {\n        const footRows = Array.from<HTMLTableRowElement>(\n          this.tableWrapper.querySelectorAll('tfoot tr'),\n        );\n        footRows.forEach((row, index) => set(lockColumnsFootRowsHeight, index, row.offsetHeight));\n      }\n    }\n  }\n}\n"]}