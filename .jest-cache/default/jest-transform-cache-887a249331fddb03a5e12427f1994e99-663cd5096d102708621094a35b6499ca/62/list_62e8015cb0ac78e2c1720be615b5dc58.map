{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/transfer/list.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Component, CSSProperties, isValidElement, ReactNode } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport Checkbox from '../checkbox';\nimport { TransferItem } from './index';\nimport Search from './search';\nimport Item from './item';\nimport triggerEvent from '../_util/triggerEvent';\nimport Animate from '../animate';\nimport PureRenderMixin from '../rc-components/util/PureRenderMixin';\n\nfunction isRenderResultPlainObject(result: any): result is { value; label } {\n  return (\n    result &&\n    !isValidElement(result) &&\n    Object.prototype.toString.call(result) === '[object Object]'\n  );\n}\n\nexport interface TransferListProps {\n  prefixCls: string;\n  titleText: string;\n  dataSource: TransferItem[];\n  filter: string;\n  filterOption?: (filterText: any, item: any) => boolean;\n  style?: CSSProperties;\n  checkedKeys: string[];\n  handleFilter: (e: any) => void;\n  handleSelect: (selectedItem: any, checked: boolean) => void;\n  handleSelectAll: (dataSource: any[], checkAll: boolean) => void;\n  handleClear: () => void;\n  render?: (item: any) => any;\n  showSearch?: boolean;\n  searchPlaceholder: string;\n  notFoundContent: ReactNode;\n  itemUnit: string;\n  itemsUnit: string;\n  body?: (props: any) => any;\n  footer?: (props: any) => any;\n  lazy?: boolean | {};\n  onScroll: Function;\n}\n\nexport default class TransferList extends Component<TransferListProps, any> {\n  static displayName = 'TransferList';\n\n  static defaultProps = {\n    dataSource: [],\n    titleText: '',\n    showSearch: false,\n    render: noop,\n    lazy: {},\n  };\n\n  timer: number;\n\n  triggerScrollTimer: number;\n\n  state = {\n    mounted: false,\n  };\n\n  componentDidMount() {\n    this.timer = window.setTimeout(() => {\n      this.setState({\n        mounted: true,\n      });\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n    clearTimeout(this.triggerScrollTimer);\n  }\n\n  shouldComponentUpdate(...args: any[]) {\n    return PureRenderMixin.shouldComponentUpdate.apply(this, args);\n  }\n\n  getCheckStatus(filteredDataSource: TransferItem[]) {\n    const { checkedKeys } = this.props;\n    if (checkedKeys.length === 0) {\n      return 'none';\n    }\n    if (filteredDataSource.every(item => checkedKeys.indexOf(item.key) >= 0)) {\n      return 'all';\n    }\n    return 'part';\n  }\n\n  handleSelect = (selectedItem: TransferItem) => {\n    const { checkedKeys, handleSelect } = this.props;\n    const result = checkedKeys.some(key => key === selectedItem.key);\n    handleSelect(selectedItem, !result);\n  };\n\n  handleFilter = (e: ChangeEvent<HTMLInputElement>) => {\n    const { handleFilter, prefixCls } = this.props;\n    handleFilter(e);\n    if (!e.target.value) {\n      return;\n    }\n    // Manually trigger scroll event for lazy search bug\n\n    this.triggerScrollTimer = window.setTimeout(() => {\n      const listNode = (findDOMNode(this) as HTMLElement).querySelectorAll(\n        `${prefixCls}-content`,\n      )[0];\n      if (listNode) {\n        triggerEvent(listNode, 'scroll');\n      }\n    }, 0);\n  };\n\n  handleClear = () => {\n    const { handleClear } = this.props;\n    handleClear();\n  };\n\n  matchFilter = (text: string, item: TransferItem) => {\n    const { filter, filterOption } = this.props;\n    if (filterOption) {\n      return filterOption(filter, item);\n    }\n    return text.indexOf(filter) >= 0;\n  };\n\n  renderItem = (item: TransferItem) => {\n    const { render = noop } = this.props;\n    const renderResult = render(item);\n    if (isRenderResultPlainObject(renderResult)) {\n      return {\n        renderedText: renderResult.value,\n        renderedEl: renderResult.label,\n      };\n    }\n    return {\n      renderedText: renderResult,\n      renderedEl: renderResult,\n    };\n  };\n\n  render() {\n    const {\n      prefixCls,\n      dataSource,\n      titleText,\n      checkedKeys,\n      lazy,\n      body = noop,\n      footer = noop,\n      showSearch,\n      style,\n      filter,\n      searchPlaceholder,\n      notFoundContent,\n      itemUnit,\n      itemsUnit,\n      onScroll,\n      handleSelectAll,\n    } = this.props;\n    const { mounted } = this.state;\n\n    // Custom Layout\n    const footerDom = footer({ ...this.props });\n    const bodyDom = body({ ...this.props });\n\n    const listCls = classNames(prefixCls, {\n      [`${prefixCls}-with-footer`]: !!footerDom,\n    });\n\n    const filteredDataSource: TransferItem[] = [];\n    const totalDataSource: TransferItem[] = [];\n\n    const showItems = dataSource.map(item => {\n      const { renderedText, renderedEl } = this.renderItem(item);\n      if (filter && filter.trim() && !this.matchFilter(renderedText, item)) {\n        return null;\n      }\n\n      // all show items\n      totalDataSource.push(item);\n      if (!item.disabled) {\n        // response to checkAll items\n        filteredDataSource.push(item);\n      }\n\n      const checked = checkedKeys.indexOf(item.key) >= 0;\n      return (\n        <Item\n          key={item.key}\n          item={item}\n          lazy={lazy}\n          renderedText={renderedText}\n          renderedEl={renderedEl}\n          checked={checked}\n          prefixCls={prefixCls}\n          onClick={this.handleSelect}\n        />\n      );\n    });\n\n    const unit = dataSource.length > 1 ? itemsUnit : itemUnit;\n\n    const search = showSearch ? (\n      <div className={`${prefixCls}-body-search-wrapper`}>\n        <Search\n          prefixCls={`${prefixCls}-search`}\n          onChange={this.handleFilter}\n          handleClear={this.handleClear}\n          placeholder={searchPlaceholder}\n          value={filter}\n        />\n      </div>\n    ) : null;\n\n    const listBody = bodyDom || (\n      <div\n        className={\n          showSearch ? `${prefixCls}-body ${prefixCls}-body-with-search` : `${prefixCls}-body`\n        }\n      >\n        {search}\n        <Animate\n          component=\"ul\"\n          componentProps={{ onScroll }}\n          className={`${prefixCls}-content`}\n          transitionName={mounted ? `${prefixCls}-content-item-highlight` : ''}\n          transitionLeave={false}\n        >\n          {showItems}\n        </Animate>\n        <div className={`${prefixCls}-body-not-found`}>{notFoundContent}</div>\n      </div>\n    );\n\n    const listFooter = footerDom ? <div className={`${prefixCls}-footer`}>{footerDom}</div> : null;\n\n    const checkStatus = this.getCheckStatus(filteredDataSource);\n    const checkedAll = checkStatus === 'all';\n    const checkAllCheckbox = (\n      <Checkbox\n        checked={checkedAll}\n        indeterminate={checkStatus === 'part'}\n        onChange={() => handleSelectAll(filteredDataSource, checkedAll)}\n      />\n    );\n\n    return (\n      <div className={listCls} style={style}>\n        <div className={`${prefixCls}-header`}>\n          {checkAllCheckbox}\n          <span className={`${prefixCls}-header-selected`}>\n            <span>\n              {(checkedKeys.length > 0 ? `${checkedKeys.length}/` : '') + totalDataSource.length}{' '}\n              {unit}\n            </span>\n            <span className={`${prefixCls}-header-title`}>{titleText}</span>\n          </span>\n        </div>\n        {listBody}\n        {listFooter}\n      </div>\n    );\n  }\n}\n"]}