{"version":3,"sources":["tabs/ScrollableTabBarMixin.jsx"],"names":["getDefaultProps","scrollAnimated","onPrevClick","onNextClick","getInitialState","next","prev","componentDidMount","componentDidUpdate","props","prevProps","nextPrev","componentWillUnmount","setNextPrev","navNode","navNodeWH","containerWH","navWrapNodeWH","offset","minOffset","realOffset","getOffsetWH","tabBarPosition","prop","node","getScrollWH","getOffsetLT","setOffset","checkNextPrev","target","Math","navOffset","navStyle","transformSupported","value","name","setPrev","v","setNext","isNextPrevShown","state","prevTransitionEnd","e","container","currentTarget","scrollToActiveTab","activeTab","navWrap","needToSroll","activeTabWH","wrapOffset","activeTabOffset","navWrapNode","getScrollBarNode","prefixCls","showNextPrev","prevButton","nextButton","navClassName","navClasses"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport { isTransformSupported, setTransform } from './utils';\nimport React from 'react';\nimport addEventListener from '../../_util/addEventListener';\nimport debounce from 'lodash/debounce';\n\nexport default {\n  getDefaultProps() {\n    return {\n      scrollAnimated: true,\n      onPrevClick() {},\n      onNextClick() {},\n    };\n  },\n\n  getInitialState() {\n    this.offset = 0;\n    return {\n      next: false,\n      prev: false,\n    };\n  },\n\n  componentDidMount() {\n    this.componentDidUpdate();\n    this.debouncedResize = debounce(() => {\n      this.setNextPrev();\n      this.scrollToActiveTab();\n    }, 200);\n    this.resizeEvent = addEventListener(window, 'resize', this.debouncedResize);\n  },\n\n  componentDidUpdate(prevProps) {\n    const props = this.props;\n    if (prevProps && prevProps.tabBarPosition !== props.tabBarPosition) {\n      this.setOffset(0);\n      return;\n    }\n    const nextPrev = this.setNextPrev();\n    // wait next, prev show hide\n    /* eslint react/no-did-update-set-state:0 */\n    if (this.isNextPrevShown(this.state) !== this.isNextPrevShown(nextPrev)) {\n      this.setState({}, this.scrollToActiveTab);\n    } else if (!prevProps || props.activeKey !== prevProps.activeKey) {\n      // can not use props.activeKey\n      this.scrollToActiveTab();\n    }\n  },\n\n  componentWillUnmount() {\n    if (this.resizeEvent) {\n      this.resizeEvent.remove();\n    }\n    if (this.debouncedResize && this.debouncedResize.cancel) {\n      this.debouncedResize.cancel();\n    }\n  },\n\n  setNextPrev() {\n    const navNode = this.nav;\n    const navNodeWH = this.getScrollWH(navNode);\n    const containerWH = this.getOffsetWH(this.container);\n    const navWrapNodeWH = this.getOffsetWH(this.navWrap);\n    let { offset } = this;\n    const minOffset = containerWH - navNodeWH;\n    let { next, prev } = this.state;\n    if (minOffset >= 0) {\n      next = false;\n      this.setOffset(0, false);\n      offset = 0;\n    } else if (minOffset < offset) {\n      next = true;\n    } else {\n      next = false;\n      // Test with container offset which is stable\n      // and set the offset of the nav wrap node\n      const realOffset = navWrapNodeWH - navNodeWH;\n      this.setOffset(realOffset, false);\n      offset = realOffset;\n    }\n\n    if (offset < 0) {\n      prev = true;\n    } else {\n      prev = false;\n    }\n\n    this.setNext(next);\n    this.setPrev(prev);\n    return {\n      next,\n      prev,\n    };\n  },\n\n  getOffsetWH(node) {\n    const tabBarPosition = this.props.tabBarPosition;\n    let prop = 'offsetWidth';\n    if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n      prop = 'offsetHeight';\n    }\n    return node[prop];\n  },\n\n  getScrollWH(node) {\n    const tabBarPosition = this.props.tabBarPosition;\n    let prop = 'scrollWidth';\n    if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n      prop = 'scrollHeight';\n    }\n    return node[prop];\n  },\n\n\n  getOffsetLT(node) {\n    const tabBarPosition = this.props.tabBarPosition;\n    let prop = 'left';\n    if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n      prop = 'top';\n    }\n    return node.getBoundingClientRect()[prop];\n  },\n\n  setOffset(offset, checkNextPrev = true) {\n    const target = Math.min(0, offset);\n    if (this.offset !== target) {\n      this.offset = target;\n      let navOffset = {};\n      const tabBarPosition = this.props.tabBarPosition;\n      const navStyle = this.nav.style;\n      const transformSupported = isTransformSupported(navStyle);\n      if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n        if (transformSupported) {\n          navOffset = {\n            value: `translate3d(0,${target}px,0)`,\n          };\n        } else {\n          navOffset = {\n            name: 'top',\n            value: `${target}px`,\n          };\n        }\n      } else {\n        if (transformSupported) {\n          navOffset = {\n            value: `translate3d(${target}px,0,0)`,\n          };\n        } else {\n          navOffset = {\n            name: 'left',\n            value: `${target}px`,\n          };\n        }\n      }\n      if (transformSupported) {\n        setTransform(navStyle, navOffset.value);\n      } else {\n        navStyle[navOffset.name] = navOffset.value;\n      }\n      if (checkNextPrev) {\n        this.setNextPrev();\n      }\n    }\n  },\n\n  setPrev(v) {\n    if (this.state.prev !== v) {\n      this.setState({\n        prev: v,\n      });\n    }\n  },\n\n  setNext(v) {\n    if (this.state.next !== v) {\n      this.setState({\n        next: v,\n      });\n    }\n  },\n\n  isNextPrevShown(state) {\n    if (state) {\n      return state.next || state.prev;\n    }\n    return this.state.next || this.state.prev;\n  },\n\n  prevTransitionEnd(e) {\n    if (e.propertyName !== 'opacity') {\n      return;\n    }\n    const { container } = this;\n    this.scrollToActiveTab({\n      target: container,\n      currentTarget: container,\n    });\n  },\n\n  scrollToActiveTab(e) {\n    const { activeTab, navWrap } = this;\n    if (e && e.target !== e.currentTarget || !activeTab) {\n      return;\n    }\n\n    // when not scrollable or enter scrollable first time, don't emit scrolling\n    const needToSroll = this.isNextPrevShown() && this.lastNextPrevShown;\n    this.lastNextPrevShown = this.isNextPrevShown();\n    if (!needToSroll) {\n      return;\n    }\n\n    const activeTabWH = this.getScrollWH(activeTab);\n    const navWrapNodeWH = this.getOffsetWH(navWrap);\n    let { offset } = this;\n    const wrapOffset = this.getOffsetLT(navWrap);\n    const activeTabOffset = this.getOffsetLT(activeTab);\n    if (wrapOffset > activeTabOffset) {\n      offset += (wrapOffset - activeTabOffset);\n      this.setOffset(offset);\n    } else if ((wrapOffset + navWrapNodeWH) < (activeTabOffset + activeTabWH)) {\n      offset -= (activeTabOffset + activeTabWH) - (wrapOffset + navWrapNodeWH);\n      this.setOffset(offset);\n    }\n  },\n\n  prev(e) {\n    this.props.onPrevClick(e);\n    const navWrapNode = this.navWrap;\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    const { offset } = this;\n    this.setOffset(offset + navWrapNodeWH);\n  },\n\n  next(e) {\n    this.props.onNextClick(e);\n    const navWrapNode = this.navWrap;\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    const { offset } = this;\n    this.setOffset(offset - navWrapNodeWH);\n  },\n\n  getScrollBarNode(content) {\n    const { next, prev } = this.state;\n    const { prefixCls, scrollAnimated } = this.props;\n    const showNextPrev = prev || next;\n\n    const prevButton = (\n      <span\n        onClick={prev ? this.prev : null}\n        unselectable=\"unselectable\"\n        className={classnames({\n          [`${prefixCls}-tab-prev`]: 1,\n          [`${prefixCls}-tab-btn-disabled`]: !prev,\n          [`${prefixCls}-tab-arrow-show`]: showNextPrev,\n        })}\n        onTransitionEnd={this.prevTransitionEnd}\n      >\n        <span className={`${prefixCls}-tab-prev-icon`} />\n      </span>\n    );\n\n    const nextButton = (\n      <span\n        onClick={next ? this.next : null}\n        unselectable=\"unselectable\"\n        className={classnames({\n          [`${prefixCls}-tab-next`]: 1,\n          [`${prefixCls}-tab-btn-disabled`]: !next,\n          [`${prefixCls}-tab-arrow-show`]: showNextPrev,\n        })}\n      >\n        <span className={`${prefixCls}-tab-next-icon`} />\n      </span>\n    );\n\n    const navClassName = `${prefixCls}-nav`;\n    const navClasses = classnames({\n      [navClassName]: true,\n      [\n        scrollAnimated ?\n          `${navClassName}-animated` :\n          `${navClassName}-no-animated`\n        ]: true,\n    });\n\n    return (\n      <div\n        className={classnames({\n          [`${prefixCls}-nav-container`]: 1,\n          [`${prefixCls}-nav-container-scrolling`]: showNextPrev,\n        })}\n        key=\"container\"\n        ref={this.saveRef('container')}\n      >\n        {prevButton}\n        {nextButton}\n        <div className={`${prefixCls}-nav-wrap`} ref={this.saveRef('navWrap')}>\n          <div className={`${prefixCls}-nav-scroll`}>\n            <div className={navClasses} ref={this.saveRef('nav')}>\n              {content}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n"]}