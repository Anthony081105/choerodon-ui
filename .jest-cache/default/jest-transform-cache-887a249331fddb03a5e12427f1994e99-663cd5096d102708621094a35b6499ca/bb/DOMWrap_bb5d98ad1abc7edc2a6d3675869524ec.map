{"version":3,"sources":["menu/DOMWrap.jsx"],"names":["canUseDOM","window","MENUITEM_OVERFLOWED_CLASSNAME","require","DOMWrap","Component","className","PropTypes","children","mode","prefixCls","level","theme","overflowedIndicator","hidden","hiddenClassName","tag","style","object","lastVisibleIndex","undefined","menuUl","ReactDOM","ResizeObserver","entries","attributes","childList","subTree","ul","node","propStyle","copy","throwAway","title","eventKey","rest","key","overflowedItems","renderPlaceholder","display","visibility","position","popupClassName","props","menuAllProps","ulChildrenNodes","lastOverflowedIndicatorPlaceholder","menuItemNodes","c","acc","width","currentSumWidth","item","overflowed","childNode","index","ret","Tag"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,IAAMA,SAAS,GAAG,CAAC,EACjB,OAAA,MAAA,KAAA,WAAA,IACAC,MAAM,CADN,QAAA,IAEAA,MAAM,CAANA,QAAAA,CAHF,aAAmB,CAAnB;AAMA,IAAMC,6BAA6B,GAAnC,qBAAA,C,CAEA;;AACA,IAAA,SAAA,EAAe;AACbC,EAAAA,OAAO,CAAPA,uBAAO,CAAPA;AACD;;IAEoBC,O;;;;;;;;;;;;;;;;;8FAoBX;AACNe,MAAAA,gBAAgB,EAAEC;AADZ,K;yGAoDW,YAAM;AAAA,UACfV,SADe,GACD,KAAA,CADC,KACD,CADC,SAAA;;AAEvB,UAAMkB,EAAE,GAAGN,SAAAA,CAAAA,SAAAA,CAAAA,CAAAA,WAAAA,CAAAA,CAAAA,GAAAA,uBAAAA,CAAAA,SAAAA,CAAAA,EAAX,KAAWA,CAAAA,CAAX;;AACA,UAAI,CAAJ,EAAA,EAAS;AACP,eAAA,EAAA;AAJqB,OAAA,CAOvB;;;AACA,aAAO,GAAA,KAAA,CAAA,IAAA,CAAcM,EAAE,CAAhB,QAAA,EAAA,MAAA,CAAkC,UAAA,IAAA,EAAQ;AAC/C,eAAOC,IAAI,CAAJA,SAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAAA,OAAAA,CAAAA,GAAAA,MAAAA,CAAAA,SAAAA,EAAAA,qBAAAA,CAAAA,IAAP,CAAA;AADF,OAAO,CAAP;;iHAKyB,UAAA,SAAA,EAAA,eAAA,EAAA,iBAAA,EAAmD;AAAA,UAAA,WAAA,GACK,KAAA,CADL,KAAA;AAAA,UACpEhB,mBADoE,GAAA,WAAA,CAAA,mBAAA;AAAA,UAC/CF,KAD+C,GAAA,WAAA,CAAA,KAAA;AAAA,UACxCF,IADwC,GAAA,WAAA,CAAA,IAAA;AAAA,UAClCC,SADkC,GAAA,WAAA,CAAA,SAAA;AAAA,UACvBE,KADuB,GAAA,WAAA,CAAA,KAAA;AAAA,UACTkB,SADS,GAAA,WAAA,CAAA,KAAA;;AAE5E,UAAInB,KAAK,KAALA,CAAAA,IAAeF,IAAI,KAAvB,YAAA,EAA0C;AACxC,eAAA,IAAA;AAH0E,OAAA,CAK5E;AACA;;;AACA,UAAMsB,IAAI,GAAG,KAAA,CAAA,KAAA,CAAA,QAAA,CAAb,CAAa,CAAb;AAP4E,UAAA,WAAA,GAQlBA,IAAI,CARc,KAAA;AAAA,UAQ1DC,SAR0D,GAAA,WAAA,CAAA,QAAA;AAAA,UAQ/CC,KAR+C,GAAA,WAAA,CAAA,KAAA;AAAA,UAQxCC,QARwC,GAAA,WAAA,CAAA,QAAA;AAAA,UAQ3BC,IAR2B,GAAA,CAAA,GAAA,yBAAA,CAAA,SAAA,CAAA,EAAA,WAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,UAAA,CAAA,CAAA;AAU5E,UAAIlB,KAAK,GAAA,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAT,SAAS,CAAT;AACA,UAAImB,GAAG,GAAA,GAAA,MAAA,CAAA,SAAA,EAAP,uBAAO,CAAP;;AAEA,UAAIC,eAAe,CAAfA,MAAAA,KAAAA,CAAAA,IAAgCC,iBAAiB,KAArD,IAAA,EAAgE;AAC9DrB,QAAAA,KAAK,GAAA,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,KAAA,EAAA;AAEHsB,UAAAA,OAAO,EAAE;AAFN,SAAA,CAALtB;AADF,OAAA,MAKO,IAAA,iBAAA,EAAuB;AAC5BA,QAAAA,KAAK,GAAA,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,KAAA,EAAA;AAEHuB,UAAAA,UAAU,EAFP,QAAA;AAGH;AACAC,UAAAA,QAAQ,EAAE;AAJP,SAAA,CAALxB;AAMAmB,QAAAA,GAAG,GAAA,GAAA,MAAA,CAAA,GAAA,EAAHA,cAAG,CAAHA;AACD;;AAED,UAAMM,cAAc,GAAG9B,KAAK,GAAA,GAAA,MAAA,CAAA,SAAA,EAAA,GAAA,EAAA,MAAA,CAAA,KAAA,CAAA,GAA5B,EAAA;AACA,UAAM+B,KAAK,GAAX,EAAA;;AACAC,MAAAA,KAAAA,CAAAA,YAAAA,CAAAA,OAAAA,CAAqB,UAAA,CAAA,EAAK;AACxB,YAAIT,IAAI,CAAJA,CAAI,CAAJA,KAAJ,SAAA,EAA2B;AACzBQ,UAAAA,KAAK,CAALA,CAAK,CAALA,GAAWR,IAAI,CAAfQ,CAAe,CAAfA;AACD;AAHHC,OAAAA;;AAMA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,QAAA,CAAD,SAAC,CAAD,EAAA,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,EAAA;AACE,QAAA,KAAK,EADP,mBAAA;AAEE,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAFX,qBAEW,CAFX;AAGE,QAAA,cAAc,EAAEF;AAHlB,OAAA,EAAA,KAAA,EAAA;AAKE,QAAA,GAAG,EALL,GAAA;AAME,QAAA,QAAQ,EAAA,GAAA,MAAA,CAAA,SAAA,EANV,uBAMU,CANV;AAOE,QAAA,QAAQ,EAPV,KAAA;AAQE,QAAA,KAAK,EAAEzB;AART,OAAA,CAAA,EADF,eACE,CADF;;kHAiB0B,YAAM;AAChC,UAAI,KAAA,CAAA,KAAA,CAAA,IAAA,KAAJ,YAAA,EAAsC;AACpC;AACD;;AACD,UAAMW,EAAE,GAAGN,SAAAA,CAAAA,SAAAA,CAAAA,CAAAA,WAAAA,CAAAA,CAAAA,GAAAA,uBAAAA,CAAAA,SAAAA,CAAAA,EAAX,KAAWA,CAAAA,CAAX;;AAEA,UAAI,CAAJ,EAAA,EAAS;AACP;AACD;;AAED,UAAMuB,eAAe,GAAGjB,EAAE,CAA1B,QAAA;;AAEA,UAAI,CAAA,eAAA,IAAoBiB,eAAe,CAAfA,MAAAA,KAAxB,CAAA,EAAsD;AACpD;AACD;;AAED,UAAMC,kCAAkC,GAAGlB,EAAE,CAAFA,QAAAA,CAAYiB,eAAe,CAAfA,MAAAA,GAhBvB,CAgBWjB,CAA3C,CAhBgC,CAkBhC;;AACA,OAAA,GAAA,KAAA,CAAA,QAAA,EAAA,kCAAA,EAAA,SAAA,EAAA,cAAA;;AAEA,UAAMmB,aAAa,GAAG,KAAA,CArBU,gBAqBV,EAAtB,CArBgC,CAuBhC;AACA;;;AAEA,UAAMV,eAAe,GAAG,aAAa,CAAb,MAAA,CACtB,UAAA,CAAA,EAAC;AAAA,eAAIW,CAAC,CAADA,SAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAAA,OAAAA,CAAAA,6BAAAA,KAAJ,CAAA;AADH,OAAwB,CAAxB;AAIAX,MAAAA,eAAe,CAAfA,OAAAA,CAAwB,UAAA,CAAA,EAAK;AAC3B,SAAA,GAAA,KAAA,CAAA,QAAA,EAAA,CAAA,EAAA,SAAA,EAAA,cAAA;AADFA,OAAAA;AAIA,MAAA,KAAA,CAAA,aAAA,GAAqB,aAAa,CAAb,GAAA,CAAkB,UAAA,CAAA,EAAC;AAAA,eAAI,CAAA,GAAA,KAAA,CAAA,QAAA,EAAJ,CAAI,CAAJ;AAAxC,OAAqB,CAArB;AAEAA,MAAAA,eAAe,CAAfA,OAAAA,CAAwB,UAAA,CAAA,EAAK;AAC3B,SAAA,GAAA,KAAA,CAAA,QAAA,EAAA,CAAA,EAAA,SAAA,EAAA,MAAA;AADFA,OAAAA;AAGA,MAAA,KAAA,CAAA,wBAAA,GAAgC,CAAA,GAAA,KAAA,CAAA,QAAA,EAAST,EAAE,CAAFA,QAAAA,CAAYA,EAAE,CAAFA,QAAAA,CAAAA,MAAAA,GAArD,CAAyCA,CAAT,CAAhC;AACA,MAAA,KAAA,CAAA,kBAAA,GAA0B,KAAA,CAAA,aAAA,CAAA,MAAA,CAA0B,UAAA,GAAA,EAAA,GAAA,EAAA;AAAA,eAAcqB,GAAG,GAAjB,GAAA;AAA1B,OAAA,EAA1B,CAA0B,CAA1B;;AACA,MAAA,KAAA,CAzCgC,YAyChC,GAzCgC,CA0ChC;;;AACA,OAAA,GAAA,KAAA,CAAA,QAAA,EAAA,kCAAA,EAAA,SAAA,EAAA,MAAA;;uGAGe,I;yGACE,I;2GAGE,C;wGAGH,E;sGAGF,E;qGAED,YAAM;AACnB,UAAI,KAAA,CAAA,KAAA,CAAA,IAAA,KAAJ,YAAA,EAAsC;AACpC;AACD;;AAED,UAAMrB,EAAE,GAAGN,SAAAA,CAAAA,SAAAA,CAAAA,CAAAA,WAAAA,CAAAA,CAAAA,GAAAA,uBAAAA,CAAAA,SAAAA,CAAAA,EAAX,KAAWA,CAAAA,CAAX;;AACA,UAAI,CAAJ,EAAA,EAAS;AACP;AACD;;AACD,UAAM4B,KAAK,GAAG,CAAA,GAAA,KAAA,CAAA,QAAA,EAAd,EAAc,CAAd;AAEA,MAAA,KAAA,CAAA,eAAA,GAAA,EAAA;AACA,UAAIC,eAAe,GAZA,CAYnB,CAZmB,CAcnB;;AACA,UAAIhC,gBAAgB,GAApB,SAAA;;AAEA,UAAI,KAAA,CAAA,kBAAA,GAAJ,KAAA,EAAqC;AACnCA,QAAAA,gBAAgB,GAAG,CAAnBA,CAAAA;;AAEA,QAAA,KAAA,CAAA,aAAA,CAAA,OAAA,CAA2B,UAAA,OAAA,EAAW;AACpCgC,UAAAA,eAAe,IAAfA,OAAAA;;AACA,cAAIA,eAAe,GAAG,KAAA,CAAlBA,wBAAAA,IAAJ,KAAA,EAA8D;AAC5DhC,YAAAA,gBAAgB;AACjB;AAJH,SAAA;AAMD;;AAED,MAAA,KAAA,CAAA,QAAA,CAAc;AAAEA,QAAAA,gBAAgB,EAAhBA;AAAF,OAAd;;;;;;;wCAxMkB;AAAA,UAAA,MAAA,GAAA,IAAA;;AAClB,WAAA,yBAAA;;AACA,UAAI,KAAA,KAAA,CAAA,KAAA,KAAA,CAAA,IAA0B,KAAA,KAAA,CAAA,IAAA,KAA9B,YAAA,EAAgE;AAC9D,YAAME,MAAM,GAAGC,SAAAA,CAAAA,SAAAA,CAAAA,CAAAA,WAAAA,CAAf,IAAeA,CAAf;;AACA,YAAI,CAAJ,MAAA,EAAa;AACX;AACD;;AACD,aAAA,cAAA,GAAsB,IAAIC,uBAAAA,CAAJ,SAAIA,CAAJ,CAAmB,UAAA,OAAA,EAAW;AAClDC,UAAAA,OAAO,CAAPA,OAAAA,CAAgB,MAAI,CAApBA,yBAAAA;AADF,SAAsB,CAAtB;AAIA,WAAA,KAAA,CAAA,IAAA,CACQH,MAAM,CADd,QAAA,EAAA,MAAA,CAAA,MAAA,EAAA,OAAA,CAGW,UAAA,EAAA,EAAM;AACb,UAAA,MAAI,CAAJ,cAAA,CAAA,OAAA,CAAA,EAAA;AAJJ,SAAA;;AAOA,YAAI,OAAA,gBAAA,KAAJ,WAAA,EAA6C;AAC3C,eAAA,gBAAA,GAAwB,IAAA,gBAAA,CAAqB,YAAM;AACjD,YAAA,MAAI,CAAJ,cAAA,CAAA,UAAA;;AACA,eAAA,KAAA,CAAA,IAAA,CACQA,MAAM,CADd,QAAA,EAAA,MAAA,CAAA,MAAA,EAAA,OAAA,CAGW,UAAA,EAAA,EAAM;AACb,cAAA,MAAI,CAAJ,cAAA,CAAA,OAAA,CAAA,EAAA;AAJJ,aAAA;;AAMA,YAAA,MAAI,CAAJ,yBAAA;AARF,WAAwB,CAAxB;AAUA,eAAA,gBAAA,CAAA,OAAA,CAAA,MAAA,EAAsC;AACpCI,YAAAA,UAAU,EAD0B,KAAA;AAEpCC,YAAAA,SAAS,EAF2B,IAAA;AAGpCC,YAAAA,OAAO,EAAE;AAH2B,WAAtC;AAKD;AACF;AACF;;;2CAEsB;AACrB,UAAI,KAAJ,cAAA,EAAyB;AACvB,aAAA,cAAA,CAAA,UAAA;AACD;;AACD,UAAI,KAAJ,gBAAA,EAA2B;AACzB,aAAA,cAAA,CAAA,UAAA;AACD;MAGH;;;;mCA4JenB,Q,EAAU;AAAA,UAAA,MAAA,GAAA,IAAA,CAAA,CACvB;;;AADuB,UAEfW,gBAFe,GAEM,KAFN,KAEM,CAFN,gBAAA;AAGvB,aAAO,CAACX,QAAQ,IAAT,EAAA,EAAA,MAAA,CAAwB,UAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAA2B;AACxD,YAAI4C,IAAI,GAAR,SAAA;;AACA,YAAI,MAAI,CAAJ,KAAA,CAAA,IAAA,KAAJ,YAAA,EAAsC;AACpC,cAAIC,UAAU,GAAG,MAAI,CAAJ,wBAAA,CAA8BC,SAAS,CAATA,KAAAA,CAA9B,QAAA,EAAjB,EAAiB,CAAjB;;AACA,cACEnC,gBAAgB,KAAhBA,SAAAA,IACA,MAAI,CAAJ,KAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAgC,MAAI,CAAJ,KAAA,CAAhC,SAAA,EAAA,OAAA,CAAA,MAAiE,CAFnE,CAAA,EAGE;AACA,gBAAIoC,KAAK,GAAT,gBAAA,EAA8B;AAC5BH,cAAAA,IAAI,GAAG,CAAA,GAAA,MAAA,CAAA,YAAA,EAAA,SAAA,EAEL;AACA;AACEnC,gBAAAA,KAAK,EAAE;AAAEsB,kBAAAA,OAAO,EAAE;AAAX,iBADT;AAEEL,gBAAAA,QAAQ,EAAA,GAAA,MAAA,CAAKoB,SAAS,CAATA,KAAAA,CAAL,QAAA,EAFV,SAEU,CAFV;AAGEhD,gBAAAA,SAAS,EAAA,GAAA,MAAA,CAAKgD,SAAS,CAAd,SAAA,EAAA,GAAA,EAAA,MAAA,CAAA,6BAAA;AAHX,eAHK,CAAPF;AASD;;AACD,gBAAIG,KAAK,KAAKpC,gBAAgB,GAA9B,CAAA,EAAoC;AAClC,cAAA,MAAI,CAAJ,eAAA,GAAuB,QAAQ,CAAR,KAAA,CAAeA,gBAAgB,GAA/B,CAAA,EAAA,GAAA,CAAyC,UAAA,CAAA,EAAK;AACnE,uBAAO,CAAA,GAAA,MAAA,CAAA,YAAA,EAAA,CAAA,EAEL;AACA;AACA;AAAEiB,kBAAAA,GAAG,EAAEY,CAAC,CAADA,KAAAA,CAAP,QAAA;AAAyBvC,kBAAAA,IAAI,EAAE;AAA/B,iBAJK,CAAP;AADF,eAAuB,CAAvB;AASA4C,cAAAA,UAAU,GAAG,MAAI,CAAJ,wBAAA,CACXC,SAAS,CAATA,KAAAA,CADW,QAAA,EAEX,MAAI,CAFND,eAAa,CAAbA;AAID;AACF;;AAED,cAAMG,GAAG,GAAA,GAAA,MAAA,CAAA,CAAA,GAAA,mBAAA,CAAA,SAAA,CAAA,EAAA,GAAA,CAAA,EAAA,CAAA,UAAA,EAAT,IAAS,CAAA,CAAT;;AAEA,cAAID,KAAK,KAAK/C,QAAQ,CAARA,MAAAA,GAAd,CAAA,EAAmC;AACjC;AACAgD,YAAAA,GAAG,CAAHA,IAAAA,CAAS,MAAI,CAAJ,wBAAA,CAA8BF,SAAS,CAATA,KAAAA,CAA9B,QAAA,EAAA,EAAA,EAATE,IAAS,CAATA;AACD;;AACD,iBAAA,GAAA;AACD;;AACD,eAAA,GAAA,MAAA,CAAA,CAAA,GAAA,mBAAA,CAAA,SAAA,CAAA,EAAA,GAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA;AA5CK,OAAA,EAAP,EAAO,CAAP;AA8CD;;;6BAEQ;AAAA,UAAA,YAAA,GAYH,KAZG,KAAA;AAAA,UAELzC,eAFK,GAAA,YAAA,CAAA,eAAA;AAAA,UAGLD,MAHK,GAAA,YAAA,CAAA,MAAA;AAAA,UAILJ,SAJK,GAAA,YAAA,CAAA,SAAA;AAAA,UAKLG,mBALK,GAAA,YAAA,CAAA,mBAAA;AAAA,UAMLJ,IANK,GAAA,YAAA,CAAA,IAAA;AAAA,UAOLE,KAPK,GAAA,YAAA,CAAA,KAAA;AAAA,UAQA8C,GARA,GAAA,YAAA,CAAA,GAAA;AAAA,UASLjD,QATK,GAAA,YAAA,CAAA,QAAA;AAAA,UAULI,KAVK,GAAA,YAAA,CAAA,KAAA;AAAA,UAWFuB,IAXE,GAAA,CAAA,GAAA,yBAAA,CAAA,SAAA,CAAA,EAAA,YAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,UAAA,EAAA,OAAA,CAAA,CAAA;;AAcP,UAAA,MAAA,EAAY;AACVA,QAAAA,IAAI,CAAJA,SAAAA,IAAAA,IAAAA,MAAAA,CAAAA,eAAAA,CAAAA;AACD;;AAED,aAAO,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAAgB,KAAA,cAAA,CAAoB,KAAA,KAAA,CAA3C,QAAuB,CAAhB,CAAP;AACD;;;EAzSkC9B,MAAAA,CAAAA,S;;;iCAAhBD,O,eACA;AACjBE,EAAAA,SAAS,EAAEC,UAAAA,CAAAA,SAAAA,CAAAA,CADM,MAAA;AAEjBC,EAAAA,QAAQ,EAAED,UAAAA,CAAAA,SAAAA,CAAAA,CAFO,IAAA;AAGjBE,EAAAA,IAAI,EAAEF,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,KAAAA,CAAgB,CAAA,YAAA,EAAA,UAAA,EAAA,eAAA,EAAA,gBAAA,EAHL,QAGK,CAAhBA,CAHW;AAIjBG,EAAAA,SAAS,EAAEH,UAAAA,CAAAA,SAAAA,CAAAA,CAJM,MAAA;AAKjBI,EAAAA,KAAK,EAAEJ,UAAAA,CAAAA,SAAAA,CAAAA,CALU,MAAA;AAMjBK,EAAAA,KAAK,EAAEL,UAAAA,CAAAA,SAAAA,CAAAA,CANU,MAAA;AAOjBM,EAAAA,mBAAmB,EAAEN,UAAAA,CAAAA,SAAAA,CAAAA,CAPJ,IAAA;AAQjBO,EAAAA,MAAM,EAAEP,UAAAA,CAAAA,SAAAA,CAAAA,CARS,IAAA;AASjBQ,EAAAA,eAAe,EAAER,UAAAA,CAAAA,SAAAA,CAAAA,CATA,MAAA;AAUjBS,EAAAA,GAAG,EAAET,UAAAA,CAAAA,SAAAA,CAAAA,CAVY,MAAA;AAWjBU,EAAAA,KAAK,EAAEV,UAAAA,CAAAA,SAAAA,CAAAA,CAAUW;AAXA,C;iCADAd,O,kBAeG;AACpBY,EAAAA,GAAG,EADiB,KAAA;AAEpBV,EAAAA,SAAS,EAAE;AAFS,C","sourcesContent":["import React, { cloneElement, Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport SubMenu from './SubMenu';\nimport { getWidth, menuAllProps, setStyle } from './util';\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nconst MENUITEM_OVERFLOWED_CLASSNAME = 'menuitem-overflowed';\n\n// Fix ssr\nif (canUseDOM) {\n  require('mutationobserver-shim');\n}\n\nexport default class DOMWrap extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    mode: PropTypes.oneOf(['horizontal', 'vertical', 'vertical-left', 'vertical-right', 'inline']),\n    prefixCls: PropTypes.string,\n    level: PropTypes.number,\n    theme: PropTypes.string,\n    overflowedIndicator: PropTypes.node,\n    hidden: PropTypes.bool,\n    hiddenClassName: PropTypes.string,\n    tag: PropTypes.string,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    tag: 'div',\n    className: '',\n  };\n\n  state = {\n    lastVisibleIndex: undefined,\n  };\n\n  componentDidMount() {\n    this.setChildrenWidthAndResize();\n    if (this.props.level === 1 && this.props.mode === 'horizontal') {\n      const menuUl = ReactDOM.findDOMNode(this);\n      if (!menuUl) {\n        return;\n      }\n      this.resizeObserver = new ResizeObserver(entries => {\n        entries.forEach(this.setChildrenWidthAndResize);\n      });\n\n      [].slice\n        .call(menuUl.children)\n        .concat(menuUl)\n        .forEach(el => {\n          this.resizeObserver.observe(el);\n        });\n\n      if (typeof MutationObserver !== 'undefined') {\n        this.mutationObserver = new MutationObserver(() => {\n          this.resizeObserver.disconnect();\n          [].slice\n            .call(menuUl.children)\n            .concat(menuUl)\n            .forEach(el => {\n              this.resizeObserver.observe(el);\n            });\n          this.setChildrenWidthAndResize();\n        });\n        this.mutationObserver.observe(menuUl, {\n          attributes: false,\n          childList: true,\n          subTree: false,\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n    if (this.mutationObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  // get all valid menuItem nodes\n  getMenuItemNodes = () => {\n    const { prefixCls } = this.props;\n    const ul = ReactDOM.findDOMNode(this);\n    if (!ul) {\n      return [];\n    }\n\n    // filter out all overflowed indicator placeholder\n    return [].slice.call(ul.children).filter(node => {\n      return node.className.split(' ').indexOf(`${prefixCls}-overflowed-submenu`) < 0;\n    });\n  };\n\n  getOverflowedSubMenuItem = (keyPrefix, overflowedItems, renderPlaceholder) => {\n    const { overflowedIndicator, level, mode, prefixCls, theme, style: propStyle } = this.props;\n    if (level !== 1 || mode !== 'horizontal') {\n      return null;\n    }\n    // put all the overflowed item inside a submenu\n    // with a title of overflow indicator ('...')\n    const copy = this.props.children[0];\n    const { children: throwAway, title, eventKey, ...rest } = copy.props;\n\n    let style = { ...propStyle };\n    let key = `${keyPrefix}-overflowed-indicator`;\n\n    if (overflowedItems.length === 0 && renderPlaceholder !== true) {\n      style = {\n        ...style,\n        display: 'none',\n      };\n    } else if (renderPlaceholder) {\n      style = {\n        ...style,\n        visibility: 'hidden',\n        // prevent from taking normal dom space\n        position: 'absolute',\n      };\n      key = `${key}-placeholder`;\n    }\n\n    const popupClassName = theme ? `${prefixCls}-${theme}` : '';\n    const props = {};\n    menuAllProps.forEach(k => {\n      if (rest[k] !== undefined) {\n        props[k] = rest[k];\n      }\n    });\n\n    return (\n      <SubMenu\n        title={overflowedIndicator}\n        className={`${prefixCls}-overflowed-submenu`}\n        popupClassName={popupClassName}\n        {...props}\n        key={key}\n        eventKey={`${keyPrefix}-overflowed-indicator`}\n        disabled={false}\n        style={style}\n      >\n        {overflowedItems}\n      </SubMenu>\n    );\n  };\n\n  // memorize rendered menuSize\n  setChildrenWidthAndResize = () => {\n    if (this.props.mode !== 'horizontal') {\n      return;\n    }\n    const ul = ReactDOM.findDOMNode(this);\n\n    if (!ul) {\n      return;\n    }\n\n    const ulChildrenNodes = ul.children;\n\n    if (!ulChildrenNodes || ulChildrenNodes.length === 0) {\n      return;\n    }\n\n    const lastOverflowedIndicatorPlaceholder = ul.children[ulChildrenNodes.length - 1];\n\n    // need last overflowed indicator for calculating length;\n    setStyle(lastOverflowedIndicatorPlaceholder, 'display', 'inline-block');\n\n    const menuItemNodes = this.getMenuItemNodes();\n\n    // reset display attribute for all hidden elements caused by overflow to calculate updated width\n    // and then reset to original state after width calculation\n\n    const overflowedItems = menuItemNodes.filter(\n      c => c.className.split(' ').indexOf(MENUITEM_OVERFLOWED_CLASSNAME) >= 0,\n    );\n\n    overflowedItems.forEach(c => {\n      setStyle(c, 'display', 'inline-block');\n    });\n\n    this.menuItemSizes = menuItemNodes.map(c => getWidth(c));\n\n    overflowedItems.forEach(c => {\n      setStyle(c, 'display', 'none');\n    });\n    this.overflowedIndicatorWidth = getWidth(ul.children[ul.children.length - 1]);\n    this.originalTotalWidth = this.menuItemSizes.reduce((acc, cur) => acc + cur, 0);\n    this.handleResize();\n    // prevent the overflowed indicator from taking space;\n    setStyle(lastOverflowedIndicatorPlaceholder, 'display', 'none');\n  };\n\n  resizeObserver = null;\n  mutationObserver = null;\n\n  // original scroll size of the list\n  originalTotalWidth = 0;\n\n  // copy of overflowed items\n  overflowedItems = [];\n\n  // cache item of the original items (so we can track the size and order)\n  menuItemSizes = [];\n\n  handleResize = () => {\n    if (this.props.mode !== 'horizontal') {\n      return;\n    }\n\n    const ul = ReactDOM.findDOMNode(this);\n    if (!ul) {\n      return;\n    }\n    const width = getWidth(ul);\n\n    this.overflowedItems = [];\n    let currentSumWidth = 0;\n\n    // index for last visible child in horizontal mode\n    let lastVisibleIndex = undefined;\n\n    if (this.originalTotalWidth > width) {\n      lastVisibleIndex = -1;\n\n      this.menuItemSizes.forEach(liWidth => {\n        currentSumWidth += liWidth;\n        if (currentSumWidth + this.overflowedIndicatorWidth <= width) {\n          lastVisibleIndex++;\n        }\n      });\n    }\n\n    this.setState({ lastVisibleIndex });\n  };\n\n  renderChildren(children) {\n    // need to take care of overflowed items in horizontal mode\n    const { lastVisibleIndex } = this.state;\n    return (children || []).reduce((acc, childNode, index) => {\n      let item = childNode;\n      if (this.props.mode === 'horizontal') {\n        let overflowed = this.getOverflowedSubMenuItem(childNode.props.eventKey, []);\n        if (\n          lastVisibleIndex !== undefined &&\n          this.props.className.indexOf(`${this.props.prefixCls}-root`) !== -1\n        ) {\n          if (index > lastVisibleIndex) {\n            item = cloneElement(\n              childNode,\n              // 这里修改 eventKey 是为了防止隐藏状态下还会触发 openkeys 事件\n              {\n                style: { display: 'none' },\n                eventKey: `${childNode.props.eventKey}-hidden`,\n                className: `${childNode.className} ${MENUITEM_OVERFLOWED_CLASSNAME}`,\n              },\n            );\n          }\n          if (index === lastVisibleIndex + 1) {\n            this.overflowedItems = children.slice(lastVisibleIndex + 1).map(c => {\n              return cloneElement(\n                c,\n                // children[index].key will become '.$key' in clone by default,\n                // we have to overwrite with the correct key explicitly\n                { key: c.props.eventKey, mode: 'vertical-left' },\n              );\n            });\n\n            overflowed = this.getOverflowedSubMenuItem(\n              childNode.props.eventKey,\n              this.overflowedItems,\n            );\n          }\n        }\n\n        const ret = [...acc, overflowed, item];\n\n        if (index === children.length - 1) {\n          // need a placeholder for calculating overflowed indicator width\n          ret.push(this.getOverflowedSubMenuItem(childNode.props.eventKey, [], true));\n        }\n        return ret;\n      }\n      return [...acc, item];\n    }, []);\n  }\n\n  render() {\n    const {\n      hiddenClassName,\n      hidden,\n      prefixCls,\n      overflowedIndicator,\n      mode,\n      level,\n      tag: Tag,\n      children,\n      theme,\n      ...rest\n    } = this.props;\n\n    if (hidden) {\n      rest.className += ` ${hiddenClassName}`;\n    }\n\n    return <Tag {...rest}>{this.renderChildren(this.props.children)}</Tag>;\n  }\n}\n"]}