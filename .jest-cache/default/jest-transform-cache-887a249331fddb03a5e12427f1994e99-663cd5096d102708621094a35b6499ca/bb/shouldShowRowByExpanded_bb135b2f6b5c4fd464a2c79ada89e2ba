a40699df6fee152defe36c2f1edd43e5
"use strict";

/* istanbul ignore next */
function cov_28adjt5cqg() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/shouldShowRowByExpanded.ts";
  var hash = "a3329d6d684c338fd8ecc66d2637d5a7d7e31b4b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/shouldShowRowByExpanded.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 45
        }
      },
      "3": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 74
        }
      },
      "4": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 94
        }
      },
      "5": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 14,
          column: 89
        }
      },
      "6": {
        start: {
          line: 15,
          column: 25
        },
        end: {
          line: 15,
          column: 83
        }
      },
      "7": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 16
        }
      },
      "9": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 21,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "shouldShowRowByExpanded",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 32
          }
        },
        loc: {
          start: {
            line: 12,
            column: 35
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 77
          },
          end: {
            line: 13,
            column: 89
          }
        }, {
          start: {
            line: 13,
            column: 92
          },
          end: {
            line: 13,
            column: 94
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 44
          }
        }, {
          start: {
            line: 13,
            column: 48
          },
          end: {
            line: 13,
            column: 74
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 14,
            column: 19
          },
          end: {
            line: 14,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 72
          },
          end: {
            line: 14,
            column: 84
          }
        }, {
          start: {
            line: 14,
            column: 87
          },
          end: {
            line: 14,
            column: 89
          }
        }],
        line: 14
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 19
          },
          end: {
            line: 14,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 19
          },
          end: {
            line: 14,
            column: 39
          }
        }, {
          start: {
            line: 14,
            column: 43
          },
          end: {
            line: 14,
            column: 69
          }
        }],
        line: 14
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        }, {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a3329d6d684c338fd8ecc66d2637d5a7d7e31b4b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_28adjt5cqg = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_28adjt5cqg();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_28adjt5cqg().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_28adjt5cqg().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_28adjt5cqg().s[2]++;
exports["default"] = shouldShowRowByExpanded;

var _intersection =
/* istanbul ignore next */
(cov_28adjt5cqg().s[3]++, _interopRequireDefault(require("lodash/intersection")));

function shouldShowRowByExpanded() {
  /* istanbul ignore next */
  cov_28adjt5cqg().f[0]++;
  var expandedRowKeys =
  /* istanbul ignore next */
  (cov_28adjt5cqg().s[4]++,
  /* istanbul ignore next */
  (cov_28adjt5cqg().b[1][0]++, arguments.length > 0) &&
  /* istanbul ignore next */
  (cov_28adjt5cqg().b[1][1]++, arguments[0] !== undefined) ?
  /* istanbul ignore next */
  (cov_28adjt5cqg().b[0][0]++, arguments[0]) :
  /* istanbul ignore next */
  (cov_28adjt5cqg().b[0][1]++, []));
  var parentKeys =
  /* istanbul ignore next */
  (cov_28adjt5cqg().s[5]++,
  /* istanbul ignore next */
  (cov_28adjt5cqg().b[3][0]++, arguments.length > 1) &&
  /* istanbul ignore next */
  (cov_28adjt5cqg().b[3][1]++, arguments[1] !== undefined) ?
  /* istanbul ignore next */
  (cov_28adjt5cqg().b[2][0]++, arguments[1]) :
  /* istanbul ignore next */
  (cov_28adjt5cqg().b[2][1]++, []));
  var intersectionKeys =
  /* istanbul ignore next */
  (cov_28adjt5cqg().s[6]++, (0, _intersection["default"])(expandedRowKeys, parentKeys));

  /* istanbul ignore next */
  cov_28adjt5cqg().s[7]++;

  if (intersectionKeys.length === parentKeys.length) {
    /* istanbul ignore next */
    cov_28adjt5cqg().b[4][0]++;
    cov_28adjt5cqg().s[8]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_28adjt5cqg().b[4][1]++;
  }

  cov_28adjt5cqg().s[9]++;
  return false;
}