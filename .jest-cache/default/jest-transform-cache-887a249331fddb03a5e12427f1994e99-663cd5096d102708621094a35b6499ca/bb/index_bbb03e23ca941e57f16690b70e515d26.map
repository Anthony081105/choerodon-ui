{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/input-number/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAGA;;IAwBqB,W;;;;;;;;;;;;6BASb;AAAA;AAAA;;AAAA,wBACkE,KAAK,KADvE;AAAA,UACI,SADJ,eACI,SADJ;AAAA,UACe,IADf,eACe,IADf;AAAA,UACgC,kBADhC,eACqB,SADrB;AAAA,UACuD,MADvD;AAEJ,UAAM,SAAS,GAAG,6BAAa,cAAb,EAA6B,kBAA7B,CAAlB;AACA,UAAM,gBAAgB,GAAG,uGAEjB,SAFiB,UAEA,IAAI,KAAA,OAFJ,2DAGjB,SAHiB,UAGA,IAAI,KAAA,OAHJ,iBAKvB,SALuB,CAAzB;AAQA,aACE,kBAAA,aAAA,CAAC,uBAAD,EAAc,0BAAA;AACZ,QAAA,GAAG,EAAE,aAAC,CAAD;AAAA,iBAAa,KAAI,CAAC,cAAL,GAAsB,CAAnC;AAAA,SADO;AAEZ,QAAA,SAAS,EAAE,gBAFC;AAGZ,QAAA,SAAS,EAAE;AAHC,OAAA,EAIR,MAJQ,CAAd,CADF;AAQD;;;4BAEI;AACH,WAAK,cAAL,CAAoB,KAApB;AACD;;;2BAEG;AACF,WAAK,cAAL,CAAoB,IAApB;AACD;;;EApCsC,gB;;;AAChC,WAAA,CAAA,WAAA,GAAc,aAAd;AAEA,WAAA,CAAA,YAAA,GAAe;AACpB,EAAA,IAAI,EAAE;AADc,CAAf","sourcesContent":["import React, { Component, CSSProperties, FormEventHandler } from 'react';\nimport classNames from 'classnames';\nimport RcInputNumber from '../rc-components/input-number';\nimport { AbstractInputProps } from '../input/Input';\nimport { Size } from '../_util/enum';\nimport { getPrefixCls } from '../configure';\n\nexport interface InputNumberProps extends AbstractInputProps {\n  prefixCls?: string;\n  min?: number;\n  max?: number;\n  value?: number;\n  step?: number | string;\n  defaultValue?: number;\n  tabIndex?: number;\n  onKeyDown?: FormEventHandler<any>;\n  onChange?: (value: number | string | undefined) => void;\n  disabled?: boolean;\n  size?: Size;\n  formatter?: (value: number | string | undefined) => string;\n  parser?: (displayValue: string | undefined) => number;\n  placeholder?: string;\n  style?: CSSProperties;\n  className?: string;\n  name?: string;\n  id?: string;\n  precision?: number;\n}\n\nexport default class InputNumber extends Component<InputNumberProps, any> {\n  static displayName = 'InputNumber';\n\n  static defaultProps = {\n    step: 1,\n  };\n\n  private inputNumberRef: any;\n\n  render() {\n    const { className, size, prefixCls: customizePrefixCls, ...others } = this.props;\n    const prefixCls = getPrefixCls('input-number', customizePrefixCls);\n    const inputNumberClass = classNames(\n      {\n        [`${prefixCls}-lg`]: size === Size.large,\n        [`${prefixCls}-sm`]: size === Size.small,\n      },\n      className,\n    );\n\n    return (\n      <RcInputNumber\n        ref={(c: any) => (this.inputNumberRef = c)}\n        className={inputNumberClass}\n        prefixCls={prefixCls}\n        {...others}\n      />\n    );\n  }\n\n  focus() {\n    this.inputNumberRef.focus();\n  }\n\n  blur() {\n    this.inputNumberRef.blur();\n  }\n}\n"]}