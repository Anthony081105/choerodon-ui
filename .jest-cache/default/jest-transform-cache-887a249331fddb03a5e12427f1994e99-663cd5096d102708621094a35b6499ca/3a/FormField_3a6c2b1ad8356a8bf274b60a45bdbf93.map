{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/field/FormField.tsx"],"names":[],"mappings":"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","sourcesContent":["import Map from 'core-js/library/fn/map';\nimport React, { cloneElement, FormEventHandler, isValidElement, ReactInstance, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { action, computed, isArrayLike, observable, runInAction, toJS } from 'mobx';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport isNumber from 'lodash/isNumber';\nimport isString from 'lodash/isString';\nimport isNil from 'lodash/isNil';\nimport isLdEmpty from 'lodash/isEmpty';\nimport isObject from 'lodash/isObject';\nimport defaultTo from 'lodash/defaultTo';\nimport { isMoment, Moment } from 'moment';\nimport { observer } from 'mobx-react';\nimport noop from 'lodash/noop';\nimport KeyCode from 'choerodon-ui/lib/_util/KeyCode';\nimport warning from 'choerodon-ui/lib/_util/warning';\nimport { getConfig, getProPrefixCls } from 'choerodon-ui/lib/configure';\nimport autobind from '../_util/autobind';\nimport DataSet from '../data-set/DataSet';\nimport Record from '../data-set/Record';\nimport Field from '../data-set/Field';\nimport Validator, { CustomValidator, ValidationMessages } from '../validator/Validator';\nimport Validity from '../validator/Validity';\nimport FormContext from '../form/FormContext';\nimport DataSetComponent, { DataSetComponentProps } from '../data-set/DataSetComponent';\nimport Icon from '../icon';\nimport Tooltip from '../tooltip';\nimport Form from '../form/Form';\nimport isEmpty from '../_util/isEmpty';\nimport { FieldFormat, FieldTrim, FieldType } from '../data-set/enum';\nimport ValidationResult from '../validator/ValidationResult';\nimport { ShowHelp } from './enum';\nimport { ValidatorProps } from '../validator/rules';\nimport { FIELD_SUFFIX } from '../form/utils';\nimport { LabelLayout } from '../form/enum';\nimport Animate from '../animate';\nimport CloseButton from './CloseButton';\nimport { fromRangeValue, getDateFormatByField, toMultipleValue, toRangeValue } from './utils';\nimport isSame from '../_util/isSame';\nimport formatString from '../formatter/formatString';\n\nconst map: { [key: string]: FormField<FormFieldProps>[]; } = {};\n\nexport type Comparator = (v1: any, v2: any) => boolean;\n\nexport type RenderProps = {\n  value?: any;\n  text?: string;\n  record?: Record | null;\n  name?: string;\n  dataSet?: DataSet | null;\n  repeat?: number;\n  maxTagTextLength?: number;\n};\n\nexport type Renderer = (props: RenderProps) => ReactNode;\n\nexport function getFieldsById(id): FormField<FormFieldProps>[] {\n  if (!map[id]) {\n    map[id] = [];\n  }\n  return map[id];\n}\n\nexport interface FormFieldProps extends DataSetComponentProps {\n  /**\n   * 内部属性,标记该组件是否位于table中,适用于CheckBox以及switch等组件\n   */\n  _inTable?: boolean,\n  /**\n   * 标签名\n   */\n  label?: string | ReactNode;\n  /**\n   * 标签布局\n   */\n  labelLayout?: LabelLayout;\n  /**\n   * 标签宽度\n   */\n  labelWidth?: number;\n  /**\n   * 字段名\n   */\n  name?: string;\n  /**\n   * <受控>当前值\n   */\n  value?: any;\n  /**\n   * 默认值\n   */\n  defaultValue?: any;\n  /**\n   * 是否必输\n   */\n  required?: boolean;\n  /**\n   * 是否只读\n   */\n  readOnly?: boolean;\n  /**\n   * 是否禁用\n   */\n  disabled?: boolean;\n  /**\n   * 对照表单id\n   */\n  form?: string;\n  /**\n   * 对照record在DataSet中的index\n   * @default dataSet.currentIndex\n   */\n  dataIndex?: number;\n  /**\n   * 对照record\n   * 优先级高于dataSet和dataIndex\n   */\n  record?: Record;\n  /**\n   * 是否是多值\n   * @default false\n   */\n  multiple?: boolean;\n  /**\n   * 是否是范围值\n   * @default false\n   */\n  range?: boolean | [string, string];\n  /**\n   * 校验器\n   */\n  validator?: CustomValidator;\n  /**\n   * 不校验\n   */\n  noValidate?: boolean;\n  /**\n   * 额外信息，常用作提示\n   *\n   * @type {string}\n   * @memberof FormFieldProps\n   */\n  help?: string;\n  /**\n   * 另起新行\n   */\n  newLine?: boolean;\n  /**\n   * 显示提示信息的方式\n   *\n   * @type {ShowHelp}\n   * @memberof FormFieldProps\n   */\n  showHelp?: ShowHelp;\n  /**\n   * 渲染器\n   */\n  renderer?: Renderer;\n  /**\n   * 校验信息渲染器\n   */\n  validationRenderer?: (result: ValidationResult, props: ValidatorProps) => ReactNode;\n  /**\n   * 多值标签超出最大数量时的占位描述\n   */\n  maxTagPlaceholder?: ReactNode | ((omittedValues: any[]) => ReactNode);\n  /**\n   * 多值标签最大数量\n   */\n  maxTagCount?: number;\n  /**\n   * 多值标签文案最大长度\n   */\n  maxTagTextLength?: number;\n  /**\n   * 显示原始值\n   */\n  pristine?: boolean;\n  /**\n   * 字符串值是否去掉首尾空格\n   * 可选值: both left right none\n   * @default: both\n   */\n  trim?: FieldTrim;\n  /**\n   * 日期格式，如 `YYYY-MM-DD HH:mm:ss`\n   * 字符串格式，如 `uppcase` `lowercase` `capitalize`\n   */\n  format?: string | FieldFormat;\n  /**\n   * 校验失败回调\n   */\n  onInvalid?: (validationResults: ValidationResult[], validity: Validity, name?: string) => void;\n  /**\n   * 值变化回调\n   */\n  onChange?: (value: any, oldValue: any, form?: ReactInstance) => void;\n  /**\n   * 输入回调\n   */\n  onInput?: FormEventHandler<any>;\n  /**\n   * 键盘回车回调\n   */\n  onEnterDown?: FormEventHandler<any>;\n  /**\n   * 值清空回调\n   */\n  onClear?: () => void;\n}\n\nexport class FormField<T extends FormFieldProps> extends DataSetComponent<T> {\n  static contextType = FormContext;\n\n  static propTypes = {\n    _inTable: PropTypes.bool,\n    type: PropTypes.string,\n    /**\n     * 字段名\n     */\n    name: PropTypes.string,\n    /**\n     * <受控>当前值\n     */\n    value: PropTypes.any,\n    /**\n     * 默认值\n     */\n    defaultValue: PropTypes.any,\n    /**\n     * 是否必输\n     */\n    required: PropTypes.bool,\n    /**\n     * 是否只读\n     */\n    readOnly: PropTypes.bool,\n    /**\n     * 对照表单id\n     */\n    form: PropTypes.string,\n    /**\n     * 对照record在DataSet中的index\n     * @default dataSet.currentIndex\n     */\n    dataIndex: PropTypes.number,\n    /**\n     * 是否是多值\n     * @default false\n     */\n    multiple: PropTypes.bool,\n    /**\n     * 表单下控件跨越的行数\n     */\n    rowSpan: PropTypes.number,\n    /**\n     * 另起新行\n     */\n    newLine: PropTypes.bool,\n    /**\n     * 表单下控件跨越的列数\n     */\n    colSpan: PropTypes.number,\n    /**\n     * 校验器\n     * (value: any, name?: string, form?: ReactInstance) => string | boolean | Promise<string | boolean>\n     */\n    validator: PropTypes.func,\n    /**\n     * 校验失败回调\n     * (validationMessage: ReactNode, validity: Validity, name?: string) => void\n     */\n    onInvalid: PropTypes.func,\n    /**\n     * 额外信息，常用作提示\n     */\n    help: PropTypes.string,\n    /**\n     * 显示提示信息的方式\n     */\n    showHelp: PropTypes.oneOf([ShowHelp.tooltip, ShowHelp.newLine, ShowHelp.none]),\n    /**\n     * 渲染器\n     */\n    renderer: PropTypes.func,\n    /**\n     * 校验信息渲染器\n     */\n    validationRenderer: PropTypes.func,\n    /**\n     * 多值标签超出最大数量时的占位描述\n     */\n    maxTagPlaceholder: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    /**\n     * 多值标签最大数量\n     */\n    maxTagCount: PropTypes.number,\n    /**\n     * 多值标签文案最大长度\n     */\n    maxTagTextLength: PropTypes.number,\n    /**\n     * 显示原始值\n     */\n    pristine: PropTypes.bool,\n    /**\n     * 字符串值是否去掉首尾空格\n     * 可选值: both left right none\n     * @default: both\n     */\n    trim: PropTypes.oneOf([FieldTrim.both, FieldTrim.left, FieldTrim.right, FieldTrim.none]),\n    /**\n     * 值变化回调\n     * (value: any, oldValue: any, form?: ReactInstance) => void\n     */\n    onChange: PropTypes.func,\n    /**\n     * 输入回调\n     */\n    onInput: PropTypes.func,\n    /**\n     * 键盘回车回调\n     */\n    onEnterDown: PropTypes.func,\n    ...DataSetComponent.propTypes,\n  };\n\n  static defaultProps = {\n    readOnly: false,\n    disabled: false,\n    noValidate: false,\n    showHelp: 'newLine',\n    trim: FieldTrim.both,\n  };\n\n  emptyValue?: any = null;\n\n  lock: boolean = false;\n\n  @observable rangeTarget?: 0 | 1;\n\n  @observable rangeValue?: [any, any];\n\n  @computed\n  get validator(): Validator {\n    const { field } = this;\n    if (field) {\n      return field.validator;\n    }\n    return new Validator(undefined, this);\n  }\n\n  @computed\n  get name(): string | undefined {\n    return this.observableProps.name;\n  }\n\n  @computed\n  get value(): any | undefined {\n    return this.observableProps.value;\n  }\n\n  set value(value: any | undefined) {\n    runInAction(() => {\n      this.observableProps.value = value;\n    });\n  }\n\n  get labelLayout() {\n    return this.props.labelLayout || this.context.labelLayout;\n  }\n\n  get hasFloatLabel(): boolean {\n    const { labelLayout } = this;\n    return labelLayout === LabelLayout.float;\n  }\n\n  get isControlled(): boolean {\n    return this.props.value !== undefined;\n  }\n\n  get pristine(): boolean {\n    return this.props.pristine || this.context.pristine;\n  }\n\n  @computed\n  get defaultValidationMessages(): ValidationMessages {\n    return {};\n  }\n\n  // @computed\n  get editable(): boolean {\n    return !this.isDisabled() && !this.isReadOnly();\n  }\n\n  @computed\n  get dataSet(): DataSet | undefined {\n    const { record } = this;\n    if (record) {\n      return record.dataSet;\n    }\n    return this.observableProps.dataSet;\n  }\n\n  @computed\n  get record(): Record | undefined {\n    const { record, dataSet, dataIndex } = this.observableProps;\n    if (record) {\n      return record;\n    }\n    if (dataSet) {\n      if (isNumber(dataIndex)) {\n        return dataSet.get(dataIndex);\n      }\n      return dataSet.current;\n    }\n    return undefined;\n  }\n\n  @computed\n  get field(): Field | undefined {\n    const { record, dataSet, name, observableProps } = this;\n    const { displayName } = this.constructor as any;\n    if (displayName !== 'Output' && !name) {\n      warning(!observableProps.dataSet, `${displayName} with binding DataSet need property name.`);\n      warning(!observableProps.record, `${displayName} with binding Record need property name.`);\n    }\n    if (name) {\n      const recordField = record ? record.getField(name) : undefined;\n      const dsField = dataSet ? dataSet.getField(name) : undefined;\n      if (recordField) {\n        return recordField;\n      }\n      return dsField;\n    }\n    return undefined;\n  }\n\n  @computed\n  get isValid(): boolean {\n    return this.pristine || (this.field ? this.field.valid : this.validator.validity.valid);\n  }\n\n  @computed\n  get multiple(): boolean {\n    return this.getProp('multiple');\n  }\n\n  @computed\n  get trim(): FieldTrim | undefined {\n    return this.getProp('trim');\n  }\n\n  @computed\n  get format(): FieldFormat | string | undefined {\n    return this.getProp('format');\n  }\n\n  @computed\n  get range(): boolean | [string, string] {\n    return this.getProp('range');\n  }\n\n  @autobind\n  defaultRenderer({ text, repeat, maxTagTextLength }: RenderProps): ReactNode {\n    return repeat !== undefined &&\n    maxTagTextLength &&\n    isString(text) &&\n    text.length > maxTagTextLength\n      ? `${text.slice(0, maxTagTextLength)}...`\n      : text;\n  }\n\n  /**\n   * 判断是否应该显示验证信息, 作为属性传给Tooltip\n   *\n   * @readonly\n   * @type {(undefined | boolean)}\n   * @memberof FormField\n   */\n  isValidationMessageHidden(message?: ReactNode): undefined | boolean {\n    const { hidden, noValidate } = this.props;\n    if (hidden || this.pristine || (!this.record && noValidate) || !message) {\n      return true;\n    }\n  }\n\n  isEmpty() {\n    const value = this.getValue();\n    return isArrayLike(value) ? !value.length : isEmpty(value);\n  }\n\n  getObservableProps(props, context) {\n    return {\n      name: props.name,\n      record: 'record' in props ? props.record : context.record,\n      dataSet: 'dataSet' in props ? props.dataSet : context.dataSet,\n      dataIndex: defaultTo(props.dataIndex, context.dataIndex),\n      value: this.observableProps || 'value' in props ? props.value : props.defaultValue,\n    };\n  }\n\n  getOtherProps() {\n    const otherProps = omit(super.getOtherProps(), [\n      'record',\n      'defaultValue',\n      'dataIndex',\n      'onEnterDown',\n      'onClear',\n      'readOnly',\n      'validator',\n      'validationRenderer',\n      'help',\n      'showHelp',\n      'renderer',\n      'maxTagPlaceholder',\n      'maxTagCount',\n      'maxTagTextLength',\n      'rowIndex',\n      'colIndex',\n      'labelLayout',\n      '_inTable',\n      'labelWidth',\n      'pristine',\n      'range',\n      'trim',\n    ]);\n    otherProps.onChange = !this.isDisabled() && !this.isReadOnly() ? this.handleChange : noop;\n    otherProps.onKeyDown = this.handleKeyDown;\n    otherProps.onCompositionStart = this.handleCompositionStart;\n    otherProps.onCompositionEnd = this.handleChange;\n    return otherProps;\n  }\n\n  getWrapperClassNames(...args): string {\n    const { prefixCls } = this;\n    return super.getWrapperClassNames(\n      {\n        [`${prefixCls}-invalid`]: !this.isValid,\n        [`${prefixCls}-float-label`]: this.hasFloatLabel,\n        [`${prefixCls}-required`]: this.getProp('required'),\n        [`${prefixCls}-readonly`]: this.getProp('readOnly'),\n      },\n      ...args,\n    );\n  }\n\n  renderWrapper(): ReactNode {\n    return undefined;\n  }\n\n  renderHelpMessage(): ReactNode {\n    const { showHelp } = this.props;\n    const help = this.getProp('help');\n    if (showHelp === ShowHelp.newLine && help) {\n      return (\n        <div key=\"help\" className={`${getProPrefixCls(FIELD_SUFFIX)}-help`}>\n          {help}\n        </div>\n      );\n    }\n  }\n\n  getLabel() {\n    return this.getProp('label');\n  }\n\n  renderFloatLabel(): ReactNode {\n    if (this.hasFloatLabel) {\n      const label = this.getLabel();\n      if (label) {\n        const prefixCls = getProPrefixCls(FIELD_SUFFIX);\n        const required = this.getProp('required');\n        const readOnly = this.getProp('readOnly');\n        const classString = classNames(`${prefixCls}-label`, {\n          [`${prefixCls}-required`]: required,\n          [`${prefixCls}-readonly`]: readOnly,\n        });\n        return (\n          <div className={`${prefixCls}-label-wrapper`}>\n            <div className={classString}>{label}</div>\n          </div>\n        );\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.addToForm(this.props, this.context);\n  }\n\n  componentWillReceiveProps(nextProps: T, nextContext) {\n    super.componentWillReceiveProps(nextProps, nextContext);\n    this.removeFromForm(this.props, this.context);\n    this.addToForm(nextProps, nextContext);\n    if (!this.record && this.props.value !== nextProps.value) {\n      this.validate(nextProps.value);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeFromForm(this.props, this.context);\n  }\n\n  addToForm(props, context) {\n    const { form } = props;\n    const { formNode } = context;\n    if (form) {\n      let fields = map[form];\n      if (!fields) {\n        fields = [];\n        map[form] = fields;\n      }\n      fields.push(this);\n    } else if (formNode) {\n      formNode.addField(this);\n    }\n  }\n\n  removeFromForm(props, context) {\n    const { form } = props;\n    const { formNode } = context;\n    if (form) {\n      const fields = map[form];\n      if (fields) {\n        const index = fields.indexOf(this);\n        if (index !== -1) {\n          fields.splice(index, 1);\n        }\n      }\n    } else if (formNode) {\n      formNode.removeField(this);\n    }\n  }\n\n  renderValidationMessage(validationResult?: ValidationResult): ReactNode {\n    const validationMessage = this.getValidationMessage(validationResult);\n    if (validationMessage) {\n      return (\n        <div className={getProPrefixCls('validation-message')}>\n          {this.context.labelLayout !== LabelLayout.float && <Icon type=\"error\" />}\n          <span>{validationMessage}</span>\n        </div>\n      );\n    }\n  }\n\n  getValidatorProps(): ValidatorProps {\n    const { name, range, multiple, defaultValidationMessages } = this;\n    const type = this.getFieldType();\n    const required = this.getProp('required');\n    const customValidator = this.getProp('validator');\n    const label = this.getProp('label');\n    return {\n      type,\n      required,\n      customValidator,\n      name,\n      label,\n      range,\n      multiple,\n      defaultValidationMessages,\n      form: this.context.formNode as Form,\n    };\n  }\n\n  getValidationMessage(\n    validationResult: ValidationResult | undefined = this.validator.currentValidationResult,\n  ): ReactNode {\n    const {\n      validator,\n      props: { validationRenderer },\n    } = this;\n    if (validationResult) {\n      if (validationRenderer) {\n        const validationMessage = validationRenderer(validationResult, validator.props);\n        if (validationMessage) {\n          return validationMessage;\n        }\n      }\n      return validationResult.validationMessage;\n    }\n  }\n\n  @autobind\n  handleFocus(e) {\n    super.handleFocus(e);\n    if (this.range) {\n      this.beginRange();\n    }\n  }\n\n  @autobind\n  handleBlur(e) {\n    super.handleBlur(e);\n    if (this.range) {\n      this.endRange();\n    }\n  }\n\n  @autobind\n  handleCompositionStart() {\n    this.lock = true;\n  }\n\n  @autobind\n  handleChange(e) {\n    this.lock = false;\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  @autobind\n  handleKeyDown(e) {\n    const { onKeyDown = noop, onEnterDown = noop } = this.props;\n    onKeyDown(e);\n    if (!e.isDefaultPrevented()) {\n      switch (e.keyCode) {\n        case KeyCode.ENTER:\n          this.handleEnterDown(e);\n          onEnterDown(e);\n          break;\n        case KeyCode.ESC:\n          this.blur();\n          break;\n        default:\n      }\n    }\n  }\n\n  handleEnterDown(e) {\n    if (this.multiple) {\n      if (this.range) {\n        this.endRange();\n        e.preventDefault();\n      } else {\n        const { value } = e.target;\n        if (value !== '') {\n          this.syncValueOnBlur(value);\n          e.preventDefault();\n        }\n      }\n    } else {\n      this.blur();\n    }\n  }\n\n  syncValueOnBlur(value) {\n    this.prepareSetValue(value);\n  }\n\n  @autobind\n  handleMutipleValueRemove(e, value: any, index: number) {\n    this.removeValue(value, index);\n    e.stopPropagation();\n  }\n\n  getDateFormat(): string {\n    return getDateFormatByField(this.field, this.getFieldType());\n  }\n\n  processValue(value: any): string {\n    if (!isNil(value)) {\n      if (isMoment(value)) {\n        return (value as Moment).format(this.getDateFormat());\n      }\n      return value.toString();\n    }\n    return '';\n  }\n\n  isReadOnly(): boolean {\n    return (\n      (this.getProp('readOnly') as boolean) ||\n      this.pristine ||\n      (this.isControlled && !this.props.onChange)\n    );\n  }\n\n  getDataSetValue(): any {\n    const { record, pristine, name } = this;\n    if (record) {\n      return pristine ? record.getPristineValue(name) : record.get(name);\n    }\n  }\n\n  getTextNode(): ReactNode {\n    const text =\n      this.isFocused && this.editable\n        ? this.processValue(this.getValue())\n        : this.processRenderer(this.getValue());\n    return text;\n  }\n\n  getText(value: any): string {\n    return this.processValue(value);\n  }\n\n  processText(value: string): string {\n    return value;\n  }\n\n  processRenderer(value?: any, repeat?: number): ReactNode {\n    const {\n      record,\n      dataSet,\n      props: { renderer = this.defaultRenderer, name, maxTagTextLength },\n    } = this;\n    const text = this.processText(this.getText(value));\n    return renderer\n      ? renderer({\n        value,\n        text,\n        record,\n        dataSet,\n        name,\n        repeat,\n        maxTagTextLength,\n      })\n      : text;\n  }\n\n  processRangeValue(value?: any, repeat?: number): [any, any] {\n    if (repeat === undefined) {\n      value = this.rangeValue;\n    }\n    if (value === undefined && !this.multiple) {\n      value = toRangeValue(this.getValue(), this.range);\n    }\n    return (value || []).map(item => this.processRenderer(item, repeat)) as [any, any];\n  }\n\n  getOldValue(): any {\n    return this.getValue();\n  }\n\n  getValue(): any {\n    const { name } = this;\n    if (this.dataSet && name) {\n      return this.getDataSetValue();\n    }\n    return this.value;\n  }\n\n  getValues(): any[] {\n    return toMultipleValue(this.getValue(), this.range);\n  }\n\n  addValue(...values) {\n    if (this.multiple) {\n      const oldValues = this.getValues();\n      if (values.length) {\n        this.setValue([...oldValues, ...values]);\n      } else if (!oldValues.length) {\n        this.setValue(this.emptyValue);\n      }\n    } else {\n      this.setValue(values.pop());\n    }\n  }\n\n  isLowerRange(_value1: any, _value2: any): boolean {\n    return false;\n  }\n\n  @action\n  prepareSetValue(...value: any[]): void {\n    const { rangeTarget, range, rangeValue } = this;\n    const values = value.filter(item => !isEmpty(item));\n    if (range) {\n      if (rangeTarget !== undefined && rangeValue) {\n        const [start, end] = rangeValue;\n        const newValue = values.pop();\n        rangeValue[rangeTarget] = newValue;\n        if (rangeTarget === 0 && newValue && end && this.isLowerRange(end, newValue)) {\n          rangeValue[rangeTarget] = end;\n          rangeValue[1] = newValue;\n        }\n        if (rangeTarget === 1 && newValue && start && this.isLowerRange(newValue, start)) {\n          rangeValue[rangeTarget] = start;\n          rangeValue[0] = newValue;\n        }\n      }\n    } else {\n      this.addValue(...values);\n    }\n  }\n\n  removeValues(values: any[], index: number = 0) {\n    let repeat: number;\n    this.setValue(\n      values.reduce((oldValues, value) => {\n        repeat = 0;\n        return oldValues.filter(v => {\n          if (this.getValueKey(v) === this.getValueKey(value)) {\n            if (index === -1 || repeat === index) {\n              this.afterRemoveValue(value, repeat++);\n              return false;\n            }\n            repeat++;\n          }\n          return true;\n        });\n      }, this.getValues()),\n    );\n  }\n\n  removeValue(value: any, index: number = 0) {\n    this.removeValues([value], index);\n  }\n\n  afterRemoveValue(_value, _repeat: number) {\n  }\n\n  @action\n  beginRange() {\n    this.setRangeTarget(this.rangeTarget || 0);\n    this.rangeValue = this.multiple\n      ? [undefined, undefined]\n      : toRangeValue(this.getValue(), this.range);\n  }\n\n  @action\n  endRange() {\n    if (this.rangeValue) {\n      const values = this.rangeValue.slice();\n      this.rangeValue = undefined;\n      if (!this.multiple || !values.every(isNil)) {\n        this.addValue(fromRangeValue(values, this.range));\n      }\n    }\n  }\n\n  @action\n  setRangeTarget(target?: 0 | 1) {\n    this.rangeTarget = target;\n  }\n\n  @action\n  setValue(value: any): void {\n    if (!this.isReadOnly()) {\n      if (\n        this.multiple || this.range\n          ? isArrayLike(value) && !value.length\n          : isNil(value) || value === ''\n      ) {\n        value = this.emptyValue;\n      }\n      const {\n        name,\n        dataSet,\n        trim,\n        format,\n        observableProps: { dataIndex },\n      } = this;\n      const { onChange = noop } = this.props;\n      const { formNode } = this.context;\n      const old = this.getOldValue();\n      if (dataSet && name) {\n        (this.record || dataSet.create({}, dataIndex)).set(name, value);\n      } else {\n        value = formatString(value, {\n          trim,\n          format,\n        });\n        this.validate(value);\n      }\n      // 转成实际的数据再进行判断\n      if (!isSame(toJS(old), toJS(value))) {\n        onChange(value, toJS(old), formNode);\n      }\n      this.value = value;\n    }\n  }\n\n  renderRangeValue(readOnly?: boolean, value?: any, repeat?: number): ReactNode {\n    const rangeValue = this.processRangeValue(value, repeat);\n    if (readOnly) {\n      if (rangeValue.length) {\n        return (\n          <>\n            {rangeValue[0]}~{rangeValue[1]}\n          </>\n        );\n      }\n    }\n  }\n\n  getValueKey(v: any) {\n    if (isArrayLike(v)) {\n      return v.join(',');\n    }\n    return v;\n  }\n\n  renderMultipleValues(readOnly?: boolean) {\n    const values = this.getValues();\n    const valueLength = values.length;\n    const {\n      prefixCls,\n      range,\n      props: { maxTagCount = valueLength, maxTagPlaceholder },\n    } = this;\n    const { validationResults } = this.validator;\n    const repeats: Map<any, number> = new Map<any, number>();\n    const blockClassName = classNames(\n      {\n        [`${prefixCls}-multiple-block-disabled`]: this.isDisabled(),\n      },\n      `${prefixCls}-multiple-block`,\n    );\n    const tags = values.slice(0, maxTagCount).map(v => {\n      const key = this.getValueKey(v);\n      const repeat = repeats.get(key) || 0;\n      const text = range ? this.renderRangeValue(true, v, repeat) : this.processRenderer(v, repeat);\n      repeats.set(key, repeat + 1);\n      if (!isNil(text)) {\n        const validationResult = validationResults.find(error => error.value === v);\n        const className = classNames(\n          {\n            [`${prefixCls}-multiple-block-invalid`]: validationResult,\n          },\n          blockClassName,\n        );\n        const validationMessage =\n          validationResult && this.renderValidationMessage(validationResult);\n        const closeBtn = !this.isDisabled() && !this.isReadOnly() && (\n          <CloseButton onClose={this.handleMutipleValueRemove} value={v} index={repeat} />\n        );\n        const inner = readOnly ? (\n          <span className={className}>{text}</span>\n        ) : (\n          <li className={className}>\n            <div>{text}</div>\n            {closeBtn}\n          </li>\n        );\n        return (\n          <Tooltip\n            suffixCls={`form-tooltip ${getConfig('proPrefixCls')}-tooltip`}\n            key={`${key}-${repeat}`}\n            title={validationMessage}\n            theme=\"light\"\n            placement=\"bottomLeft\"\n            hidden={this.isValidationMessageHidden(validationMessage)}\n          >\n            {inner}\n          </Tooltip>\n        );\n      }\n      return undefined;\n    });\n\n    if (valueLength > maxTagCount) {\n      let content: ReactNode = `+ ${valueLength - maxTagCount} ...`;\n      if (maxTagPlaceholder) {\n        const omittedValues = values.slice(maxTagCount, valueLength);\n        content =\n          typeof maxTagPlaceholder === 'function'\n            ? maxTagPlaceholder(omittedValues)\n            : maxTagPlaceholder;\n      }\n      tags.push(\n        <li key=\"maxTagPlaceholder\" className={blockClassName}>\n          <div>{content}</div>\n        </li>,\n      );\n    }\n\n    return tags;\n  }\n\n  @action\n  clear() {\n    const { onClear = noop } = this.props;\n    this.setValue(this.emptyValue);\n    this.rangeValue = this.isFocused ? [undefined, undefined] : undefined;\n    onClear();\n  }\n\n  async checkValidity(): Promise<boolean> {\n    const { name } = this;\n    const valid = await this.validate();\n    const { onInvalid = noop } = this.props;\n    if (!valid) {\n      const { validationResults, validity } = this.validator;\n      onInvalid(validationResults, validity, name);\n    }\n    return valid;\n  }\n\n  async validate(value?: any): Promise<boolean> {\n    let invalid = false;\n    if (!this.props.noValidate) {\n      if (value === undefined) {\n        value = this.multiple ? this.getValues() : this.getValue();\n      }\n      const { validator } = this;\n      validator.reset();\n      invalid = !(await validator.checkValidity(value));\n    }\n    return !invalid;\n  }\n\n  isDisabled() {\n    const { disabled } = this.context;\n    if (disabled || this.getProp('disabled')) {\n      return true;\n    }\n    const { field, record } = this;\n    if (field) {\n      const cascadeMap = field.get('cascadeMap');\n      if (\n        cascadeMap &&\n        (!record || Object.keys(cascadeMap).some(cascade => {\n          if (isObject(record.get(cascadeMap[cascade]))) {\n            return isLdEmpty(record.get(cascadeMap[cascade]));\n          }\n          return isNil(record.get(cascadeMap[cascade]));\n        }))\n      ) {\n        return true;\n      }\n    }\n    return super.isDisabled();\n  }\n\n  @autobind\n  reset() {\n    if (!this.isControlled && !this.dataSet) {\n      this.setValue(this.props.defaultValue);\n    }\n    this.validator.reset();\n  }\n\n  getFieldType(): FieldType {\n    const { field } = this;\n    return (field && field.get('type')) || FieldType.string;\n  }\n\n  getProp(propName: string) {\n    const { field } = this;\n    return defaultTo(field && field.get(propName), this.props[propName]);\n  }\n\n  render() {\n    const validationMessage = this.renderValidationMessage();\n    const wrapper = this.renderWrapper();\n    const help = this.renderHelpMessage();\n    const { _inTable } = this.props;\n    return this.hasFloatLabel ? (\n        [\n          isValidElement(wrapper) && cloneElement(wrapper, { key: 'wrapper' }),\n          <Animate transitionName=\"show-error\" component=\"\" transitionAppear key=\"validation-message\">\n            {validationMessage}\n          </Animate>,\n          help,\n        ]\n      ) :\n      _inTable ?\n        <>\n          {wrapper}\n          {help}\n        </>\n        : (\n          <Tooltip\n            suffixCls={`form-tooltip ${getConfig('proPrefixCls')}-tooltip`}\n            title={\n              !!(this.multiple && this.getValues().length) ||\n              this.isValidationMessageHidden(validationMessage)\n                ? null\n                : validationMessage\n            }\n            theme=\"light\"\n            placement=\"bottomLeft\"\n          >\n            {wrapper}\n            {help}\n          </Tooltip>\n        );\n  }\n}\n\n@observer\nexport default class ObserverFormField<T extends FormFieldProps> extends FormField<T & FormFieldProps> {\n  static defaultProps = FormField.defaultProps;\n}\n"]}