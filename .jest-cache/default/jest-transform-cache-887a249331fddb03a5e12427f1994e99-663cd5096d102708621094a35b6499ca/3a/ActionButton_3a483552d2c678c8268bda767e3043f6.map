{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/modal/ActionButton.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;IAYqB,Y;;;;;AAGnB,wBAAY,KAAZ,EAAoC;AAAA;;AAAA;AAClC,wHAAM,KAAN;;AAkBF,UAAA,OAAA,GAAU,UAAC,KAAD,EAAe;AAAA,UACf,QADe,GACU,KADV,CACf,QADe;AAAA,UACL,UADK,GACU,KADV,CACL,UADK;;AAEvB,UAAI,QAAJ,EAAc;AACZ,YAAI,GAAJ;;AACA,YAAI,QAAQ,CAAC,MAAb,EAAqB;AACnB,UAAA,GAAG,GAAG,QAAQ,CAAC,UAAD,CAAd;AACD,SAFD,MAEO;AACL,UAAA,GAAG,GAAG,QAAQ,EAAd;;AACA,cAAI,CAAC,GAAL,EAAU;AACR,YAAA,UAAU;AACX;AACF;;AACD,YAAI,GAAG,IAAI,GAAG,CAAC,IAAf,EAAqB;AACnB,gBAAK,QAAL,CAAc;AAAE,YAAA,OAAO,EAAE;AAAX,WAAd;;AACA,UAAA,GAAG,CAAC,IAAJ,CACE,YAAmB;AACjB;AACA;AACA,YAAA,UAAU,MAAV;AACD,WALH,EAME,YAAK;AACH,kBAAK,QAAL,CAAc;AAAE,cAAA,OAAO,EAAE;AAAX,aAAd;AACD,WARH;AAUD;AACF,OAvBD,MAuBO;AACL,QAAA,UAAU;AACX;AACF,KA5BD;;AAjBE,UAAK,KAAL,GAAa;AACX,MAAA,OAAO,EAAE;AADE,KAAb;AAFkC;AAKnC;;;;wCAEgB;AAAA,UACP,SADO,GACO,KAAK,KADZ,CACP,SADO;;AAEf,UAAI,SAAJ,EAAe;AACb,YAAM,KAAK,GAAG,2BAAY,IAAZ,CAAd;AACA,aAAK,SAAL,GAAiB,UAAU,CAAC;AAAA,iBAAM,KAAK,CAAC,KAAN,EAAN;AAAA,SAAD,CAA3B;AACD;AACF;;;2CAEmB;AAClB,MAAA,YAAY,CAAC,KAAK,SAAN,CAAZ;AACD;;;6BAgCK;AAAA;;AAAA,wBAC6B,KAAK,KADlC;AAAA,UACI,OADJ,eACI,OADJ;AAAA,UACa,WADb,eACa,WADb;AAAA,UAEI,OAFJ,GAEgB,KAAK,KAFrB,CAEI,OAFJ;;AAGJ,UAAM,YAAY,GAAG,WAAW,IAC9B,kBAAA,aAAA,CAAC,kBAAD,EAAO;AACL,QAAA,QAAQ,EAAE,OADL;AAEL,QAAA,OAAO,EAAE,mBAAK;AACZ,UAAA,MAAI,CAAC,OAAL,CAAa,WAAb;AACD;AAJI,OAAP,EAMG,WAAW,CAAC,IANf,CADF;;AAUA,aACE,kBAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACG,YADH,EAEE,kBAAA,aAAA,CAAC,kBAAD,EAAO;AACL,QAAA,OAAO,EAAE,OADJ;AAEL,QAAA,IAAI,EAAE,OAAO,CAAC,IAFT;AAGL,QAAA,OAAO,EAAE,mBAAK;AACZ,UAAA,MAAI,CAAC,OAAL,CAAa,OAAb;AACD;AALI,OAAP,EAOG,OAAO,CAAC,IAPX,CAFF,CADF;AAcD;;;EA/EuC,gB","sourcesContent":["import React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Button from '../button';\n\nexport interface ActionButtonProps {\n  okProps?: any;\n  cancelProps?: any;\n  autoFocus?: boolean;\n}\n\nexport interface ActionButtonState {\n  loading: boolean;\n}\n\nexport default class ActionButton extends Component<ActionButtonProps, ActionButtonState> {\n  timeoutId: number;\n\n  constructor(props: ActionButtonProps) {\n    super(props);\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    const { autoFocus } = this.props;\n    if (autoFocus) {\n      const $this = findDOMNode(this) as HTMLInputElement;\n      this.timeoutId = setTimeout(() => $this.focus());\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeoutId);\n  }\n\n  onClick = (props: any) => {\n    const { actionFn, closeModal } = props;\n    if (actionFn) {\n      let ret;\n      if (actionFn.length) {\n        ret = actionFn(closeModal);\n      } else {\n        ret = actionFn();\n        if (!ret) {\n          closeModal();\n        }\n      }\n      if (ret && ret.then) {\n        this.setState({ loading: true });\n        ret.then(\n          (...args: any[]) => {\n            // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n            // this.setState({ loading: false });\n            closeModal(...args);\n          },\n          () => {\n            this.setState({ loading: false });\n          },\n        );\n      }\n    } else {\n      closeModal();\n    }\n  };\n\n  render() {\n    const { okProps, cancelProps } = this.props;\n    const { loading } = this.state;\n    const cancelButton = cancelProps && (\n      <Button\n        disabled={loading}\n        onClick={() => {\n          this.onClick(cancelProps);\n        }}\n      >\n        {cancelProps.text}\n      </Button>\n    );\n    return (\n      <div>\n        {cancelButton}\n        <Button\n          loading={loading}\n          type={okProps.type}\n          onClick={() => {\n            this.onClick(okProps);\n          }}\n        >\n          {okProps.text}\n        </Button>\n      </div>\n    );\n  }\n}\n"]}