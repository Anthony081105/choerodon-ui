{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/table/FilterBar.tsx"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAkBc,SAAU,SAAV,CAAuB,KAAvB,EAA+C;AAAA,MAEzD,SAFyD,GAcvD,KAduD,CAEzD,SAFyD;AAAA,MAGzD,OAHyD,GAcvD,KAduD,CAGzD,OAHyD;AAAA,MAIzD,oBAJyD,GAcvD,KAduD,CAIzD,oBAJyD;AAAA,MAKzD,oBALyD,GAcvD,KAduD,CAKzD,oBALyD;AAAA,MAMzD,mBANyD,GAcvD,KAduD,CAMzD,mBANyD;AAAA,MAOzD,QAPyD,GAcvD,KAduD,CAOzD,QAPyD;AAAA,MAQzD,UARyD,GAcvD,KAduD,CAQzD,UARyD;AAAA,MASzD,OATyD,GAcvD,KAduD,CASzD,OATyD;AAAA,MAUzD,aAVyD,GAcvD,KAduD,CAUzD,aAVyD;AAAA,MAWzD,WAXyD,GAcvD,KAduD,CAWzD,WAXyD;AAAA,MAYzD,QAZyD,GAcvD,KAduD,CAYzD,QAZyD;AAAA,MAazD,iBAbyD,GAcvD,KAduD,CAazD,iBAbyD;AAe3D,SACE,kBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,YAAK,SAAL;AAAd,GAAA,EACE,kBAAA,aAAA,CAAC,wBAAD,EAAa;AACX,IAAA,SAAS,EAAE,SADA;AAEX,IAAA,WAAW,EAAE,WAFF;AAGX,IAAA,OAAO,EAAE,OAHE;AAIX,IAAA,UAAU,EAAE,UAJD;AAKX,IAAA,QAAQ,EAAE,oBALC;AAMX,IAAA,OAAO,EAAE,mBANE;AAOX,IAAA,QAAQ,EAAE,QAPC;AAQX,IAAA,OAAO,EAAE,OARE;AASX,IAAA,aAAa,EAAE,aATJ;AAUX,IAAA,iBAAiB,EAAE,iBAVR;AAWX,IAAA,QAAQ,EAAE;AAXC,GAAb,CADF,EAcE,kBAAA,aAAA,CAAC,wBAAD,EAAa;AACX,IAAA,SAAS,EAAE,SADA;AAEX,IAAA,OAAO,EAAE,OAFE;AAGX,IAAA,oBAAoB,EAAE,oBAHX;AAIX,IAAA,iBAAiB,EAAE;AAJR,GAAb,CAdF,CADF;AAuBD","sourcesContent":["import React from 'react';\nimport FilterSelect from './FilterSelect';\nimport ColumnFilter from './ColumnFilter';\nimport { ColumnProps, TableStateFilters } from './interface';\n\nexport interface FilterBarProps<T> {\n  prefixCls?: string;\n  placeholder?: string;\n  dataSource?: T[];\n  filters?: string[];\n  columnFilters?: TableStateFilters;\n  multiple?: boolean;\n  columns?: ColumnProps<T>[];\n  onFilterSelectChange?: (filters?: any[]) => void;\n  onFilterSelectClear?: () => void;\n  onColumnFilterChange?: (columns?: ColumnProps<T>[]) => void;\n  onFilter?: (column: ColumnProps<T>, nextFilters: string[]) => void;\n  getPopupContainer?: (triggerNode?: Element) => HTMLElement;\n}\n\nexport default function FilterBar<T>(props: FilterBarProps<T>) {\n  const {\n    prefixCls,\n    columns,\n    onColumnFilterChange,\n    onFilterSelectChange,\n    onFilterSelectClear,\n    onFilter,\n    dataSource,\n    filters,\n    columnFilters,\n    placeholder,\n    multiple,\n    getPopupContainer,\n  } = props;\n  return (\n    <div className={`${prefixCls}-filter-bar`}>\n      <FilterSelect\n        prefixCls={prefixCls}\n        placeholder={placeholder}\n        columns={columns}\n        dataSource={dataSource}\n        onChange={onFilterSelectChange}\n        onClear={onFilterSelectClear}\n        onFilter={onFilter}\n        filters={filters}\n        columnFilters={columnFilters}\n        getPopupContainer={getPopupContainer}\n        multiple={multiple}\n      />\n      <ColumnFilter\n        prefixCls={prefixCls}\n        columns={columns}\n        onColumnFilterChange={onColumnFilterChange}\n        getPopupContainer={getPopupContainer}\n      />\n    </div>\n  );\n}\n"]}