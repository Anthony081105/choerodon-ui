{"version":3,"sources":["createForm.jsx"],"names":["mixin","getForm","getFieldsValue","fieldsStore","getFieldValue","getFieldInstance","setFieldsValue","setFields","setFieldsInitialValue","getFieldDecorator","getFieldProps","getFieldsError","getFieldError","isFieldValidating","isFieldsValidating","isFieldsTouched","isFieldTouched","isSubmitting","submit","validateFields","resetFields","isModifiedFields","isModifiedField","createForm","options"],"mappings":";;;;;;;;;AAAA;;AAEO,IAAMA,KAAK,GAAG;AACnBC,EAAAA,OADmB,qBACT;AACR,WAAO;AACLC,MAAAA,cAAc,EAAE,KAAKC,WAAL,CAAiBD,cAD5B;AAELE,MAAAA,aAAa,EAAE,KAAKD,WAAL,CAAiBC,aAF3B;AAGLC,MAAAA,gBAAgB,EAAE,KAAKA,gBAHlB;AAILC,MAAAA,cAAc,EAAE,KAAKA,cAJhB;AAKLC,MAAAA,SAAS,EAAE,KAAKA,SALX;AAMLC,MAAAA,qBAAqB,EAAE,KAAKL,WAAL,CAAiBK,qBANnC;AAOLC,MAAAA,iBAAiB,EAAE,KAAKA,iBAPnB;AAQLC,MAAAA,aAAa,EAAE,KAAKA,aARf;AASLC,MAAAA,cAAc,EAAE,KAAKR,WAAL,CAAiBQ,cAT5B;AAULC,MAAAA,aAAa,EAAE,KAAKT,WAAL,CAAiBS,aAV3B;AAWLC,MAAAA,iBAAiB,EAAE,KAAKV,WAAL,CAAiBU,iBAX/B;AAYLC,MAAAA,kBAAkB,EAAE,KAAKX,WAAL,CAAiBW,kBAZhC;AAaLC,MAAAA,eAAe,EAAE,KAAKZ,WAAL,CAAiBY,eAb7B;AAcLC,MAAAA,cAAc,EAAE,KAAKb,WAAL,CAAiBa,cAd5B;AAeLC,MAAAA,YAAY,EAAE,KAAKA,YAfd;AAgBLC,MAAAA,MAAM,EAAE,KAAKA,MAhBR;AAiBLC,MAAAA,cAAc,EAAE,KAAKA,cAjBhB;AAkBLC,MAAAA,WAAW,EAAE,KAAKA,WAlBb;AAmBLC,MAAAA,gBAAgB,EAAE,KAAKlB,WAAL,CAAiBkB,gBAnB9B;AAoBLC,MAAAA,eAAe,EAAE,KAAKnB,WAAL,CAAiBmB;AApB7B,KAAP;AAsBD;AAxBkB,CAAd;;;AA2BP,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,SAAO,gCAAeA,OAAf,EAAwB,CAACxB,KAAD,CAAxB,CAAP;AACD;;eAEcuB,U","sourcesContent":["import createBaseForm from './createBaseForm';\n\nexport const mixin = {\n  getForm() {\n    return {\n      getFieldsValue: this.fieldsStore.getFieldsValue,\n      getFieldValue: this.fieldsStore.getFieldValue,\n      getFieldInstance: this.getFieldInstance,\n      setFieldsValue: this.setFieldsValue,\n      setFields: this.setFields,\n      setFieldsInitialValue: this.fieldsStore.setFieldsInitialValue,\n      getFieldDecorator: this.getFieldDecorator,\n      getFieldProps: this.getFieldProps,\n      getFieldsError: this.fieldsStore.getFieldsError,\n      getFieldError: this.fieldsStore.getFieldError,\n      isFieldValidating: this.fieldsStore.isFieldValidating,\n      isFieldsValidating: this.fieldsStore.isFieldsValidating,\n      isFieldsTouched: this.fieldsStore.isFieldsTouched,\n      isFieldTouched: this.fieldsStore.isFieldTouched,\n      isSubmitting: this.isSubmitting,\n      submit: this.submit,\n      validateFields: this.validateFields,\n      resetFields: this.resetFields,\n      isModifiedFields: this.fieldsStore.isModifiedFields,\n      isModifiedField: this.fieldsStore.isModifiedField,\n    };\n  },\n};\n\nfunction createForm(options) {\n  return createBaseForm(options, [mixin]);\n}\n\nexport default createForm;\n"]}