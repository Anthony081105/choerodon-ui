{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/carousel/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA,IAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,MAAM,CAAC,UAAP,GAAoB,MAAM,CAAC,UAAP,IAAqB,0CAAzC;AACD,C,CACD;AACA;;;AACA,IAAM,aAAa,GAAG,OAAO,CAAC,aAAD,CAAP,WAAtB;;IA+CqB,Q;;;;;;;AAArB,sBAAA;AAAA;;AAAA;;AAaU,UAAA,eAAA,GAAkB,0BACxB,YAAK;AAAA,UACK,QADL,GACkB,MAAK,KADvB,CACK,QADL;;AAEH,UAAI,QAAQ,IAAI,MAAK,KAAjB,IAA0B,MAAK,KAAL,CAAW,WAArC,IAAoD,MAAK,KAAL,CAAW,WAAX,CAAuB,QAA/E,EAAyF;AACvF,cAAK,KAAL,CAAW,WAAX,CAAuB,QAAvB;AACD;AACF,KANuB,EAOxB,GAPwB,EAQxB;AACE,MAAA,OAAO,EAAE;AADX,KARwB,CAAlB;;AA8BR,UAAA,SAAA,GAAY,UAAC,IAAD,EAAc;AACxB,YAAK,KAAL,GAAa,IAAb;AACD,KAFD;;AA3CF;AAgFC;;;;wCAtDkB;AAAA,UACP,QADO,GACM,KAAK,KADX,CACP,QADO;;AAEf,UAAI,QAAJ,EAAc;AACZ,QAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,eAAvC;AACD;;AAED,WAAK,WAAL,GAAmB,KAAK,KAAL,IAAc,KAAK,KAAL,CAAW,WAA5C;AACD;;;2CAEmB;AAAA,UACV,QADU,GACG,KAAK,KADR,CACV,QADU;;AAElB,UAAI,QAAJ,EAAc;AACZ,QAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,eAA1C;AACC,aAAK,eAAL,CAA6B,MAA7B;AACF;AACF;;;2BAMG;AACF,WAAK,KAAL,CAAW,SAAX;AACD;;;2BAEG;AACF,WAAK,KAAL,CAAW,SAAX;AACD;;;yBAEI,K,EAAa;AAChB,WAAK,KAAL,CAAW,SAAX,CAAqB,KAArB;AACD;;;6BAEK;AACJ,UAAM,KAAK,sCACN,KAAK,KADC,CAAX;;AAIA,UAAI,KAAK,CAAC,MAAN,KAAiB,MAArB,EAA6B;AAC3B,QAAA,KAAK,CAAC,IAAN,GAAa,IAAb;AACD;;AAED,UAAM,SAAS,GAAG,6BAAa,UAAb,EAAyB,KAAK,CAAC,SAA/B,CAAlB;AAEA,UAAM,SAAS,GAAG,4BAAW,SAAX,iDACZ,SADY,gBACW,KAAK,CAAC,QADjB,EAAlB;AAIA,aACE,kBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE;AAAhB,OAAA,EACE,kBAAA,aAAA,CAAC,aAAD,EAAc,0BAAA;AAAC,QAAA,GAAG,EAAE,KAAK;AAAX,OAAA,EAA0B,KAA1B,CAAd,CADF,CADF;AAKD;;;EA/EmC,gB;;;AAC7B,QAAA,CAAA,WAAA,GAAc,UAAd;AAEA,QAAA,CAAA,YAAA,GAAe;AACpB,EAAA,IAAI,EAAE,IADc;AAEpB,EAAA,MAAM,EAAE,KAFY;AAGpB,EAAA,SAAS,EAAE;AAHS,CAAf","sourcesContent":["import React, { Component, CSSProperties } from 'react';\nimport debounce from 'lodash/debounce';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../configure';\nimport { matchMediaPolifill } from '../_util/mediaQueryListPolyfill';\n\n// matchMedia polyfill for\n// https://github.com/WickyNilliams/enquire.js/issues/82\nif (typeof window !== 'undefined') {\n  // const matchMediaPolyfill = (mediaQuery: string): MediaQueryList => {\n  //   return {\n  //     media: mediaQuery,\n  //     matches: false,\n  //     addListener() {\n  //     },\n  //     removeListener() {\n  //     },\n  //   };\n  // };\n  window.matchMedia = window.matchMedia || matchMediaPolifill;\n}\n// Use require over import (will be lifted up)\n// make sure matchMedia polyfill run before require('react-slick')\nconst SlickCarousel = require('react-slick').default;\n\nexport type CarouselEffect = 'scrollx' | 'fade';\n\n// Carousel\nexport interface CarouselProps {\n  effect?: CarouselEffect;\n  dots?: boolean;\n  vertical?: boolean;\n  autoplay?: boolean;\n  easing?: string;\n  beforeChange?: (from: number, to: number) => void;\n  afterChange?: (current: number) => void;\n  style?: CSSProperties;\n  prefixCls?: string;\n  accessibility?: boolean;\n  nextArrow?: HTMLElement | any;\n  prevArrow?: HTMLElement | any;\n  pauseOnHover?: boolean;\n  className?: string;\n  adaptiveHeight?: boolean;\n  arrows?: boolean;\n  autoplaySpeed?: number;\n  centerMode?: boolean;\n  centerPadding?: string | any;\n  cssEase?: string | any;\n  dotsClass?: string;\n  draggable?: boolean;\n  fade?: boolean;\n  focusOnSelect?: boolean;\n  infinite?: boolean;\n  initialSlide?: number;\n  lazyLoad?: boolean;\n  rtl?: boolean;\n  slide?: string;\n  slidesToShow?: number;\n  slidesToScroll?: number;\n  speed?: number;\n  swipe?: boolean;\n  swipeToSlide?: boolean;\n  touchMove?: boolean;\n  touchThreshold?: number;\n  variableWidth?: boolean;\n  useCSS?: boolean;\n  slickGoTo?: number;\n}\n\nexport default class Carousel extends Component<CarouselProps, {}> {\n  static displayName = 'Carousel';\n\n  static defaultProps = {\n    dots: true,\n    arrows: false,\n    draggable: false,\n  };\n\n  innerSlider: any;\n\n  private slick: any;\n\n  private onWindowResized = debounce(\n    () => {\n      const { autoplay } = this.props;\n      if (autoplay && this.slick && this.slick.innerSlider && this.slick.innerSlider.autoPlay) {\n        this.slick.innerSlider.autoPlay();\n      }\n    },\n    500,\n    {\n      leading: false,\n    },\n  );\n\n  componentDidMount() {\n    const { autoplay } = this.props;\n    if (autoplay) {\n      window.addEventListener('resize', this.onWindowResized);\n    }\n\n    this.innerSlider = this.slick && this.slick.innerSlider;\n  }\n\n  componentWillUnmount() {\n    const { autoplay } = this.props;\n    if (autoplay) {\n      window.removeEventListener('resize', this.onWindowResized);\n      (this.onWindowResized as any).cancel();\n    }\n  }\n\n  saveSlick = (node: any) => {\n    this.slick = node;\n  };\n\n  next() {\n    this.slick.slickNext();\n  }\n\n  prev() {\n    this.slick.slickPrev();\n  }\n\n  goTo(slide: number) {\n    this.slick.slickGoTo(slide);\n  }\n\n  render() {\n    const props: CarouselProps & { children?: any } = {\n      ...this.props,\n    };\n\n    if (props.effect === 'fade') {\n      props.fade = true;\n    }\n\n    const prefixCls = getPrefixCls('carousel', props.prefixCls);\n\n    const className = classNames(prefixCls, {\n      [`${prefixCls}-vertical`]: props.vertical,\n    });\n\n    return (\n      <div className={className}>\n        <SlickCarousel ref={this.saveSlick} {...props} />\n      </div>\n    );\n  }\n}\n"]}