{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/Cell.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { LAYER_WIDTH } from './constants';\nimport { isNullOrUndefined, defaultClassPrefix, getUnhandledProps, prefix } from './utils';\nimport TableContext from './TableContext';\nimport Column from './Column';\nimport { CellProps } from './Cell.d';\n\nexport const propTypes = {\n  align: PropTypes.oneOf(['left', 'center', 'right']),\n  verticalAlign: PropTypes.oneOf(['top', 'middle', 'bottom']),\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  dataKey: PropTypes.string,\n  isHeaderCell: PropTypes.bool,\n  width: PropTypes.number,\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  left: PropTypes.number,\n  headerHeight: PropTypes.number,\n  style: PropTypes.object,\n  firstColumn: PropTypes.bool,\n  lastColumn: PropTypes.bool,\n  hasChildren: PropTypes.bool,\n  children: PropTypes.any,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowIndex: PropTypes.number,\n  rowData: PropTypes.object,\n  depth: PropTypes.number,\n  onTreeToggle: PropTypes.func,\n  renderTreeToggle: PropTypes.func,\n  renderCell: PropTypes.func,\n  wordWrap: PropTypes.bool,\n  removed: PropTypes.bool,\n  treeCol: PropTypes.bool,\n  expanded: PropTypes.bool,\n  groupHeader: PropTypes.node,\n  groupCount: PropTypes.number,\n};\n\nclass Cell extends React.PureComponent<CellProps> {\n  static contextType = TableContext;\n  static propTypes = propTypes;\n  static defaultProps = {\n    classPrefix: defaultClassPrefix('performance-table-cell'),\n    headerHeight: 36,\n    depth: 0,\n    height: 36,\n    width: 0,\n    left: 0,\n  };\n\n  // @ts-ignore\n  addPrefix = (name: string) => prefix(this.props.classPrefix)(name);\n\n  isTreeCol() {\n    const { treeCol, firstColumn } = this.props;\n    const { hasCustomTreeCol } = this.context;\n\n    if (treeCol) {\n      return true;\n    }\n\n    if (!hasCustomTreeCol && firstColumn) {\n      return true;\n    }\n\n    return false;\n  }\n\n  getHeight() {\n    const { height, rowData } = this.props;\n    // @ts-ignore\n    return typeof height === 'function' ? height(rowData) : height;\n  }\n\n  handleExpandClick = (event: React.MouseEvent) => {\n    const { rowKey, rowIndex, rowData } = this.props;\n    this.props.onTreeToggle?.(rowKey, rowIndex, rowData, event);\n  };\n\n  renderTreeNodeExpandIcon() {\n    const { rowData, renderTreeToggle, hasChildren, expanded } = this.props;\n    const expandButton = <i className={this.addPrefix('expand-icon icon')} />;\n\n    if (this.isTreeCol() && hasChildren) {\n      return (\n        <span\n          role=\"button\"\n          tabIndex={-1}\n          className={this.addPrefix('expand-wrapper')}\n          onClick={this.handleExpandClick}\n        >\n          {renderTreeToggle ? renderTreeToggle(expandButton, rowData, expanded) : expandButton}\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      width,\n      left,\n      style,\n      className,\n      firstColumn,\n      lastColumn,\n      isHeaderCell,\n      headerHeight,\n      align,\n      children,\n      rowData,\n      dataKey,\n      rowIndex,\n      renderCell,\n      removed,\n      wordWrap,\n      classPrefix,\n      depth,\n      verticalAlign,\n      expanded,\n      ...rest\n    } = this.props;\n\n    if (removed) {\n      return null;\n    }\n\n    const classes = classNames(classPrefix, className, {\n      [this.addPrefix('expanded')]: expanded && this.isTreeCol(),\n      [this.addPrefix('first')]: firstColumn,\n      [this.addPrefix('last')]: lastColumn,\n    });\n    const { rtl } = this.context;\n\n    const nextHeight = isHeaderCell ? headerHeight : this.getHeight();\n    const styles = {\n      width,\n      height: nextHeight,\n      zIndex: depth,\n      [rtl ? 'right' : 'left']: left,\n    };\n\n    const contentStyles: React.CSSProperties = {\n      width,\n      height: nextHeight,\n      textAlign: align,\n      [rtl ? 'paddingRight' : 'paddingLeft']: this.isTreeCol() ? depth * LAYER_WIDTH + 10 : null,\n      ...style,\n    };\n\n    if (verticalAlign) {\n      contentStyles.display = 'table-cell';\n      contentStyles.verticalAlign = verticalAlign;\n    }\n\n    // @ts-ignore\n    let cellContent = isNullOrUndefined(children) && rowData ? rowData[dataKey] : children;\n\n    if (typeof children === 'function') {\n      const getChildren = children as Function;\n      cellContent = getChildren(rowData, rowIndex);\n    }\n\n    const unhandledProps = getUnhandledProps(Cell, getUnhandledProps(Column, rest));\n    const cell = renderCell ? renderCell(cellContent) : cellContent;\n    const content = wordWrap ? (\n      <div className={this.addPrefix('wrap')}>\n        {this.renderTreeNodeExpandIcon()}\n        {cell}\n      </div>\n    ) : (\n      <React.Fragment>\n        {this.renderTreeNodeExpandIcon()}\n        {cell}\n      </React.Fragment>\n    );\n\n    return (\n      <div {...unhandledProps} className={classes} style={styles}>\n        <div className={this.addPrefix('content')} style={contentStyles}>\n          {content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cell;\n"]}