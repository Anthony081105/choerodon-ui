{"version":3,"sources":["Dropdown.jsx"],"names":["Dropdown","props","e","overlayProps","overlay","setState","visible","onOverlayClick","onClick","onVisibleChange","minOverlayWidthMatchTrigger","overlayNode","getPopupDomNode","rootNode","ReactDOM","findDOMNode","offsetWidth","style","minWidth","trigger","_component","alignInstance","forceAlign","node","state","defaultVisible","undefined","prefixCls","extraOverlayProps","type","children","transitionName","animation","align","placement","getPopupContainer","showAction","hideAction","overlayClassName","overlayStyle","otherProps","saveTrigger","placements","afterVisibleChange","getMenuElement","Component","PropTypes","bool","func","string","any","object","array"],"mappings":"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","sourcesContent":["import React, { cloneElement, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport Trigger from '../trigger';\nimport placements from './placements';\n\nexport default class Dropdown extends Component {\n  static propTypes = {\n    minOverlayWidthMatchTrigger: PropTypes.bool,\n    onVisibleChange: PropTypes.func,\n    onOverlayClick: PropTypes.func,\n    prefixCls: PropTypes.string,\n    children: PropTypes.any,\n    transitionName: PropTypes.string,\n    overlayClassName: PropTypes.string,\n    animation: PropTypes.any,\n    align: PropTypes.object,\n    overlayStyle: PropTypes.object,\n    placement: PropTypes.string,\n    overlay: PropTypes.node,\n    trigger: PropTypes.array,\n    showAction: PropTypes.array,\n    hideAction: PropTypes.array,\n    getPopupContainer: PropTypes.func,\n    visible: PropTypes.bool,\n    defaultVisible: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    minOverlayWidthMatchTrigger: true,\n    prefixCls: 'rc-dropdown',\n    trigger: ['hover'],\n    showAction: [],\n    hideAction: [],\n    overlayClassName: '',\n    overlayStyle: {},\n    defaultVisible: false,\n    onVisibleChange() {},\n    placement: 'bottomLeft',\n  };\n\n  constructor(props) {\n    super(props);\n    if ('visible' in props) {\n      this.state = {\n        visible: props.visible,\n      };\n    } else {\n      this.state = {\n        visible: props.defaultVisible,\n      };\n    }\n  }\n\n  componentWillReceiveProps({ visible }) {\n    if (visible !== undefined) {\n      this.setState({\n        visible,\n      });\n    }\n  }\n\n  onClick = e => {\n    const props = this.props;\n    const overlayProps = props.overlay.props;\n    // do no call onVisibleChange, if you need click to hide, use onClick and control visible\n    if (!('visible' in props)) {\n      this.setState({\n        visible: false,\n      });\n    }\n    if (props.onOverlayClick) {\n      props.onOverlayClick(e);\n    }\n    if (overlayProps.onClick) {\n      overlayProps.onClick(e);\n    }\n  };\n\n  onVisibleChange = visible => {\n    const props = this.props;\n    if (!('visible' in props)) {\n      this.setState({\n        visible,\n      });\n    }\n    props.onVisibleChange(visible);\n  };\n\n  getMenuElement() {\n    const { overlay, prefixCls } = this.props;\n    const extraOverlayProps = {\n      prefixCls: `${prefixCls}-menu`,\n      onClick: this.onClick,\n    };\n    if (typeof overlay.type === 'string') {\n      delete extraOverlayProps.prefixCls;\n    }\n    return cloneElement(overlay, extraOverlayProps);\n  }\n\n  getPopupDomNode() {\n    return this.trigger.getPopupDomNode();\n  }\n\n  afterVisibleChange = visible => {\n    if (visible && this.props.minOverlayWidthMatchTrigger) {\n      const overlayNode = this.getPopupDomNode();\n      const rootNode = ReactDOM.findDOMNode(this);\n      if (rootNode && overlayNode && rootNode.offsetWidth > overlayNode.offsetWidth) {\n        overlayNode.style.minWidth = `${rootNode.offsetWidth}px`;\n        if (this.trigger && this.trigger._component && this.trigger._component.alignInstance) {\n          this.trigger._component.alignInstance.forceAlign();\n        }\n      }\n    }\n  };\n\n  saveTrigger = node => {\n    this.trigger = node;\n  };\n\n  render() {\n    const {\n      prefixCls,\n      children,\n      transitionName,\n      animation,\n      align,\n      placement,\n      getPopupContainer,\n      showAction,\n      hideAction,\n      overlayClassName,\n      overlayStyle,\n      trigger,\n      ...otherProps\n    } = this.props;\n    return (\n      <Trigger\n        {...otherProps}\n        prefixCls={prefixCls}\n        ref={this.saveTrigger}\n        popupClassName={overlayClassName}\n        popupStyle={overlayStyle}\n        builtinPlacements={placements}\n        action={trigger}\n        showAction={showAction}\n        hideAction={hideAction}\n        popupPlacement={placement}\n        popupAlign={align}\n        popupTransitionName={transitionName}\n        popupAnimation={animation}\n        popupVisible={this.state.visible}\n        afterPopupVisibleChange={this.afterVisibleChange}\n        popup={this.getMenuElement()}\n        onPopupVisibleChange={this.onVisibleChange}\n        getPopupContainer={getPopupContainer}\n      >\n        {children}\n      </Trigger>\n    );\n  }\n}\n"]}