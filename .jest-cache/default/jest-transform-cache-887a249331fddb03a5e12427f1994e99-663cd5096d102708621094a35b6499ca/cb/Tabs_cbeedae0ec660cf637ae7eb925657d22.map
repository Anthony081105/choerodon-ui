{"version":3,"sources":["Tabs.jsx"],"names":["getDefaultActiveKey","props","activeKey","Children","forEach","children","child","index","disabled","key","activeKeyIsValid","keys","map","indexOf","Tabs","tabBar","onTabClick","setActiveKey","e","eventKeyCode","keyCode","KeyCode","RIGHT","DOWN","preventDefault","nextKey","getNextActiveKey","LEFT","UP","previousKey","state","setState","onChange","next","c","push","unshift","length","ret","i","defaultActiveKey","nextProps","prefixCls","tabBarPosition","className","renderTabContent","renderTabBar","destroyInactiveTabPane","restProps","cls","contents","onKeyDown","onNavKeyDown","panels","reverse","style","Component","PropTypes","bool","func","isRequired","any","string","object","noop","TabPane"],"mappings":"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","sourcesContent":["import React, { Children, cloneElement, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from 'lodash/noop';\nimport classnames from 'classnames';\nimport KeyCode from './KeyCode';\nimport TabPane from './TabPane';\nimport { generateKey, getDataAttr } from './utils';\n\nfunction getDefaultActiveKey(props) {\n  let activeKey;\n  Children.forEach(props.children, (child, index) => {\n    if (child && !activeKey && !child.props.disabled) {\n      activeKey = generateKey(child.key, index);\n    }\n  });\n  return activeKey;\n}\n\nfunction activeKeyIsValid(props, key) {\n  const keys = Children.map(\n    props.children,\n    (child, index) => child && generateKey(child.key, index),\n  );\n  return keys.indexOf(key) >= 0;\n}\n\nexport default class Tabs extends Component {\n  static propTypes = {\n    destroyInactiveTabPane: PropTypes.bool,\n    renderTabBar: PropTypes.func.isRequired,\n    renderTabContent: PropTypes.func.isRequired,\n    onChange: PropTypes.func,\n    children: PropTypes.any,\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    tabBarPosition: PropTypes.string,\n    style: PropTypes.object,\n    activeKey: PropTypes.string,\n    defaultActiveKey: PropTypes.string,\n  };\n\n  static defaultProps = {\n    prefixCls: 'rc-tabs',\n    destroyInactiveTabPane: false,\n    onChange: noop,\n    tabBarPosition: 'top',\n    style: {},\n  };\n\n  static TabPane = TabPane;\n\n  constructor(props) {\n    super(props);\n\n    let activeKey;\n    if ('activeKey' in props) {\n      activeKey = props.activeKey;\n    } else if ('defaultActiveKey' in props) {\n      activeKey = props.defaultActiveKey;\n    } else {\n      activeKey = getDefaultActiveKey(props);\n    }\n\n    this.state = {\n      activeKey,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ('activeKey' in nextProps) {\n      this.setState({\n        activeKey: nextProps.activeKey,\n      });\n    } else if (!activeKeyIsValid(nextProps, this.state.activeKey)) {\n      this.setState({\n        activeKey: getDefaultActiveKey(nextProps),\n      });\n    }\n  }\n\n  onTabClick = activeKey => {\n    if (this.tabBar.props.onTabClick) {\n      this.tabBar.props.onTabClick(activeKey);\n    }\n    this.setActiveKey(activeKey);\n  };\n\n  onNavKeyDown = e => {\n    const eventKeyCode = e.keyCode;\n    if (eventKeyCode === KeyCode.RIGHT || eventKeyCode === KeyCode.DOWN) {\n      e.preventDefault();\n      const nextKey = this.getNextActiveKey(true);\n      this.onTabClick(nextKey);\n    } else if (eventKeyCode === KeyCode.LEFT || eventKeyCode === KeyCode.UP) {\n      e.preventDefault();\n      const previousKey = this.getNextActiveKey(false);\n      this.onTabClick(previousKey);\n    }\n  };\n\n  setActiveKey = activeKey => {\n    if (this.state.activeKey !== activeKey) {\n      if (!('activeKey' in this.props)) {\n        this.setState({\n          activeKey,\n        });\n      }\n      this.props.onChange(activeKey);\n    }\n  };\n\n  getNextActiveKey = next => {\n    const activeKey = this.state.activeKey;\n    const children = [];\n    Children.forEach(this.props.children, c => {\n      if (c && !c.props.disabled) {\n        if (next) {\n          children.push(c);\n        } else {\n          children.unshift(c);\n        }\n      }\n    });\n    const length = children.length;\n    let ret = length && generateKey(children[0].key, 0);\n    children.forEach((child, i) => {\n      if (generateKey(child.key, i) === activeKey) {\n        if (i === length - 1) {\n          ret = generateKey(children[0].key, 0);\n        } else {\n          ret = generateKey(children[i + 1].key, i + 1);\n        }\n      }\n    });\n    return ret;\n  };\n\n  render() {\n    const props = this.props;\n    const {\n      prefixCls,\n      tabBarPosition,\n      className,\n      renderTabContent,\n      renderTabBar,\n      destroyInactiveTabPane,\n      ...restProps\n    } = props;\n    const cls = classnames({\n      [prefixCls]: 1,\n      [`${prefixCls}-${tabBarPosition}`]: 1,\n      [className]: !!className,\n    });\n\n    this.tabBar = renderTabBar();\n    const contents = [\n      cloneElement(this.tabBar, {\n        prefixCls,\n        key: 'tabBar',\n        onKeyDown: this.onNavKeyDown,\n        tabBarPosition,\n        onTabClick: this.onTabClick,\n        panels: props.children,\n        activeKey: this.state.activeKey,\n      }),\n      cloneElement(renderTabContent(), {\n        prefixCls,\n        tabBarPosition,\n        activeKey: this.state.activeKey,\n        destroyInactiveTabPane,\n        children: props.children,\n        onChange: this.setActiveKey,\n        key: 'tabContent',\n      }),\n    ];\n    if (tabBarPosition === 'bottom') {\n      contents.reverse();\n    }\n    return (\n      <div className={cls} style={props.style} {...getDataAttr(restProps)}>\n        {contents}\n      </div>\n    );\n  }\n}\n"]}