{"version":3,"sources":["Table.sorter.test.js"],"names":["describe","sorterFn","a","b","name","charCodeAt","column","title","dataIndex","sorter","data","key","createTable","tableProps","columnProps","renderedNames","wrapper","find","map","row","props","record","it","expect","toMatchSnapshot","defaultSortOrder","toEqual","columnHead","simulate","columns","sortOrder","handleChange","jest","fn","onChange","mock","calls","toBe","order","field","columnKey","children","testData","age"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render, mount } from 'enzyme';\nimport Table from '..';\n\ndescribe('Table.sorter', () => {\n  const sorterFn = (a, b) => a.name[0].charCodeAt() - b.name[0].charCodeAt();\n\n  const column = {\n    title: 'Name',\n    dataIndex: 'name',\n    sorter: sorterFn,\n  };\n\n  const data = [\n    { key: 0, name: 'Jack' },\n    { key: 1, name: 'Lucy' },\n    { key: 2, name: 'Tom' },\n    { key: 3, name: 'Jerry' },\n  ];\n\n  function createTable(tableProps, columnProps = {}) {\n    return (\n      <Table\n        columns={[\n          {\n            ...column,\n            ...columnProps,\n          },\n        ]}\n        dataSource={data}\n        pagination={false}\n        {...tableProps}\n      />\n    );\n  }\n\n  function renderedNames(wrapper) {\n    return wrapper.find('TableRow').map(row => row.props().record.name);\n  }\n\n  it('renders sorter icon correctly', () => {\n    const wrapper = render(createTable());\n    expect(wrapper.find('thead')).toMatchSnapshot();\n  });\n\n  it('default sort order ascend', () => {\n    const wrapper = mount(\n      createTable(\n        {},\n        {\n          defaultSortOrder: 'ascend',\n        },\n      ),\n    );\n\n    expect(renderedNames(wrapper)).toEqual(['Jack', 'Jerry', 'Lucy', 'Tom']);\n  });\n\n  it('default sort order descend', () => {\n    const wrapper = mount(\n      createTable(\n        {},\n        {\n          defaultSortOrder: 'descend',\n        },\n      ),\n    );\n\n    expect(renderedNames(wrapper)).toEqual(['Tom', 'Lucy', 'Jack', 'Jerry']);\n  });\n\n  it('sort records', () => {\n    const wrapper = mount(createTable());\n    const columnHead = wrapper.find('th.c7n-table-column-has-filters');\n    columnHead.simulate('click');\n    expect(renderedNames(wrapper)).toEqual(['Jack', 'Jerry', 'Lucy', 'Tom']);\n\n    columnHead.simulate('click');\n    expect(renderedNames(wrapper)).toEqual(['Tom', 'Lucy', 'Jack', 'Jerry']);\n  });\n\n  it('can be controlled by sortOrder', () => {\n    const wrapper = mount(\n      createTable({\n        columns: [{ ...column, sortOrder: 'ascend' }],\n      }),\n    );\n    expect(renderedNames(wrapper)).toEqual(['Jack', 'Jerry', 'Lucy', 'Tom']);\n  });\n\n  it('fires change event', () => {\n    const handleChange = jest.fn();\n    const wrapper = mount(createTable({ onChange: handleChange }));\n\n    wrapper.find('th.c7n-table-column-has-filters').simulate('click');\n\n    const sorter = handleChange.mock.calls[0][2];\n    expect(sorter.column.dataIndex).toBe('name');\n    expect(sorter.order).toBe('ascend');\n    expect(sorter.field).toBe('name');\n    expect(sorter.columnKey).toBe('name');\n  });\n\n  it('works with grouping columns in controlled mode', () => {\n    const columns = [\n      {\n        title: 'group',\n        key: 'group',\n        children: [\n          {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            sorter: sorterFn,\n            sortOrder: 'descend',\n          },\n          {\n            title: 'Age',\n            dataIndex: 'age',\n            key: 'age',\n          },\n        ],\n      },\n    ];\n    const testData = [\n      { key: 0, name: 'Jack', age: 11 },\n      { key: 1, name: 'Lucy', age: 20 },\n      { key: 2, name: 'Tom', age: 21 },\n      { key: 3, name: 'Jerry', age: 22 },\n    ];\n    const wrapper = mount(<Table columns={columns} dataSource={testData} />);\n\n    expect(renderedNames(wrapper)).toEqual(['Tom', 'Lucy', 'Jack', 'Jerry']);\n  });\n});\n"]}