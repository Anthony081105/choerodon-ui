02569f9410393b2bf486fd2033ad120c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _button = _interopRequireDefault(require("../../../components/button"));

var _timePicker = _interopRequireDefault(require("../../../components/time-picker"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _datePicker = _interopRequireDefault(require("../../../components/date-picker"));

var _form = _interopRequireDefault(require("../../../components/form"));

var _react = _interopRequireDefault(require("react"));

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = (0, _getPrototypeOf2["default"])(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0, _possibleConstructorReturn2["default"])(this, result);
  };
}

var FormItem = _form["default"].Item;
var MonthPicker = _datePicker["default"].MonthPicker;
var RangePicker = _datePicker["default"].RangePicker;

var TimeRelatedForm =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(TimeRelatedForm, _React$Component);

  var _super = _createSuper(TimeRelatedForm);

  function TimeRelatedForm() {
    var _this;

    (0, _classCallCheck2["default"])(this, TimeRelatedForm);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleSubmit", function (e) {
      e.preventDefault();

      _this.props.form.validateFields(function (err, fieldsValue) {
        if (err) {
          return;
        } // Should format date value before submit.


        var rangeValue = fieldsValue['range-picker'];
        var rangeTimeValue = fieldsValue['range-time-picker'];
        var values = (0, _objectSpread2["default"])({}, fieldsValue, {
          'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),
          'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),
          'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),
          'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],
          'range-time-picker': [rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'), rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss')],
          'time-picker': fieldsValue['time-picker'].format('HH:mm:ss')
        });
        console.log('Received values of form: ', values);
      });
    });
    return _this;
  }

  (0, _createClass2["default"])(TimeRelatedForm, [{
    key: "render",
    value: function render() {
      var getFieldDecorator = this.props.form.getFieldDecorator;
      var formItemLayout = {
        labelCol: {
          xs: {
            span: 24
          },
          sm: {
            span: 8
          }
        },
        wrapperCol: {
          xs: {
            span: 24
          },
          sm: {
            span: 16
          }
        }
      };
      var config = {
        rules: [{
          type: 'object',
          required: true,
          message: 'Please select time!'
        }]
      };
      var rangeConfig = {
        rules: [{
          type: 'array',
          required: true,
          message: 'Please select time!'
        }]
      };
      return _react["default"].createElement(_form["default"], {
        onSubmit: this.handleSubmit
      }, _react["default"].createElement(FormItem, (0, _extends2["default"])({}, formItemLayout, {
        label: "DatePicker"
      }), getFieldDecorator('date-picker', config)(_react["default"].createElement(_datePicker["default"], null))), _react["default"].createElement(FormItem, (0, _extends2["default"])({}, formItemLayout, {
        label: "DatePicker[showTime]"
      }), getFieldDecorator('date-time-picker', config)(_react["default"].createElement(_datePicker["default"], {
        showTime: true,
        format: "YYYY-MM-DD HH:mm:ss"
      }))), _react["default"].createElement(FormItem, (0, _extends2["default"])({}, formItemLayout, {
        label: "MonthPicker"
      }), getFieldDecorator('month-picker', config)(_react["default"].createElement(MonthPicker, null))), _react["default"].createElement(FormItem, (0, _extends2["default"])({}, formItemLayout, {
        label: "RangePicker"
      }), getFieldDecorator('range-picker', rangeConfig)(_react["default"].createElement(RangePicker, null))), _react["default"].createElement(FormItem, (0, _extends2["default"])({}, formItemLayout, {
        label: "RangePicker[showTime]"
      }), getFieldDecorator('range-time-picker', rangeConfig)(_react["default"].createElement(RangePicker, {
        showTime: true,
        format: "YYYY-MM-DD HH:mm:ss"
      }))), _react["default"].createElement(FormItem, (0, _extends2["default"])({}, formItemLayout, {
        label: "TimePicker"
      }), getFieldDecorator('time-picker', config)(_react["default"].createElement(_timePicker["default"], null))), _react["default"].createElement(FormItem, {
        wrapperCol: {
          xs: {
            span: 24,
            offset: 0
          },
          sm: {
            span: 16,
            offset: 8
          }
        }
      }, _react["default"].createElement(_button["default"], {
        type: "primary",
        htmlType: "submit"
      }, "Submit")));
    }
  }]);
  return TimeRelatedForm;
}(_react["default"].Component);

var WrappedTimeRelatedForm = _form["default"].create()(TimeRelatedForm);

var __Demo = _react["default"].createElement(WrappedTimeRelatedForm, null);

var _default = __Demo;
exports["default"] = _default;