{"version":3,"sources":["tooltip.test.js"],"names":["describe","it","onVisibleChange","jest","fn","wrapper","div","find","at","simulate","expect","not","toHaveBeenCalled","instance","tooltip","props","visible","toBe","setProps","title","toHaveBeenLastCalledWith","lastCount","mock","calls","length","toHaveLength","button","toHaveBeenCalledWith","render","toMatchSnapshot","wrapper1","wrapper2","display","first","getDOMNode","style","arrowWidth","horizontalArrowShift","triggerWidth","suit","width","popupLeftDefault","parseInt","getPopupDomNode","left","popupLeftArrowPointAtCenter","dontMock"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport Tooltip from '..';\nimport Button from '../../button';\n\ndescribe('Tooltip', () => {\n  it('check `onVisibleChange` arguments', () => {\n    const onVisibleChange = jest.fn();\n\n    const wrapper = mount(\n      <Tooltip title=\"\" mouseEnterDelay={0} mouseLeaveDelay={0} onVisibleChange={onVisibleChange}>\n        <div id=\"hello\">Hello world!</div>\n      </Tooltip>,\n    );\n\n    // `title` is empty.\n    const div = wrapper.find('#hello').at(0);\n    div.simulate('mouseenter');\n    expect(onVisibleChange).not.toHaveBeenCalled();\n    expect(wrapper.instance().tooltip.props.visible).toBe(false);\n\n    div.simulate('mouseleave');\n    expect(onVisibleChange).not.toHaveBeenCalled();\n    expect(wrapper.instance().tooltip.props.visible).toBe(false);\n\n    // update `title` value.\n    wrapper.setProps({ title: 'Have a nice day!' });\n    wrapper.find('#hello').simulate('mouseenter');\n    expect(onVisibleChange).toHaveBeenLastCalledWith(true);\n    expect(wrapper.instance().tooltip.props.visible).toBe(true);\n\n    wrapper.find('#hello').simulate('mouseleave');\n    expect(onVisibleChange).toHaveBeenLastCalledWith(false);\n    expect(wrapper.instance().tooltip.props.visible).toBe(false);\n\n    // add `visible` props.\n    wrapper.setProps({ visible: false });\n    wrapper.find('#hello').simulate('mouseenter');\n    expect(onVisibleChange).toHaveBeenLastCalledWith(true);\n    const lastCount = onVisibleChange.mock.calls.length;\n    expect(wrapper.instance().tooltip.props.visible).toBe(false);\n\n    // always trigger onVisibleChange\n    wrapper.simulate('mouseleave');\n    expect(onVisibleChange.mock.calls.length).toBe(lastCount); // no change with lastCount\n    expect(wrapper.instance().tooltip.props.visible).toBe(false);\n  });\n\n  it('should hide when mouse leave native disabled button', () => {\n    const onVisibleChange = jest.fn();\n    const wrapper = mount(\n      <Tooltip\n        title=\"xxxxx\"\n        mouseEnterDelay={0}\n        mouseLeaveDelay={0}\n        onVisibleChange={onVisibleChange}\n      >\n        <button type=\"button\" disabled>\n          Hello world!\n        </button>\n      </Tooltip>,\n    );\n\n    expect(wrapper.find('span')).toHaveLength(1);\n    const button = wrapper.find('span').at(0);\n    button.simulate('mouseenter');\n    expect(onVisibleChange).toHaveBeenCalledWith(true);\n    expect(wrapper.instance().tooltip.props.visible).toBe(true);\n\n    button.simulate('mouseleave');\n    expect(onVisibleChange).toHaveBeenCalledWith(false);\n    expect(wrapper.instance().tooltip.props.visible).toBe(false);\n  });\n\n  it('should hide when mouse leave choerodon-ui disabled Button', () => {\n    const onVisibleChange = jest.fn();\n    const wrapper = mount(\n      <Tooltip\n        title=\"xxxxx\"\n        mouseEnterDelay={0}\n        mouseLeaveDelay={0}\n        onVisibleChange={onVisibleChange}\n      >\n        <Button disabled>Hello world!</Button>\n      </Tooltip>,\n    );\n\n    expect(wrapper.render()).toMatchSnapshot();\n    const button = wrapper.find('span').at(0);\n    button.simulate('mouseenter');\n    expect(onVisibleChange).toHaveBeenCalledWith(true);\n    expect(wrapper.instance().tooltip.props.visible).toBe(true);\n\n    button.simulate('mouseleave');\n    expect(onVisibleChange).toHaveBeenCalledWith(false);\n    expect(wrapper.instance().tooltip.props.visible).toBe(false);\n  });\n\n  it('should render disabled Button style properly', () => {\n    const wrapper1 = mount(\n      <Tooltip title=\"xxxxx\">\n        <Button disabled>Hello world!</Button>\n      </Tooltip>,\n    );\n    const wrapper2 = mount(\n      <Tooltip title=\"xxxxx\">\n        <Button disabled style={{ display: 'block' }}>\n          Hello world!\n        </Button>\n      </Tooltip>,\n    );\n    expect(\n      wrapper1\n        .find('span')\n        .first()\n        .getDOMNode().style.display,\n    ).toBe('inline-block');\n    expect(\n      wrapper2\n        .find('span')\n        .first()\n        .getDOMNode().style.display,\n    ).toBe('block');\n  });\n\n  it('should not wrap span when trigger is not hover', () => {\n    const wrapper = mount(\n      <Tooltip title=\"xxxxx\" trigger=\"click\" mouseEnterDelay={0} mouseLeaveDelay={0}>\n        <button type=\"button\" disabled>\n          Hello world!\n        </button>\n      </Tooltip>,\n    );\n\n    expect(wrapper.find('span')).toHaveLength(0);\n  });\n\n  it('should works for arrowPointAtCenter', () => {\n    const arrowWidth = 5;\n    const horizontalArrowShift = 16;\n    const triggerWidth = 200;\n\n    const suit = () => {\n      const wrapper = mount(\n        <Tooltip\n          title=\"xxxxx\"\n          trigger=\"click\"\n          mouseEnterDelay={0}\n          mouseLeaveDelay={0}\n          placement=\"bottomLeft\"\n        >\n          <button type=\"button\" style={{ width: triggerWidth }}>\n            Hello world!\n          </button>\n        </Tooltip>,\n      );\n      wrapper\n        .find('button')\n        .at(0)\n        .simulate('click');\n      const popupLeftDefault = parseInt(wrapper.instance().getPopupDomNode().style.left, 10);\n\n      const wrapper2 = mount(\n        <Tooltip\n          title=\"xxxxx\"\n          trigger=\"click\"\n          mouseEnterDelay={0}\n          mouseLeaveDelay={0}\n          placement=\"bottomLeft\"\n          arrowPointAtCenter\n        >\n          <button type=\"button\" style={{ width: triggerWidth }}>\n            Hello world!\n          </button>\n        </Tooltip>,\n      );\n      wrapper2\n        .find('button')\n        .at(0)\n        .simulate('click');\n      const popupLeftArrowPointAtCenter = parseInt(\n        wrapper2.instance().getPopupDomNode().style.left,\n        10,\n      );\n      expect(popupLeftArrowPointAtCenter - popupLeftDefault).toBe(\n        triggerWidth / 2 - horizontalArrowShift - arrowWidth,\n      );\n    };\n\n    jest.dontMock('rc-trigger', suit);\n  });\n});\n"]}