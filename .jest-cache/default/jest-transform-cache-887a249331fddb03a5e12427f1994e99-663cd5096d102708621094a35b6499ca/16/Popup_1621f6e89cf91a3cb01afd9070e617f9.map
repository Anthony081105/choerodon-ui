{"version":3,"sources":["Popup.jsx"],"names":["Popup","props","popupDomNode","align","currentAlignClassName","getClassNameFromAlign","className","getClassName","onAlign","stretch","getRootDomNode","visible","state","stretchChecked","targetHeight","targetWidth","setState","$ele","height","offsetHeight","width","offsetWidth","undefined","savePopupRef","saveRef","bind","saveAlignRef","rootNode","getPopupDomNode","setStretchSize","ReactDOM","findDOMNode","popupInstance","transitionName","maskTransitionName","animation","maskAnimation","prefixCls","style","destroyPopupOnHide","children","onMouseEnter","onMouseLeave","hiddenClassName","sizeStyle","indexOf","minHeight","minWidth","newStyle","getZIndexStyle","popupInnerProps","ref","getTransitionName","getTarget","hidden","zIndex","maskElement","mask","maskTransition","getMaskTransitionName","getMaskElement","getPopupElement","Component","PropTypes","bool","object","func","any","string","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport Align from '../../align';\nimport Animate from '../../animate';\nimport PopupInner from './PopupInner';\nimport LazyRenderBox from './LazyRenderBox';\nimport { saveRef } from './utils';\n\nclass Popup extends Component {\n  static propTypes = {\n    visible: PropTypes.bool,\n    style: PropTypes.object,\n    getClassNameFromAlign: PropTypes.func,\n    onAlign: PropTypes.func,\n    getRootDomNode: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    align: PropTypes.any,\n    destroyPopupOnHide: PropTypes.bool,\n    className: PropTypes.string,\n    prefixCls: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    stretch: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Used for stretch\n      stretchChecked: false,\n      targetWidth: undefined,\n      targetHeight: undefined,\n    };\n\n    this.savePopupRef = saveRef.bind(this, 'popupInstance');\n    this.saveAlignRef = saveRef.bind(this, 'alignInstance');\n  }\n\n  componentDidMount() {\n    this.rootNode = this.getPopupDomNode();\n    this.setStretchSize();\n  }\n\n  componentDidUpdate() {\n    this.setStretchSize();\n  }\n\n  onAlign = (popupDomNode, align) => {\n    const props = this.props;\n    const currentAlignClassName = props.getClassNameFromAlign(align);\n    // FIX: https://github.com/react-component/trigger/issues/56\n    // FIX: https://github.com/react-component/tooltip/issues/79\n    if (this.currentAlignClassName !== currentAlignClassName) {\n      this.currentAlignClassName = currentAlignClassName;\n      popupDomNode.className = this.getClassName(currentAlignClassName);\n    }\n    props.onAlign(popupDomNode, align);\n  };\n\n  // Record size if stretch needed\n  setStretchSize = () => {\n    const { stretch, getRootDomNode, visible } = this.props;\n    const { stretchChecked, targetHeight, targetWidth } = this.state;\n\n    if (!stretch || !visible) {\n      if (stretchChecked) {\n        this.setState({ stretchChecked: false });\n      }\n      return;\n    }\n\n    const $ele = getRootDomNode();\n    if (!$ele) return;\n\n    const height = $ele.offsetHeight;\n    const width = $ele.offsetWidth;\n\n    if (targetHeight !== height || targetWidth !== width || !stretchChecked) {\n      this.setState({\n        stretchChecked: true,\n        targetHeight: height,\n        targetWidth: width,\n      });\n    }\n  };\n\n  getPopupDomNode() {\n    return ReactDOM.findDOMNode(this.popupInstance);\n  }\n\n  getTarget = () => {\n    return this.props.getRootDomNode();\n  };\n\n  getMaskTransitionName() {\n    const props = this.props;\n    let transitionName = props.maskTransitionName;\n    const animation = props.maskAnimation;\n    if (!transitionName && animation) {\n      transitionName = `${props.prefixCls}-${animation}`;\n    }\n    return transitionName;\n  }\n\n  getTransitionName() {\n    const props = this.props;\n    let transitionName = props.transitionName;\n    if (!transitionName && props.animation) {\n      transitionName = `${props.prefixCls}-${props.animation}`;\n    }\n    return transitionName;\n  }\n\n  getClassName(currentAlignClassName) {\n    return `${this.props.prefixCls} ${this.props.className} ${currentAlignClassName}`;\n  }\n\n  getPopupElement() {\n    const { savePopupRef } = this;\n    const { stretchChecked, targetHeight, targetWidth } = this.state;\n    const {\n      align, visible,\n      prefixCls, style, getClassNameFromAlign,\n      destroyPopupOnHide, stretch, children,\n      onMouseEnter, onMouseLeave,\n    } = this.props;\n    const className = this.getClassName(this.currentAlignClassName ||\n      getClassNameFromAlign(align));\n    const hiddenClassName = `${prefixCls}-hidden`;\n\n    if (!visible) {\n      this.currentAlignClassName = null;\n    }\n\n    const sizeStyle = {};\n    if (stretch) {\n      if (stretchChecked) {\n        // Stretch with target\n        if (stretch.indexOf('height') !== -1) {\n          sizeStyle.height = targetHeight;\n        } else if (stretch.indexOf('minHeight') !== -1) {\n          sizeStyle.minHeight = targetHeight;\n        }\n        if (stretch.indexOf('width') !== -1) {\n          sizeStyle.width = targetWidth;\n        } else if (stretch.indexOf('minWidth') !== -1) {\n          sizeStyle.minWidth = targetWidth;\n        }\n      } else {\n        // Do nothing when stretch not ready\n        return null;\n      }\n    }\n\n    const newStyle = {\n      ...sizeStyle,\n      ...style,\n      ...this.getZIndexStyle(),\n    };\n\n    const popupInnerProps = {\n      className,\n      prefixCls,\n      ref: savePopupRef,\n      onMouseEnter,\n      onMouseLeave,\n      style: newStyle,\n    };\n    if (destroyPopupOnHide) {\n      return (\n        <Animate\n          component=\"\"\n          exclusive\n          transitionAppear\n          transitionName={this.getTransitionName()}\n        >\n          {visible ? (\n            <Align\n              target={this.getTarget}\n              key=\"popup\"\n              ref={this.saveAlignRef}\n              monitorWindowResize\n              hidden={!visible}\n              childrenProps={{ hidden: 'hidden' }}\n              align={align}\n              onAlign={this.onAlign}\n            >\n              <PopupInner\n                {...popupInnerProps}\n              >\n                {children}\n              </PopupInner>\n            </Align>\n          ) : null}\n        </Animate>\n      );\n    }\n    return (\n      <Animate\n        component=\"\"\n        exclusive\n        transitionAppear\n        transitionName={this.getTransitionName()}\n        hiddenProp=\"hidden\"\n      >\n        <Align\n          target={this.getTarget}\n          key=\"popup\"\n          ref={this.saveAlignRef}\n          monitorWindowResize\n          hidden={!visible}\n          childrenProps={{ hidden: 'hidden' }}\n          disabled={!visible}\n          align={align}\n          onAlign={this.onAlign}\n        >\n          <PopupInner\n            hiddenClassName={hiddenClassName}\n            {...popupInnerProps}\n          >\n            {children}\n          </PopupInner>\n        </Align>\n      </Animate>\n    );\n  }\n\n  getZIndexStyle() {\n    const style = {};\n    const props = this.props;\n    if (props.zIndex !== undefined) {\n      style.zIndex = props.zIndex;\n    }\n    return style;\n  }\n\n  getMaskElement() {\n    const props = this.props;\n    let maskElement;\n    if (props.mask) {\n      const maskTransition = this.getMaskTransitionName();\n      maskElement = (\n        <LazyRenderBox\n          style={this.getZIndexStyle()}\n          key=\"mask\"\n          className={`${props.prefixCls}-mask`}\n          hiddenClassName={`${props.prefixCls}-mask-hidden`}\n          hidden={!props.visible}\n        />\n      );\n      if (maskTransition) {\n        maskElement = (\n          <Animate\n            key=\"mask\"\n            hiddenProp=\"hidden\"\n            transitionAppear\n            component=\"\"\n            transitionName={maskTransition}\n          >\n            {maskElement}\n          </Animate>\n        );\n      }\n    }\n    return maskElement;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.getMaskElement()}\n        {this.getPopupElement()}\n      </div>\n    );\n  }\n}\n\nexport default Popup;\n"]}