efe7ed54d0138e7c469a0e8214227ca2
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _modalProviderTest = _interopRequireDefault(require("./modalProviderTest"));

describe('ModalProvider', function () {
  beforeEach(function () {
    jest.useFakeTimers();
  });
  afterEach(function () {
    jest.useRealTimers();
  });
  it('the hidden property change show when click the button', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_modalProviderTest["default"], null));
    expect(wrapper.find('.c7n-pro-modal').prop('hidden')).toBe(true);
    wrapper.find('button').at(1).simulate('click');
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-pro-modal').prop('hidden')).toBe(false);
  });
  it('the modal show when click the button', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_modalProviderTest["default"], null));
    expect(wrapper.find('.c7n-pro-modal')).toHaveLength(0);
    wrapper.find('button').at(1).simulate('click');
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-pro-modal')).toHaveLength(1);
  });
  it('the modal hidden when click the button cancel', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_modalProviderTest["default"], null));
    wrapper.find('button').at(1).simulate('click');
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-pro-modal')).toHaveLength(1);
    expect(wrapper.find('.c7n-pro-modal').hostNodes().find('button').at(1)).toHaveLength(1);
    wrapper.find('.c7n-pro-modal').hostNodes().find('button').at(1).simulate('click');
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-pro-mask-wrapper').prop('hidden')).toBe(false);
    wrapper.find('.c7n-pro-modal').hostNodes().find('button').at(0).simulate('click');
    jest.runAllTimers();
    wrapper.update();
    expect(wrapper.find('.c7n-pro-modal')).toHaveLength(2);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiamVzdCIsInVzZUZha2VUaW1lcnMiLCJhZnRlckVhY2giLCJ1c2VSZWFsVGltZXJzIiwiaXQiLCJ3cmFwcGVyIiwiZXhwZWN0IiwiZmluZCIsInByb3AiLCJ0b0JlIiwiYXQiLCJzaW11bGF0ZSIsInJ1bkFsbFRpbWVycyIsInVwZGF0ZSIsInRvSGF2ZUxlbmd0aCIsImhvc3ROb2RlcyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBQSxRQUFRLENBQUMsZUFBRCxFQUFrQixZQUFNO0FBQzlCQyxFQUFBQSxVQUFVLENBQUMsWUFBTTtBQUNmQyxJQUFBQSxJQUFJLENBQUNDLGFBQUw7QUFDRCxHQUZTLENBQVY7QUFJQUMsRUFBQUEsU0FBUyxDQUFDLFlBQU07QUFDZEYsSUFBQUEsSUFBSSxDQUFDRyxhQUFMO0FBQ0QsR0FGUSxDQUFUO0FBSUFDLEVBQUFBLEVBQUUsQ0FBQyx1REFBRCxFQUEwRCxZQUFNO0FBQ2hFLFFBQU1DLE9BQU8sR0FBRyxtQkFBTSxnQ0FBQyw2QkFBRCxPQUFOLENBQWhCO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0QsT0FBTyxDQUFDRSxJQUFSLENBQWEsZ0JBQWIsRUFBK0JDLElBQS9CLENBQW9DLFFBQXBDLENBQUQsQ0FBTixDQUFzREMsSUFBdEQsQ0FBMkQsSUFBM0Q7QUFDQUosSUFBQUEsT0FBTyxDQUNKRSxJQURILENBQ1EsUUFEUixFQUVHRyxFQUZILENBRU0sQ0FGTixFQUdHQyxRQUhILENBR1ksT0FIWjtBQUlBWCxJQUFBQSxJQUFJLENBQUNZLFlBQUw7QUFDQVAsSUFBQUEsT0FBTyxDQUFDUSxNQUFSO0FBQ0FQLElBQUFBLE1BQU0sQ0FBQ0QsT0FBTyxDQUFDRSxJQUFSLENBQWEsZ0JBQWIsRUFBK0JDLElBQS9CLENBQW9DLFFBQXBDLENBQUQsQ0FBTixDQUFzREMsSUFBdEQsQ0FBMkQsS0FBM0Q7QUFDRCxHQVZDLENBQUY7QUFZQUwsRUFBQUEsRUFBRSxDQUFDLHNDQUFELEVBQXlDLFlBQU07QUFDL0MsUUFBTUMsT0FBTyxHQUFHLG1CQUFNLGdDQUFDLDZCQUFELE9BQU4sQ0FBaEI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDRCxPQUFPLENBQUNFLElBQVIsQ0FBYSxnQkFBYixDQUFELENBQU4sQ0FBdUNPLFlBQXZDLENBQW9ELENBQXBEO0FBQ0FULElBQUFBLE9BQU8sQ0FDSkUsSUFESCxDQUNRLFFBRFIsRUFFR0csRUFGSCxDQUVNLENBRk4sRUFHR0MsUUFISCxDQUdZLE9BSFo7QUFJQVgsSUFBQUEsSUFBSSxDQUFDWSxZQUFMO0FBQ0FQLElBQUFBLE9BQU8sQ0FBQ1EsTUFBUjtBQUNBUCxJQUFBQSxNQUFNLENBQUNELE9BQU8sQ0FBQ0UsSUFBUixDQUFhLGdCQUFiLENBQUQsQ0FBTixDQUF1Q08sWUFBdkMsQ0FBb0QsQ0FBcEQ7QUFDRCxHQVZDLENBQUY7QUFZQVYsRUFBQUEsRUFBRSxDQUFDLCtDQUFELEVBQWtELFlBQU07QUFDeEQsUUFBTUMsT0FBTyxHQUFHLG1CQUFNLGdDQUFDLDZCQUFELE9BQU4sQ0FBaEI7QUFDQUEsSUFBQUEsT0FBTyxDQUNKRSxJQURILENBQ1EsUUFEUixFQUVHRyxFQUZILENBRU0sQ0FGTixFQUdHQyxRQUhILENBR1ksT0FIWjtBQUlBWCxJQUFBQSxJQUFJLENBQUNZLFlBQUw7QUFDQVAsSUFBQUEsT0FBTyxDQUFDUSxNQUFSO0FBQ0FQLElBQUFBLE1BQU0sQ0FBQ0QsT0FBTyxDQUFDRSxJQUFSLENBQWEsZ0JBQWIsQ0FBRCxDQUFOLENBQXVDTyxZQUF2QyxDQUFvRCxDQUFwRDtBQUNBUixJQUFBQSxNQUFNLENBQ0pELE9BQU8sQ0FDSkUsSUFESCxDQUNRLGdCQURSLEVBRUdRLFNBRkgsR0FHR1IsSUFISCxDQUdRLFFBSFIsRUFJR0csRUFKSCxDQUlNLENBSk4sQ0FESSxDQUFOLENBTUVJLFlBTkYsQ0FNZSxDQU5mO0FBT0FULElBQUFBLE9BQU8sQ0FDSkUsSUFESCxDQUNRLGdCQURSLEVBRUdRLFNBRkgsR0FHR1IsSUFISCxDQUdRLFFBSFIsRUFJR0csRUFKSCxDQUlNLENBSk4sRUFLR0MsUUFMSCxDQUtZLE9BTFo7QUFNQVgsSUFBQUEsSUFBSSxDQUFDWSxZQUFMO0FBQ0FQLElBQUFBLE9BQU8sQ0FBQ1EsTUFBUjtBQUNBUCxJQUFBQSxNQUFNLENBQUNELE9BQU8sQ0FBQ0UsSUFBUixDQUFhLHVCQUFiLEVBQXNDQyxJQUF0QyxDQUEyQyxRQUEzQyxDQUFELENBQU4sQ0FBNkRDLElBQTdELENBQWtFLEtBQWxFO0FBRUFKLElBQUFBLE9BQU8sQ0FDSkUsSUFESCxDQUNRLGdCQURSLEVBRUdRLFNBRkgsR0FHR1IsSUFISCxDQUdRLFFBSFIsRUFJR0csRUFKSCxDQUlNLENBSk4sRUFLR0MsUUFMSCxDQUtZLE9BTFo7QUFNQVgsSUFBQUEsSUFBSSxDQUFDWSxZQUFMO0FBQ0FQLElBQUFBLE9BQU8sQ0FBQ1EsTUFBUjtBQUNBUCxJQUFBQSxNQUFNLENBQUNELE9BQU8sQ0FBQ0UsSUFBUixDQUFhLGdCQUFiLENBQUQsQ0FBTixDQUF1Q08sWUFBdkMsQ0FBb0QsQ0FBcEQ7QUFDRCxHQW5DQyxDQUFGO0FBb0NELENBckVPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbW91bnQgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IE1vZGFsUHJvdmlkZXJUZXN0IGZyb20gJy4vbW9kYWxQcm92aWRlclRlc3QnO1xuXG5kZXNjcmliZSgnTW9kYWxQcm92aWRlcicsICgpID0+IHtcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgamVzdC51c2VGYWtlVGltZXJzKCk7XG4gIH0pO1xuXG4gIGFmdGVyRWFjaCgoKSA9PiB7XG4gICAgamVzdC51c2VSZWFsVGltZXJzKCk7XG4gIH0pO1xuXG4gIGl0KCd0aGUgaGlkZGVuIHByb3BlcnR5IGNoYW5nZSBzaG93IHdoZW4gY2xpY2sgdGhlIGJ1dHRvbicsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gbW91bnQoPE1vZGFsUHJvdmlkZXJUZXN0IC8+KTtcbiAgICBleHBlY3Qod3JhcHBlci5maW5kKCcuYzduLXByby1tb2RhbCcpLnByb3AoJ2hpZGRlbicpKS50b0JlKHRydWUpO1xuICAgIHdyYXBwZXJcbiAgICAgIC5maW5kKCdidXR0b24nKVxuICAgICAgLmF0KDEpXG4gICAgICAuc2ltdWxhdGUoJ2NsaWNrJyk7XG4gICAgamVzdC5ydW5BbGxUaW1lcnMoKTtcbiAgICB3cmFwcGVyLnVwZGF0ZSgpO1xuICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJy5jN24tcHJvLW1vZGFsJykucHJvcCgnaGlkZGVuJykpLnRvQmUoZmFsc2UpO1xuICB9KTtcblxuICBpdCgndGhlIG1vZGFsIHNob3cgd2hlbiBjbGljayB0aGUgYnV0dG9uJywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudCg8TW9kYWxQcm92aWRlclRlc3QgLz4pO1xuICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJy5jN24tcHJvLW1vZGFsJykpLnRvSGF2ZUxlbmd0aCgwKTtcbiAgICB3cmFwcGVyXG4gICAgICAuZmluZCgnYnV0dG9uJylcbiAgICAgIC5hdCgxKVxuICAgICAgLnNpbXVsYXRlKCdjbGljaycpO1xuICAgIGplc3QucnVuQWxsVGltZXJzKCk7XG4gICAgd3JhcHBlci51cGRhdGUoKTtcbiAgICBleHBlY3Qod3JhcHBlci5maW5kKCcuYzduLXByby1tb2RhbCcpKS50b0hhdmVMZW5ndGgoMSk7XG4gIH0pO1xuXG4gIGl0KCd0aGUgbW9kYWwgaGlkZGVuIHdoZW4gY2xpY2sgdGhlIGJ1dHRvbiBjYW5jZWwnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KDxNb2RhbFByb3ZpZGVyVGVzdCAvPik7XG4gICAgd3JhcHBlclxuICAgICAgLmZpbmQoJ2J1dHRvbicpXG4gICAgICAuYXQoMSlcbiAgICAgIC5zaW11bGF0ZSgnY2xpY2snKTtcbiAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgIHdyYXBwZXIudXBkYXRlKCk7XG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnLmM3bi1wcm8tbW9kYWwnKSkudG9IYXZlTGVuZ3RoKDEpO1xuICAgIGV4cGVjdChcbiAgICAgIHdyYXBwZXJcbiAgICAgICAgLmZpbmQoJy5jN24tcHJvLW1vZGFsJylcbiAgICAgICAgLmhvc3ROb2RlcygpXG4gICAgICAgIC5maW5kKCdidXR0b24nKVxuICAgICAgICAuYXQoMSksXG4gICAgKS50b0hhdmVMZW5ndGgoMSk7XG4gICAgd3JhcHBlclxuICAgICAgLmZpbmQoJy5jN24tcHJvLW1vZGFsJylcbiAgICAgIC5ob3N0Tm9kZXMoKVxuICAgICAgLmZpbmQoJ2J1dHRvbicpXG4gICAgICAuYXQoMSlcbiAgICAgIC5zaW11bGF0ZSgnY2xpY2snKTtcbiAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgIHdyYXBwZXIudXBkYXRlKCk7XG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnLmM3bi1wcm8tbWFzay13cmFwcGVyJykucHJvcCgnaGlkZGVuJykpLnRvQmUoZmFsc2UpO1xuXG4gICAgd3JhcHBlclxuICAgICAgLmZpbmQoJy5jN24tcHJvLW1vZGFsJylcbiAgICAgIC5ob3N0Tm9kZXMoKVxuICAgICAgLmZpbmQoJ2J1dHRvbicpXG4gICAgICAuYXQoMClcbiAgICAgIC5zaW11bGF0ZSgnY2xpY2snKTtcbiAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgIHdyYXBwZXIudXBkYXRlKCk7XG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnLmM3bi1wcm8tbW9kYWwnKSkudG9IYXZlTGVuZ3RoKDIpO1xuICB9KTtcbn0pO1xuIl19