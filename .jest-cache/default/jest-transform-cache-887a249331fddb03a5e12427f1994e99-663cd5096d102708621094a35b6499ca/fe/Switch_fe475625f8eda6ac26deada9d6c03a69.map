{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/switch/Switch.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA,IAAqB,MAArB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,kCAegB,CAfhB,EAeiB;AACb,UAAI,CAAC,CAAC,OAAF,KAAc,oBAAQ,IAA1B,EAAgC;AAC9B,aAAK,UAAL,CAAgB,KAAhB;AACD,OAFD,MAEO,IAAI,CAAC,CAAC,OAAF,KAAc,oBAAQ,KAA1B,EAAiC;AACtC,aAAK,UAAL,CAAgB,IAAhB;AACD;;AACD,kHAAoB,CAApB;AACD;AAtBH;AAAA;AAAA,kCAwBa;AAAA,UAEP,SAFO,GAIL,IAJK,CAEP,SAFO;AAAA,wBAIL,IAJK,CAGP,KAHO;AAAA,UAGE,QAHF,eAGE,QAHF;AAAA,UAGY,iBAHZ,eAGY,iBAHZ;AAKT,UAAM,IAAI,GAAG,KAAK,SAAL,KAAmB,QAAnB,GAA8B,iBAAiB,IAAI,QAAhE;AACA,aAAO,kBAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,YAAK,SAAL;AAAf,OAAA,EAAwC,IAAxC,CAAP;AACD;AA/BH;AAAA;AAAA,kCAiCa;AACT,aAAO,SAAP;AACD;AAnCH;AAAA;AAAA,EAAoC,mBAApC,CAAA;;AACS,MAAA,CAAA,WAAA,GAAc,QAAd;AAEP;;;AAGA;;AACO,MAAA,CAAA,YAAA,GAAe,IAAf;AAEA,MAAA,CAAA,YAAA,sCACF,oBAAS,YADP;AAEL,EAAA,SAAS,EAAE;AAFN;AAMP,uBAAA,CADC,oBACD,CAAA,E,gBAAA,E,eAAA,EAOC,IAPD;AAfmB,MAAM,GAAA,uBAAA,CAD1B,mBAC0B,CAAA,EAAN,MAAM,CAAN;eAAA,M","sourcesContent":["import React, { ReactNode } from 'react';\nimport { observer } from 'mobx-react';\nimport KeyCode from 'choerodon-ui/lib/_util/KeyCode';\nimport { CheckBox, CheckBoxProps } from '../check-box/CheckBox';\nimport autobind from '../_util/autobind';\n\n@observer\nexport default class Switch extends CheckBox<CheckBoxProps> {\n  static displayName = 'Switch';\n\n  /**\n   * tooltip disable sign\n   */\n  // eslint-disable-next-line camelcase\n  static __Pro_SWITCH = true;\n\n  static defaultProps = {\n    ...CheckBox.defaultProps,\n    suffixCls: 'switch',\n  };\n\n  @autobind\n  handleKeyDown(e) {\n    if (e.keyCode === KeyCode.LEFT) {\n      this.setChecked(false);\n    } else if (e.keyCode === KeyCode.RIGHT) {\n      this.setChecked(true);\n    }\n    super.handleKeyDown(e);\n  }\n\n  getTextNode() {\n    const {\n      prefixCls,\n      props: { children, unCheckedChildren },\n    } = this;\n    const text = this.isChecked() ? children : unCheckedChildren || children;\n    return <span className={`${prefixCls}-label`}>{text}</span>;\n  }\n\n  renderInner(): ReactNode {\n    return undefined;\n  }\n}\n"]}