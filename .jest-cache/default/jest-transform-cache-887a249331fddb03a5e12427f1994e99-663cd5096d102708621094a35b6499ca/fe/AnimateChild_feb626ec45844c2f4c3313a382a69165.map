{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/animate/AnimateChild.tsx"],"names":[],"mappings":"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","sourcesContent":["import { cloneElement, Component, CSSProperties, isValidElement } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport omit from 'lodash/omit';\nimport PropTypes from 'prop-types';\nimport cssAnimate, { isCssAnimationSupported } from 'css-animation';\nimport animUtil from './util';\n\nconst transitionMap = {\n  enter: 'transitionEnter',\n  appear: 'transitionAppear',\n  leave: 'transitionLeave',\n};\n\nexport interface AnimateChildProps {\n  transitionName?: string | object;\n  animation?: { [key: string]: (node: Element | Text, end: () => void) => void };\n  style?: CSSProperties;\n}\n\nexport default class AnimateChild extends Component<AnimateChildProps, any> {\n  static displayName = 'AnimateChild';\n\n  static propTypes = {\n    children: PropTypes.any,\n    transitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animation: PropTypes.any,\n  };\n\n  stopper;\n\n  componentWillUnmount() {\n    this.stop();\n  }\n\n  componentWillEnter(done: (child: AnimateChild) => void) {\n    if (animUtil.isEnterSupported(this.props)) {\n      this.transition('enter', done);\n    } else {\n      done(this);\n    }\n  }\n\n  componentWillAppear(done: (child: AnimateChild) => void) {\n    if (animUtil.isAppearSupported(this.props)) {\n      this.transition('appear', done);\n    } else {\n      done(this);\n    }\n  }\n\n  componentWillLeave(done: (child: AnimateChild) => void) {\n    if (animUtil.isLeaveSupported(this.props)) {\n      this.transition('leave', done);\n    } else {\n      done(this);\n    }\n  }\n\n  transition(animationType: string, finishCallback: (child: AnimateChild) => void) {\n    const node = findDOMNode(this);\n    if (node) {\n      const { props } = this;\n      const { transitionName, animation = {} } = props;\n      const nameIsObj = typeof transitionName === 'object';\n      this.stop();\n      const end = () => {\n        this.stopper = null;\n        finishCallback(this);\n      };\n      if (\n        (isCssAnimationSupported || !animation[animationType]) &&\n        transitionName &&\n        props[transitionMap[animationType]]\n      ) {\n        const name = nameIsObj\n          ? transitionName[animationType]\n          : `${transitionName}-${animationType}`;\n        let activeName = `${name}-active`;\n        if (nameIsObj && transitionName[`${animationType}Active`]) {\n          activeName = transitionName[`${animationType}Active`];\n        }\n        this.stopper = cssAnimate(\n          node,\n          {\n            name,\n            active: activeName,\n          },\n          end,\n        );\n      } else {\n        this.stopper = animation[animationType](node, end);\n      }\n    }\n  }\n\n  stop() {\n    const { stopper } = this;\n    if (stopper) {\n      this.stopper = null;\n      stopper.stop();\n    }\n  }\n\n  render() {\n    const { children, ...otherProps } = this.props;\n    if (isValidElement(children)) {\n      const props = omit(otherProps, [\n        'animation',\n        'transitionName',\n        'transitionEnter',\n        'transitionAppear',\n        'transitionLeave',\n      ]);\n      const { style } = children.props as any;\n      return cloneElement(children, { ...props, style: { ...props.style, ...style } } as any);\n    }\n    return children;\n  }\n}\n"]}