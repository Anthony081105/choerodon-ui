{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/image-crop/Crop.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * 裁剪组件\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getPrefixCls } from '../configure';\n\nlet relativeX = 0;\nlet relativeY = 0;\nlet resizeMode;\nlet resizeX = 0;\nlet resizeY = 0;\nlet resizeSize = 0;\n\n/**\n * when can't be exact division it will return false\n * @param rotate \n */\nfunction rotateFlag(rotate) {\n    return (rotate / 90) % 2 !== 0;\n}\n\nexport interface CropValue {\n    height: number;\n    width: number;\n    x: number;\n    y: number;\n}\n\nexport type Size = {\n    width: number\n    height: number\n}\n\nexport interface ImageCrop extends HTMLImageElement {\n    src: string;\n}\n\n\nexport interface CropProps {\n    crossOrigin?: \"anonymous\" | \"use-credentials\"; //   如果使用这个值的话就会在请求中的header中的带上Origin属性，但请求不会带上cookie和其他的一些认证信息 | 这个就同时会在跨域请求中带上cookie和其他的一些认证信息\n    src?: string; // 图片\n    editorWidth: number; // 编辑区域的宽度\n    editorHeight: number; // 编辑区域的高度\n    minRectSize: number; // 最小的裁剪区域\n    defaultRectSize: number; // 默认最小的\n    rotation?: number; // 度数\n    onRotationChange?: (rate: number) => void; // 裁剪度数的变化触发\n    onComplete?: (value: any) => void; // 裁剪完成触发\n    onCropChange?: (crop: any) => void; // 裁剪区域变化时候触发\n    prefixCls?: string, // 自定义样式前缀\n}\n\nexport default class Crop extends Component<CropProps, any> {\n    static propTypes = {\n        crossOrigin: PropTypes.string, // 是否跨域\n        src: PropTypes.string,// 图片\n        rotation: PropTypes.number,// 旋转度数\n        onRotationChange: PropTypes.func, // 裁剪度数的变化触发\n        onComplete: PropTypes.func,// 裁剪完成触发\n        onCropChange: PropTypes.func, // 裁剪区域变化时候触发\n        prefixCls: PropTypes.string, // 自定义样式前缀\n        editorWidth: PropTypes.number,\n        editorHeight: PropTypes.number,\n        minRectSize: PropTypes.number, // 最小的裁剪区域\n        defaultRectSize: PropTypes.number, // 默认最小的\n    };\n\n    static defaultProps = {\n        editorWidth: 540,\n        editorHeight: 300,\n        minRectSize: 80,\n        defaultRectSize: 200,\n    };\n\n\n\n    constructor(props: CropProps) {\n        super(props);\n        if (props.src) {\n            this.loadImage(props.src)\n        }\n        const rotate = typeof props.rotation !== 'undefined' ? props.rotation : 0;\n        const defaultRectSize = typeof props.defaultRectSize !== 'undefined' ? props.defaultRectSize : 200;\n        this.state = {\n            img: null,\n            size: defaultRectSize,\n            x: 0,\n            y: 0,\n            rotate,\n            imageStyle: {},\n        };\n\n        if ('onMaskClick' in props) {\n            console.warn('`onMaskClick` are removed, please use `onClose` instead.');\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { rotation, onRotationChange, src } = this.props;\n        const { img } = prevState;\n        if (img && rotation && prevProps.rotation !== rotation) {\n            // 旋转触发方法\n            if (onRotationChange) {\n                onRotationChange(rotation)\n            }\n            this.initImageSize(img, rotation);\n        }\n        // 修改 src 触发方法\n        if (src && prevProps.src !== src) {\n            this.loadImage(src)\n        }\n    }\n\n    handleMoveStart = ({ clientX, clientY }) => {\n        const { x, y } = this.state;\n        relativeX = clientX - x;\n        relativeY = clientY - y;\n        document.addEventListener('mousemove', this.handleMoving);\n        document.addEventListener('mouseup', this.handleMoveEnd);\n    };\n\n    handleMoving = ({ clientX, clientY }) => {\n        const { size, imageStyle: { width, height }, rotate } = this.state;\n        const { onComplete } = this.props;\n        const flag = rotateFlag(rotate);\n        const minX = flag ? (width - height) / 2 : 0; // if can't be exact division min is 0\n        const minY = flag ? (height - width) / 2 : 0; // if can't be exact division min is 0\n        const maxX = width - size - minX; // the max width is image minus the size , there would minus the sizeWidth\n        const maxY = height - size - minY; // the max height is image minus the size , there would minus the sizeHeight \n        const movingXY = {\n            x: Math.min(Math.max(minX, clientX - relativeX), maxX),\n            y: Math.min(Math.max(minY, clientY - relativeY), maxY),\n        }\n\n        if (onComplete) {\n            const completeXY = { ...movingXY, size }\n            onComplete(completeXY)\n        }\n        this.setState(movingXY);\n\n    };\n\n    handleMoveEnd = () => {\n        document.removeEventListener('mousemove', this.handleMoving);\n        document.removeEventListener('mouseup', this.handleMoveEnd);\n    };\n\n    handleResizeStart = (e) => {\n        e.stopPropagation();\n        const { currentTarget, clientX, clientY } = e; // mouse of body the x y position\n        const { x, y, size } = this.state;\n        relativeX = clientX - x; // relativeX \n        relativeY = clientY - y; // relativeY\n        resizeMode = currentTarget.className;   // to confirm the witch border on handle \n        resizeX = x;        // x of image position\n        resizeY = y;        // y of image position\n        resizeSize = size;   // size of crop area , TODO change to resizeHeight resizeWidth \n        document.addEventListener('mousemove', this.handleResizing);\n        document.addEventListener('mouseup', this.handleResizeEnd);\n    };\n\n    handleResizing = ({ clientX, clientY }) => {\n        const { onComplete, onCropChange, minRectSize } = this.props\n        const { imageStyle: { width, height }, rotate } = this.state;\n        const flag = rotateFlag(rotate);\n        const newX = clientX - relativeX; // mouse x diffrence from before \n        const newY = clientY - relativeY; // mouse y diffrence from before\n        let x = resizeX;\n        let y = resizeY;\n        let size;\n        if (resizeMode === 'lt') {\n            const relative = Math.min(newX - resizeX, newY - resizeY);\n            x += relative;\n            y += relative;\n            size = (resizeSize - x) + resizeX;\n        } else if (resizeMode === 'rt') {\n            const relative = Math.min(resizeX - newX, newY - resizeY);\n            y += relative;\n            size = (resizeSize - y) + resizeY;\n        } else if (resizeMode === 'lb') {\n            const relative = Math.min(newX - resizeX, resizeY - newY);\n            x += relative;\n            size = (resizeSize - x) + resizeX;\n        } else {\n            const relative = Math.min(resizeX - newX, resizeY - newY);\n            size = resizeSize - relative;\n        }\n        const minX = flag ? (width - height) / 2 : 0;\n        const minY = flag ? (height - width) / 2 : 0;\n        const maxWidth = flag ? ((width - height) / 2) + height : width;\n        const maxHeight = flag ? ((height - width) / 2) + width : height;\n        x = Math.min(Math.max(minX, x), (resizeSize - minRectSize) + resizeX);\n        y = Math.min(Math.max(minY, y), (resizeSize - minRectSize) + resizeY);\n\n        const cropSize = {\n            x,\n            y,\n            size: Math.max(Math.min(size, maxWidth - x, maxHeight - y), minRectSize),\n        }\n        if (onComplete) {\n            onComplete(cropSize)\n        }\n        if (onCropChange) {\n            onCropChange(cropSize)\n        }\n        this.setState(cropSize);\n    };\n\n    handleResizeEnd = () => {\n        document.removeEventListener('mousemove', this.handleResizing);\n        document.removeEventListener('mouseup', this.handleResizeEnd);\n    };\n\n    /** *\n     * 永远计算理论上来说必须用sin这种方法来计算了\n     * 最大高度和最小高度\n     */\n\n    /**\n*\n* Returns an x,y point once rotated around xMid,yMid\n*/\n    rotateAroundMidPoint = (\n        x: number,\n        y: number,\n        xMid: number,\n        yMid: number,\n        degrees: number,\n    ): [number, number] => {\n        const cos = Math.cos\n        const sin = Math.sin\n        const radian = (degrees * Math.PI) / 180 // Convert to radians\n        // Subtract midpoints, so that midpoint is translated to origin\n        // and add it in the end again\n        const xr = (x - xMid) * cos(radian) - (y - yMid) * sin(radian) + xMid\n        const yr = (x - xMid) * sin(radian) + (y - yMid) * cos(radian) + yMid\n\n        return [xr, yr]\n    }\n\n    /**\n     * Returns the new bounding area of a rotated rectangle.\n     */\n    translateSize = (width: number, height: number, rotation: number): Size => {\n        const centerX = width / 2\n        const centerY = height / 2\n\n        const outerBounds = [\n            this.rotateAroundMidPoint(0, 0, centerX, centerY, rotation),\n            this.rotateAroundMidPoint(width, 0, centerX, centerY, rotation),\n            this.rotateAroundMidPoint(width, height, centerX, centerY, rotation),\n            this.rotateAroundMidPoint(0, height, centerX, centerY, rotation),\n        ]\n\n        const minX = Math.min(...outerBounds.map(p => p[0]))\n        const maxX = Math.max(...outerBounds.map(p => p[0]))\n        const minY = Math.min(...outerBounds.map(p => p[1]))\n        const maxY = Math.max(...outerBounds.map(p => p[1]))\n\n        return { width: maxX - minX, height: maxY - minY }\n    }\n\n\n    initImageSize(img, rotate = 0) {\n        const { editorWidth, editorHeight, defaultRectSize, minRectSize } = this.props;\n        const { naturalWidth, naturalHeight } = img;\n        // to judge the \n        const flag = rotateFlag(rotate);\n        let width = flag ? naturalHeight : naturalWidth;\n        let height = flag ? naturalWidth : naturalHeight;\n        if (width < minRectSize || height < minRectSize) {\n            if (width > height) {\n                width = (width / height) * minRectSize;\n                height = minRectSize;\n            } else {\n                height = (height / width) * minRectSize;\n                width = minRectSize;\n            }\n        } else if (width > editorWidth || height > editorHeight) {\n            if (width / editorWidth > height / editorHeight) {\n                height = (height / width) * editorWidth;\n                width = editorWidth;\n            } else {\n                width = (width / height) * editorHeight;\n                height = editorHeight;\n            }\n        }\n        if (flag) {\n            const tmp = width;\n            width = height;\n            height = tmp;\n        }\n        const size = Math.min(defaultRectSize, width, height);\n        const CropperInfo = {\n            img,\n            imageStyle: {\n                width,\n                height,\n                top: (editorHeight - height) / 2,\n                left: (editorWidth - width) / 2,\n                transform: `rotate(${rotate}deg)`,\n            },\n            size,\n            x: (width - size) / 2,\n            y: (height - size) / 2,\n            rotate,\n        }\n\n        this.setState(CropperInfo);\n    }\n\n    loadImage(src) {\n        const { crossOrigin, rotation } = this.props;\n        const img: ImageCrop = new Image();\n        img.src = src;\n        if (crossOrigin === 'anonymous' || crossOrigin === 'use-credentials') {\n            img.crossOrigin = 'anonymous';\n        }\n        img.onload = () => {\n            const imgRotate = rotation || 0;\n            this.initImageSize(img, imgRotate);\n        };\n    }\n\n    render() {\n        const { img, imageStyle, size, x, y } = this.state;\n        const { editorHeight, editorWidth, prefixCls: customizePrefixCls } = this.props;\n        const prefixCls = getPrefixCls('avatar-crop', customizePrefixCls);\n        if (img) {\n            const { src } = img;\n            const { left, top } = imageStyle;\n            const style = {\n                width: editorWidth,\n                height: editorHeight,\n            };\n            // 通过border位置来控制裁剪高宽\n            const maskStyle = {\n                borderTopWidth: y + top,\n                borderRightWidth: editorWidth - x - left - size,\n                borderBottomWidth: editorHeight - y - top - size,\n                borderLeftWidth: x + left,\n            };\n            return (<div className={`${prefixCls}-edit`} style={style}>\n                <img alt=\"\" src={src} style={imageStyle} />\n                <div className={`${prefixCls}-edit-mask`} style={maskStyle}>\n                    <div onMouseDown={this.handleMoveStart}>\n                        <i className=\"lt\" onMouseDown={this.handleResizeStart} />\n                        <i className=\"rt\" onMouseDown={this.handleResizeStart} />\n                        <i className=\"lb\" onMouseDown={this.handleResizeStart} />\n                        <i className=\"rb\" onMouseDown={this.handleResizeStart} />\n                    </div>\n                </div>\n            </div>)\n        }\n        return null\n    }\n}\n"]}