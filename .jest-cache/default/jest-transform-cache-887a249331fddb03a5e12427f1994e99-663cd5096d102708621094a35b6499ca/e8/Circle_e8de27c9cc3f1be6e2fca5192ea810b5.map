{"version":3,"sources":["progress/Circle.jsx"],"names":["Circle","Component","propTypes","gapPosition","PropTypes","defaultProps","percent","strokeWidth","gapDegree","radius","beginPositionX","beginPositionY","endPositionX","endPositionY","pathString","len","Math","trailPathStyle","strokeDasharray","strokeDashoffset","transition","strokePathStyle","prefixCls","trailWidth","strokeColor","trailColor","strokeLinecap","style","className","restProps"],"mappings":"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","sourcesContent":["/* eslint react/prop-types: 0 */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport enhancer from './enhancer';\nimport { defaultProps, propTypes } from './types';\n\nclass Circle extends Component {\n  static propTypes = {\n    ...propTypes,\n    gapPosition: PropTypes.oneOf(['top', 'bottom', 'left', 'right']),\n  };\n\n  static defaultProps = {\n    ...defaultProps,\n    gapPosition: 'top',\n  };\n\n  getPathStyles() {\n    const { percent, strokeWidth, gapDegree = 0, gapPosition } = this.props;\n    const radius = 50 - strokeWidth / 2;\n    let beginPositionX = 0;\n    let beginPositionY = -radius;\n    let endPositionX = 0;\n    let endPositionY = -2 * radius;\n    switch (gapPosition) {\n      case 'left':\n        beginPositionX = -radius;\n        beginPositionY = 0;\n        endPositionX = 2 * radius;\n        endPositionY = 0;\n        break;\n      case 'right':\n        beginPositionX = radius;\n        beginPositionY = 0;\n        endPositionX = -2 * radius;\n        endPositionY = 0;\n        break;\n      case 'bottom':\n        beginPositionY = radius;\n        endPositionY = 2 * radius;\n        break;\n      default:\n    }\n    const pathString = `M 50,50 m ${beginPositionX},${beginPositionY}\n     a ${radius},${radius} 0 1 1 ${endPositionX},${-endPositionY}\n     a ${radius},${radius} 0 1 1 ${-endPositionX},${endPositionY}`;\n    const len = Math.PI * 2 * radius;\n    const trailPathStyle = {\n      strokeDasharray: `${len - gapDegree}px ${len}px`,\n      strokeDashoffset: `-${gapDegree / 2}px`,\n      transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s',\n    };\n    const strokePathStyle = {\n      strokeDasharray: `${(percent / 100) * (len - gapDegree)}px ${len}px`,\n      strokeDashoffset: `-${gapDegree / 2}px`,\n      transition:\n        'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s', // eslint-disable-line\n    };\n    return { pathString, trailPathStyle, strokePathStyle };\n  }\n\n  render() {\n    const {\n      prefixCls,\n      strokeWidth,\n      trailWidth,\n      strokeColor,\n      percent,\n      trailColor,\n      strokeLinecap,\n      style,\n      className,\n      ...restProps\n    } = this.props;\n    const { pathString, trailPathStyle, strokePathStyle } = this.getPathStyles();\n    delete restProps.percent;\n    delete restProps.gapDegree;\n    delete restProps.gapPosition;\n    return (\n      <svg\n        className={`${prefixCls}-circle ${className}`}\n        viewBox=\"0 0 100 100\"\n        style={style}\n        {...restProps}\n      >\n        <path\n          className={`${prefixCls}-circle-trail`}\n          d={pathString}\n          stroke={trailColor}\n          strokeWidth={trailWidth || strokeWidth}\n          fillOpacity=\"0\"\n          style={trailPathStyle}\n        />\n        <path\n          className={`${prefixCls}-circle-path`}\n          d={pathString}\n          strokeLinecap={strokeLinecap}\n          stroke={strokeColor}\n          strokeWidth={this.props.percent === 0 ? 0 : strokeWidth}\n          fillOpacity=\"0\"\n          ref={path => {\n            this.path = path;\n          }}\n          style={strokePathStyle}\n        />\n      </svg>\n    );\n  }\n}\n\nexport default enhancer(Circle);\n"]}