{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/card/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Children, Component, CSSProperties, MouseEventHandler, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport { Size } from '../_util/enum';\nimport Grid from './Grid';\nimport Meta from './Meta';\nimport Tabs from '../tabs';\nimport { throttleByAnimationFrameDecorator } from '../_util/throttleByAnimationFrame';\nimport warning from '../_util/warning';\nimport addEventListener from '../_util/addEventListener';\nimport { getPrefixCls } from '../configure';\n\nexport { CardGridProps } from './Grid';\nexport { CardMetaProps } from './Meta';\n\nexport type CardType = 'inner';\n\nexport interface CardTabListType {\n  key: string;\n  tab: ReactNode;\n}\n\nexport interface CardProps {\n  prefixCls?: string;\n  title?: ReactNode;\n  extra?: ReactNode;\n  bordered?: boolean;\n  bodyStyle?: CSSProperties;\n  style?: CSSProperties;\n  loading?: boolean;\n  noHovering?: boolean;\n  hoverable?: boolean;\n  children?: ReactNode;\n  id?: string;\n  className?: string;\n  type?: CardType;\n  cover?: ReactNode;\n  actions?: ReactNode[];\n  tabList?: CardTabListType[];\n  onTabChange?: (key: string) => void;\n  onHeadClick?: MouseEventHandler<any>;\n  activeTabKey?: string;\n  defaultActiveTabKey?: string;\n}\n\nexport default class Card extends Component<CardProps, {}> {\n  static displayName = 'Card';\n\n  static Grid: typeof Grid = Grid;\n\n  static Meta: typeof Meta = Meta;\n\n  resizeEvent: any;\n\n  updateWiderPaddingCalled: boolean;\n\n  state = {\n    widerPadding: false,\n  };\n\n  private container: HTMLDivElement;\n\n  componentDidMount() {\n    this.updateWiderPadding();\n    this.resizeEvent = addEventListener(window, 'resize', this.updateWiderPadding);\n\n    if ('noHovering' in this.props) {\n      const { noHovering } = this.props;\n      warning(\n        !noHovering,\n        '`noHovering` of Card is deperated, you can remove it safely or use `hoverable` instead.',\n      );\n      warning(!!noHovering, '`noHovering={false}` of Card is deperated, use `hoverable` instead.');\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.resizeEvent) {\n      this.resizeEvent.remove();\n    }\n    (this.updateWiderPadding as any).cancel();\n  }\n\n  @throttleByAnimationFrameDecorator()\n  updateWiderPadding() {\n    if (!this.container) {\n      return;\n    }\n    // 936 is a magic card width pixer number indicated by designer\n    const WIDTH_BOUDARY_PX = 936;\n    const { widerPadding } = this.state;\n    if (this.container.offsetWidth >= WIDTH_BOUDARY_PX && !widerPadding) {\n      this.setState({ widerPadding: true }, () => {\n        this.updateWiderPaddingCalled = true; // first render without css transition\n      });\n    }\n    if (this.container.offsetWidth < WIDTH_BOUDARY_PX && widerPadding) {\n      this.setState({ widerPadding: false }, () => {\n        this.updateWiderPaddingCalled = true; // first render without css transition\n      });\n    }\n  }\n\n  onTabChange = (key: string) => {\n    const { onTabChange } = this.props;\n    if (onTabChange) {\n      onTabChange(key);\n    }\n  };\n\n  saveRef = (node: HTMLDivElement) => {\n    this.container = node;\n  };\n\n  isContainGrid() {\n    const { children } = this.props;\n    return Children.toArray(children).some(\n      (element: JSX.Element) => element && element.type && element.type === Grid,\n    );\n  }\n\n  getAction(actions: ReactNode[]) {\n    if (!actions || !actions.length) {\n      return null;\n    }\n    const actionList = actions.map((action, index) => (\n      <li style={{ width: `${100 / actions.length}%` }} key={`action-${String(index)}`}>\n        <span>{action}</span>\n      </li>\n    ));\n    return actionList;\n  }\n\n  // For 2.x compatible\n  getCompatibleHoverable() {\n    const { noHovering, hoverable } = this.props;\n    if ('noHovering' in this.props) {\n      return !noHovering || hoverable;\n    }\n    return !!hoverable;\n  }\n\n  render() {\n    const {\n      prefixCls: customizePrefixCls,\n      className,\n      extra,\n      bodyStyle,\n      title,\n      loading,\n      bordered = true,\n      type,\n      cover,\n      actions,\n      tabList,\n      children,\n      activeTabKey,\n      defaultActiveTabKey,\n      onHeadClick,\n      ...others\n    } = this.props;\n    const { widerPadding } = this.state;\n    const prefixCls = getPrefixCls('card', customizePrefixCls);\n\n    const classString = classNames(prefixCls, className, {\n      [`${prefixCls}-loading`]: loading,\n      [`${prefixCls}-bordered`]: bordered,\n      [`${prefixCls}-hoverable`]: this.getCompatibleHoverable(),\n      [`${prefixCls}-wider-padding`]: widerPadding,\n      [`${prefixCls}-padding-transition`]: this.updateWiderPaddingCalled,\n      [`${prefixCls}-contain-grid`]: this.isContainGrid(),\n      [`${prefixCls}-contain-tabs`]: tabList && tabList.length,\n      [`${prefixCls}-type-${type}`]: !!type,\n    });\n\n    const loadingBlock = (\n      <div className={`${prefixCls}-loading-content`}>\n        <p className={`${prefixCls}-loading-block`} style={{ width: '94%' }} />\n        <p>\n          <span className={`${prefixCls}-loading-block`} style={{ width: '28%' }} />\n          <span className={`${prefixCls}-loading-block`} style={{ width: '62%' }} />\n        </p>\n        <p>\n          <span className={`${prefixCls}-loading-block`} style={{ width: '22%' }} />\n          <span className={`${prefixCls}-loading-block`} style={{ width: '66%' }} />\n        </p>\n        <p>\n          <span className={`${prefixCls}-loading-block`} style={{ width: '56%' }} />\n          <span className={`${prefixCls}-loading-block`} style={{ width: '39%' }} />\n        </p>\n        <p>\n          <span className={`${prefixCls}-loading-block`} style={{ width: '21%' }} />\n          <span className={`${prefixCls}-loading-block`} style={{ width: '15%' }} />\n          <span className={`${prefixCls}-loading-block`} style={{ width: '40%' }} />\n        </p>\n      </div>\n    );\n\n    const hasActiveTabKey = activeTabKey !== undefined;\n    const extraProps = {\n      [hasActiveTabKey ? 'activeKey' : 'defaultActiveKey']: hasActiveTabKey\n        ? activeTabKey\n        : defaultActiveTabKey,\n    };\n\n    let head;\n    const tabs =\n      tabList && tabList.length ? (\n        <Tabs\n          {...extraProps}\n          className={`${prefixCls}-head-tabs`}\n          size={Size.large}\n          onChange={this.onTabChange}\n        >\n          {tabList.map(item => (\n            <Tabs.TabPane tab={item.tab} key={item.key} />\n          ))}\n        </Tabs>\n      ) : null;\n    if (title || extra || tabs) {\n      head = (\n        <div className={`${prefixCls}-head`} onClick={onHeadClick}>\n          <div className={`${prefixCls}-head-wrapper`}>\n            {title && <div className={`${prefixCls}-head-title`}>{title}</div>}\n            {extra && <div className={`${prefixCls}-extra`}>{extra}</div>}\n          </div>\n          {tabs}\n        </div>\n      );\n    }\n    const coverDom = cover ? <div className={`${prefixCls}-cover`}>{cover}</div> : null;\n    const body = (\n      <div className={`${prefixCls}-body`} style={bodyStyle}>\n        {loading ? loadingBlock : children}\n      </div>\n    );\n    const actionDom =\n      actions && actions.length ? (\n        <ul className={`${prefixCls}-actions`}>{this.getAction(actions)}</ul>\n      ) : null;\n    const divProps = omit(others, ['onTabChange', 'noHovering', 'hoverable']);\n    return (\n      <div {...divProps} className={classString} ref={this.saveRef}>\n        {head}\n        {coverDom}\n        {body}\n        {actionDom}\n      </div>\n    );\n  }\n}\n"]}