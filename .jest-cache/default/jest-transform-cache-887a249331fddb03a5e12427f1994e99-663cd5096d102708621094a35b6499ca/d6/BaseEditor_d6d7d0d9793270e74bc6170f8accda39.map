{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/rich-text/BaseEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, ComponentClass } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { findDOMNode } from 'react-dom';\nimport { Range, ReactQuillProps, UnprivilegedEditor } from 'react-quill/lib';\nimport ImageDropAndPaste from 'quill-image-drop-and-paste';\nimport 'react-quill/dist/quill.snow.css';\nimport isEqual from 'lodash/isEqual';\nimport isObject from 'lodash/isObject';\nimport omit from 'lodash/omit';\nimport LightBox from 'react-image-lightbox';\nimport { DeltaOperation, DeltaStatic, Sources, StringMap } from './quill';\nimport autobind from '../_util/autobind';\nimport RichTextViewer from './RichTextViewer';\nimport { RichTextToolbarType } from './enum';\nimport { RichTextToolbarHook } from './RichText';\nimport Toolbar from './toolbar';\nimport DataSet from '../data-set/DataSet';\nimport Record from '../data-set/Record';\n\nlet ReactQuill: ComponentClass<ReactQuillProps>;\n\nlet Quill: any;\n\nif (typeof window !== 'undefined') {\n  // eslint-disable-next-line global-require\n  ReactQuill = require('react-quill');\n  // eslint-disable-next-line global-require\n  Quill = require('react-quill').Quill;\n\n  /**\n   * 注册图片拖拽、粘贴\n   */\n  Quill.register('modules/imageDropAndPaste', ImageDropAndPaste);\n}\n\nexport interface BaseEditorProps {\n  dataSet?: DataSet;\n  record?: Record;\n  value: DeltaStatic;\n  saveRef?: Function,\n  onChange?: Function,\n  bounds?: string | HTMLElement;\n  children?: React.ReactElement<any>;\n  className?: string;\n  defaultValue?: string | DeltaStatic;\n  formats?: string[];\n  id?: string;\n  modules?: StringMap;\n\n  onChangeSelection?(selection: Range, source: Sources, editor: UnprivilegedEditor): void;\n\n  onFocus?(selection: Range, source: Sources, editor: UnprivilegedEditor): void;\n\n  onBlur?(previousSelection: Range, source: Sources, editor: UnprivilegedEditor): void;\n\n  onKeyDown?: React.EventHandler<any>;\n  onKeyPress?: React.EventHandler<any>;\n  onKeyUp?: React.EventHandler<any>;\n  placeholder?: string;\n  preserveWhitespace?: boolean;\n  readOnly?: boolean;\n  scrollingContainer?: string | HTMLElement;\n  style?: React.CSSProperties;\n  tabIndex?: number;\n  theme?: string;\n  autoFocus?: boolean;\n  mode?: 'preview' | 'editor';\n  toolbarId?: string;\n  toolbar?: RichTextToolbarType | RichTextToolbarHook;\n}\n\n@observer\nexport default class BaseEditor extends Component<BaseEditorProps> {\n  static propTypes = {\n    value: PropTypes.any,\n    onChange: PropTypes.func,\n    options: PropTypes.object,\n    saveRef: PropTypes.func,\n    autoFocus: PropTypes.bool,\n    mode: PropTypes.string,\n    toolbarId: PropTypes.string,\n    toolbar: PropTypes.oneOfType([\n      PropTypes.oneOf([\n        RichTextToolbarType.none,\n        RichTextToolbarType.normal,\n      ]),\n      PropTypes.func,\n    ]),\n  };\n\n  state = {\n    imgOpen: false,\n    src: '',\n  };\n\n  editor: any;\n\n  deltaOps?: DeltaOperation[];\n\n  @autobind\n  setValue(value) {\n    if (this.editor) {\n      this.editor.getEditor().setContents(value);\n    }\n  };\n\n  @autobind\n  handleRichTextChange(_, __, ___, editor: UnprivilegedEditor) {\n    const rtDelta = editor.getContents();\n    this.deltaOps = rtDelta.ops;\n    const { onChange } = this.props;\n    if (onChange && rtDelta && rtDelta.ops) {\n      onChange(rtDelta.ops);\n    }\n  };\n\n  componentDidUpdate() {\n    const { value } = this.props;\n    let deltaOps;\n    if (!isObject(value) && this.editor) {\n      deltaOps = this.editor.getEditor().clipboard.convert(value).ops;\n    }\n    if ('value' in this.props && !isEqual(this.deltaOps, deltaOps || value) && this.editor) {\n      this.editor.getEditor().setContents(deltaOps || value);\n    }\n  }\n\n  getOtherProps() {\n    return omit(this.props, ['style', 'onBlur', 'toolbar', 'className', 'defaultValue', 'onChange', 'value']);\n  }\n\n  handleOpenLightBox = (e) => {\n    if (e.target.nodeName === 'IMG') {\n      e.stopPropagation();\n      this.setState({\n        imgOpen: true,\n        src: e.target.src,\n      });\n    }\n  };\n\n  componentWillUnmount() {\n    const thisNode = findDOMNode(this);\n    if (thisNode) {\n      thisNode.removeEventListener('click', this.handleOpenLightBox);\n    }\n  }\n\n  componentDidMount() {\n    const { autoFocus } = this.props;\n    if (autoFocus && this.editor) {\n      setTimeout(() => {\n        this.editor.focus();\n      });\n    }\n    const thisNode = findDOMNode(this);\n    if (thisNode) {\n      thisNode.addEventListener('click', this.handleOpenLightBox);\n    }\n  }\n\n  @autobind\n  renderContent() {\n    const { style, className, toolbarId, toolbar, dataSet, value, mode } = this.props;\n    let deltaOps;\n    if (!isObject(value) && this.editor) {\n      deltaOps = this.editor.getEditor().clipboard.convert(value).ops;\n    }\n    if (mode === 'preview') {\n      return (\n        <RichTextViewer\n          className={`${className}-preview`}\n          style={style}\n          deltaOps={deltaOps || value}\n        />\n      );\n    }\n    if (ReactQuill) {\n      return (\n        <>\n          <Toolbar id={toolbarId} dataSet={dataSet} toolbar={toolbar} prefixCls={className} />\n          <ReactQuill\n            {...this.getOtherProps()}\n            className={`${className}-quill`}\n            defaultValue={value}\n            ref={this.saveRef('editor')}\n            onChange={this.handleRichTextChange}\n            bounds={className}\n          />\n        </>\n      );\n    }\n  }\n\n  render() {\n    const { imgOpen, src } = this.state;\n    const { className, style } = this.props;\n    const content = this.renderContent();\n    return (\n      <>\n        <div className={className} style={style}>\n          {content}\n        </div>\n        {\n          imgOpen && (\n            <LightBox\n              mainSrc={src}\n              onCloseRequest={() => this.setState({ imgOpen: false })}\n              imageTitle=\"images\"\n            />\n          )\n        }\n      </>\n    );\n  }\n\n  saveRef = name => (ref) => {\n    this[name] = ref;\n    const { saveRef } = this.props;\n    if (saveRef) {\n      saveRef(ref);\n    }\n  };\n}\n"]}