6948bc9924c8b836dd228c255fbf12fd
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _moment = _interopRequireDefault(require("moment"));

var _timePicker = _interopRequireDefault(require("../../time-picker"));

var _focusTest = _interopRequireDefault(require("../../../tests/shared/focusTest"));

var _utils = require("./utils");

describe('times-picker-pro', function () {
  (0, _focusTest["default"])(_timePicker["default"]);
  beforeEach(function () {
    jest.useFakeTimers();
  });
  afterEach(function () {
    jest.useRealTimers();
  });
  it('the times will be controlled by the value', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_timePicker["default"], {
      value: (0, _moment["default"])('2020-02-20 20:20:19')
    }));
    expect(wrapper.find('input').at(0).prop('value')).toBe('20:20:19');
    wrapper.setProps({
      value: (0, _moment["default"])('2020-02-21 20:22:18')
    });
    wrapper.update();
    expect(wrapper.find('input').at(0).prop('value')).toBe('20:22:18');
  });
  it('the keyDown event keyCode should render correctly', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_timePicker["default"], {
      mode: "time"
    }));
    wrapper.find('input').simulate('click');
    jest.runAllTimers();
    wrapper.update();
    (0, _utils.simulateCode)(wrapper, 39);
    (0, _utils.simulateCode)(wrapper, 37);
    (0, _utils.simulateCode)(wrapper, 40);
    (0, _utils.simulateCode)(wrapper, 38);
    (0, _utils.simulateCode)(wrapper, 35);
    (0, _utils.simulateCode)(wrapper, 36);
    (0, _utils.simulateCode)(wrapper, 33);
    (0, _utils.simulateCode)(wrapper, 34);
    wrapper.update();
  });
  it('should has disabled property can not do anything', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_timePicker["default"], {
      mode: "month"
    }));
    (0, _utils.disableWrapper)(wrapper);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpbWVzLnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJUaW1lc1BpY2tlciIsImJlZm9yZUVhY2giLCJqZXN0IiwidXNlRmFrZVRpbWVycyIsImFmdGVyRWFjaCIsInVzZVJlYWxUaW1lcnMiLCJpdCIsIndyYXBwZXIiLCJleHBlY3QiLCJmaW5kIiwiYXQiLCJwcm9wIiwidG9CZSIsInNldFByb3BzIiwidmFsdWUiLCJ1cGRhdGUiLCJzaW11bGF0ZSIsInJ1bkFsbFRpbWVycyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBQSxRQUFRLENBQUMsa0JBQUQsRUFBcUIsWUFBTTtBQUNqQyw2QkFBVUMsc0JBQVY7QUFFQUMsRUFBQUEsVUFBVSxDQUFDLFlBQU07QUFDZkMsSUFBQUEsSUFBSSxDQUFDQyxhQUFMO0FBQ0QsR0FGUyxDQUFWO0FBSUFDLEVBQUFBLFNBQVMsQ0FBQyxZQUFNO0FBQ2RGLElBQUFBLElBQUksQ0FBQ0csYUFBTDtBQUNELEdBRlEsQ0FBVDtBQUlBQyxFQUFBQSxFQUFFLENBQUMsMkNBQUQsRUFBOEMsWUFBTTtBQUNwRCxRQUFNQyxPQUFPLEdBQUcsbUJBQU0sZ0NBQUMsc0JBQUQ7QUFBYSxNQUFBLEtBQUssRUFBRSx3QkFBTyxxQkFBUDtBQUFwQixNQUFOLENBQWhCO0FBQ0FDLElBQUFBLE1BQU0sQ0FDSkQsT0FBTyxDQUNKRSxJQURILENBQ1EsT0FEUixFQUVHQyxFQUZILENBRU0sQ0FGTixFQUdHQyxJQUhILENBR1EsT0FIUixDQURJLENBQU4sQ0FLRUMsSUFMRixDQUtPLFVBTFA7QUFNQUwsSUFBQUEsT0FBTyxDQUFDTSxRQUFSLENBQWlCO0FBQUVDLE1BQUFBLEtBQUssRUFBRSx3QkFBTyxxQkFBUDtBQUFULEtBQWpCO0FBQ0FQLElBQUFBLE9BQU8sQ0FBQ1EsTUFBUjtBQUNBUCxJQUFBQSxNQUFNLENBQ0pELE9BQU8sQ0FDSkUsSUFESCxDQUNRLE9BRFIsRUFFR0MsRUFGSCxDQUVNLENBRk4sRUFHR0MsSUFISCxDQUdRLE9BSFIsQ0FESSxDQUFOLENBS0VDLElBTEYsQ0FLTyxVQUxQO0FBTUQsR0FoQkMsQ0FBRjtBQWtCQU4sRUFBQUEsRUFBRSxDQUFDLG1EQUFELEVBQXNELFlBQU07QUFDNUQsUUFBTUMsT0FBTyxHQUFHLG1CQUFNLGdDQUFDLHNCQUFEO0FBQWEsTUFBQSxJQUFJLEVBQUM7QUFBbEIsTUFBTixDQUFoQjtBQUNBQSxJQUFBQSxPQUFPLENBQUNFLElBQVIsQ0FBYSxPQUFiLEVBQXNCTyxRQUF0QixDQUErQixPQUEvQjtBQUNBZCxJQUFBQSxJQUFJLENBQUNlLFlBQUw7QUFDQVYsSUFBQUEsT0FBTyxDQUFDUSxNQUFSO0FBQ0EsNkJBQWFSLE9BQWIsRUFBc0IsRUFBdEI7QUFDQSw2QkFBYUEsT0FBYixFQUFzQixFQUF0QjtBQUNBLDZCQUFhQSxPQUFiLEVBQXNCLEVBQXRCO0FBQ0EsNkJBQWFBLE9BQWIsRUFBc0IsRUFBdEI7QUFDQSw2QkFBYUEsT0FBYixFQUFzQixFQUF0QjtBQUNBLDZCQUFhQSxPQUFiLEVBQXNCLEVBQXRCO0FBQ0EsNkJBQWFBLE9BQWIsRUFBc0IsRUFBdEI7QUFDQSw2QkFBYUEsT0FBYixFQUFzQixFQUF0QjtBQUNBQSxJQUFBQSxPQUFPLENBQUNRLE1BQVI7QUFDRCxHQWRDLENBQUY7QUFnQkFULEVBQUFBLEVBQUUsQ0FBQyxrREFBRCxFQUFxRCxZQUFNO0FBQzNELFFBQU1DLE9BQU8sR0FBRyxtQkFBTSxnQ0FBQyxzQkFBRDtBQUFhLE1BQUEsSUFBSSxFQUFDO0FBQWxCLE1BQU4sQ0FBaEI7QUFDQSwrQkFBZUEsT0FBZjtBQUNELEdBSEMsQ0FBRjtBQUlELENBakRPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbW91bnQgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnO1xuaW1wb3J0IFRpbWVzUGlja2VyIGZyb20gJy4uLy4uL3RpbWUtcGlja2VyJztcbmltcG9ydCBmb2N1c1Rlc3QgZnJvbSAnLi4vLi4vLi4vdGVzdHMvc2hhcmVkL2ZvY3VzVGVzdCc7XG5pbXBvcnQgeyBkaXNhYmxlV3JhcHBlciwgc2ltdWxhdGVDb2RlIH0gZnJvbSAnLi91dGlscyc7XG5cbmRlc2NyaWJlKCd0aW1lcy1waWNrZXItcHJvJywgKCkgPT4ge1xuICBmb2N1c1Rlc3QoVGltZXNQaWNrZXIpO1xuXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIGplc3QudXNlRmFrZVRpbWVycygpO1xuICB9KTtcblxuICBhZnRlckVhY2goKCkgPT4ge1xuICAgIGplc3QudXNlUmVhbFRpbWVycygpO1xuICB9KTtcblxuICBpdCgndGhlIHRpbWVzIHdpbGwgYmUgY29udHJvbGxlZCBieSB0aGUgdmFsdWUnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KDxUaW1lc1BpY2tlciB2YWx1ZT17bW9tZW50KCcyMDIwLTAyLTIwIDIwOjIwOjE5Jyl9IC8+KTtcbiAgICBleHBlY3QoXG4gICAgICB3cmFwcGVyXG4gICAgICAgIC5maW5kKCdpbnB1dCcpXG4gICAgICAgIC5hdCgwKVxuICAgICAgICAucHJvcCgndmFsdWUnKSxcbiAgICApLnRvQmUoJzIwOjIwOjE5Jyk7XG4gICAgd3JhcHBlci5zZXRQcm9wcyh7IHZhbHVlOiBtb21lbnQoJzIwMjAtMDItMjEgMjA6MjI6MTgnKSB9KTtcbiAgICB3cmFwcGVyLnVwZGF0ZSgpO1xuICAgIGV4cGVjdChcbiAgICAgIHdyYXBwZXJcbiAgICAgICAgLmZpbmQoJ2lucHV0JylcbiAgICAgICAgLmF0KDApXG4gICAgICAgIC5wcm9wKCd2YWx1ZScpLFxuICAgICkudG9CZSgnMjA6MjI6MTgnKTtcbiAgfSk7XG5cbiAgaXQoJ3RoZSBrZXlEb3duIGV2ZW50IGtleUNvZGUgc2hvdWxkIHJlbmRlciBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KDxUaW1lc1BpY2tlciBtb2RlPVwidGltZVwiIC8+KTtcbiAgICB3cmFwcGVyLmZpbmQoJ2lucHV0Jykuc2ltdWxhdGUoJ2NsaWNrJyk7XG4gICAgamVzdC5ydW5BbGxUaW1lcnMoKTtcbiAgICB3cmFwcGVyLnVwZGF0ZSgpO1xuICAgIHNpbXVsYXRlQ29kZSh3cmFwcGVyLCAzOSk7XG4gICAgc2ltdWxhdGVDb2RlKHdyYXBwZXIsIDM3KTtcbiAgICBzaW11bGF0ZUNvZGUod3JhcHBlciwgNDApO1xuICAgIHNpbXVsYXRlQ29kZSh3cmFwcGVyLCAzOCk7XG4gICAgc2ltdWxhdGVDb2RlKHdyYXBwZXIsIDM1KTtcbiAgICBzaW11bGF0ZUNvZGUod3JhcHBlciwgMzYpO1xuICAgIHNpbXVsYXRlQ29kZSh3cmFwcGVyLCAzMyk7XG4gICAgc2ltdWxhdGVDb2RlKHdyYXBwZXIsIDM0KTtcbiAgICB3cmFwcGVyLnVwZGF0ZSgpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGhhcyBkaXNhYmxlZCBwcm9wZXJ0eSBjYW4gbm90IGRvIGFueXRoaW5nJywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudCg8VGltZXNQaWNrZXIgbW9kZT1cIm1vbnRoXCIgLz4pO1xuICAgIGRpc2FibGVXcmFwcGVyKHdyYXBwZXIpO1xuICB9KTtcbn0pO1xuIl19