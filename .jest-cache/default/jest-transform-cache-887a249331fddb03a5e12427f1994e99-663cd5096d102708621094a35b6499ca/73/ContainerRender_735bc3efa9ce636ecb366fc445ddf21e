77cf7ce059d42ec048f927ca81e8d3ef
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _reactDom = _interopRequireDefault(require("react-dom"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var ContainerRender =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(ContainerRender, _Component);

  function ContainerRender() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, ContainerRender);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(ContainerRender)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "removeContainer", function () {
      if (_this.container) {
        _reactDom["default"].unmountComponentAtNode(_this.container);

        _this.container.parentNode.removeChild(_this.container);

        _this.container = null;
      }
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderComponent", function (props, ready) {
      var _this$props = _this.props,
          visible = _this$props.visible,
          getComponent = _this$props.getComponent,
          forceRender = _this$props.forceRender,
          getContainer = _this$props.getContainer,
          parent = _this$props.parent;

      if (visible || parent._component || forceRender) {
        if (!_this.container) {
          _this.container = getContainer();
        }

        _reactDom["default"].unstable_renderSubtreeIntoContainer(parent, getComponent(props), _this.container, function callback() {
          if (ready) {
            ready.call(this);
          }
        });
      }
    });
    return _this;
  }

  (0, _createClass2["default"])(ContainerRender, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.autoMount) {
        this.renderComponent();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.props.autoMount) {
        this.renderComponent();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.props.autoDestroy) {
        this.removeContainer();
      }
    }
  }, {
    key: "render",
    value: function render() {
      return this.props.children({
        renderComponent: this.renderComponent,
        removeContainer: this.removeContainer
      });
    }
  }]);
  return ContainerRender;
}(_react.Component);

exports["default"] = ContainerRender;
(0, _defineProperty2["default"])(ContainerRender, "propTypes", {
  autoMount: _propTypes["default"].bool,
  autoDestroy: _propTypes["default"].bool,
  visible: _propTypes["default"].bool,
  forceRender: _propTypes["default"].bool,
  parent: _propTypes["default"].any,
  getComponent: _propTypes["default"].func.isRequired,
  getContainer: _propTypes["default"].func.isRequired,
  children: _propTypes["default"].func.isRequired
});
(0, _defineProperty2["default"])(ContainerRender, "defaultProps", {
  autoMount: true,
  autoDestroy: true,
  forceRender: false
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbnRhaW5lclJlbmRlci5qc3giXSwibmFtZXMiOlsiQ29udGFpbmVyUmVuZGVyIiwiY29udGFpbmVyIiwiUmVhY3RET00iLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicHJvcHMiLCJyZWFkeSIsInZpc2libGUiLCJnZXRDb21wb25lbnQiLCJmb3JjZVJlbmRlciIsImdldENvbnRhaW5lciIsInBhcmVudCIsIl9jb21wb25lbnQiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNhbGxiYWNrIiwiY2FsbCIsImF1dG9Nb3VudCIsInJlbmRlckNvbXBvbmVudCIsImF1dG9EZXN0cm95IiwicmVtb3ZlQ29udGFpbmVyIiwiY2hpbGRyZW4iLCJDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJib29sIiwiYW55IiwiZnVuYyIsImlzUmVxdWlyZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0lBRXFCQSxlOzs7Ozs7Ozs7Ozs7Ozs7Ozt3R0FvQ0QsWUFBTTtBQUN0QixVQUFJLE1BQUtDLFNBQVQsRUFBb0I7QUFDbEJDLDZCQUFTQyxzQkFBVCxDQUFnQyxNQUFLRixTQUFyQzs7QUFDQSxjQUFLQSxTQUFMLENBQWVHLFVBQWYsQ0FBMEJDLFdBQTFCLENBQXNDLE1BQUtKLFNBQTNDOztBQUNBLGNBQUtBLFNBQUwsR0FBaUIsSUFBakI7QUFDRDtBQUNGLEs7d0dBRWlCLFVBQUNLLEtBQUQsRUFBUUMsS0FBUixFQUFrQjtBQUFBLHdCQUNtQyxNQUFLRCxLQUR4QztBQUFBLFVBQzFCRSxPQUQwQixlQUMxQkEsT0FEMEI7QUFBQSxVQUNqQkMsWUFEaUIsZUFDakJBLFlBRGlCO0FBQUEsVUFDSEMsV0FERyxlQUNIQSxXQURHO0FBQUEsVUFDVUMsWUFEVixlQUNVQSxZQURWO0FBQUEsVUFDd0JDLE1BRHhCLGVBQ3dCQSxNQUR4Qjs7QUFFbEMsVUFBSUosT0FBTyxJQUFJSSxNQUFNLENBQUNDLFVBQWxCLElBQWdDSCxXQUFwQyxFQUFpRDtBQUMvQyxZQUFJLENBQUMsTUFBS1QsU0FBVixFQUFxQjtBQUNuQixnQkFBS0EsU0FBTCxHQUFpQlUsWUFBWSxFQUE3QjtBQUNEOztBQUNEVCw2QkFBU1ksbUNBQVQsQ0FDRUYsTUFERixFQUVFSCxZQUFZLENBQUNILEtBQUQsQ0FGZCxFQUdFLE1BQUtMLFNBSFAsRUFJRSxTQUFTYyxRQUFULEdBQW9CO0FBQ2xCLGNBQUlSLEtBQUosRUFBVztBQUNUQSxZQUFBQSxLQUFLLENBQUNTLElBQU4sQ0FBVyxJQUFYO0FBQ0Q7QUFDRixTQVJIO0FBVUQ7QUFDRixLOzs7Ozs7d0NBM0NtQjtBQUNsQixVQUFJLEtBQUtWLEtBQUwsQ0FBV1csU0FBZixFQUEwQjtBQUN4QixhQUFLQyxlQUFMO0FBQ0Q7QUFDRjs7O3lDQUVvQjtBQUNuQixVQUFJLEtBQUtaLEtBQUwsQ0FBV1csU0FBZixFQUEwQjtBQUN4QixhQUFLQyxlQUFMO0FBQ0Q7QUFDRjs7OzJDQUVzQjtBQUNyQixVQUFJLEtBQUtaLEtBQUwsQ0FBV2EsV0FBZixFQUE0QjtBQUMxQixhQUFLQyxlQUFMO0FBQ0Q7QUFDRjs7OzZCQTZCUTtBQUNQLGFBQU8sS0FBS2QsS0FBTCxDQUFXZSxRQUFYLENBQW9CO0FBQ3pCSCxRQUFBQSxlQUFlLEVBQUUsS0FBS0EsZUFERztBQUV6QkUsUUFBQUEsZUFBZSxFQUFFLEtBQUtBO0FBRkcsT0FBcEIsQ0FBUDtBQUlEOzs7RUFwRTBDRSxnQjs7O2lDQUF4QnRCLGUsZUFDQTtBQUNqQmlCLEVBQUFBLFNBQVMsRUFBRU0sc0JBQVVDLElBREo7QUFFakJMLEVBQUFBLFdBQVcsRUFBRUksc0JBQVVDLElBRk47QUFHakJoQixFQUFBQSxPQUFPLEVBQUVlLHNCQUFVQyxJQUhGO0FBSWpCZCxFQUFBQSxXQUFXLEVBQUVhLHNCQUFVQyxJQUpOO0FBS2pCWixFQUFBQSxNQUFNLEVBQUVXLHNCQUFVRSxHQUxEO0FBTWpCaEIsRUFBQUEsWUFBWSxFQUFFYyxzQkFBVUcsSUFBVixDQUFlQyxVQU5aO0FBT2pCaEIsRUFBQUEsWUFBWSxFQUFFWSxzQkFBVUcsSUFBVixDQUFlQyxVQVBaO0FBUWpCTixFQUFBQSxRQUFRLEVBQUVFLHNCQUFVRyxJQUFWLENBQWVDO0FBUlIsQztpQ0FEQTNCLGUsa0JBWUc7QUFDcEJpQixFQUFBQSxTQUFTLEVBQUUsSUFEUztBQUVwQkUsRUFBQUEsV0FBVyxFQUFFLElBRk87QUFHcEJULEVBQUFBLFdBQVcsRUFBRTtBQUhPLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb250YWluZXJSZW5kZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGF1dG9Nb3VudDogUHJvcFR5cGVzLmJvb2wsXG4gICAgYXV0b0Rlc3Ryb3k6IFByb3BUeXBlcy5ib29sLFxuICAgIHZpc2libGU6IFByb3BUeXBlcy5ib29sLFxuICAgIGZvcmNlUmVuZGVyOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBwYXJlbnQ6IFByb3BUeXBlcy5hbnksXG4gICAgZ2V0Q29tcG9uZW50OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIGdldENvbnRhaW5lcjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgYXV0b01vdW50OiB0cnVlLFxuICAgIGF1dG9EZXN0cm95OiB0cnVlLFxuICAgIGZvcmNlUmVuZGVyOiBmYWxzZSxcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLmF1dG9Nb3VudCkge1xuICAgICAgdGhpcy5yZW5kZXJDb21wb25lbnQoKTtcbiAgICB9XG4gIH1cblxuICBjb21wb25lbnREaWRVcGRhdGUoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuYXV0b01vdW50KSB7XG4gICAgICB0aGlzLnJlbmRlckNvbXBvbmVudCgpO1xuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLmF1dG9EZXN0cm95KSB7XG4gICAgICB0aGlzLnJlbW92ZUNvbnRhaW5lcigpO1xuICAgIH1cbiAgfVxuXG4gIHJlbW92ZUNvbnRhaW5lciA9ICgpID0+IHtcbiAgICBpZiAodGhpcy5jb250YWluZXIpIHtcbiAgICAgIFJlYWN0RE9NLnVubW91bnRDb21wb25lbnRBdE5vZGUodGhpcy5jb250YWluZXIpO1xuICAgICAgdGhpcy5jb250YWluZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmNvbnRhaW5lcik7XG4gICAgICB0aGlzLmNvbnRhaW5lciA9IG51bGw7XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyQ29tcG9uZW50ID0gKHByb3BzLCByZWFkeSkgPT4ge1xuICAgIGNvbnN0IHsgdmlzaWJsZSwgZ2V0Q29tcG9uZW50LCBmb3JjZVJlbmRlciwgZ2V0Q29udGFpbmVyLCBwYXJlbnQgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKHZpc2libGUgfHwgcGFyZW50Ll9jb21wb25lbnQgfHwgZm9yY2VSZW5kZXIpIHtcbiAgICAgIGlmICghdGhpcy5jb250YWluZXIpIHtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBnZXRDb250YWluZXIoKTtcbiAgICAgIH1cbiAgICAgIFJlYWN0RE9NLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKFxuICAgICAgICBwYXJlbnQsXG4gICAgICAgIGdldENvbXBvbmVudChwcm9wcyksXG4gICAgICAgIHRoaXMuY29udGFpbmVyLFxuICAgICAgICBmdW5jdGlvbiBjYWxsYmFjaygpIHtcbiAgICAgICAgICBpZiAocmVhZHkpIHtcbiAgICAgICAgICAgIHJlYWR5LmNhbGwodGhpcyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbih7XG4gICAgICByZW5kZXJDb21wb25lbnQ6IHRoaXMucmVuZGVyQ29tcG9uZW50LFxuICAgICAgcmVtb3ZlQ29udGFpbmVyOiB0aGlzLnJlbW92ZUNvbnRhaW5lcixcbiAgICB9KTtcbiAgfVxufVxuIl19