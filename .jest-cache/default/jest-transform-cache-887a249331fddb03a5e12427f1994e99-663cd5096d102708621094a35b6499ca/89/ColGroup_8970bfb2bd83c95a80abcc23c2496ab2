8e466fba4c04ebb5dbbefb7cc345e451
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = ColGroup;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function ColGroup(props, _ref) {
  var table = _ref.table;
  var _table$props = table.props,
      prefixCls = _table$props.prefixCls,
      expandIconAsCell = _table$props.expandIconAsCell;
  var fixed = props.fixed;
  var cols = [];

  if (expandIconAsCell && fixed !== 'right') {
    cols.push(_react["default"].createElement("col", {
      className: "".concat(prefixCls, "-expand-icon-col"),
      key: "rc-table-expand-icon-col"
    }));
  }

  var leafColumns;

  if (fixed === 'left') {
    leafColumns = table.columnManager.leftLeafColumns();
  } else if (fixed === 'right') {
    leafColumns = table.columnManager.rightLeafColumns();
  } else {
    leafColumns = table.columnManager.leafColumns();
  }

  cols = cols.concat(leafColumns.map(function (c) {
    return _react["default"].createElement("col", {
      key: c.key || c.dataIndex,
      style: {
        width: c.width,
        minWidth: c.width
      }
    });
  }));
  return _react["default"].createElement("colgroup", null, cols);
}

ColGroup.propTypes = {
  fixed: _propTypes["default"].string
};
ColGroup.contextTypes = {
  table: _propTypes["default"].any
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbEdyb3VwLmpzeCJdLCJuYW1lcyI6WyJDb2xHcm91cCIsInByb3BzIiwidGFibGUiLCJwcmVmaXhDbHMiLCJleHBhbmRJY29uQXNDZWxsIiwiZml4ZWQiLCJjb2xzIiwicHVzaCIsImxlYWZDb2x1bW5zIiwiY29sdW1uTWFuYWdlciIsImxlZnRMZWFmQ29sdW1ucyIsInJpZ2h0TGVhZkNvbHVtbnMiLCJjb25jYXQiLCJtYXAiLCJjIiwia2V5IiwiZGF0YUluZGV4Iiwid2lkdGgiLCJtaW5XaWR0aCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImNvbnRleHRUeXBlcyIsImFueSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRWUsU0FBU0EsUUFBVCxDQUFrQkMsS0FBbEIsUUFBb0M7QUFBQSxNQUFUQyxLQUFTLFFBQVRBLEtBQVM7QUFBQSxxQkFDVEEsS0FBSyxDQUFDRCxLQURHO0FBQUEsTUFDekNFLFNBRHlDLGdCQUN6Q0EsU0FEeUM7QUFBQSxNQUM5QkMsZ0JBRDhCLGdCQUM5QkEsZ0JBRDhCO0FBQUEsTUFFekNDLEtBRnlDLEdBRS9CSixLQUYrQixDQUV6Q0ksS0FGeUM7QUFJakQsTUFBSUMsSUFBSSxHQUFHLEVBQVg7O0FBRUEsTUFBSUYsZ0JBQWdCLElBQUlDLEtBQUssS0FBSyxPQUFsQyxFQUEyQztBQUN6Q0MsSUFBQUEsSUFBSSxDQUFDQyxJQUFMLENBQ0U7QUFDRSxNQUFBLFNBQVMsWUFBS0osU0FBTCxxQkFEWDtBQUVFLE1BQUEsR0FBRyxFQUFDO0FBRk4sTUFERjtBQU1EOztBQUVELE1BQUlLLFdBQUo7O0FBRUEsTUFBSUgsS0FBSyxLQUFLLE1BQWQsRUFBc0I7QUFDcEJHLElBQUFBLFdBQVcsR0FBR04sS0FBSyxDQUFDTyxhQUFOLENBQW9CQyxlQUFwQixFQUFkO0FBQ0QsR0FGRCxNQUVPLElBQUlMLEtBQUssS0FBSyxPQUFkLEVBQXVCO0FBQzVCRyxJQUFBQSxXQUFXLEdBQUdOLEtBQUssQ0FBQ08sYUFBTixDQUFvQkUsZ0JBQXBCLEVBQWQ7QUFDRCxHQUZNLE1BRUE7QUFDTEgsSUFBQUEsV0FBVyxHQUFHTixLQUFLLENBQUNPLGFBQU4sQ0FBb0JELFdBQXBCLEVBQWQ7QUFDRDs7QUFDREYsRUFBQUEsSUFBSSxHQUFHQSxJQUFJLENBQUNNLE1BQUwsQ0FDTEosV0FBVyxDQUFDSyxHQUFaLENBQWdCLFVBQUFDLENBQUMsRUFBSTtBQUNuQixXQUNFO0FBQ0UsTUFBQSxHQUFHLEVBQUVBLENBQUMsQ0FBQ0MsR0FBRixJQUFTRCxDQUFDLENBQUNFLFNBRGxCO0FBRUUsTUFBQSxLQUFLLEVBQUU7QUFBRUMsUUFBQUEsS0FBSyxFQUFFSCxDQUFDLENBQUNHLEtBQVg7QUFBa0JDLFFBQUFBLFFBQVEsRUFBRUosQ0FBQyxDQUFDRztBQUE5QjtBQUZULE1BREY7QUFNRCxHQVBELENBREssQ0FBUDtBQVdBLFNBQ0Usa0RBQ0dYLElBREgsQ0FERjtBQUtEOztBQUVETixRQUFRLENBQUNtQixTQUFULEdBQXFCO0FBQ25CZCxFQUFBQSxLQUFLLEVBQUVlLHNCQUFVQztBQURFLENBQXJCO0FBSUFyQixRQUFRLENBQUNzQixZQUFULEdBQXdCO0FBQ3RCcEIsRUFBQUEsS0FBSyxFQUFFa0Isc0JBQVVHO0FBREssQ0FBeEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29sR3JvdXAocHJvcHMsIHsgdGFibGUgfSkge1xuICBjb25zdCB7IHByZWZpeENscywgZXhwYW5kSWNvbkFzQ2VsbCB9ID0gdGFibGUucHJvcHM7XG4gIGNvbnN0IHsgZml4ZWQgfSA9IHByb3BzO1xuXG4gIGxldCBjb2xzID0gW107XG5cbiAgaWYgKGV4cGFuZEljb25Bc0NlbGwgJiYgZml4ZWQgIT09ICdyaWdodCcpIHtcbiAgICBjb2xzLnB1c2goXG4gICAgICA8Y29sXG4gICAgICAgIGNsYXNzTmFtZT17YCR7cHJlZml4Q2xzfS1leHBhbmQtaWNvbi1jb2xgfVxuICAgICAgICBrZXk9XCJyYy10YWJsZS1leHBhbmQtaWNvbi1jb2xcIlxuICAgICAgLz5cbiAgICApO1xuICB9XG5cbiAgbGV0IGxlYWZDb2x1bW5zO1xuXG4gIGlmIChmaXhlZCA9PT0gJ2xlZnQnKSB7XG4gICAgbGVhZkNvbHVtbnMgPSB0YWJsZS5jb2x1bW5NYW5hZ2VyLmxlZnRMZWFmQ29sdW1ucygpO1xuICB9IGVsc2UgaWYgKGZpeGVkID09PSAncmlnaHQnKSB7XG4gICAgbGVhZkNvbHVtbnMgPSB0YWJsZS5jb2x1bW5NYW5hZ2VyLnJpZ2h0TGVhZkNvbHVtbnMoKTtcbiAgfSBlbHNlIHtcbiAgICBsZWFmQ29sdW1ucyA9IHRhYmxlLmNvbHVtbk1hbmFnZXIubGVhZkNvbHVtbnMoKTtcbiAgfVxuICBjb2xzID0gY29scy5jb25jYXQoXG4gICAgbGVhZkNvbHVtbnMubWFwKGMgPT4ge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGNvbFxuICAgICAgICAgIGtleT17Yy5rZXkgfHwgYy5kYXRhSW5kZXh9XG4gICAgICAgICAgc3R5bGU9e3sgd2lkdGg6IGMud2lkdGgsIG1pbldpZHRoOiBjLndpZHRoIH19XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgIH0pXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8Y29sZ3JvdXA+XG4gICAgICB7Y29sc31cbiAgICA8L2NvbGdyb3VwPlxuICApO1xufVxuXG5Db2xHcm91cC5wcm9wVHlwZXMgPSB7XG4gIGZpeGVkOiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuQ29sR3JvdXAuY29udGV4dFR5cGVzID0ge1xuICB0YWJsZTogUHJvcFR5cGVzLmFueSxcbn07XG4iXX0=