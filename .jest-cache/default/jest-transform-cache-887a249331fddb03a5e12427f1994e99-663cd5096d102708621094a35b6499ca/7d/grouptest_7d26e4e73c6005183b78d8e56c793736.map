{"version":3,"sources":["group.test.js"],"names":["describe","it","onChange","jest","fn","wrapper","find","at","simulate","expect","toHaveBeenCalledWith","onChangeGroup","options","label","value","groupWrapper","not","toHaveBeenCalled","disabled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport Checkbox from '../index';\n\ndescribe('CheckboxGroup', () => {\n  it('should work basically', () => {\n    const onChange = jest.fn();\n    const wrapper = mount(\n      <Checkbox.Group options={['Apple', 'Pear', 'Orange']} onChange={onChange} />,\n    );\n    wrapper\n      .find('.c7n-checkbox-input')\n      .at(0)\n      .simulate('change');\n    expect(onChange).toHaveBeenCalledWith(['Apple']);\n    wrapper\n      .find('.c7n-checkbox-input')\n      .at(1)\n      .simulate('change');\n    expect(onChange).toHaveBeenCalledWith(['Apple', 'Pear']);\n    wrapper\n      .find('.c7n-checkbox-input')\n      .at(2)\n      .simulate('change');\n    expect(onChange).toHaveBeenCalledWith(['Apple', 'Pear', 'Orange']);\n    wrapper\n      .find('.c7n-checkbox-input')\n      .at(1)\n      .simulate('change');\n    expect(onChange).toHaveBeenCalledWith(['Apple', 'Orange']);\n  });\n\n  it('does not trigger onChange callback of both Checkbox and CheckboxGroup when CheckboxGroup is disabled', () => {\n    const onChangeGroup = jest.fn();\n\n    const options = [{ label: 'Apple', value: 'Apple' }, { label: 'Pear', value: 'Pear' }];\n\n    const groupWrapper = mount(\n      <Checkbox.Group options={options} onChange={onChangeGroup} disabled />,\n    );\n    groupWrapper\n      .find('.c7n-checkbox-input')\n      .at(0)\n      .simulate('change');\n    expect(onChangeGroup).not.toHaveBeenCalled();\n    groupWrapper\n      .find('.c7n-checkbox-input')\n      .at(1)\n      .simulate('change');\n    expect(onChangeGroup).not.toHaveBeenCalled();\n  });\n\n  it('does not prevent onChange callback from Checkbox when CheckboxGroup is not disabled', () => {\n    const onChangeGroup = jest.fn();\n\n    const options = [\n      { label: 'Apple', value: 'Apple' },\n      { label: 'Orange', value: 'Orange', disabled: true },\n    ];\n\n    const groupWrapper = mount(<Checkbox.Group options={options} onChange={onChangeGroup} />);\n    groupWrapper\n      .find('.c7n-checkbox-input')\n      .at(0)\n      .simulate('change');\n    expect(onChangeGroup).toHaveBeenCalledWith(['Apple']);\n    groupWrapper\n      .find('.c7n-checkbox-input')\n      .at(1)\n      .simulate('change');\n    expect(onChangeGroup).toHaveBeenCalledWith(['Apple']);\n  });\n});\n"]}