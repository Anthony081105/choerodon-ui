4472cb0f3684b8967ad82b19bebd3c26
"use strict";

/* istanbul ignore next */
function cov_1k0o7ri2mx() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/code-area/formatters/index.tsx";
  var hash = "6ba067e9e630b7486d0c279a1e7897fd1e03828b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/code-area/formatters/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 17,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 40
        }
      },
      "5": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 23,
          column: 3
        }
      },
      "6": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 36
        }
      },
      "7": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "8": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "9": {
        start: {
          line: 31,
          column: 21
        },
        end: {
          line: 31,
          column: 47
        }
      },
      "10": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "11": {
        start: {
          line: 35,
          column: 19
        },
        end: {
          line: 35,
          column: 43
        }
      },
      "12": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "get",
        decl: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 19
          }
        },
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 10,
            column: 3
          }
        },
        line: 8
      },
      "1": {
        name: "get",
        decl: {
          start: {
            line: 14,
            column: 16
          },
          end: {
            line: 14,
            column: 19
          }
        },
        loc: {
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 16,
            column: 3
          }
        },
        line: 14
      },
      "2": {
        name: "get",
        decl: {
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 20,
            column: 19
          }
        },
        loc: {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 22,
            column: 3
          }
        },
        line: 20
      },
      "3": {
        name: "get",
        decl: {
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 19
          }
        },
        loc: {
          start: {
            line: 26,
            column: 22
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 26
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6ba067e9e630b7486d0c279a1e7897fd1e03828b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1k0o7ri2mx = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1k0o7ri2mx();
cov_1k0o7ri2mx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1k0o7ri2mx().s[1]++;
Object.defineProperty(exports, "JSONFormatter", {
  enumerable: true,
  get: function get() {
    /* istanbul ignore next */
    cov_1k0o7ri2mx().f[0]++;
    cov_1k0o7ri2mx().s[2]++;
    return _JSONFormatter.JSONFormatter;
  }
});

/* istanbul ignore next */
cov_1k0o7ri2mx().s[3]++;
Object.defineProperty(exports, "YAMLFormatter", {
  enumerable: true,
  get: function get() {
    /* istanbul ignore next */
    cov_1k0o7ri2mx().f[1]++;
    cov_1k0o7ri2mx().s[4]++;
    return _YAMLFormatter.YAMLFormatter;
  }
});

/* istanbul ignore next */
cov_1k0o7ri2mx().s[5]++;
Object.defineProperty(exports, "JSFormatter", {
  enumerable: true,
  get: function get() {
    /* istanbul ignore next */
    cov_1k0o7ri2mx().f[2]++;
    cov_1k0o7ri2mx().s[6]++;
    return _JSFormatter.JSFormatter;
  }
});

/* istanbul ignore next */
cov_1k0o7ri2mx().s[7]++;
Object.defineProperty(exports, "HTMLFormatter", {
  enumerable: true,
  get: function get() {
    /* istanbul ignore next */
    cov_1k0o7ri2mx().f[3]++;
    cov_1k0o7ri2mx().s[8]++;
    return _HTMLFormatter.HTMLFormatter;
  }
});

var _JSONFormatter =
/* istanbul ignore next */
(cov_1k0o7ri2mx().s[9]++, require("./JSONFormatter"));

var _YAMLFormatter =
/* istanbul ignore next */
(cov_1k0o7ri2mx().s[10]++, require("./YAMLFormatter"));

var _JSFormatter =
/* istanbul ignore next */
(cov_1k0o7ri2mx().s[11]++, require("./JSFormatter"));

var _HTMLFormatter =
/* istanbul ignore next */
(cov_1k0o7ri2mx().s[12]++, require("./HTMLFormatter"));