{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/popconfirm/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, ReactNode, MouseEventHandler } from 'react';\nimport Tooltip, { AbstractTooltipProps } from '../tooltip';\nimport Icon from '../icon';\nimport Button from '../button';\nimport { ButtonType } from '../button/Button';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport { Size } from '../_util/enum';\nimport { getPrefixCls } from '../configure';\n\nexport interface PopconfirmProps extends AbstractTooltipProps {\n  title: ReactNode;\n  onConfirm?: MouseEventHandler<any>;\n  onCancel?: MouseEventHandler<any>;\n  okText?: ReactNode;\n  okType?: ButtonType;\n  cancelText?: ReactNode;\n}\n\nexport interface PopconfirmState {\n  visible?: boolean;\n}\n\nexport interface PopconfirmLocale {\n  okText: string;\n  cancelText: string;\n}\n\nexport default class Popconfirm extends Component<PopconfirmProps, PopconfirmState> {\n  static displayName = 'Popconfirm';\n\n  static defaultProps = {\n    transitionName: 'zoom-big',\n    placement: 'top',\n    trigger: 'click',\n    okType: 'primary',\n  };\n\n  private tooltip: any;\n\n  constructor(props: PopconfirmProps) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n    };\n  }\n\n  componentWillReceiveProps(nextProps: PopconfirmProps) {\n    if ('visible' in nextProps) {\n      this.setState({ visible: nextProps.visible });\n    }\n  }\n\n  getPopupDomNode() {\n    return this.tooltip.getPopupDomNode();\n  }\n\n  onConfirm: MouseEventHandler<HTMLButtonElement> = e => {\n    this.setVisible(false);\n\n    const { onConfirm } = this.props;\n    if (onConfirm) {\n      onConfirm.call(this, e);\n    }\n  };\n\n  onCancel: MouseEventHandler<HTMLButtonElement> = e => {\n    this.setVisible(false);\n\n    const { onCancel } = this.props;\n    if (onCancel) {\n      onCancel.call(this, e);\n    }\n  };\n\n  onVisibleChange = (visible: boolean) => {\n    this.setVisible(visible);\n  };\n\n  setVisible(visible: boolean) {\n    const props = this.props;\n    if (!('visible' in props)) {\n      this.setState({ visible });\n    }\n\n    const { onVisibleChange } = props;\n    if (onVisibleChange) {\n      onVisibleChange(visible);\n    }\n  }\n\n  saveTooltip = (node: any) => {\n    this.tooltip = node;\n  };\n\n  renderOverlay = (popconfirmLocale: PopconfirmLocale) => {\n    const { title, cancelText, okText, okType } = this.props;\n    const prefixCls = this.getPrefixCls();\n    return (\n      <div>\n        <div className={`${prefixCls}-inner-content`}>\n          <div className={`${prefixCls}-message`}>\n            <Icon type=\"warning\" />\n            <div className={`${prefixCls}-message-title`}>{title}</div>\n          </div>\n          <div className={`${prefixCls}-buttons`}>\n            <Button onClick={this.onCancel} size={Size.small}>\n              {cancelText || popconfirmLocale.cancelText}\n            </Button>\n            <Button onClick={this.onConfirm} type={okType} size={Size.small}>\n              {okText || popconfirmLocale.okText}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  getPrefixCls() {\n    const { prefixCls } = this.props;\n    return getPrefixCls('popover', prefixCls);\n  }\n\n  render() {\n    const { placement, ...restProps } = this.props;\n    const { visible } = this.state;\n    const overlay = (\n      <LocaleReceiver componentName=\"Popconfirm\" defaultLocale={defaultLocale.Popconfirm}>\n        {this.renderOverlay}\n      </LocaleReceiver>\n    );\n\n    return (\n      <Tooltip\n        {...restProps}\n        prefixCls={this.getPrefixCls()}\n        placement={placement}\n        onVisibleChange={this.onVisibleChange}\n        visible={visible}\n        overlay={overlay}\n        ref={this.saveTooltip}\n      />\n    );\n  }\n}\n"]}