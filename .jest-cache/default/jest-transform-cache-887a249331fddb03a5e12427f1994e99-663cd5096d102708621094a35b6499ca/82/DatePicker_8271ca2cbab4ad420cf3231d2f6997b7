37df943d067454ec2bff0287b38e4473
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _ = _interopRequireDefault(require(".."));

var _dataSet = _interopRequireDefault(require("../../data-set"));

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = (0, _getPrototypeOf2["default"])(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0, _possibleConstructorReturn2["default"])(this, result);
  };
}

function handleDataSetChange(_ref) {
  var value = _ref.value,
      oldValue = _ref.oldValue;
  // eslint-disable-next-line no-console
  console.log('[dataset newValue]', value && value.format(), '[oldValue]', oldValue && oldValue.format());
}

function rangeValidator(value, name) {
  // eslint-disable-next-line no-console
  console.log("[validation ".concat(name, " value]"), value);
  return true;
}

var DatePickerTest =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(DatePickerTest, _React$Component);

  var _super = _createSuper(DatePickerTest);

  function DatePickerTest() {
    var _this;

    (0, _classCallCheck2["default"])(this, DatePickerTest);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "ds", new _dataSet["default"]({
      autoCreate: true,
      fields: [{
        name: 'date',
        type: 'date',
        range: ['start', 'end'],
        defaultValue: {
          start: '1984-11-22',
          end: '2020-02-09'
        },
        required: true,
        validator: rangeValidator
      }],
      events: {
        update: handleDataSetChange
      }
    }));
    return _this;
  }

  (0, _createClass2["default"])(DatePickerTest, [{
    key: "render",
    value: function render() {
      return _react["default"].createElement(_["default"], {
        dataSet: this.ds,
        name: "date",
        placeholder: ['Start Date', 'End Date']
      });
    }
  }]);
  return DatePickerTest;
}(_react["default"].Component);

var _default = DatePickerTest;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGVQaWNrZXIuanMiXSwibmFtZXMiOlsiaGFuZGxlRGF0YVNldENoYW5nZSIsInZhbHVlIiwib2xkVmFsdWUiLCJjb25zb2xlIiwibG9nIiwiZm9ybWF0IiwicmFuZ2VWYWxpZGF0b3IiLCJuYW1lIiwiRGF0ZVBpY2tlclRlc3QiLCJEYXRhU2V0IiwiYXV0b0NyZWF0ZSIsImZpZWxkcyIsInR5cGUiLCJyYW5nZSIsImRlZmF1bHRWYWx1ZSIsInN0YXJ0IiwiZW5kIiwicmVxdWlyZWQiLCJ2YWxpZGF0b3IiLCJldmVudHMiLCJ1cGRhdGUiLCJkcyIsIlJlYWN0IiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsU0FBU0EsbUJBQVQsT0FBa0Q7QUFBQSxNQUFuQkMsS0FBbUIsUUFBbkJBLEtBQW1CO0FBQUEsTUFBWkMsUUFBWSxRQUFaQSxRQUFZO0FBQ2hEO0FBQ0FDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUNFLG9CQURGLEVBRUVILEtBQUssSUFBSUEsS0FBSyxDQUFDSSxNQUFOLEVBRlgsRUFHRSxZQUhGLEVBSUVILFFBQVEsSUFBSUEsUUFBUSxDQUFDRyxNQUFULEVBSmQ7QUFNRDs7QUFFRCxTQUFTQyxjQUFULENBQXdCTCxLQUF4QixFQUErQk0sSUFBL0IsRUFBcUM7QUFDbkM7QUFDQUosRUFBQUEsT0FBTyxDQUFDQyxHQUFSLHVCQUEyQkcsSUFBM0IsY0FBMENOLEtBQTFDO0FBQ0EsU0FBTyxJQUFQO0FBQ0Q7O0lBRUtPLGM7Ozs7Ozs7Ozs7Ozs7Ozs7OzJGQUNDLElBQUlDLG1CQUFKLENBQVk7QUFDZkMsTUFBQUEsVUFBVSxFQUFFLElBREc7QUFFZkMsTUFBQUEsTUFBTSxFQUFFLENBQ047QUFDRUosUUFBQUEsSUFBSSxFQUFFLE1BRFI7QUFFRUssUUFBQUEsSUFBSSxFQUFFLE1BRlI7QUFHRUMsUUFBQUEsS0FBSyxFQUFFLENBQUMsT0FBRCxFQUFVLEtBQVYsQ0FIVDtBQUlFQyxRQUFBQSxZQUFZLEVBQUU7QUFBRUMsVUFBQUEsS0FBSyxFQUFFLFlBQVQ7QUFBdUJDLFVBQUFBLEdBQUcsRUFBRTtBQUE1QixTQUpoQjtBQUtFQyxRQUFBQSxRQUFRLEVBQUUsSUFMWjtBQU1FQyxRQUFBQSxTQUFTLEVBQUVaO0FBTmIsT0FETSxDQUZPO0FBWWZhLE1BQUFBLE1BQU0sRUFBRTtBQUNOQyxRQUFBQSxNQUFNLEVBQUVwQjtBQURGO0FBWk8sS0FBWixDOzs7Ozs7NkJBaUJJO0FBQ1AsYUFBTyxnQ0FBQyxZQUFEO0FBQVksUUFBQSxPQUFPLEVBQUUsS0FBS3FCLEVBQTFCO0FBQThCLFFBQUEsSUFBSSxFQUFDLE1BQW5DO0FBQTBDLFFBQUEsV0FBVyxFQUFFLENBQUMsWUFBRCxFQUFlLFVBQWY7QUFBdkQsUUFBUDtBQUNEOzs7RUFwQjBCQyxrQkFBTUMsUzs7ZUF1QnBCZixjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBEYXRlUGlja2VyIGZyb20gJy4uJztcbmltcG9ydCBEYXRhU2V0IGZyb20gJy4uLy4uL2RhdGEtc2V0JztcblxuZnVuY3Rpb24gaGFuZGxlRGF0YVNldENoYW5nZSh7IHZhbHVlLCBvbGRWYWx1ZSB9KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gIGNvbnNvbGUubG9nKFxuICAgICdbZGF0YXNldCBuZXdWYWx1ZV0nLFxuICAgIHZhbHVlICYmIHZhbHVlLmZvcm1hdCgpLFxuICAgICdbb2xkVmFsdWVdJyxcbiAgICBvbGRWYWx1ZSAmJiBvbGRWYWx1ZS5mb3JtYXQoKSxcbiAgKTtcbn1cblxuZnVuY3Rpb24gcmFuZ2VWYWxpZGF0b3IodmFsdWUsIG5hbWUpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgY29uc29sZS5sb2coYFt2YWxpZGF0aW9uICR7bmFtZX0gdmFsdWVdYCwgdmFsdWUpO1xuICByZXR1cm4gdHJ1ZTtcbn1cblxuY2xhc3MgRGF0ZVBpY2tlclRlc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBkcyA9IG5ldyBEYXRhU2V0KHtcbiAgICBhdXRvQ3JlYXRlOiB0cnVlLFxuICAgIGZpZWxkczogW1xuICAgICAge1xuICAgICAgICBuYW1lOiAnZGF0ZScsXG4gICAgICAgIHR5cGU6ICdkYXRlJyxcbiAgICAgICAgcmFuZ2U6IFsnc3RhcnQnLCAnZW5kJ10sXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogeyBzdGFydDogJzE5ODQtMTEtMjInLCBlbmQ6ICcyMDIwLTAyLTA5JyB9LFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgdmFsaWRhdG9yOiByYW5nZVZhbGlkYXRvcixcbiAgICAgIH0sXG4gICAgXSxcbiAgICBldmVudHM6IHtcbiAgICAgIHVwZGF0ZTogaGFuZGxlRGF0YVNldENoYW5nZSxcbiAgICB9LFxuICB9KTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIDxEYXRlUGlja2VyIGRhdGFTZXQ9e3RoaXMuZHN9IG5hbWU9XCJkYXRlXCIgcGxhY2Vob2xkZXI9e1snU3RhcnQgRGF0ZScsICdFbmQgRGF0ZSddfSAvPjtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBEYXRlUGlja2VyVGVzdDtcbiJdfQ==