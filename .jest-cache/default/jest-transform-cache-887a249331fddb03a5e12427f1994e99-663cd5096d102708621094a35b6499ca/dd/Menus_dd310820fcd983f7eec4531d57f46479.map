{"version":3,"sources":["cascader/Menus.jsx"],"names":["Menus","Component","options","value","activeValue","onSelect","prefixCls","visible","expandTrigger","PropTypes","dropdownMenuColumnStyle","object","prevProps","option","menuIndex","expandProps","onClick","menuItemCls","hasChildren","onMouseEnter","onMouseLeave","title","values","o","result","activeOption","args","clearTimeout","setTimeout","optionsLength","i","itemComponent","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayTreeFilter from 'array-tree-filter';\nimport { findDOMNode } from 'react-dom';\n\nexport default class Menus extends Component {\n  static defaultProps = {\n    options: [],\n    value: [],\n    activeValue: [],\n    onSelect() {\n    },\n    prefixCls: 'rc-cascader-menus',\n    visible: false,\n    expandTrigger: 'click',\n  };\n\n  static propTypes = {\n    value: PropTypes.array,\n    activeValue: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    prefixCls: PropTypes.string,\n    expandTrigger: PropTypes.string,\n    onSelect: PropTypes.func,\n    visible: PropTypes.bool,\n    dropdownMenuColumnStyle: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.menuItems = {};\n  }\n\n  componentDidMount() {\n    this.scrollActiveItemToView();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.visible && this.props.visible) {\n      this.scrollActiveItemToView();\n    }\n  }\n\n  getOption(option, menuIndex) {\n    const { prefixCls, expandTrigger } = this.props;\n    const onSelect = this.props.onSelect.bind(this, option, menuIndex);\n    let expandProps = {\n      onClick: onSelect,\n    };\n    let menuItemCls = `${prefixCls}-menu-item`;\n    const hasChildren = option.children && option.children.length > 0;\n    if (hasChildren || option.isLeaf === false) {\n      menuItemCls += ` ${prefixCls}-menu-item-expand`;\n    }\n    if (expandTrigger === 'hover' && hasChildren) {\n      expandProps = {\n        onMouseEnter: this.delayOnSelect.bind(this, onSelect),\n        onMouseLeave: this.delayOnSelect.bind(this),\n        onClick: onSelect,\n      };\n    }\n    if (this.isActiveOption(option, menuIndex)) {\n      menuItemCls += ` ${prefixCls}-menu-item-active`;\n      expandProps.ref = this.saveMenuItem(menuIndex);\n    }\n    if (option.disabled) {\n      menuItemCls += ` ${prefixCls}-menu-item-disabled`;\n    }\n    if (option.loading) {\n      menuItemCls += ` ${prefixCls}-menu-item-loading`;\n    }\n    let title = '';\n    if (option.title) {\n      title = option.title;\n    } else if (typeof option.label === 'string') {\n      title = option.label;\n    }\n    return (\n      <li\n        key={option.value}\n        className={menuItemCls}\n        title={title}\n        {...expandProps}\n      >\n        {option.label}\n      </li>\n    );\n  }\n\n  getActiveOptions(values) {\n    const activeValue = values || this.props.activeValue;\n    const options = this.props.options;\n    return arrayTreeFilter(options, (o, level) => o.value === activeValue[level]);\n  }\n\n  getShowOptions() {\n    const { options } = this.props;\n    const result = this.getActiveOptions()\n      .map(activeOption => activeOption.children)\n      .filter(activeOption => !!activeOption);\n    result.unshift(options);\n    return result;\n  }\n\n  delayOnSelect(onSelect, ...args) {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n    if (typeof onSelect === 'function') {\n      this.delayTimer = setTimeout(() => {\n        onSelect(args);\n        this.delayTimer = null;\n      }, 150);\n    }\n  }\n\n  scrollActiveItemToView() {\n    // scroll into view\n    const optionsLength = this.getShowOptions().length;\n    for (let i = 0; i < optionsLength; i++) {\n      const itemComponent = this.menuItems[i];\n      if (itemComponent) {\n        const target = findDOMNode(itemComponent);\n        target.parentNode.scrollTop = target.offsetTop;\n      }\n    }\n  }\n\n  isActiveOption(option, menuIndex) {\n    const { activeValue = [] } = this.props;\n    return activeValue[menuIndex] === option.value;\n  }\n\n  saveMenuItem = (index) => (node) => {\n    this.menuItems[index] = node;\n  };\n\n  render() {\n    const { prefixCls, dropdownMenuColumnStyle } = this.props;\n    return (\n      <div>\n        {this.getShowOptions().map((options, menuIndex) =>\n          <ul className={`${prefixCls}-menu`} key={menuIndex} style={dropdownMenuColumnStyle}>\n            {options.map(option => this.getOption(option, menuIndex))}\n          </ul>,\n        )}\n      </div>\n    );\n  }\n}\n"]}