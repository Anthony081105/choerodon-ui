{"version":3,"sources":["rc-components/tree/TreeNode.js"],"names":["ICON_OPEN","ICON_CLOSE","defaultTitle","InternalTreeNode","React","Component","dragNodeHighlight","onNodeClick","onNodeDoubleClick","onNodeSelect","e","disableCheckbox","checked","onNodeCheck","targetChecked","onNodeMouseEnter","onNodeMouseLeave","onNodeContextMenu","onNodeDragStart","onNodeDragEnter","onNodeDragOver","onNodeDragLeave","onNodeDragEnd","onNodeDrop","onNodeExpand","expanded","eventKey","keyEntities","hasChildren","children","isLeaf","loaded","loadData","disabled","treeDisabled","checkable","treeCheckable","loading","props","onNodeLoad","switcherIconFromProps","prefixCls","switcherIconFromCtx","switcherIcon","className","switcherCls","onClick","halfChecked","$custom","onCheck","title","selected","icon","data","showIcon","treeIcon","draggable","wrapClass","currentIcon","$icon","$title","ref","onMouseEnter","onMouseLeave","onContextMenu","onDoubleClick","onDragStart","undefined","selectable","treeSelectable","style","dragOver","dragOverGapTop","dragOverGapBottom","isStart","isEnd","domRef","active","onMouseMove","otherProps","filterTreeNode","dataOrAriaAttributeProps","level","onDragEnter","onDragOver","onDragLeave","onDrop","onDragEnd","Indent","PropTypes","onSelect","pos","ContextTreeNode","TreeContext","context"],"mappings":"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","sourcesContent":["/* eslint-disable */\n// @ts-nocheck \nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// @ts-ignore\nimport { polyfill } from 'react-lifecycles-compat';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria } from './util';\nimport Indent from './Indent';\nimport { convertNodePropsToEventData } from './utils/treeUtil';\nconst ICON_OPEN = 'open';\nconst ICON_CLOSE = 'close';\nconst defaultTitle = '---';\nclass InternalTreeNode extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            dragNodeHighlight: false,\n        };\n        this.onSelectorClick = e => {\n            // Click trigger before select/check operation\n            const { context: { onNodeClick }, } = this.props;\n            onNodeClick(e, convertNodePropsToEventData(this.props));\n            if (this.isSelectable()) {\n                this.onSelect(e);\n            }\n            else {\n                this.onCheck(e);\n            }\n        };\n        this.onSelectorDoubleClick = e => {\n            const { context: { onNodeDoubleClick }, } = this.props;\n            onNodeDoubleClick(e, convertNodePropsToEventData(this.props));\n        };\n        this.onSelect = e => {\n            if (this.isDisabled())\n                return;\n            const { context: { onNodeSelect }, } = this.props;\n            e.preventDefault();\n            onNodeSelect(e, convertNodePropsToEventData(this.props));\n        };\n        this.onCheck = e => {\n            if (this.isDisabled())\n                return;\n            const { disableCheckbox, checked } = this.props;\n            const { context: { onNodeCheck }, } = this.props;\n            if (!this.isCheckable() || disableCheckbox)\n                return;\n            e.preventDefault();\n            const targetChecked = !checked;\n            onNodeCheck(e, convertNodePropsToEventData(this.props), targetChecked);\n        };\n        this.onMouseEnter = e => {\n            const { context: { onNodeMouseEnter }, } = this.props;\n            onNodeMouseEnter(e, convertNodePropsToEventData(this.props));\n        };\n        this.onMouseLeave = e => {\n            const { context: { onNodeMouseLeave }, } = this.props;\n            onNodeMouseLeave(e, convertNodePropsToEventData(this.props));\n        };\n        this.onContextMenu = e => {\n            const { context: { onNodeContextMenu }, } = this.props;\n            onNodeContextMenu(e, convertNodePropsToEventData(this.props));\n        };\n        this.onDragStart = e => {\n            const { context: { onNodeDragStart }, } = this.props;\n            e.stopPropagation();\n            this.setState({\n                dragNodeHighlight: true,\n            });\n            onNodeDragStart(e, this);\n            try {\n                // ie throw error\n                // firefox-need-it\n                e.dataTransfer.setData('text/plain', '');\n            }\n            catch (error) {\n                // empty\n            }\n        };\n        this.onDragEnter = e => {\n            const { context: { onNodeDragEnter }, } = this.props;\n            e.preventDefault();\n            e.stopPropagation();\n            onNodeDragEnter(e, this);\n        };\n        this.onDragOver = e => {\n            const { context: { onNodeDragOver }, } = this.props;\n            e.preventDefault();\n            e.stopPropagation();\n            onNodeDragOver(e, this);\n        };\n        this.onDragLeave = e => {\n            const { context: { onNodeDragLeave }, } = this.props;\n            e.stopPropagation();\n            onNodeDragLeave(e, this);\n        };\n        this.onDragEnd = e => {\n            const { context: { onNodeDragEnd }, } = this.props;\n            e.stopPropagation();\n            this.setState({\n                dragNodeHighlight: false,\n            });\n            onNodeDragEnd(e, this);\n        };\n        this.onDrop = e => {\n            const { context: { onNodeDrop }, } = this.props;\n            e.preventDefault();\n            e.stopPropagation();\n            this.setState({\n                dragNodeHighlight: false,\n            });\n            onNodeDrop(e, this);\n        };\n        // Disabled item still can be switch\n        this.onExpand = e => {\n            const { context: { onNodeExpand }, } = this.props;\n            onNodeExpand(e, convertNodePropsToEventData(this.props));\n        };\n        // Drag usage\n        this.setSelectHandle = node => {\n            this.selectHandle = node;\n        };\n        this.getNodeState = () => {\n            const { expanded } = this.props;\n            if (this.isLeaf()) {\n                return null;\n            }\n            return expanded ? ICON_OPEN : ICON_CLOSE;\n        };\n        this.hasChildren = () => {\n            const { eventKey } = this.props;\n            const { context: { keyEntities }, } = this.props;\n            const { node: { hasChildren, }, } = keyEntities[eventKey] || {};\n            const { children } = keyEntities[eventKey] || {};\n            return !!(children || []).length || hasChildren;\n        };\n        this.isLeaf = () => {\n            const { isLeaf, loaded } = this.props;\n            const { context: { loadData }, } = this.props;\n            const hasChildren = this.hasChildren();\n            if (isLeaf === false) {\n                return false;\n            }\n            return isLeaf || (!loadData && !hasChildren) || (loadData && loaded && !hasChildren);\n        };\n        this.isDisabled = () => {\n            const { disabled } = this.props;\n            const { context: { disabled: treeDisabled }, } = this.props;\n            return !!(treeDisabled || disabled);\n        };\n        this.isCheckable = () => {\n            const { checkable } = this.props;\n            const { context: { checkable: treeCheckable }, } = this.props;\n            // Return false if tree or treeNode is not checkable\n            if (!treeCheckable || checkable === false)\n                return false;\n            return treeCheckable;\n        };\n        // Load data to avoid default expanded tree without data\n        this.syncLoadData = props => {\n            const { expanded, loading, loaded } = props;\n            const { context: { loadData, onNodeLoad }, } = this.props;\n            if (loading)\n                return;\n            // read from state to avoid loadData at same time\n            if (loadData && expanded && !this.isLeaf()) {\n                // We needn't reload data when has children in sync logic\n                // It's only needed in node expanded\n                if (!this.hasChildren() && !loaded) {\n                    onNodeLoad(convertNodePropsToEventData(this.props));\n                }\n            }\n        };\n        // Switcher\n        this.renderSwitcher = () => {\n            const { expanded, switcherIcon: switcherIconFromProps } = this.props;\n            const { context: { prefixCls, switcherIcon: switcherIconFromCtx }, } = this.props;\n            const switcherIcon = switcherIconFromProps || switcherIconFromCtx;\n            if (this.isLeaf()) {\n                return (React.createElement(\"span\", { className: classNames(`${prefixCls}-switcher`, `${prefixCls}-switcher-noop`) }, typeof switcherIcon === 'function'\n                    ? switcherIcon({ ...this.props, isLeaf: true })\n                    : switcherIcon));\n            }\n            const switcherCls = classNames(`${prefixCls}-switcher`, `${prefixCls}-switcher_${expanded ? ICON_OPEN : ICON_CLOSE}`);\n            return (React.createElement(\"span\", { onClick: this.onExpand, className: switcherCls }, typeof switcherIcon === 'function'\n                ? switcherIcon({ ...this.props, isLeaf: false })\n                : switcherIcon));\n        };\n        // Checkbox\n        this.renderCheckbox = () => {\n            const { checked, halfChecked, disableCheckbox } = this.props;\n            const { context: { prefixCls }, } = this.props;\n            const disabled = this.isDisabled();\n            const checkable = this.isCheckable();\n            if (!checkable)\n                return null;\n            // [Legacy] Custom element should be separate with `checkable` in future\n            const $custom = typeof checkable !== 'boolean' ? checkable : null;\n            return (React.createElement(\"span\", { className: classNames(`${prefixCls}-checkbox`, checked && `${prefixCls}-checkbox-checked`, !checked && halfChecked && `${prefixCls}-checkbox-indeterminate`, (disabled || disableCheckbox) && `${prefixCls}-checkbox-disabled`), onClick: this.onCheck }, $custom));\n        };\n        this.renderIcon = () => {\n            const { loading } = this.props;\n            const { context: { prefixCls }, } = this.props;\n            return (React.createElement(\"span\", { className: classNames(`${prefixCls}-iconEle`, `${prefixCls}-icon__${this.getNodeState() || 'docu'}`, loading && `${prefixCls}-icon_loading`) }));\n        };\n        // Icon + Title\n        this.renderSelector = () => {\n            const { dragNodeHighlight } = this.state;\n            const { title, selected, icon, loading, data } = this.props;\n            const { context: { prefixCls, showIcon, icon: treeIcon, draggable, loadData }, } = this.props;\n            const disabled = this.isDisabled();\n            const wrapClass = `${prefixCls}-node-content-wrapper`;\n            // Icon - Still show loading icon when loading without showIcon\n            let $icon;\n            if (showIcon) {\n                const currentIcon = icon || treeIcon;\n                $icon = currentIcon ? (React.createElement(\"span\", { className: classNames(`${prefixCls}-iconEle`, `${prefixCls}-icon__customize`) }, typeof currentIcon === 'function' ? currentIcon(this.props) : currentIcon)) : (this.renderIcon());\n            }\n            else if (loadData && loading) {\n                $icon = this.renderIcon();\n            }\n            // Title\n            const $title = (React.createElement(\"span\", { className: `${prefixCls}-title` }, typeof title === 'function' ? title(data) : title));\n            return (React.createElement(\"span\", { ref: this.setSelectHandle, title: typeof title === 'string' ? title : '', className: classNames(`${wrapClass}`, `${wrapClass}-${this.getNodeState() || 'normal'}`, !disabled && (selected || dragNodeHighlight) && `${prefixCls}-node-selected`, !disabled && draggable && 'draggable'), draggable: (!disabled && draggable) || undefined, \"aria-grabbed\": (!disabled && draggable) || undefined, onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave, onContextMenu: this.onContextMenu, onClick: this.onSelectorClick, onDoubleClick: this.onSelectorDoubleClick, onDragStart: draggable ? this.onDragStart : undefined },\n                $icon,\n                $title));\n        };\n    }\n    // Isomorphic needn't load data in server side\n    componentDidMount() {\n        this.syncLoadData(this.props);\n    }\n    componentDidUpdate() {\n        this.syncLoadData(this.props);\n    }\n    isSelectable() {\n        const { selectable } = this.props;\n        const { context: { selectable: treeSelectable }, } = this.props;\n        // Ignore when selectable is undefined or null\n        if (typeof selectable === 'boolean') {\n            return selectable;\n        }\n        return treeSelectable;\n    }\n    render() {\n        const { eventKey, className, style, dragOver, dragOverGapTop, dragOverGapBottom, isLeaf, isStart, isEnd, expanded, selected, checked, halfChecked, loading, domRef, active, onMouseMove, ...otherProps } = this.props;\n        const { context: { prefixCls, filterTreeNode, draggable, keyEntities }, } = this.props;\n        const disabled = this.isDisabled();\n        const dataOrAriaAttributeProps = getDataAndAria(otherProps);\n        const { level } = keyEntities[eventKey] || {};\n        return (React.createElement(\"div\", Object.assign({ ref: domRef, className: classNames(className, `${prefixCls}-treenode`, {\n                [`${prefixCls}-treenode-disabled`]: disabled,\n                [`${prefixCls}-treenode-switcher-${expanded ? 'open' : 'close'}`]: !isLeaf,\n                [`${prefixCls}-treenode-checkbox-checked`]: checked,\n                [`${prefixCls}-treenode-checkbox-indeterminate`]: halfChecked,\n                [`${prefixCls}-treenode-selected`]: selected,\n                [`${prefixCls}-treenode-loading`]: loading,\n                [`${prefixCls}-treenode-active`]: active,\n                [`${prefixCls}-treenode-checkable`]: this.isCheckable(),\n                'drag-over': !disabled && dragOver,\n                'drag-over-gap-top': !disabled && dragOverGapTop,\n                'drag-over-gap-bottom': !disabled && dragOverGapBottom,\n                'filter-node': filterTreeNode && filterTreeNode(convertNodePropsToEventData(this.props)),\n            }), style: style, onDragEnter: draggable ? this.onDragEnter : undefined, onDragOver: draggable ? this.onDragOver : undefined, onDragLeave: draggable ? this.onDragLeave : undefined, onDrop: draggable ? this.onDrop : undefined, onDragEnd: draggable ? this.onDragEnd : undefined, onMouseMove: onMouseMove }, dataOrAriaAttributeProps),\n            React.createElement(Indent, { prefixCls: prefixCls, level: level, isStart: isStart, isEnd: isEnd }),\n            this.renderSwitcher(),\n            this.renderCheckbox(),\n            this.renderSelector()));\n    }\n}\nInternalTreeNode.propTypes = {\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    onSelect: PropTypes.func,\n    // By parent\n    eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    expanded: PropTypes.bool,\n    selected: PropTypes.bool,\n    checked: PropTypes.bool,\n    loaded: PropTypes.bool,\n    loading: PropTypes.bool,\n    halfChecked: PropTypes.bool,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    dragOver: PropTypes.bool,\n    dragOverGapTop: PropTypes.bool,\n    dragOverGapBottom: PropTypes.bool,\n    pos: PropTypes.string,\n    // By user\n    isLeaf: PropTypes.bool,\n    checkable: PropTypes.bool,\n    selectable: PropTypes.bool,\n    disabled: PropTypes.bool,\n    disableCheckbox: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n};\npolyfill(InternalTreeNode);\nconst ContextTreeNode = props => (React.createElement(TreeContext.Consumer, null, context => React.createElement(InternalTreeNode, Object.assign({}, props, { context: context }))));\nContextTreeNode.displayName = 'TreeNode';\nContextTreeNode.defaultProps = {\n    title: defaultTitle,\n};\nContextTreeNode.isTreeNode = 1;\nexport { InternalTreeNode };\nexport default ContextTreeNode;\n"]}