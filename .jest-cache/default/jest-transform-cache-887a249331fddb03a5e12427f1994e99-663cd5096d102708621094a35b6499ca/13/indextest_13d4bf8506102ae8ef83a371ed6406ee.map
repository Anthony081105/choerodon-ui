{"version":3,"sources":["index.test.js"],"names":["describe","Modal","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","it","wrapper","expect","toMatchSnapshot","onCancel","fn","instance","handleCancel","toHaveBeenCalled","onOk","handleOk","render"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC1B,6BAAUC,YAAV;AAEAC,EAAAA,UAAU,CAAC,YAAM;AACfC,IAAAA,IAAI,CAACC,aAAL;AACD,GAFS,CAAV;AAIAC,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,IAAI,CAACG,aAAL;AACD,GAFQ,CAAT;AAIAC,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAM;AACtC,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD,OAAN,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,eAAhB;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,iEAAD,EAAoE,YAAM;AAC1E,QAAMI,QAAQ,GAAGR,IAAI,CAACS,EAAL,EAAjB;AACA,QAAMJ,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAO,MAAA,QAAQ,EAAEG;AAAjB,MAAN,CAAhB;AACAH,IAAAA,OAAO,CAACK,QAAR,GAAmBC,YAAnB;AACAL,IAAAA,MAAM,CAACE,QAAD,CAAN,CAAiBI,gBAAjB;AACD,GALC,CAAF;AAOAR,EAAAA,EAAE,CAAC,yDAAD,EAA4D,YAAM;AAClE,QAAMS,IAAI,GAAGb,IAAI,CAACS,EAAL,EAAb;AACA,QAAMJ,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAO,MAAA,IAAI,EAAEQ;AAAb,MAAN,CAAhB;AACAR,IAAAA,OAAO,CAACK,QAAR,GAAmBI,QAAnB;AACAR,IAAAA,MAAM,CAACO,IAAD,CAAN,CAAaD,gBAAb;AACD,GALC,CAAF;AAOAR,EAAAA,EAAE,CAAC,iCAAD,EAAoC,YAAM;AAC1C,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAO,MAAA,MAAM,EAAE;AAAf,MAAN,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAO,CAACU,MAAR,EAAD,CAAN,CAAyBR,eAAzB;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAM;AACjC,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAO,MAAA,QAAQ;AAAf,MAAN,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAO,CAACU,MAAR,EAAD,CAAN,CAAyBR,eAAzB;AACD,GAHC,CAAF;AAID,CAvCO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport Modal from '..';\nimport mountTest from '../../../tests/shared/mountTest';\n\ndescribe('modal-pro', () => {\n  mountTest(Modal);\n\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  it('renders modal-pro correctly', () => {\n    const wrapper = mount(<Modal />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  it('onCancel should be called when the methods handleCancel trigger', () => {\n    const onCancel = jest.fn();\n    const wrapper = mount(<Modal onCancel={onCancel} />);\n    wrapper.instance().handleCancel();\n    expect(onCancel).toHaveBeenCalled();\n  });\n\n  it('onOk should be called when the methods handleOk trigger', () => {\n    const onOk = jest.fn();\n    const wrapper = mount(<Modal onOk={onOk} />);\n    wrapper.instance().handleOk();\n    expect(onOk).toHaveBeenCalled();\n  });\n\n  it('render correctly without footer', () => {\n    const wrapper = mount(<Modal footer={null} />);\n    expect(wrapper.render()).toMatchSnapshot();\n  });\n\n  it('render close correctly', () => {\n    const wrapper = mount(<Modal closable />);\n    expect(wrapper.render()).toMatchSnapshot();\n  });\n});\n"]}