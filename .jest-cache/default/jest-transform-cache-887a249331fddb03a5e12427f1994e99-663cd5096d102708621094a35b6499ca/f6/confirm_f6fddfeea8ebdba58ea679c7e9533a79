c6431e3d497b62b8e15b6b0bc80d04d3
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = confirm;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _noop = _interopRequireDefault(require("lodash/noop"));

var _configure = require("choerodon-ui/lib/configure");

var _ModalContainer = require("../modal-container/ModalContainer");

var _icon = _interopRequireDefault(require("../icon"));

var _utils = require("./utils");

function confirm(props) {
  var _normalizeProps = (0, _utils.normalizeProps)(props),
      children = _normalizeProps.children,
      _normalizeProps$type = _normalizeProps.type,
      type = _normalizeProps$type === void 0 ? 'confirm' : _normalizeProps$type,
      _normalizeProps$onOk = _normalizeProps.onOk,
      _onOk = _normalizeProps$onOk === void 0 ? _noop["default"] : _normalizeProps$onOk,
      _normalizeProps$onCan = _normalizeProps.onCancel,
      _onCancel = _normalizeProps$onCan === void 0 ? _noop["default"] : _normalizeProps$onCan,
      iconType = _normalizeProps.iconType,
      _normalizeProps$borde = _normalizeProps.border,
      border = _normalizeProps$borde === void 0 ? false : _normalizeProps$borde,
      _normalizeProps$okCan = _normalizeProps.okCancel,
      okCancel = _normalizeProps$okCan === void 0 ? true : _normalizeProps$okCan,
      title = _normalizeProps.title,
      otherProps = (0, _objectWithoutProperties2["default"])(_normalizeProps, ["children", "type", "onOk", "onCancel", "iconType", "border", "okCancel", "title"]);

  var prefixCls = (0, _configure.getProPrefixCls)('confirm');

  var titleNode = title && _react["default"].createElement("div", {
    className: "".concat(prefixCls, "-title")
  }, title);

  var contentNode = children && _react["default"].createElement("div", {
    className: "".concat(prefixCls, "-content")
  }, children);

  var iconNode = iconType && _react["default"].createElement("td", {
    className: "".concat(prefixCls, "-icon ").concat(prefixCls, "-").concat(type)
  }, _react["default"].createElement(_icon["default"], {
    type: iconType
  }));

  return new Promise(function (resolve) {
    (0, _ModalContainer.open)((0, _objectSpread2["default"])({
      key: (0, _ModalContainer.getKey)(),
      border: border,
      destroyOnClose: true,
      okCancel: okCancel,
      closable: false,
      movable: false,
      style: {
        width: '4.16rem'
      },
      children: _react["default"].createElement("table", {
        className: prefixCls
      }, _react["default"].createElement("tbody", null, _react["default"].createElement("tr", null, iconNode, _react["default"].createElement("td", null, titleNode, contentNode)))),
      onOk: function () {
        var _onOk2 = (0, _asyncToGenerator2["default"])(
        /*#__PURE__*/
        _regenerator["default"].mark(function _callee() {
          var result;
          return _regenerator["default"].wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return _onOk();

                case 2:
                  result = _context.sent;

                  if (result !== false) {
                    resolve('ok');
                  }

                  return _context.abrupt("return", result);

                case 5:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function onOk() {
          return _onOk2.apply(this, arguments);
        }

        return onOk;
      }(),
      onCancel: function () {
        var _onCancel2 = (0, _asyncToGenerator2["default"])(
        /*#__PURE__*/
        _regenerator["default"].mark(function _callee2() {
          var result;
          return _regenerator["default"].wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return _onCancel();

                case 2:
                  result = _context2.sent;

                  if (result !== false) {
                    resolve('cancel');
                  }

                  return _context2.abrupt("return", result);

                case 5:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        function onCancel() {
          return _onCancel2.apply(this, arguments);
        }

        return onCancel;
      }()
    }, otherProps));
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9odWlodWF3ay9Eb2N1bWVudHMvb3B0L2Nob2Vyb2Rvbi11aS9jb21wb25lbnRzLXByby9tb2RhbC9jb25maXJtLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUVjLFNBQVUsT0FBVixDQUFrQixLQUFsQixFQUE4RDtBQUFBLHdCQVd0RSwyQkFBZSxLQUFmLENBWHNFO0FBQUEsTUFFeEUsUUFGd0UsbUJBRXhFLFFBRndFO0FBQUEsNkNBR3hFLElBSHdFO0FBQUEsTUFHeEUsSUFId0UscUNBR2pFLFNBSGlFO0FBQUEsNkNBSXhFLElBSndFO0FBQUEsTUFJeEUsS0FKd0UscUNBSWpFLGdCQUppRTtBQUFBLDhDQUt4RSxRQUx3RTtBQUFBLE1BS3hFLFNBTHdFLHNDQUs3RCxnQkFMNkQ7QUFBQSxNQU14RSxRQU53RSxtQkFNeEUsUUFOd0U7QUFBQSw4Q0FPeEUsTUFQd0U7QUFBQSxNQU94RSxNQVB3RSxzQ0FPL0QsS0FQK0Q7QUFBQSw4Q0FReEUsUUFSd0U7QUFBQSxNQVF4RSxRQVJ3RSxzQ0FRN0QsSUFSNkQ7QUFBQSxNQVN4RSxLQVR3RSxtQkFTeEUsS0FUd0U7QUFBQSxNQVVyRSxVQVZxRTs7QUFZMUUsTUFBTSxTQUFTLEdBQUcsZ0NBQWdCLFNBQWhCLENBQWxCOztBQUNBLE1BQU0sU0FBUyxHQUFHLEtBQUssSUFBSSxrQkFBQSxhQUFBLENBQUEsS0FBQSxFQUFBO0FBQUssSUFBQSxTQUFTLFlBQUssU0FBTDtBQUFkLEdBQUEsRUFBdUMsS0FBdkMsQ0FBM0I7O0FBQ0EsTUFBTSxXQUFXLEdBQUcsUUFBUSxJQUFJLGtCQUFBLGFBQUEsQ0FBQSxLQUFBLEVBQUE7QUFBSyxJQUFBLFNBQVMsWUFBSyxTQUFMO0FBQWQsR0FBQSxFQUF5QyxRQUF6QyxDQUFoQzs7QUFDQSxNQUFNLFFBQVEsR0FBRyxRQUFRLElBQ3ZCLGtCQUFBLGFBQUEsQ0FBQSxJQUFBLEVBQUE7QUFBSSxJQUFBLFNBQVMsWUFBSyxTQUFMLG1CQUF1QixTQUF2QixjQUFvQyxJQUFwQztBQUFiLEdBQUEsRUFDRSxrQkFBQSxhQUFBLENBQUMsZ0JBQUQsRUFBSztBQUFDLElBQUEsSUFBSSxFQUFFO0FBQVAsR0FBTCxDQURGLENBREY7O0FBS0EsU0FBTyxJQUFJLE9BQUosQ0FBWSxVQUFBLE9BQU8sRUFBRztBQUMzQjtBQUNFLE1BQUEsR0FBRyxFQUFFLDZCQURQO0FBRUUsTUFBQSxNQUFNLEVBQU4sTUFGRjtBQUdFLE1BQUEsY0FBYyxFQUFFLElBSGxCO0FBSUUsTUFBQSxRQUFRLEVBQVIsUUFKRjtBQUtFLE1BQUEsUUFBUSxFQUFFLEtBTFo7QUFNRSxNQUFBLE9BQU8sRUFBRSxLQU5YO0FBT0UsTUFBQSxLQUFLLEVBQUU7QUFBRSxRQUFBLEtBQUssRUFBRTtBQUFULE9BUFQ7QUFRRSxNQUFBLFFBQVEsRUFDTixrQkFBQSxhQUFBLENBQUEsT0FBQSxFQUFBO0FBQU8sUUFBQSxTQUFTLEVBQUU7QUFBbEIsT0FBQSxFQUNFLGtCQUFBLGFBQUEsQ0FBQSxPQUFBLEVBQUEsSUFBQSxFQUNFLGtCQUFBLGFBQUEsQ0FBQSxJQUFBLEVBQUEsSUFBQSxFQUNHLFFBREgsRUFFRSxrQkFBQSxhQUFBLENBQUEsSUFBQSxFQUFBLElBQUEsRUFDRyxTQURILEVBRUcsV0FGSCxDQUZGLENBREYsQ0FERixDQVRKO0FBcUJFLE1BQUEsSUFBSTtBQUFBO0FBQUE7QUFBQSxxQ0FBRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHlCQUNpQixLQUFJLEVBRHJCOztBQUFBO0FBQ0Usa0JBQUEsTUFERjs7QUFFSixzQkFBSSxNQUFNLEtBQUssS0FBZixFQUFzQjtBQUNwQixvQkFBQSxPQUFPLENBQUMsSUFBRCxDQUFQO0FBQ0Q7O0FBSkcsbURBS0csTUFMSDs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLFNBckJOO0FBNEJFLE1BQUEsUUFBUTtBQUFBO0FBQUE7QUFBQSxxQ0FBRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHlCQUNhLFNBQVEsRUFEckI7O0FBQUE7QUFDRixrQkFBQSxNQURFOztBQUVSLHNCQUFJLE1BQU0sS0FBSyxLQUFmLEVBQXNCO0FBQ3BCLG9CQUFBLE9BQU8sQ0FBQyxRQUFELENBQVA7QUFDRDs7QUFKTyxvREFLRCxNQUxDOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUE1QlYsT0FtQ0ssVUFuQ0w7QUFxQ0QsR0F0Q00sQ0FBUDtBQXVDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgbm9vcCBmcm9tICdsb2Rhc2gvbm9vcCc7XG5pbXBvcnQgeyBnZXRQcm9QcmVmaXhDbHMgfSBmcm9tICdjaG9lcm9kb24tdWkvbGliL2NvbmZpZ3VyZSc7XG5pbXBvcnQgeyBNb2RhbFByb3BzIH0gZnJvbSAnLi9Nb2RhbCc7XG5pbXBvcnQgeyBnZXRLZXksIG9wZW4gfSBmcm9tICcuLi9tb2RhbC1jb250YWluZXIvTW9kYWxDb250YWluZXInO1xuaW1wb3J0IEljb24gZnJvbSAnLi4vaWNvbic7XG5pbXBvcnQgeyBjb25maXJtUHJvcHMsIG5vcm1hbGl6ZVByb3BzIH0gZnJvbSAnLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbmZpcm0ocHJvcHM6IE1vZGFsUHJvcHMgJiBjb25maXJtUHJvcHMgfCBSZWFjdE5vZGUpIHtcbiAgY29uc3Qge1xuICAgIGNoaWxkcmVuLFxuICAgIHR5cGUgPSAnY29uZmlybScsXG4gICAgb25PayA9IG5vb3AsXG4gICAgb25DYW5jZWwgPSBub29wLFxuICAgIGljb25UeXBlLFxuICAgIGJvcmRlciA9IGZhbHNlLFxuICAgIG9rQ2FuY2VsID0gdHJ1ZSxcbiAgICB0aXRsZSxcbiAgICAuLi5vdGhlclByb3BzXG4gIH0gPSBub3JtYWxpemVQcm9wcyhwcm9wcyk7XG4gIGNvbnN0IHByZWZpeENscyA9IGdldFByb1ByZWZpeENscygnY29uZmlybScpO1xuICBjb25zdCB0aXRsZU5vZGUgPSB0aXRsZSAmJiA8ZGl2IGNsYXNzTmFtZT17YCR7cHJlZml4Q2xzfS10aXRsZWB9Pnt0aXRsZX08L2Rpdj47XG4gIGNvbnN0IGNvbnRlbnROb2RlID0gY2hpbGRyZW4gJiYgPGRpdiBjbGFzc05hbWU9e2Ake3ByZWZpeENsc30tY29udGVudGB9PntjaGlsZHJlbn08L2Rpdj47XG4gIGNvbnN0IGljb25Ob2RlID0gaWNvblR5cGUgJiYgKFxuICAgIDx0ZCBjbGFzc05hbWU9e2Ake3ByZWZpeENsc30taWNvbiAke3ByZWZpeENsc30tJHt0eXBlfWB9PlxuICAgICAgPEljb24gdHlwZT17aWNvblR5cGV9IC8+XG4gICAgPC90ZD5cbiAgKTtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgIG9wZW4oe1xuICAgICAga2V5OiBnZXRLZXkoKSxcbiAgICAgIGJvcmRlcixcbiAgICAgIGRlc3Ryb3lPbkNsb3NlOiB0cnVlLFxuICAgICAgb2tDYW5jZWwsXG4gICAgICBjbG9zYWJsZTogZmFsc2UsXG4gICAgICBtb3ZhYmxlOiBmYWxzZSxcbiAgICAgIHN0eWxlOiB7IHdpZHRoOiAnNC4xNnJlbScgfSxcbiAgICAgIGNoaWxkcmVuOiAoXG4gICAgICAgIDx0YWJsZSBjbGFzc05hbWU9e3ByZWZpeENsc30+XG4gICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICB7aWNvbk5vZGV9XG4gICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICB7dGl0bGVOb2RlfVxuICAgICAgICAgICAgICAgIHtjb250ZW50Tm9kZX1cbiAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgPC90YWJsZT5cbiAgICAgICksXG4gICAgICBvbk9rOiBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG9uT2soKTtcbiAgICAgICAgaWYgKHJlc3VsdCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICByZXNvbHZlKCdvaycpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9LFxuICAgICAgb25DYW5jZWw6IGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgb25DYW5jZWwoKTtcbiAgICAgICAgaWYgKHJlc3VsdCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICByZXNvbHZlKCdjYW5jZWwnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfSxcbiAgICAgIC4uLm90aGVyUHJvcHMsXG4gICAgfSk7XG4gIH0pO1xufVxuIl19