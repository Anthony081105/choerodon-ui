{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/collapse/Collapse.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, CSSProperties } from 'react';\nimport classNames from 'classnames';\nimport animation from '../_util/openAnimation';\nimport CollapsePanel from './CollapsePanel';\nimport RcCollapse from '../rc-components/collapse';\nimport { getPrefixCls, getConfig } from '../configure';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\n\nexport type ExpandIconPosition = 'left' | 'right';\n\nexport type TriggerMode = 'icon' | 'header';\n\n\nexport interface PanelProps {\n  isActive?: boolean;\n  header?: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  showArrow?: boolean;\n  forceRender?: boolean;\n  disabled?: boolean;\n  extra?: React.ReactNode;\n}\n\nexport interface CollapseProps {\n  activeKey?: Array<string> | string;\n  defaultActiveKey?: Array<string>;\n  /** 手风琴效果 */\n  accordion?: boolean;\n  onChange?: (key: string | string[]) => void;\n  style?: CSSProperties;\n  className?: string;\n  bordered?: boolean;\n  prefixCls?: string;\n  expandIcon?: (panelProps: PanelProps) => React.ReactNode | 'text';\n  expandIconPosition?: ExpandIconPosition;\n  trigger?: TriggerMode;\n}\n\nexport default class Collapse extends Component<CollapseProps, any> {\n  static displayName = 'Collapse';\n\n  static Panel = CollapsePanel;\n\n  static defaultProps = {\n    bordered: true,\n    openAnimation: {\n      ...animation,\n      appear() {},\n    },\n  };\n\n  renderExpandIcon = (panelProps: PanelProps = {}) => {\n    const { expandIcon } = this.props;\n    return expandIcon ? expandIcon(panelProps) : null;\n  };\n\n  renderExpandTextContent = (panelProps: PanelProps = {}, locale) => {\n    const {\n      prefixCls: customizePrefixCls,\n    } = this.props;\n    const prefixCls = getPrefixCls('collapse', customizePrefixCls);\n\n    const iconCls = classNames({\n      [`${prefixCls}-expand-icon`]: true,\n      [`${prefixCls}-expanded`]: panelProps.isActive,\n      [`${prefixCls}-collapsed`]: !panelProps.isActive,\n    });\n\n    const icon = <i className={iconCls} />;\n\n    return (\n      <>\n        {panelProps.isActive ? <span className={`${prefixCls}-expand-text`}>{locale.fold}</span> :\n          <span className={`${prefixCls}-expand-text`}>{locale.unfold}</span>}\n        {icon}\n      </>\n    );\n  };\n\n  render() {\n    const {\n      prefixCls: customizePrefixCls,\n      className = '',\n      expandIcon,\n      bordered,\n      expandIconPosition,\n      trigger,\n    } = this.props;\n    const prefixCls = getPrefixCls('collapse', customizePrefixCls);\n    const expandIconPositionCof = expandIconPosition || getConfig('collapseExpandIconPosition');\n    const triggerCof = trigger || getConfig('collapseTrigger');\n\n    const collapseClassName = classNames(\n      {\n        [`${prefixCls}-borderless`]: !bordered,\n        // @ts-ignore\n        [`${prefixCls}-text-action`]: expandIcon === 'text' && expandIconPositionCof === 'left',\n        [`${prefixCls}-trigger`]: triggerCof === 'header',\n        [`${prefixCls}-icon-position-${expandIconPositionCof}`]: true,\n      },\n      className,\n    );\n    let expandIconContent;\n\n    if (typeof expandIcon === 'function') {\n      expandIconContent = (panelProps: PanelProps) => this.renderExpandIcon(panelProps);\n    } else if (expandIcon === 'text') {\n      expandIconContent = (panelProps: PanelProps) => {\n        return (\n          <LocaleReceiver componentName=\"Collapse\" defaultLocale={defaultLocale.Collapse}>\n           {locale => this.renderExpandTextContent(panelProps, locale)}\n         </LocaleReceiver>)\n      };\n    }\n\n    return (\n      <RcCollapse\n        {...this.props}\n        expandIcon={expandIconContent}\n        prefixCls={prefixCls}\n        className={collapseClassName}\n      />\n    );\n  }\n}\n"]}