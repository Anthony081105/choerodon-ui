{"version":3,"sources":["cascader/MenusSingle.jsx"],"names":["Menus","Component","options","value","activeValue","onSelect","prefixCls","visible","expandTrigger","isTabSelected","locale","Locale","singleMenuStyle","width","singleMenuItemStyle","minWidth","PropTypes","dropdownMenuColumnStyle","singlePleaseRender","singleMenuItemRender","func","prevProps","option","menuIndex","expandProps","onClick","hasChildren","menuItemCls","onMouseEnter","onMouseLeave","title","values","o","result","activeOption","args","clearTimeout","setTimeout","optionsLength","i","itemComponent","target","label","singleMenuItemItem","showOptions","showOptionsIndex","activeOptions","dropdownMenuColumnStyleSingle","tabItemRender","pleaseRenderProps","key","className","text","pleaseSelect","tabItemRenderResult","pleaseItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayTreeFilter from 'array-tree-filter';\nimport { findDOMNode } from 'react-dom';\nimport Locale from './locale/en_US';\nimport isFunction from 'lodash/isFunction';\nimport Icon from '../../icon';\n\nexport default class Menus extends Component {\n  static defaultProps = {\n    options: [],\n    value: [],\n    activeValue: [],\n    onSelect() {\n    },\n    prefixCls: 'rc-cascader-menus',\n    visible: false,\n    expandTrigger: 'click',\n    isTabSelected: false,\n    locale: Locale,\n    singleMenuStyle: { width:'3rem'},\n    singleMenuItemStyle: { minWidth: '1rem'},\n  };\n\n  static propTypes = {\n    // 选择的值\n    value: PropTypes.array,\n    // 当前激活的值\n    activeValue: PropTypes.array,\n    // 可选内容\n    options: PropTypes.array.isRequired,\n    // 注入样式开头\n    prefixCls: PropTypes.string,\n    // 触发展开事件\n    expandTrigger: PropTypes.string,\n    // 被选择后触发\n    onSelect: PropTypes.func,\n    // 是否可见\n    visible: PropTypes.bool,\n    // 下拉列表的样式配置\n    dropdownMenuColumnStyle: PropTypes.object,\n    // 标识是由于tab select 触发的事件\n    isTabSelected: PropTypes.bool,\n    locale: PropTypes.object,\n    singleMenuStyle: PropTypes.object,\n    singleMenuItemStyle: PropTypes.object,\n    singlePleaseRender: PropTypes.func,\n    singleMenuItemRender: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.menuItems = {};\n  }\n\n  componentDidMount() {\n    this.scrollActiveItemToView();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.visible && this.props.visible) {\n      this.scrollActiveItemToView();\n    }\n  }\n\n  /**\n   * render th li list\n   * @param {*} option\n   * @param {*} menuIndex\n   */\n  getOption(option, menuIndex) {\n    const { prefixCls, expandTrigger, singleMenuItemStyle } = this.props;\n    const onSelect = this.props.onSelect.bind(this, option, menuIndex, false);\n    let expandProps = {\n      onClick: onSelect,\n    };\n    const hasChildren = option.children && option.children.length > 0;\n    let menuItemCls = `${prefixCls}-menu-item`;\n    // TODO: add item style\n    if (expandTrigger === 'hover' && hasChildren) {\n      expandProps = {\n        onMouseEnter: this.delayOnSelect.bind(this, onSelect),\n        onMouseLeave: this.delayOnSelect.bind(this),\n        onClick: onSelect,\n      };\n    }\n    if (this.isActiveOption(option, menuIndex)) {\n      menuItemCls += ` ${prefixCls}-menu-item-active`;\n      expandProps.ref = this.saveMenuItem(menuIndex);\n    }\n    if (option.disabled) {\n      menuItemCls += ` ${prefixCls}-menu-item-disabled`;\n    }\n    if (option.loading) {\n      menuItemCls += ` ${prefixCls}-menu-item-loading`;\n    }\n    let title = '';\n    if (option.title) {\n      title = option.title;\n    } else if (typeof option.label === 'string') {\n      title = option.label;\n    }\n    return (\n      <li\n        key={option.key || option.value}\n        className={menuItemCls}\n        title={title}\n        style={singleMenuItemStyle}\n        {...expandProps}\n      >\n        {option.label}\n      </li>\n    );\n  }\n\n  /**\n   *  be active value is a array of items\n   * @param string[] values\n   */\n  getActiveOptions(values) {\n    const activeValue = values || this.props.activeValue;\n    const options = this.props.options;\n    return arrayTreeFilter(options, (o, level) => o.value === activeValue[level]);\n  }\n\n  getShowOptions() {\n    const { options } = this.props;\n    const result = this.getActiveOptions()\n      .map(activeOption => activeOption.children)\n      .filter(activeOption => !!activeOption);\n    result.unshift(options);\n    return result;\n  }\n\n  delayOnSelect(onSelect, ...args) {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n    if (typeof onSelect === 'function') {\n      this.delayTimer = setTimeout(() => {\n        onSelect(args);\n        this.delayTimer = null;\n      }, 150);\n    }\n  }\n\n  scrollActiveItemToView() {\n    // scroll into view\n    const optionsLength = this.getShowOptions().length;\n    for (let i = 0; i < optionsLength; i++) {\n      const itemComponent = this.menuItems[i];\n      if (itemComponent) {\n        const target = findDOMNode(itemComponent);\n        target.parentNode.scrollTop = target.offsetTop;\n      }\n    }\n  }\n\n  isActiveOption(option, menuIndex) {\n    const { activeValue = [] } = this.props;\n    return activeValue[menuIndex] === option.value;\n  }\n\n  saveMenuItem = (index) => (node) => {\n    this.menuItems[index] = node;\n  };\n\n  /**\n   * render th li list\n   * @param {*} option\n   * @param {*} menuIndex\n   */\n  getTabItem(option, menuIndex) {\n    const { prefixCls, singleMenuItemRender } = this.props;\n    const onSelect = this.props.onSelect.bind(this, option, menuIndex, true);\n    let expandProps = {\n      onClick: onSelect,\n    };\n    let menuItemCls = `${prefixCls}-menu-tab-item`;\n    let label = option.label\n    if(isFunction(singleMenuItemRender)){\n      label = singleMenuItemItem(option.label)\n    }\n    return (\n      <span\n        key={option.key || option.value}\n        className={menuItemCls}\n        {...expandProps}\n      >\n        {label}\n        <Icon type=\"arrow_drop_down\" />\n      </span>\n    );\n  }\n\n  render() {\n    const { prefixCls, dropdownMenuColumnStyle, isTabSelected, locale, singleMenuStyle, singlePleaseRender } = this.props;\n    const showOptions = this.getShowOptions()\n    let showOptionsIndex = showOptions.length - 1\n    const activeOptions = this.getActiveOptions()\n    const dropdownMenuColumnStyleSingle = {...dropdownMenuColumnStyle,...singleMenuStyle}\n    const tabItemRender = activeOptions.map((item,indexItem) => (this.getTabItem(item,indexItem)))\n    let tabItemRenderResult \n    if(showOptions && activeOptions && !isTabSelected && showOptions.length > activeOptions.length){\n       const pleaseRenderProps = {\n        key:\"please_check\" ,\n        className: `${prefixCls}-menu-tab-item ${prefixCls}-menu-tab-please`,\n        text:locale.pleaseSelect\n       }\n       if(isFunction(singlePleaseRender)){\n        tabItemRenderResult = singlePleaseRender(pleaseRenderProps)\n       }else{\n        const pleaseItem = (    \n            <span {...pleaseRenderProps}>\n              {pleaseRenderProps.text}\n              <Icon type=\"arrow_drop_down\" />\n            </span>\n        )\n        tabItemRenderResult = tabItemRender.length > 0 ? [...tabItemRender,pleaseItem] : pleaseItem;\n       }\n    }\n    if(isTabSelected){\n      showOptionsIndex = activeOptions.length - 1 < 0 ? 0 : activeOptions.length - 1\n    }\n\n    return (\n      <div className={`${prefixCls}-mode-single `}>\n        <div className={`${prefixCls}-menu-tab`}>\n          {tabItemRenderResult || tabItemRender }\n        </div>\n        <ul className={`${prefixCls}-menu ${prefixCls}-menu-single `} key={showOptionsIndex} style={dropdownMenuColumnStyleSingle}>\n            {showOptions[showOptionsIndex].map(option => this.getOption(option, showOptionsIndex))}\n        </ul>\n      </div>\n    );\n  }\n}\n"]}