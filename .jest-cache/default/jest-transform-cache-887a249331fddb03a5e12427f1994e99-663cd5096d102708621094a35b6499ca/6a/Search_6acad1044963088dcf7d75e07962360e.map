{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/input/Search.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { cloneElement, Component, ReactElement, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport Input, { InputProps } from './Input';\nimport Button from '../button';\nimport { Size } from '../_util/enum';\nimport { getPrefixCls } from '../configure';\n\nexport interface SearchProps extends InputProps {\n  inputPrefixCls?: string;\n  onSearch?: (value: string) => any;\n  enterButton?: boolean | ReactNode;\n}\n\nexport default class Search extends Component<SearchProps, any> {\n  static displayName = 'Search';\n\n  static defaultProps = {\n    enterButton: false,\n    size: Size.small,\n  };\n\n  private input: Input;\n\n  onSearch = () => {\n    const { onSearch } = this.props;\n    if (onSearch) {\n      onSearch(this.input.input.value);\n    }\n    this.input.focus();\n  };\n\n  focus() {\n    this.input.focus();\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  saveInput = (node: Input) => {\n    this.input = node;\n  };\n\n  getPrefixCls() {\n    const { prefixCls } = this.props;\n    return getPrefixCls('input-search', prefixCls);\n  }\n\n  getButtonOrIcon() {\n    const { enterButton, size } = this.props;\n    if (!enterButton) {\n      return <Button type=\"primary\" size={size} shape=\"circle\" icon=\"search\" />;\n    }\n    const enterButtonAsElement = enterButton as ReactElement<any>;\n    if (enterButtonAsElement.type === Button || enterButtonAsElement.type === 'button') {\n      return cloneElement(\n        enterButtonAsElement,\n        enterButtonAsElement.type === Button\n          ? {\n              className: `${this.getPrefixCls()}-button`,\n              size,\n              onClick: this.onSearch,\n            }\n          : {\n              onClick: this.onSearch,\n            },\n      );\n    }\n    if (enterButton === true) {\n      return (\n        <Button type=\"primary\" size={size} shape=\"circle\" onClick={this.onSearch} icon=\"search\" />\n      );\n    }\n    return (\n      <Button type=\"primary\" size={size} onClick={this.onSearch} key=\"enterButton\">\n        {enterButton}\n      </Button>\n    );\n  }\n\n  render() {\n    const { className, inputPrefixCls, size, suffix, enterButton, ...others } = this.props;\n    const prefixCls = this.getPrefixCls();\n    delete (others as any).onSearch;\n    delete (others as any).prefixCls;\n    const buttonOrIcon = this.getButtonOrIcon();\n    const searchSuffix = suffix ? [suffix, buttonOrIcon] : buttonOrIcon;\n    const inputClassName = classNames(prefixCls, className, {\n      [`${prefixCls}-enter-button`]: !!enterButton,\n      [`${prefixCls}-${size}`]: !!size,\n    });\n    return (\n      <Input\n        onPressEnter={this.onSearch}\n        {...others}\n        size={size}\n        className={inputClassName}\n        prefixCls={getPrefixCls('input', inputPrefixCls)}\n        suffix={searchSuffix}\n        ref={this.saveInput}\n      />\n    );\n  }\n}\n"]}