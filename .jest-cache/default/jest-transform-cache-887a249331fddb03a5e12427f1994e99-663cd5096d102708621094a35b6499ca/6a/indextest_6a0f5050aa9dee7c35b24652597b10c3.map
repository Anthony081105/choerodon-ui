{"version":3,"sources":["index.test.js"],"names":["describe","it","wrapper","expect","render","toMatchSnapshot","ds","DataSet","autoCreate","fields","name","textField","type","lovCode","lovPara","code","required","bind","find","length","toBe"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,SAAD,EAAY,YAAM;AACxBC,EAAAA,EAAE,CAAC,kBAAD,EAAqB,YAAM;AAC3B,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD,OAAN,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAO,CAACE,MAAR,EAAD,CAAN,CAAyBC,eAAzB;AACD,GAHC,CAAF;AAKA,MAAMC,EAAE,GAAG,IAAIC,mBAAJ,CAAY;AACrBC,IAAAA,UAAU,EAAE,IADS;AAErBC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,SAAS,EAAE,MAFb;AAGEC,MAAAA,IAAI,EAAE,QAHR;AAIEC,MAAAA,OAAO,EAAE,UAJX;AAKEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OALX;AAMEC,MAAAA,QAAQ,EAAE;AANZ,KADM,EASN;AAAEN,MAAAA,IAAI,EAAE,WAAR;AAAqBE,MAAAA,IAAI,EAAE,QAA3B;AAAqCK,MAAAA,IAAI,EAAE;AAA3C,KATM,EAUN;AAAEP,MAAAA,IAAI,EAAE,kBAAR;AAA4BE,MAAAA,IAAI,EAAE,QAAlC;AAA4CK,MAAAA,IAAI,EAAE;AAAlD,KAVM;AAFa,GAAZ,CAAX;AAgBAhB,EAAAA,EAAE,CAAC,oBAAD,EAAuB,YAAM;AAC7B,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAK,MAAA,OAAO,EAAEI,EAAd;AAAkB,MAAA,IAAI,EAAC,MAAvB;AAA8B,MAAA,IAAI,EAAC;AAAnC,MAAN,CAAhB;AACAH,IAAAA,MAAM,CAACD,OAAO,CAACgB,IAAR,CAAa,QAAb,EAAuBC,MAAxB,CAAN,CAAsCC,IAAtC,CAA2C,CAA3C;AACAjB,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBG,eAAhB;AACD,GAJC,CAAF;AAKD,CA3BO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport Lov from '..';\nimport DataSet from '../../data-set';\n\ndescribe('Lov-pro', () => {\n  it('render correctly', () => {\n    const wrapper = mount(<Lov />);\n    expect(wrapper.render()).toMatchSnapshot();\n  });\n\n  const ds = new DataSet({\n    autoCreate: true,\n    fields: [\n      {\n        name: 'code',\n        textField: 'code',\n        type: 'object',\n        lovCode: 'LOV_CODE',\n        lovPara: { code: '111' },\n        required: true,\n      },\n      { name: 'code_code', type: 'string', bind: 'code.code' },\n      { name: 'code_description', type: 'string', bind: 'code.description' },\n    ],\n  });\n\n  it('render mode button', () => {\n    const wrapper = mount(<Lov dataSet={ds} name=\"code\" mode=\"button\" />);\n    expect(wrapper.find('button').length).toBe(2);\n    expect(wrapper).toMatchSnapshot();\n  });\n});\n"]}