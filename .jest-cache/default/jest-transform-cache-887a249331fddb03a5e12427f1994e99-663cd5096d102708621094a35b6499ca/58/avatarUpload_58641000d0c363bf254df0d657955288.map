{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/image-crop/avatarUpload.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * 裁剪头像上传\n */\n\nimport React, { Component } from 'react';\nimport axios, { AxiosRequestConfig } from 'axios';\nimport PropTypes from 'prop-types';\nimport Button from '../button';\nimport Icon from '../icon';\nimport Modal, { ModalProps } from '../modal';\nimport message from '../message';\nimport Upload, { UploadProps } from '../upload';\nimport Crop from './Crop';\nimport { getPrefixCls } from '../configure';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport { imageCrop } from '../locale-provider'\n\nconst Dragger = Upload.Dragger;\nconst { round } = Math;\n\nfunction rotateFlag(rotate) {\n  return (rotate / 90) % 2 !== 0;\n}\n\nexport interface Limit {\n  size: number;\n  type: string;\n}\n\nexport interface AvatarArea {\n  rotate: number;\n  startX: number;\n  startY: number;\n  endX: number;\n  endY: number;\n  file?: File;\n}\n\n\nexport interface AvatarUploadProps {\n  visible: boolean; // 上传图片模态框的显示状态\n  onClose?: (visible: boolean) => void; // 模态框关闭时的回调\n  onUploadOk?: (res: any) => void; // 成功上传时的回调\n  uploadUrl?: string; // 上传链接\n  uploadFaild?: () => void; // 上传失败\n  uploadError?: (error: any) => void; // 上传服务器错误\n  handleUpload?: (area: AvatarArea) => void; // 点击上传\n  cropComplete?: (imageState: any) => void; // 裁剪完成\n  title?: string | React.ReactElement; // 上传头像标题\n  subTitle?: string | React.ReactElement; // 上传头像小标题\n  previewTitle?: string | React.ReactElement; // 头像预览标题\n  reloadTitle?: string | React.ReactElement;// 重新上传标题\n  uploadProps?: UploadProps; // 上传配置\n  modalProps?: ModalProps; // 模态框的配置\n  limit: Limit; // 限制内容\n  previewList: number[]; // 定义预览的大小\n  editorWidth: number; // 裁剪容器宽度\n  editorHeight: number; // 裁剪容器高度\n  minRectSize: number;  // 最小裁剪大小\n  defaultRectSize: number; // 最大裁剪大小\n  axiosConfig?: AxiosRequestConfig;\n  prefixCls?: string; // 自定义样式前缀\n}\n\nlet Avatarlocale = defaultLocale.imageCrop\n\nexport default class AvatarUploader extends Component<AvatarUploadProps, any> {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired, // 上传图片模态框的显示状态\n    onClose: PropTypes.func, // 模态框关闭时的回调\n    onUploadOk: PropTypes.func, // 成功上传时的回调\n    limit: PropTypes.object, // 限制内容\n    uploadUrl: PropTypes.string, // 上传链接\n    previewList: PropTypes.array,\n    editorWidth: PropTypes.number,\n    editorHeight: PropTypes.number,\n    minRectSize: PropTypes.number, // 最小的裁剪区域\n    defaultRectSize: PropTypes.number, // 默认最小的\n    prefixCls: PropTypes.string, // 自定义样式前缀\n    handleUpload: PropTypes.func,\n    axiosConfig: PropTypes.object,\n    cropComplete: PropTypes.func,\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    previewTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    reloadTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    uploadProps: PropTypes.object,\n    modalProps: PropTypes.object,\n    reloadText: PropTypes.func,\n    uploadFaild: PropTypes.func,\n    uploadError: PropTypes.func,\n  };\n\n  static defaultProps = {\n    limit: {\n      type: 'jpeg,png,jpg',\n      size: 1024,\n    },\n    previewList: [80, 30, 18],\n    editorWidth: 540,\n    editorHeight: 300,\n    minRectSize: 80,\n    defaultRectSize: 200,\n  }\n\n  constructor(props) {\n    super(props);\n    const { defaultRectSize } = props\n    this.state = {\n      submitting: false,\n      img: null,\n      file: '',\n      imageStyle: { width: 0, height: 0 },\n      size: defaultRectSize,\n      x: 0,\n      y: 0,\n      rotate: 0,\n    };\n  }\n\n  handleOk = () => {\n    const { x, y, size, rotate, file, imageStyle: { width, height }, img: { naturalWidth } } = this.state;\n    const { uploadUrl, uploadFaild, uploadError, handleUpload, axiosConfig } = this.props;\n    const flag = rotateFlag(rotate);\n    const scale = naturalWidth / width;\n    const startX = flag ? x - ((width - height) / 2) : x;\n    const startY = flag ? y + ((width - height) / 2) : y;\n    const QsData: AvatarArea = {\n      rotate,\n      startX: round(startX * scale),\n      startY: round(startY * scale),\n      endX: round(size * scale),\n      endY: round(size * scale),\n    }\n    const qs = JSON.stringify(QsData);\n    const data = new FormData();\n    data.append('file', file);\n    this.setState({ submitting: true });\n    if (uploadUrl) {\n      let config;\n      if (axiosConfig) {\n        config = axiosConfig;\n      }\n      axios.post(`${uploadUrl}?${qs}`, data, config)\n        .then((res) => {\n          // @ts-ignore\n          if (res.success) {\n            this.uploadOk(res);\n          } else {\n            message.error(Avatarlocale.avatarUploadError);\n            this.setState({ submitting: false });\n            if (uploadFaild) {\n              uploadFaild()\n            }\n          }\n        })\n        .catch((error) => {\n          message.error(`${Avatarlocale.avatarServerError}${error}`);\n          this.setState({ submitting: false });\n          if (uploadError) {\n            uploadError(error)\n          }\n        });\n    }\n    if (handleUpload) {\n      QsData.file = file;\n      handleUpload(QsData)\n    }\n  };\n\n  close() {\n    const { onClose } = this.props;\n    this.setState({\n      img: null,\n    });\n    if (onClose) {\n      onClose(false);\n    }\n  }\n\n  uploadOk(res) {\n    const { onUploadOk } = this.props;\n    this.setState({\n      img: null,\n      submitting: false,\n    }, () => {\n      if (onUploadOk) {\n        onUploadOk(res)\n      }\n    });\n  }\n\n  handleCancel = () => {\n    this.close();\n  };\n\n  initImageSize(img, rotate = 0) {\n    const { editorWidth, editorHeight, minRectSize, defaultRectSize } = this.props;\n    const { naturalWidth, naturalHeight } = img;\n    const flag = rotateFlag(rotate);\n    let width = flag ? naturalHeight : naturalWidth;\n    let height = flag ? naturalWidth : naturalHeight;\n    if (width < minRectSize || height < minRectSize) {\n      if (width > height) {\n        width = (width / height) * minRectSize;\n        height = minRectSize;\n      } else {\n        height = (height / width) * minRectSize;\n        width = minRectSize;\n      }\n    } else if (width > editorWidth || height > editorHeight) {\n      if (width / editorWidth > height / editorHeight) {\n        height = (height / width) * editorWidth;\n        width = editorWidth;\n      } else {\n        width = (width / height) * editorHeight;\n        height = editorHeight;\n      }\n    }\n    if (flag) {\n      const tmp = width;\n      width = height;\n      height = tmp;\n    }\n    const size = Math.min(defaultRectSize, width, height);\n    this.setState({\n      img,\n      imageStyle: {\n        width,\n        height,\n        top: (editorHeight - height) / 2,\n        left: (editorWidth - width) / 2,\n        transform: `rotate(${rotate}deg)`,\n      },\n      size,\n      x: (width - size) / 2,\n      y: (height - size) / 2,\n      rotate,\n    });\n  }\n\n  onComplete(imageState) {\n    const { cropComplete } = this.props;\n    this.setState(imageState);\n    if (cropComplete) {\n      cropComplete(imageState)\n    }\n  }\n\n  loadImage(src) {\n    const img = new Image();\n    img.src = src;\n    img.onload = () => {\n      this.initImageSize(img);\n    };\n  }\n\n  getPreviewProps(previewSize) {\n    const { size, x, y, img: { src }, rotate, imageStyle: { width, height } } = this.state;\n    const previewScale = previewSize / size;\n    let radius = (rotate % 360) / 90;\n    let px = -x;\n    let py = -y;\n    if (radius < 0) radius += 4;\n    if (radius === 1) {\n      py = ((x + ((height - width) / 2)) - height) + size;\n      px = ((height - width) / 2) - y;\n    } else if (radius === 2) {\n      px = (x - width) + size;\n      py = (y - height) + size;\n    } else if (radius === 3) {\n      px = ((y + ((width - height) / 2)) - width) + size;\n      py = ((width - height) / 2) - x;\n    }\n    return {\n      style: {\n        width: previewSize,\n        height: previewSize,\n        backgroundImage: `url('${src}')`,\n        backgroundSize: `${width * previewScale}px ${height * previewScale}px`,\n        backgroundPosition: `${px * previewScale}px ${py * previewScale}px`,\n        transform: `rotate(${rotate}deg)`,\n      },\n    };\n  }\n\n  renderPreviewItem(previewSizeList) {\n    const { prefixCls: customizePrefixCls } = this.props;\n    const prefixCls = getPrefixCls('avatar-crop-edit', customizePrefixCls);\n    const dataList = previewSizeList.map((itemSize) => {\n      return (\n        <div key={itemSize} className={`${prefixCls}-preview-item`}>\n          <i {...this.getPreviewProps(itemSize)} />\n          <p>{`${itemSize}＊${itemSize}`}</p>\n        </div>\n      )\n    },\n    )\n    return dataList\n  }\n\n\n\n  renderEditor(props) {\n    const { img, file, rotate } = this.state;\n    const { prefixCls: customizePrefixCls, previewList, editorWidth, editorHeight, defaultRectSize, minRectSize, subTitle, previewTitle, reloadTitle } = this.props;\n    const { src } = img;\n    const prefixCls = getPrefixCls('avatar-crop-edit', customizePrefixCls);\n\n    return (\n      <div>\n        <h3 className={`${prefixCls}-text`}>\n          <span >{subTitle || Avatarlocale.avatarUpload}</span>\n          <Icon type=\"keyboard_arrow_right\" />\n          <span>{file.name}</span>\n        </h3>\n        <h4 className={`${prefixCls}-hint`}>\n          <span>{Avatarlocale.avatarReminder}</span>\n        </h4>\n        <div className={`${prefixCls}-wraper`}>\n          <Crop\n            defaultRectSize={defaultRectSize}\n            minRectSize={minRectSize}\n            editorHeight={editorHeight}\n            editorWidth={editorWidth}\n            rotation={rotate} src={src}\n            onComplete={(stateImage) => this.onComplete(stateImage)} />\n          <div className={`${prefixCls}-toolbar`}>\n            <Button icon=\"replay_90\" shape=\"circle\" onClick={() => this.setState({ rotate: rotate - 90 })} />\n            <Button icon=\"play_90\" shape=\"circle\" onClick={() => this.setState({ rotate: rotate + 90 })} />\n          </div>\n          <div className={`${prefixCls}-preview`}>\n            <h5 className={`${prefixCls}-preview-title`}>\n              <span >{previewTitle || Avatarlocale.preview}</span>\n            </h5>\n            {this.renderPreviewItem(previewList)}\n          </div>\n        </div>\n        <div className={`${prefixCls}-button`}>\n          <Upload {...props}>\n            <Button icon=\"file_upload\" type=\"primary\">\n              <span>{reloadTitle || Avatarlocale.reUpload}</span>\n            </Button>\n          </Upload>\n        </div>\n      </div>\n    );\n  }\n\n  getUploadProps() {\n    const { limit: { size: limitSize, type }, uploadProps } = this.props\n    const typeLimit = type.split(',').map((item) => `image/${item}`).join(',');\n    return {\n      multiple: false,\n      name: 'file',\n      accept: typeLimit,\n      headers: {\n        Authorization: `bearer`,\n      },\n      showUploadList: false,\n      ...uploadProps,\n      beforeUpload: (file) => {\n        const { size } = file;\n        if (size > limitSize * 1024) {\n          message.warning(Avatarlocale.imageTooLarge);\n          return false;\n        }\n        this.setState({ file });\n        const windowURL = window.URL || window.webkitURL;\n        if (windowURL && windowURL.createObjectURL) {\n          this.loadImage(windowURL.createObjectURL(file));\n          return false;\n        }\n        return false;\n      },\n      onChange: ({ file }) => {\n        const { status, response } = file;\n        if (status === 'done') {\n          this.loadImage(response);\n        } else if (status === 'error') {\n          message.error(Avatarlocale.imageUploadError);\n        }\n      },\n    };\n  }\n\n  renderContainer() {\n    const { prefixCls: customizePrefixCls, limit: { size: limitSize, type } } = this.props;\n    const { img } = this.state;\n    const prefixCls = getPrefixCls('avatar-crop', customizePrefixCls);\n    const props = this.getUploadProps();\n    return img ? (\n      this.renderEditor(props)\n    ) :\n      (\n        <Dragger className={`${prefixCls}-dragger`} {...props}>\n          <Icon type=\"inbox\" />\n          <h3 className={`${prefixCls}-dragger-text`} >\n            <span>{Avatarlocale.imageDragHere}</span>\n          </h3>\n          <h4 className={`${prefixCls}-dragger-hint`}>\n            <span>{`${Avatarlocale.pleaseUpload}${limitSize / 1024}M,${Avatarlocale.uploadType}${type}${Avatarlocale.picture}`}</span>\n          </h4>\n        </Dragger>\n      );\n  }\n\n  render() {\n    const { visible, modalProps, title } = this.props;\n    const { img, submitting } = this.state;\n    const modalFooter = [\n      <Button disabled={submitting} key=\"cancel\" onClick={this.handleCancel}>\n        <span>{Avatarlocale.cancelButton}</span>\n      </Button>,\n      <Button key=\"save\" type=\"primary\" disabled={!img} loading={submitting} onClick={this.handleOk}>\n        <span>{Avatarlocale.saveButton}</span>\n      </Button>,\n    ];\n    return (\n      <LocaleReceiver componentName=\"imageCrop\" defaultLocale={defaultLocale.imageCrop}>\n        {(locale, localeCode) => {\n          Avatarlocale = (localeCode === \"en\" || localeCode === \"zh-cn\" ? locale : defaultLocale.imageCrop) as imageCrop\n          return (\n            <Modal\n              title={title || <span>{Avatarlocale.changeAvatar}</span>}\n              className=\"avatar-modal\"\n              visible={visible}\n              width={980}\n              closable={false}\n              maskClosable={false}\n              footer={modalFooter}\n              {...modalProps}\n            >\n              {this.renderContainer()}\n            </Modal>\n          )\n        }}\n      </LocaleReceiver>\n    );\n  }\n}"]}