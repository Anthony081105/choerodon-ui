{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/screening/ScreeningOption.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsCqB,e;;;;;;;AAArB,6BAAA;AAAA;;AAAA;;;AAaE,UAAA,YAAA,GAAe,YAAK;AAAA,wBACyB,MAAK,KAD9B;AAAA,UACV,SADU,eACV,SADU;AAAA,UACC,KADD,eACC,KADD;AAAA,UACQ,YADR,eACQ,YADR;AAElB,UAAM,IAAI,GAAS;AACjB,QAAA,GAAG,EAAE,SADY;AAEjB,QAAA,KAAK,EAAL;AAFiB,OAAnB;;AAIA,UAAI,YAAJ,EAAkB;AAChB,QAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,KATD;;AAWA,UAAA,YAAA,GAAe,YAAK;AAAA,yBACyB,MAAK,KAD9B;AAAA,UACV,SADU,gBACV,SADU;AAAA,UACC,KADD,gBACC,KADD;AAAA,UACQ,YADR,gBACQ,YADR;AAElB,UAAM,IAAI,GAAS;AACjB,QAAA,GAAG,EAAE,SADY;AAEjB,QAAA,KAAK,EAAL;AAFiB,OAAnB;;AAIA,UAAI,YAAJ,EAAkB;AAChB,QAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,KATD;;AAWA,UAAA,OAAA,GAAU,YAAK;AAAA,yBACqE,MAAK,KAD1E;AAAA,UACL,SADK,gBACL,SADK;AAAA,UACM,QADN,gBACM,QADN;AAAA,UACgB,OADhB,gBACgB,OADhB;AAAA,UACyB,QADzB,gBACyB,QADzB;AAAA,UACmC,UADnC,gBACmC,UADnC;AAAA,UAC+C,KAD/C,gBAC+C,KAD/C;AAAA,UACsD,UADtD,gBACsD,UADtD;AAEb,UAAM,IAAI,GAAS;AACjB,QAAA,GAAG,EAAE,SADY;AAEjB,QAAA,KAAK,EAAL;AAFiB,OAAnB;;AAKA,UAAI,QAAQ,IAAI,OAAhB,EAAyB;AACvB,QAAA,OAAO,CAAC,IAAD,CAAP;;AACA,YAAI,QAAJ,EAAc;AACZ,cAAI,UAAU,IAAI,UAAlB,EAA8B;AAC5B,YAAA,UAAU,CAAC,IAAD,CAAV;AACD,WAFD,MAEO;AACL,YAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,SAND,MAMO;AACL,UAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF;;AAAA;AACF,KAnBD;;AAnCF;AAwIC;;;;6BAhFO;AAAA;;AAAA,yBAuBA,KAAK,KAvBL;AAAA,UAEF,SAFE,gBAEF,SAFE;AAAA,UAGF,QAHE,gBAGF,QAHE;AAAA,UAIF,QAJE,gBAIF,QAJE;AAAA,UAKF,SALE,gBAKF,SALE;AAAA,UAMF,MANE,gBAMF,MANE;AAAA,UAOF,KAPE,gBAOF,KAPE;AAAA,UAQF,QARE,gBAQF,QARE;AAAA,UASF,WATE,gBASF,WATE;AAAA,UAUF,UAVE,gBAUF,UAVE;AAAA,UAWF,IAXE,gBAWF,IAXE;AAAA,UAYF,KAZE,gBAYF,KAZE;AAAA,UAaF,MAbE,gBAaF,MAbE;AAAA,UAcF,IAdE,gBAcF,IAdE;AAAA,UAeF,IAfE,gBAeF,IAfE;AAAA,UAgBF,EAhBE,gBAgBF,EAhBE;AAAA,UAiBF,EAjBE,gBAiBF,EAjBE;AAAA,UAkBF,EAlBE,gBAkBF,EAlBE;AAAA,UAmBF,EAnBE,gBAmBF,EAnBE;AAAA,UAoBF,EApBE,gBAoBF,EApBE;AAAA,UAqBF,GArBE,gBAqBF,GArBE;AAAA,UAsBF,YAtBE,gBAsBF,YAtBE;AAwBJ,UAAM,qBAAqB,aAAM,SAAN,YAA3B;AACA,UAAM,SAAS,GAAG,4BAChB,qBADgB,6EAGV,qBAHU,gBAGyB,QAHzB,2DAIV,qBAJU,gBAIyB,UAJzB,2DAKV,qBALU,cAKuB,MALvB,gBAAlB;AASA,UAAM,KAAK,GAAG;AACZ,QAAA,SAAS,EAAT,SADY;AAEZ,QAAA,SAAS,EAAT,SAFY;AAGZ,QAAA,IAAI,EAAJ,IAHY;AAIZ,QAAA,KAAK,EAAL,KAJY;AAKZ,QAAA,MAAM,EAAN,MALY;AAMZ,QAAA,IAAI,EAAJ,IANY;AAOZ,QAAA,IAAI,EAAJ,IAPY;AAQZ,QAAA,EAAE,EAAF,EARY;AASZ,QAAA,EAAE,EAAF,EATY;AAUZ,QAAA,EAAE,EAAF,EAVY;AAWZ,QAAA,EAAE,EAAF,EAXY;AAYZ,QAAA,EAAE,EAAF,EAZY;AAaZ,QAAA,GAAG,EAAH;AAbY,OAAd;AAeA,UAAI,UAAU,GAAG,EAAjB;;AACA,UAAI,CAAC,QAAL,EAAe;AACb,QAAA,UAAU,GAAG;AACX,UAAA,OAAO,EAAE,KAAK,OADH;AAEX,UAAA,YAAY,EAAE,KAAK,YAFR;AAGX,UAAA,YAAY,EAAE,KAAK,YAHR;AAIX,UAAA,WAAW,EAAX;AAJW,SAAb;AAMD;;AAGD,UAAM,QAAQ,GAAG,QAAQ,GAAG,kBAAA,aAAA,CAAC,oBAAD,EAAS;AAAC,QAAA,OAAO,EAAE;AAAV,OAAT,CAAH,GAAuC,IAAhE;AAEA,aACE,kBAAA,aAAA,CAAC,eAAD,EAAI,0BAAA,EAAA,EACE,KADF,EACO;AACT,QAAA,KAAK,EAAE;AADE,OADP,CAAJ,EAIE,kBAAA,aAAA,CAAA,KAAA,EAAA,0BAAA;AAAK,QAAA,SAAS,YAAK,qBAAL;AAAd,OAAA,EAAwD,UAAxD,CAAA,EAEI,YAAY,IACV,kBAAA,aAAA,CAAA,kBAAA,QAAA,EAAA,IAAA,EACG,QADH,EAEG,QAFH,CAHN,CAJF,CADF;AAiBD;;;EAvI0C,gB;;;AAIpC,eAAA,CAAA,YAAA,GAAe;AACpB,EAAA,QAAQ,EAAE,gBADU;AAEpB,EAAA,YAAY,EAAE,gBAFM;AAGpB,EAAA,YAAY,EAAE,gBAHM;AAIpB,EAAA,WAAW,EAAE,gBAJO;AAKpB,EAAA,UAAU,EAAE;AALQ,CAAf","sourcesContent":["import React, { Component, Key } from 'react';\nimport classNames from 'classnames';\nimport Col, { ColProps } from 'choerodon-ui/lib/col';\nimport noop from 'lodash/noop';\nimport CheckBox from 'choerodon-ui/lib/checkbox';\nimport { ElementProps } from '../core/ViewComponent';\nimport Record from '../data-set/Record';\n\n\nexport interface Info {\n  key: string | number | undefined;\n  value: any | Record;\n}\n\nexport interface ColSize {\n  span?: number;\n  order?: number;\n  offset?: number;\n  push?: number;\n  pull?: number;\n}\n\n\nexport type ScreeningOptionProps = Omit<ElementProps, \"lang\" | \"spellCheck\"> & ColProps & {\n  optionkey?: Key;\n  selectedKeys?: Array<string | number | undefined>;\n  onSelect?: (info: Info) => void;\n  onClick?: (info: Info) => void;\n  onDeselect?: (info: Info) => void;\n  onMouseEnter?: (info: Info) => void;\n  onMouseLeave?: (info: Info) => void;\n  onMouseDown?: (info: Info) => void;\n  disabled?: boolean;\n  children?: React.ReactElement<any> | string;\n  active?: boolean; CSSProperties\n  multiple?: boolean;\n  isSelected?: boolean;\n  value?: any | Record;\n  optionRender: React.ReactElement<any> | string;\n}\n\n\nexport default class ScreeningOption extends Component<ScreeningOptionProps> {\n\n  static displayName: 'ScreeningOption';\n\n  static defaultProps = {\n    onSelect: noop,\n    onMouseEnter: noop,\n    onMouseLeave: noop,\n    onMouseDown: noop,\n    isSelected: false,\n  };\n\n\n  onMouseLeave = () => {\n    const { optionkey, value, onMouseLeave } = this.props;\n    const info: Info = {\n      key: optionkey,\n      value,\n    };\n    if (onMouseLeave) {\n      onMouseLeave(info);\n    }\n  };\n\n  onMouseEnter = () => {\n    const { optionkey, value, onMouseEnter } = this.props;\n    const info: Info = {\n      key: optionkey,\n      value,\n    };\n    if (onMouseEnter) {\n      onMouseEnter(info);\n    }\n  };\n\n  onClick = () => {\n    const { optionkey, multiple, onClick, onSelect, onDeselect, value, isSelected } = this.props;\n    const info: Info = {\n      key: optionkey,\n      value,\n    };\n\n    if (onSelect && onClick) {\n      onClick(info);\n      if (multiple) {\n        if (isSelected && onDeselect) {\n          onDeselect(info);\n        } else {\n          onSelect(info);\n        }\n      } else {\n        onSelect(info);\n      }\n    };\n  };\n\n  render() {\n    const {\n      prefixCls,\n      disabled,\n      children,\n      optionkey,\n      active,\n      style,\n      multiple,\n      onMouseDown,\n      isSelected,\n      span,\n      order,\n      offset,\n      push,\n      pull,\n      xs,\n      sm,\n      md,\n      lg,\n      xl,\n      xxl,\n      optionRender,\n    } = this.props;\n    const ScreeningOptionPrefix = `${prefixCls}-option`\n    const className = classNames(\n      ScreeningOptionPrefix,\n      {\n        [`${ScreeningOptionPrefix}-disabled`]: disabled,\n        [`${ScreeningOptionPrefix}-selected`]: isSelected,\n        [`${ScreeningOptionPrefix}-active`]: active,\n      },\n    );\n\n    const attrs = {\n      optionkey,\n      className,\n      span,\n      order,\n      offset,\n      push,\n      pull,\n      xs,\n      sm,\n      md,\n      lg,\n      xl,\n      xxl,\n    };\n    let mouseEvent = {};\n    if (!disabled) {\n      mouseEvent = {\n        onClick: this.onClick,\n        onMouseLeave: this.onMouseLeave,\n        onMouseEnter: this.onMouseEnter,\n        onMouseDown,\n      };\n    }\n\n\n    const checkbox = multiple ? <CheckBox checked={isSelected} /> : null;\n\n    return (\n      <Col\n        {...attrs}\n        style={style}\n      >\n        <div className={`${ScreeningOptionPrefix}-content`} {...mouseEvent}>\n          {\n            optionRender || (\n              <>\n                {checkbox}\n                {children}\n              </>\n            )\n          }\n        </div>\n      </Col>\n    );\n  };\n}"]}