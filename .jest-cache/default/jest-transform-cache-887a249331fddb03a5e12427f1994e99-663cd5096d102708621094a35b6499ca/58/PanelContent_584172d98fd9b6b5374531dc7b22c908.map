{"version":3,"sources":["PanelContent.jsx"],"names":["PanelContent","nextProps","props","isInactive","_isActived","forceRender","prefixCls","children","destroyInactivePanel","contentCls","child","Component","PropTypes","string","bool","any"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,Y;;;;;;;;;;;;;;0CASGC,S,EAAW;AAC/B,aAAO,CAAC,KAAKC,KAAL,CAAWC,UAAZ,IAA0B,CAACF,SAAS,CAACE,UAA5C;AACD;;;6BAEQ;AAAA;;AACP,WAAKC,UAAL,GAAkB,KAAKF,KAAL,CAAWG,WAAX,IAA0B,KAAKD,UAA/B,IAA6C,CAAC,KAAKF,KAAL,CAAWC,UAA3E;;AACA,UAAI,CAAC,KAAKC,UAAV,EAAsB;AACpB,eAAO,IAAP;AACD;;AAJM,wBAKwE,KAAKF,KAL7E;AAAA,UAKCI,SALD,eAKCA,SALD;AAAA,UAKYH,UALZ,eAKYA,UALZ;AAAA,UAKwBI,QALxB,eAKwBA,QALxB;AAAA,UAKkCC,oBALlC,eAKkCA,oBALlC;AAAA,UAKwDH,WALxD,eAKwDA,WALxD;AAMP,UAAMI,UAAU,GAAG,wGACbH,SADa,eACS,IADT,2DAEbA,SAFa,sBAEgB,CAACH,UAFjB,2DAGbG,SAHa,wBAGkBH,UAHlB,gBAAnB;AAKA,UAAMO,KAAK,GAAG,CAACL,WAAD,IAAgBF,UAAhB,IAA8BK,oBAA9B,GAAqD,IAArD,GAA4D;AAAK,QAAA,SAAS,YAAKF,SAAL;AAAd,SAA6CC,QAA7C,CAA1E;AACA,aACE;AACE,QAAA,SAAS,EAAEE,UADb;AAEE,QAAA,IAAI,EAAC;AAFP,SAGEC,KAHF,CADF;AAMD;;;EA/BuCC,gB;;;iCAArBX,Y,eACA;AACjBM,EAAAA,SAAS,EAAEM,sBAAUC,MADJ;AAEjBV,EAAAA,UAAU,EAAES,sBAAUE,IAFL;AAGjBP,EAAAA,QAAQ,EAAEK,sBAAUG,GAHH;AAIjBP,EAAAA,oBAAoB,EAAEI,sBAAUE,IAJf;AAKjBT,EAAAA,WAAW,EAAEO,sBAAUE;AALN,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport default class PanelContent extends Component {\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    isInactive: PropTypes.bool,\n    children: PropTypes.any,\n    destroyInactivePanel: PropTypes.bool,\n    forceRender: PropTypes.bool,\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return !this.props.isInactive || !nextProps.isInactive;\n  }\n\n  render() {\n    this._isActived = this.props.forceRender || this._isActived || !this.props.isInactive;\n    if (!this._isActived) {\n      return null;\n    }\n    const { prefixCls, isInactive, children, destroyInactivePanel, forceRender } = this.props;\n    const contentCls = classnames({\n      [`${prefixCls}-content`]: true,\n      [`${prefixCls}-content-active`]: !isInactive,\n      [`${prefixCls}-content-inactive`]: isInactive,\n    });\n    const child = !forceRender && isInactive && destroyInactivePanel ? null : <div className={`${prefixCls}-content-box`}>{children}</div>;\n    return (\n      <div\n        className={contentCls}\n        role=\"tabpanel\"\n      >{child}</div>\n    );\n  }\n}\n"]}