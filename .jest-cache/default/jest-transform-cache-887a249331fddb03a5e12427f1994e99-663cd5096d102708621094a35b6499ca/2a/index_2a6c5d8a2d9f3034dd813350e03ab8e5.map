{"version":3,"sources":["configure/index.js"],"names":["defaultRenderEmpty","defaultButtonProps","color","funcType","defaultSpinProps","size","wrapperClassName","globalConfig","observable","maxAge","max","defaultFeedback","categories","jsonDate","date","dateTime","time","year","month","week","defaultExcludeUseColonTag","getConfig","mergeProps","Object","value","config"],"mappings":"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","sourcesContent":["import { observable, runInAction, toJS } from 'mobx';\nimport isObject from 'lodash/isObject';\nimport { categories } from 'choerodon-ui-font';\nimport { $l } from '../../pro/lib/locale-context';\nimport defaultFeedback from '../../pro/lib/data-set/FeedBack';\nimport { defaultExcludeUseColonTag } from '../../pro/lib/form/utils';\nconst defaultRenderEmpty = (componentName) => {\n    switch (componentName) {\n        case 'Table':\n            return $l('Table', 'empty_data');\n        case 'Select':\n            return $l('Select', 'no_matching_results');\n        default:\n    }\n};\nconst defaultButtonProps = { color: \"primary\" /* primary */, funcType: \"flat\" /* flat */ };\nconst defaultSpinProps = { size: \"default\" /* default */, wrapperClassName: '' };\nconst globalConfig = observable.map([\n    ['prefixCls', 'c7n'],\n    ['proPrefixCls', 'c7n-pro'],\n    ['iconfontPrefix', 'icon'],\n    ['ripple', true],\n    ['lookupCache', { maxAge: 1000 * 60 * 10, max: 100 }],\n    ['lookupUrl', code => `/common/code/${code}/`],\n    ['lookupAxiosMethod', 'post'],\n    // [\n    //   'lookupBatchAxiosConfig',\n    //   codes => ({\n    //     url: '/common/batch',\n    //     params: codes.reduce((obj, code) => {\n    //       obj[code] = code;\n    //       return obj;\n    //     }, {}),\n    //   }),\n    // ],\n    ['lovDefineUrl', code => `/sys/lov/lov_define?code=${code}`],\n    ['lovQueryUrl', code => `/common/lov/dataset/${code}`],\n    ['lovTriggerMode', \"icon\" /* icon */],\n    ['dataKey', 'rows'],\n    ['totalKey', 'total'],\n    ['statusKey', '__status'],\n    ['tlsKey', '__tls'],\n    [\n        'status',\n        { [\"add\" /* add */]: 'add', [\"update\" /* update */]: 'update', [\"delete\" /* delete */]: 'delete' },\n    ],\n    ['labelLayout', \"horizontal\" /* horizontal */],\n    ['queryBar', \"normal\" /* normal */],\n    ['tableBorder', true],\n    ['tableHighLightRow', true],\n    ['tableSelectedHighLightRow', false],\n    ['tableRowHeight', 30],\n    ['tableColumnResizable', true],\n    ['tableSpinProps', defaultSpinProps],\n    ['tableButtonProps', defaultButtonProps],\n    ['tableCommandProps', defaultButtonProps],\n    ['tableAlwaysShowRowBox', false],\n    ['tableUseMouseBatchChoose', false],\n    ['tableDefaultRenderer', ''],\n    ['modalSectionBorder', true],\n    ['modalOkFirst', true],\n    ['buttonColor', \"default\" /* default */],\n    ['buttonFuncType', \"raised\" /* raised */],\n    ['feedback', defaultFeedback],\n    ['renderEmpty', defaultRenderEmpty],\n    ['icons', categories],\n    [\n        'formatter',\n        {\n            jsonDate: 'YYYY-MM-DD HH:mm:ss',\n            date: 'YYYY-MM-DD',\n            dateTime: 'YYYY-MM-DD HH:mm:ss',\n            time: 'HH:mm:ss',\n            year: 'YYYY',\n            month: 'YYYY-MM',\n            week: 'GGGG-Wo',\n        },\n    ],\n    ['dropdownMatchSelectWidth', true],\n    ['useColon', false],\n    ['excludeUseColonTagList', defaultExcludeUseColonTag],\n    ['lovTableProps', {}],\n]);\nexport function getConfig(key) {\n    // FIXME: observable.map把构建map时传入的key类型和value类型分别做了union，\n    // 丢失了一一对应的映射关系，导致函数调用者无法使用union后的返回值类型，因此需要指定本函数返回值为any\n    return globalConfig.get(key);\n}\nexport function getPrefixCls(suffixCls, customizePrefixCls) {\n    if (customizePrefixCls) {\n        return customizePrefixCls;\n    }\n    return `${getConfig('prefixCls')}-${suffixCls}`;\n}\nexport function getProPrefixCls(suffixCls, customizePrefixCls) {\n    if (customizePrefixCls) {\n        return customizePrefixCls;\n    }\n    return `${getConfig('proPrefixCls')}-${suffixCls}`;\n}\nconst mergeProps = ['transport', 'feedback', 'formatter'];\nexport default function configure(config) {\n    runInAction(() => {\n        Object.keys(config).forEach((key) => {\n            const value = config[key];\n            if (mergeProps.includes(key) && isObject(value)) {\n                globalConfig.set(key, {\n                    ...toJS(globalConfig.get(key)),\n                    ...value,\n                });\n            }\n            else {\n                globalConfig.set(key, config[key]);\n            }\n        });\n    });\n}\n"]}