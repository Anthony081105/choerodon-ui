{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/configure/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import { observable, ObservableMap, runInAction, toJS } from 'mobx';\nimport { AxiosInstance, AxiosPromise, AxiosRequestConfig } from 'axios';\nimport { ReactNode } from 'react';\nimport isObject from 'lodash/isObject';\nimport { categories } from 'choerodon-ui-font';\nimport { LovConfig } from 'choerodon-ui/pro/lib/lov/Lov';\nimport { RecordStatus } from 'choerodon-ui/pro/lib/data-set/enum';\nimport { $l } from 'choerodon-ui/pro/lib/locale-context';\nimport {\n  expandIconProps,\n  TablePaginationConfig,\n  TableQueryBarHook,\n  TableProps,\n} from 'choerodon-ui/pro/lib/table/Table';\nimport { ValidationMessages } from 'choerodon-ui/pro/lib/validator/Validator';\nimport { ButtonProps } from 'choerodon-ui/pro/lib/button/Button';\nimport { SpinProps } from 'choerodon-ui/lib/spin';\nimport { Size } from 'choerodon-ui/lib/_util/enum';\nimport { TableQueryBarType } from 'choerodon-ui/pro/lib/table/enum';\nimport { TriggerMode } from 'choerodon-ui/pro/lib/lov/enum';\nimport { TransportHookProps, TransportProps } from 'choerodon-ui/pro/lib/data-set/Transport';\nimport DataSet from 'choerodon-ui/pro/lib/data-set/DataSet';\nimport defaultFeedback, { FeedBack } from 'choerodon-ui/pro/lib/data-set/FeedBack';\nimport Record from 'choerodon-ui/pro/lib/data-set/Record';\nimport { CacheOptions } from 'choerodon-ui/pro/lib/_util/Cache';\nimport { LabelLayout } from 'choerodon-ui/pro/lib/form/enum';\nimport { ButtonColor, FuncType } from 'choerodon-ui/pro/lib/button/enum';\nimport { defaultExcludeUseColonTag } from 'choerodon-ui/pro/lib/form/utils';\nimport { Renderer } from 'choerodon-ui/pro/lib/field/FormField';\n\nexport type Status = {\n  [RecordStatus.add]: string;\n  [RecordStatus.update]: string;\n  [RecordStatus.delete]: string;\n};\n\nexport type renderEmptyHandler = (componentName?: string) => ReactNode;\n\nexport type Formatter = {\n  jsonDate?: string | null;\n  date?: string;\n  dateTime?: string;\n  time?: string;\n  year?: string;\n  month?: string;\n  week?: string;\n};\n\nexport type Config = {\n  prefixCls?: string;\n  proPrefixCls?: string;\n  iconfontPrefix?: string;\n  ripple?: boolean;\n  lookupCache?: CacheOptions<string, AxiosPromise>;\n  lookupUrl?: string | ((code: string) => string);\n  lookupAxiosMethod?: string;\n  lookupAxiosConfig?:\n  | AxiosRequestConfig\n  | ((props: {\n    params?: any;\n    dataSet?: DataSet;\n    record?: Record;\n    lookupCode?: string;\n  }) => AxiosRequestConfig);\n  lookupBatchAxiosConfig?: (codes: string[]) => AxiosRequestConfig;\n  lovDefineUrl?: string | ((code: string) => string);\n  lovDefineAxiosConfig?: AxiosRequestConfig | ((code: string) => AxiosRequestConfig);\n  lovQueryUrl?:\n  | string\n  | ((code: string, lovConfig: LovConfig | undefined, props: TransportHookProps) => string);\n  lovQueryAxiosConfig?:\n  | AxiosRequestConfig\n  | ((\n    code: string,\n    lovConfig: LovConfig | undefined,\n    props: TransportHookProps,\n  ) => AxiosRequestConfig);\n  lovTriggerMode?: TriggerMode;\n  axios?: AxiosInstance;\n  feedback?: FeedBack;\n  dataKey?: string;\n  totalKey?: string;\n  statusKey?: string;\n  tlsKey?: string;\n  status?: Status;\n  labelLayout?: LabelLayout;\n  queryBar?: TableQueryBarType | TableQueryBarHook;\n  tableBorder?: boolean;\n  tableHighLightRow?: boolean;\n  tableSelectedHighLightRow?: boolean;\n  tableRowHeight?: 'auto' | number;\n  tableColumnResizable?: boolean;\n  tableExpandIcon?: (props: expandIconProps) => ReactNode;\n  tableSpinProps?: SpinProps;\n  tableButtonProps?: ButtonProps;\n  tableCommandProps?: ButtonProps;\n  tableDefaultRenderer?: Renderer;\n  tableAlwaysShowRowBox?: boolean;\n  tableUseMouseBatchChoose?: boolean;\n  pagination?: TablePaginationConfig | false;\n  modalSectionBorder?: boolean;\n  modalOkFirst?: boolean;\n  modalButtonProps?: ButtonProps;\n  buttonFuncType?: FuncType;\n  buttonColor?: ButtonColor;\n  renderEmpty?: renderEmptyHandler;\n  defaultValidationMessages?: ValidationMessages;\n  transport?: TransportProps;\n  icons?: { [key: string]: string[]; } | string[];\n  generatePageQuery?: (pageParams: {\n    page?: number;\n    pageSize?: number;\n    sortName?: string;\n    sortOrder?: string;\n  }) => object;\n  formatter?: Formatter;\n  dropdownMatchSelectWidth?: boolean;\n  useColon?: boolean;\n  excludeUseColonTagList?: string[];\n  lovTableProps?: TableProps;\n};\n\nexport type ConfigKeys = keyof Config;\n\nconst defaultRenderEmpty: renderEmptyHandler = (componentName?: string): ReactNode => {\n  switch (componentName) {\n    case 'Table':\n      return $l('Table', 'empty_data');\n    case 'Select':\n      return $l('Select', 'no_matching_results');\n    default:\n  }\n};\n\nconst defaultButtonProps = { color: ButtonColor.primary, funcType: FuncType.flat };\n\nconst defaultSpinProps = { size: Size.default, wrapperClassName: '' };\n\nconst globalConfig: ObservableMap<ConfigKeys, Config[ConfigKeys]> = observable.map<\n  ConfigKeys,\n  Config[ConfigKeys]\n>([\n  ['prefixCls', 'c7n'],\n  ['proPrefixCls', 'c7n-pro'],\n  ['iconfontPrefix', 'icon'],\n  ['ripple', true],\n  ['lookupCache', { maxAge: 1000 * 60 * 10, max: 100 }],\n  ['lookupUrl', code => `/common/code/${code}/`],\n  ['lookupAxiosMethod', 'post'],\n  // [\n  //   'lookupBatchAxiosConfig',\n  //   codes => ({\n  //     url: '/common/batch',\n  //     params: codes.reduce((obj, code) => {\n  //       obj[code] = code;\n  //       return obj;\n  //     }, {}),\n  //   }),\n  // ],\n  ['lovDefineUrl', code => `/sys/lov/lov_define?code=${code}`],\n  ['lovQueryUrl', code => `/common/lov/dataset/${code}`],\n  ['lovTriggerMode', TriggerMode.icon],\n  ['dataKey', 'rows'],\n  ['totalKey', 'total'],\n  ['statusKey', '__status'],\n  ['tlsKey', '__tls'],\n  [\n    'status',\n    { [RecordStatus.add]: 'add', [RecordStatus.update]: 'update', [RecordStatus.delete]: 'delete' },\n  ],\n  ['labelLayout', LabelLayout.horizontal],\n  ['queryBar', TableQueryBarType.normal],\n  ['tableBorder', true],\n  ['tableHighLightRow', true],\n  ['tableSelectedHighLightRow', false],\n  ['tableRowHeight', 30],\n  ['tableColumnResizable', true],\n  ['tableSpinProps', defaultSpinProps],\n  ['tableButtonProps', defaultButtonProps],\n  ['tableCommandProps', defaultButtonProps],\n  ['tableAlwaysShowRowBox', false],\n  ['tableUseMouseBatchChoose', false],\n  ['tableDefaultRenderer', ''],\n  ['modalSectionBorder', true],\n  ['modalOkFirst', true],\n  ['buttonColor', ButtonColor.default],\n  ['buttonFuncType', FuncType.raised],\n  ['feedback', defaultFeedback],\n  ['renderEmpty', defaultRenderEmpty],\n  ['icons', categories],\n  [\n    'formatter',\n    {\n      jsonDate: 'YYYY-MM-DD HH:mm:ss',\n      date: 'YYYY-MM-DD',\n      dateTime: 'YYYY-MM-DD HH:mm:ss',\n      time: 'HH:mm:ss',\n      year: 'YYYY',\n      month: 'YYYY-MM',\n      week: 'GGGG-Wo',\n    },\n  ],\n  ['dropdownMatchSelectWidth', true],\n  ['useColon', false],\n  ['excludeUseColonTagList', defaultExcludeUseColonTag],\n  ['lovTableProps', {}],\n]);\n\nexport function getConfig(key: ConfigKeys): any {\n  // FIXME: observable.map把构建map时传入的key类型和value类型分别做了union，\n  // 丢失了一一对应的映射关系，导致函数调用者无法使用union后的返回值类型，因此需要指定本函数返回值为any\n  return globalConfig.get(key);\n}\n\nexport function getPrefixCls(suffixCls: string, customizePrefixCls?: string): string {\n  if (customizePrefixCls) {\n    return customizePrefixCls;\n  }\n  return `${getConfig('prefixCls')}-${suffixCls}`;\n}\n\nexport function getProPrefixCls(suffixCls: string, customizePrefixCls?: string): string {\n  if (customizePrefixCls) {\n    return customizePrefixCls;\n  }\n  return `${getConfig('proPrefixCls')}-${suffixCls}`;\n}\n\nconst mergeProps = ['transport', 'feedback', 'formatter'];\n\nexport default function configure(config: Config) {\n  runInAction(() => {\n    Object.keys(config).forEach((key: ConfigKeys) => {\n      const value = config[key];\n      if (mergeProps.includes(key) && isObject(value)) {\n        globalConfig.set(key, {\n          ...toJS<any>(globalConfig.get(key)),\n          ...value,\n        });\n      } else {\n        globalConfig.set(key, config[key]);\n      }\n    });\n  });\n}\n"]}