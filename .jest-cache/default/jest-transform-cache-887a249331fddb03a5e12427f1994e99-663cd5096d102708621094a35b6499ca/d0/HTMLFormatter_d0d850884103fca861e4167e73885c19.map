{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/code-area/formatters/HTMLFormatter.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AACA;;AACA;;AAGA;;IAEa,a;;;;;;;;;iCAGE,O,EAAgE;AAAA,UAA/C,OAA+C,uEAA5B,aAAa,CAAC,cAAc;AAC3E,UAAI,CAAC,GAAG,OAAR;;AACA,UAAI;AACF,QAAA,CAAC,GAAG,uBAAS,MAAT,CAAgB,OAAhB,EAAyB,OAAzB,CAAJ;AACD,OAFD,CAEE,OAAO,KAAP,EAAc,CACd;AACD;;AACD,aAAO,CAAP;AACD;;;2BAEM,a,EAAqB;AAC1B,aAAO,kCAAsB,aAAtB,CAAP;AACD;;;;;;AAdM,aAAA,CAAA,cAAA,GAA0B;AAAE,EAAA,MAAM,EAAE,MAAV;AAAkB,EAAA,OAAO,EAAE,CAAC,sBAAD;AAA3B,CAA1B;;eAiBM,IAAI,aAAJ,E","sourcesContent":["import { Options } from 'prettier';\nimport prettier from 'prettier/standalone';\nimport plugins from 'prettier/parser-html';\n\nimport { CodeAreaFormatter } from '../CodeAreaFormatter';\nimport { removeUnprintableChar } from '../utils';\n\nexport class HTMLFormatter implements CodeAreaFormatter {\n  static defaultOptions: Options = { parser: 'html', plugins: [plugins] };\n\n  getFormatted(rawText: string, options: Options = HTMLFormatter.defaultOptions): string {\n    let t = rawText\n    try {\n      t = prettier.format(rawText, options)\n    } catch (error) {\n      // \n    }\n    return t\n  }\n\n  getRaw(formattedText: string): string {\n    return removeUnprintableChar(formattedText);\n  }\n}\n\nexport default new HTMLFormatter();\n"]}