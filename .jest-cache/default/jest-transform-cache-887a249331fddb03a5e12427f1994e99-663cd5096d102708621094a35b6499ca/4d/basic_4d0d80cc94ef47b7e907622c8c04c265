03ba78a0def31584bc3ba1c1df03de5b
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _transfer = _interopRequireDefault(require("../../../components/transfer"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = (0, _getPrototypeOf2["default"])(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0, _possibleConstructorReturn2["default"])(this, result);
  };
}

var mockData = [];

for (var i = 0; i < 20; i++) {
  mockData.push({
    key: i.toString(),
    title: "content".concat(i + 1),
    description: "description of content".concat(i + 1),
    disabled: i % 3 < 1
  });
}

var targetKeys = mockData.filter(function (item) {
  return +item.key % 3 > 1;
}).map(function (item) {
  return item.key;
});

var App =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(App, _React$Component);

  var _super = _createSuper(App);

  function App() {
    var _this;

    (0, _classCallCheck2["default"])(this, App);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      targetKeys: targetKeys,
      selectedKeys: []
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleChange", function (nextTargetKeys, direction, moveKeys) {
      _this.setState({
        targetKeys: nextTargetKeys
      });

      console.log('targetKeys: ', targetKeys);
      console.log('direction: ', direction);
      console.log('moveKeys: ', moveKeys);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleSelectChange", function (sourceSelectedKeys, targetSelectedKeys) {
      _this.setState({
        selectedKeys: [].concat((0, _toConsumableArray2["default"])(sourceSelectedKeys), (0, _toConsumableArray2["default"])(targetSelectedKeys))
      });

      console.log('sourceSelectedKeys: ', sourceSelectedKeys);
      console.log('targetSelectedKeys: ', targetSelectedKeys);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleScroll", function (direction, e) {
      console.log('direction:', direction);
      console.log('target:', e.target);
    });
    return _this;
  }

  (0, _createClass2["default"])(App, [{
    key: "render",
    value: function render() {
      var state = this.state;
      return _react["default"].createElement(_transfer["default"], {
        dataSource: mockData,
        titles: ['Source', 'Target'],
        targetKeys: state.targetKeys,
        selectedKeys: state.selectedKeys,
        onChange: this.handleChange,
        onSelectChange: this.handleSelectChange,
        onScroll: this.handleScroll,
        render: function render(item) {
          return item.title;
        }
      });
    }
  }]);
  return App;
}(_react["default"].Component);

var __Demo = _react["default"].createElement(App, null);

var _default = __Demo;
exports["default"] = _default;