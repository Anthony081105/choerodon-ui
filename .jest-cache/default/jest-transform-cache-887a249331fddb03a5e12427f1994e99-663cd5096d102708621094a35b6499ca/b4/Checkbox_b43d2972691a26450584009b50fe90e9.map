{"version":3,"sources":["checkbox/Checkbox.js"],"names":["Checkbox","Component","nextProps","nextState","nextContext","checkboxGroup","props","context","customizePrefixCls","className","children","indeterminate","style","onMouseEnter","onMouseLeave","restProps","prefixCls","checkboxProps","label","value","classString","checkboxClass","RcCheckbox","ref","saveCheckbox","React","PropTypes","any"],"mappings":"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","sourcesContent":["import React, { Component, } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'lodash/isEqual';\nimport RcCheckbox from '../rc-components/checkbox';\nimport { getPrefixCls } from '../configure';\nexport default class Checkbox extends Component {\n    constructor() {\n        super(...arguments);\n        this.saveCheckbox = (node) => {\n            this.rcCheckbox = node;\n        };\n    }\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { checkboxGroup } = this.context;\n        return (!shallowEqual(this.props, nextProps) ||\n            !shallowEqual(this.state, nextState) ||\n            !shallowEqual(checkboxGroup, nextContext.checkboxGroup));\n    }\n    focus() {\n        this.rcCheckbox.focus();\n    }\n    blur() {\n        this.rcCheckbox.blur();\n    }\n    render() {\n        const { props, context } = this;\n        const { prefixCls: customizePrefixCls, className, children, indeterminate, style, onMouseEnter, onMouseLeave, ...restProps } = props;\n        const prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n        const { checkboxGroup } = context;\n        const checkboxProps = { ...restProps };\n        if (checkboxGroup) {\n            checkboxProps.onChange = () => checkboxGroup.toggleOption({ label: children, value: props.value });\n            checkboxProps.checked = checkboxGroup.value.indexOf(props.value) !== -1;\n            checkboxProps.disabled = props.disabled || checkboxGroup.disabled;\n        }\n        const classString = classNames(className, {\n            [`${prefixCls}-wrapper`]: true,\n        });\n        const checkboxClass = classNames({\n            [`${prefixCls}-indeterminate`]: indeterminate,\n        });\n        return (React.createElement(\"label\", { className: classString, style: style, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave },\n            React.createElement(RcCheckbox, Object.assign({}, checkboxProps, { prefixCls: prefixCls, className: checkboxClass, ref: this.saveCheckbox })),\n            children !== undefined ? React.createElement(\"span\", null, children) : null));\n    }\n}\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n    indeterminate: false,\n};\nCheckbox.contextTypes = {\n    checkboxGroup: PropTypes.any,\n};\n"]}