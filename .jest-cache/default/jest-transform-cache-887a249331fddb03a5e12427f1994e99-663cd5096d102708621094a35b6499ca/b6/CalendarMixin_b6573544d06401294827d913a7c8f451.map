{"version":3,"sources":["CalendarMixin.jsx"],"names":["getNow","getNowByCurrentStateValue","value","ret","CalendarMixin","propTypes","PropTypes","object","defaultValue","onKeyDown","func","getDefaultProps","noop","getInitialState","props","selectedValue","defaultSelectedValue","componentWillReceiveProps","nextProps","state","setState","onSelect","cause","setValue","setSelectedValue","renderRoot","newProps","prefixCls","className","visible","saveRoot","style","children","originalValue","isSame","onChange","isAllowedDate","disabledDate","disabledTime"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport moment from 'moment';\nimport noop from 'lodash/noop';\nimport { getTodayTime, isAllowedDate } from '../util';\n\nfunction getNow() {\n  return moment();\n}\n\nfunction getNowByCurrentStateValue(value) {\n  let ret;\n  if (value) {\n    ret = getTodayTime(value);\n  } else {\n    ret = getNow();\n  }\n  return ret;\n}\n\nconst CalendarMixin = {\n  propTypes: {\n    value: PropTypes.object,\n    defaultValue: PropTypes.object,\n    onKeyDown: PropTypes.func,\n  },\n\n  getDefaultProps() {\n    return {\n      onKeyDown: noop,\n    };\n  },\n\n  getInitialState() {\n    const props = this.props;\n    const value = props.value || props.defaultValue || getNow();\n    return {\n      value,\n      selectedValue: props.selectedValue || props.defaultSelectedValue,\n    };\n  },\n\n  componentWillReceiveProps(nextProps) {\n    let { value } = nextProps;\n    const { selectedValue } = nextProps;\n    if ('value' in nextProps) {\n      value = value || nextProps.defaultValue || getNowByCurrentStateValue(this.state.value);\n      this.setState({\n        value,\n      });\n    }\n    if ('selectedValue' in nextProps) {\n      this.setState({\n        selectedValue,\n      });\n    }\n  },\n\n  onSelect(value, cause) {\n    if (value) {\n      this.setValue(value);\n    }\n    this.setSelectedValue(value, cause);\n  },\n\n  renderRoot(newProps) {\n    const props = this.props;\n    const prefixCls = props.prefixCls;\n\n    const className = {\n      [prefixCls]: 1,\n      [`${prefixCls}-hidden`]: !props.visible,\n      [props.className]: !!props.className,\n      [newProps.className]: !!newProps.className,\n    };\n\n    return (\n      <div\n        ref={this.saveRoot}\n        className={`${classnames(className)}`}\n        style={this.props.style}\n        tabIndex=\"0\"\n        onKeyDown={this.onKeyDown}\n      >\n        {newProps.children}\n      </div>\n    );\n  },\n\n  setSelectedValue(selectedValue, cause) {\n    // if (this.isAllowedDate(selectedValue)) {\n    if (!('selectedValue' in this.props)) {\n      this.setState({\n        selectedValue,\n      });\n    }\n    this.props.onSelect(selectedValue, cause);\n    // }\n  },\n\n  setValue(value) {\n    const originalValue = this.state.value;\n    if (!('value' in this.props)) {\n      this.setState({\n        value,\n      });\n    }\n    if (\n      originalValue && value && !originalValue.isSame(value) ||\n        (!originalValue && value) ||\n        (originalValue && !value)\n    ) {\n      this.props.onChange(value);\n    }\n  },\n\n  isAllowedDate(value) {\n    const disabledDate = this.props.disabledDate;\n    const disabledTime = this.props.disabledTime;\n    return isAllowedDate(value, disabledDate, disabledTime);\n  },\n};\n\nexport default CalendarMixin;\n"]}