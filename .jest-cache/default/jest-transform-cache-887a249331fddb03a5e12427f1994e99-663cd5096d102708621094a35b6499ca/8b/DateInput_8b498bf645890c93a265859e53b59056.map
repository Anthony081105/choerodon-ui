{"version":3,"sources":["DateInput.jsx"],"names":["DateInput","propTypes","prefixCls","PropTypes","string","timePicker","object","value","disabledTime","any","format","locale","disabledDate","func","onChange","onClear","placeholder","onSelect","selectedValue","getInitialState","props","str","invalid","componentWillReceiveProps","nextProps","cachedSelectionStart","dateInputInstance","selectionStart","cachedSelectionEnd","selectionEnd","setState","componentDidUpdate","state","setSelectionRange","onInputChange","event","target","parsed","isValid","clone","year","month","date","hour","minute","second","originalValue","isSame","getRootDOMNode","ReactDOM","findDOMNode","focus","saveDateInput","dateInput","render","invalidClass","disabled","showClear","clear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst DateInput = createReactClass({\n  propTypes: {\n    prefixCls: PropTypes.string,\n    timePicker: PropTypes.object,\n    value: PropTypes.object,\n    disabledTime: PropTypes.any,\n    format: PropTypes.string,\n    locale: PropTypes.object,\n    disabledDate: PropTypes.func,\n    onChange: PropTypes.func,\n    onClear: PropTypes.func,\n    placeholder: PropTypes.string,\n    onSelect: PropTypes.func,\n    selectedValue: PropTypes.object,\n  },\n\n  getInitialState() {\n    const selectedValue = this.props.selectedValue;\n    return {\n      str: selectedValue && selectedValue.format(this.props.format) || '',\n      invalid: false,\n    };\n  },\n\n  componentWillReceiveProps(nextProps) {\n    this.cachedSelectionStart = this.dateInputInstance.selectionStart;\n    this.cachedSelectionEnd = this.dateInputInstance.selectionEnd;\n    // when popup show, click body will call this, bug!\n    const selectedValue = nextProps.selectedValue;\n    this.setState({\n      str: selectedValue && selectedValue.format(nextProps.format) || '',\n      invalid: false,\n    });\n  },\n\n  componentDidUpdate() {\n    if (!this.state.invalid) {\n      this.dateInputInstance.setSelectionRange(this.cachedSelectionStart, this.cachedSelectionEnd);\n    }\n  },\n\n  onInputChange(event) {\n    const str = event.target.value;\n    this.setState({\n      str,\n    });\n    let value;\n    const { disabledDate, format, onChange } = this.props;\n    if (str) {\n      const parsed = moment(str, format, true);\n      if (!parsed.isValid()) {\n        this.setState({\n          invalid: true,\n        });\n        return;\n      }\n      value = this.props.value.clone();\n      value\n        .year(parsed.year())\n        .month(parsed.month())\n        .date(parsed.date())\n        .hour(parsed.hour())\n        .minute(parsed.minute())\n        .second(parsed.second());\n\n      if (value && (!disabledDate || !disabledDate(value))) {\n        const originalValue = this.props.selectedValue;\n        if (originalValue && value) {\n          if (!originalValue.isSame(value)) {\n            onChange(value);\n          }\n        } else if (originalValue !== value) {\n          onChange(value);\n        }\n      } else {\n        this.setState({\n          invalid: true,\n        });\n        return;\n      }\n    } else {\n      onChange(null);\n    }\n    this.setState({\n      invalid: false,\n    });\n  },\n\n  onClear() {\n    this.setState({\n      str: '',\n    });\n    this.props.onClear(null);\n  },\n\n  getRootDOMNode() {\n    return ReactDOM.findDOMNode(this);\n  },\n\n  focus() {\n    if (this.dateInputInstance) {\n      this.dateInputInstance.focus();\n    }\n  },\n\n  saveDateInput(dateInput) {\n    this.dateInputInstance = dateInput;\n  },\n\n  render() {\n    const props = this.props;\n    const { invalid, str } = this.state;\n    const { locale, prefixCls, placeholder } = props;\n    const invalidClass = invalid ? `${prefixCls}-input-invalid` : '';\n    return (<div className={`${prefixCls}-input-wrap`}>\n      <div className={`${prefixCls}-date-input-wrap`}>\n        <input\n          ref={this.saveDateInput}\n          className={`${prefixCls}-input ${invalidClass}`}\n          value={str}\n          disabled={props.disabled}\n          placeholder={placeholder}\n          onChange={this.onInputChange}\n        />\n      </div>\n      {props.showClear ? <a\n        className={`${prefixCls}-clear-btn`}\n        role=\"button\"\n        title={locale.clear}\n        onClick={this.onClear}\n      /> : null}\n    </div>);\n  },\n});\n\nexport default DateInput;\n"]}