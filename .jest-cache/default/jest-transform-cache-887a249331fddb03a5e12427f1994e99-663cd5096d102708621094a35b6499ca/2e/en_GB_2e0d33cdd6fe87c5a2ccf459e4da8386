8141c982f73670304b88656f7cadcf6c
"use strict";

/* istanbul ignore next */
function cov_2pb0n1sozz() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/locale-provider/en_GB.tsx";
  var hash = "c011431401be7c59714a5f2a307ccc21c485757b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/locale-provider/en_GB.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 10,
          column: 13
        },
        end: {
          line: 10,
          column: 88
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 76
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 76
        }
      },
      "6": {
        start: {
          line: 16,
          column: 14
        },
        end: {
          line: 16,
          column: 73
        }
      },
      "7": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "8": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 86,
          column: 30
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c011431401be7c59714a5f2a307ccc21c485757b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2pb0n1sozz = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2pb0n1sozz();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2pb0n1sozz().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_2pb0n1sozz().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2pb0n1sozz().s[2]++;
exports["default"] = void 0;

var _en_GB =
/* istanbul ignore next */
(cov_2pb0n1sozz().s[3]++, _interopRequireDefault(require("../rc-components/pagination/locale/en_GB")));

var _en_GB2 =
/* istanbul ignore next */
(cov_2pb0n1sozz().s[4]++, _interopRequireDefault(require("../date-picker/locale/en_GB")));

var _en_GB3 =
/* istanbul ignore next */
(cov_2pb0n1sozz().s[5]++, _interopRequireDefault(require("../time-picker/locale/en_GB")));

var _en_GB4 =
/* istanbul ignore next */
(cov_2pb0n1sozz().s[6]++, _interopRequireDefault(require("../calendar/locale/en_GB")));

var _default =
/* istanbul ignore next */
(cov_2pb0n1sozz().s[7]++, {
  locale: 'en-gb',
  Pagination: _en_GB["default"],
  DatePicker: _en_GB2["default"],
  TimePicker: _en_GB3["default"],
  Calendar: _en_GB4["default"],
  Table: {
    filterTitle: 'Filter menu',
    filterConfirm: 'OK',
    filterReset: 'Reset',
    emptyText: 'No data',
    selectAll: 'Select current page',
    selectInvert: 'Invert current page'
  },
  Modal: {
    okText: 'OK',
    cancelText: 'Cancel',
    justOkText: 'OK'
  },
  Popconfirm: {
    okText: 'OK',
    cancelText: 'Cancel'
  },
  Transfer: {
    notFoundContent: 'Not Found',
    searchPlaceholder: 'Search here',
    itemUnit: 'item',
    itemsUnit: 'items'
  },
  Select: {
    notFoundContent: 'Not Found',
    selectAll: 'Select All',
    selectNone: 'None',
    filterPlaceholder: 'Input for filter'
  },
  Upload: {
    uploading: 'Uploading...',
    removeFile: 'Remove file',
    uploadError: 'Upload error',
    previewFile: 'Preview file'
  },
  Collapse: {
    fold: 'Fold',
    unfold: 'Unfold'
  },
  imageCrop: {
    editImage: 'Edit image',
    avatarUploadError: 'Avatar upload error',
    avatarServerError: 'Upload server error',
    avatarUpload: 'Picture upload',
    avatarReminder: "Here you can crop, rotate, and click \"Save\" Complete the avatar modification",
    preview: 'Preview',
    reUpload: 'Upload again',
    imageTooLarge: 'The picture is too large, please upload again',
    imageUploadError: 'Image upload error',
    imageDragHere: 'Please drag the picture here',
    pleaseUpload: 'Please upload, less than',
    uploadType: "and the type of picture is ",
    picture: '',
    cancelButton: 'Cancel',
    saveButton: 'Save',
    changeAvatar: 'Modify avatar'
  },
  PerformanceTable: {
    emptyMessage: 'No data found',
    loading: 'Loading...'
  }
});

/* istanbul ignore next */
cov_2pb0n1sozz().s[8]++;
exports["default"] = _default;