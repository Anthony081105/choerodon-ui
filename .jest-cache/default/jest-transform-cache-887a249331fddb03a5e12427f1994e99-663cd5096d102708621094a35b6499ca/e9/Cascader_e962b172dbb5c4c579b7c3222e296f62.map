{"version":3,"sources":["cascader/Cascader.jsx"],"names":["BUILT_IN_PLACEMENTS","bottomLeft","points","offset","overflow","adjustX","adjustY","topLeft","bottomRight","topRight","Cascader","Component","options","onChange","onPopupVisibleChange","disabled","transitionName","prefixCls","popupClassName","popupPlacement","builtinPlacements","expandTrigger","expandIcon","menuMode","locale","Locale","value","PropTypes","defaultValue","popupVisible","dropdownMenuColumnStyle","loadData","changeOnSelect","children","onKeyDown","singleMenuStyle","singleMenuItemStyle","singlePleaseRender","singleMenuItemRender","func","initialValue","props","activeValue","isTabSelected","nextProps","newValues","result","o","e","KeyCode","setProps","triggerNode","targetOption","menuIndex","activeOptions","visible","newState","currentLevel","currentOptions","currentIndex","nextIndex","restProps","menus","emptyMenuClassName","saveTrigger","tabIndex"],"mappings":"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","sourcesContent":["import React, { cloneElement, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayTreeFilter from 'array-tree-filter';\nimport isEqual from 'lodash/isEqual';\nimport Trigger from '../trigger';\nimport Icon from '../../icon';\nimport Menus from './Menus';\nimport MenusSingle from './MenusSingle';\nimport KeyCode from '../../_util/KeyCode';\nimport Locale from './locale/en_US';\n\nconst BUILT_IN_PLACEMENTS = {\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1,\n    },\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1,\n    },\n  },\n  bottomRight: {\n    points: ['tr', 'br'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1,\n    },\n  },\n  topRight: {\n    points: ['br', 'tr'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1,\n    },\n  },\n};\n\nexport default class Cascader extends Component {\n  static defaultProps = {\n    options: [],\n    onChange() {},\n    onPopupVisibleChange() {},\n    disabled: false,\n    transitionName: '',\n    prefixCls: 'rc-cascader',\n    popupClassName: '',\n    popupPlacement: 'bottomLeft',\n    builtinPlacements: BUILT_IN_PLACEMENTS,\n    expandTrigger: 'click',\n    expandIcon: <Icon type=\"navigate_next\" />,\n    menuMode:'multiple',\n    locale:Locale,\n  };\n\n  static propTypes = {\n    value: PropTypes.array,\n    defaultValue: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    onChange: PropTypes.func,\n    onPopupVisibleChange: PropTypes.func,\n    popupVisible: PropTypes.bool,\n    disabled: PropTypes.bool,\n    transitionName: PropTypes.string,\n    popupClassName: PropTypes.string,\n    popupPlacement: PropTypes.string,\n    prefixCls: PropTypes.string,\n    dropdownMenuColumnStyle: PropTypes.object,\n    builtinPlacements: PropTypes.object,\n    loadData: PropTypes.func,\n    changeOnSelect: PropTypes.bool,\n    children: PropTypes.node,\n    onKeyDown: PropTypes.func,\n    expandTrigger: PropTypes.string,\n    expandIcon: PropTypes.node,\n    menuMode: PropTypes.string,\n    locale: PropTypes.object,\n    singleMenuStyle: PropTypes.object,\n    singleMenuItemStyle: PropTypes.object,\n    singlePleaseRender: PropTypes.func,\n    singleMenuItemRender: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    let initialValue = [];\n    if ('value' in props) {\n      initialValue = props.value || [];\n    } else if ('defaultValue' in props) {\n      initialValue = props.defaultValue || [];\n    }\n\n    this.state = {\n      popupVisible: props.popupVisible,\n      activeValue: initialValue,\n      value: initialValue,\n      isTabSelected: false,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ('value' in nextProps && !isEqual(this.props.value, nextProps.value)) {\n      const newValues = {\n        value: nextProps.value || [],\n        activeValue: nextProps.value || [],\n      };\n      // allow activeValue diff from value\n      if ('loadData' in nextProps) {\n        delete newValues.activeValue;\n      }\n      this.setState(newValues);\n    }\n    if ('popupVisible' in nextProps) {\n      this.setState({\n        popupVisible: nextProps.popupVisible,\n      });\n    }\n  }\n\n  getPopupDOMNode() {\n    return this.trigger.getPopupDomNode();\n  }\n\n  getCurrentLevelOptions() {\n    const { options } = this.props;\n    const { activeValue = [] } = this.state;\n    const result = arrayTreeFilter(options, (o, level) => o.value === activeValue[level]);\n    if (result[result.length - 2]) {\n      return result[result.length - 2].children;\n    }\n    return [...options].filter(o => !o.disabled);\n  }\n\n  getActiveOptions(activeValue) {\n    return arrayTreeFilter(this.props.options, (o, level) => o.value === activeValue[level]);\n  }\n\n  setPopupVisible = popupVisible => {\n    if (!('popupVisible' in this.props)) {\n      this.setState({ popupVisible });\n    }\n    // sync activeValue with value when panel open\n    if (popupVisible && !this.state.visible) {\n      this.setState({\n        activeValue: this.state.value,\n      });\n    }\n    this.props.onPopupVisibleChange(popupVisible);\n  };\n  handleChange = (options, setProps, e) => {\n    if (e.type !== 'keydown' || e.keyCode === KeyCode.ENTER) {\n      this.props.onChange(options.map(o => o.value), options);\n      this.setPopupVisible(setProps.visible);\n    }\n  };\n  handlePopupVisibleChange = popupVisible => {\n    this.setPopupVisible(popupVisible);\n  };\n  handleMenuSelect = (targetOption, menuIndex,isTabSelected = false,e) => {\n    // Keep focused state for keyboard support\n    const triggerNode = this.trigger.getRootDomNode();\n    if (triggerNode && triggerNode.focus) {\n      triggerNode.focus();\n    }\n    const { changeOnSelect, loadData, expandTrigger } = this.props;\n    if (!targetOption || targetOption.disabled) {\n      return;\n    }\n    let { activeValue } = this.state;\n    activeValue = activeValue.slice(0, menuIndex + 1);\n    activeValue[menuIndex] = targetOption.value;\n    const activeOptions = this.getActiveOptions(activeValue);\n    if (targetOption.isLeaf === false && !targetOption.children && loadData) {\n      if (changeOnSelect) {\n        this.handleChange(activeOptions, { visible: true }, e);\n      }\n      this.setState({ activeValue,isTabSelected });\n      loadData(activeOptions);\n      return;\n    }\n    const newState = {};\n    if (!targetOption.children || !targetOption.children.length) {\n      this.handleChange(activeOptions, { visible: false }, e);\n      // set value to activeValue when select leaf option\n      newState.value = activeValue;\n      // add e.type judgement to prevent `onChange` being triggered by mouseEnter\n    } else if (changeOnSelect && (e.type === 'click' || e.type === 'keydown')) {\n      if (expandTrigger === 'hover') {\n        this.handleChange(activeOptions, { visible: false }, e);\n      } else {\n        this.handleChange(activeOptions, { visible: true }, e);\n      }\n      // set value to activeValue on every select\n      newState.value = activeValue;\n    }\n    newState.activeValue = activeValue;\n    //  not change the value by keyboard\n    if ('value' in this.props || (e.type === 'keydown' && e.keyCode !== KeyCode.ENTER)) {\n      delete newState.value;\n    }\n    newState.isTabSelected = isTabSelected\n    this.setState(newState);\n  };\n  handleKeyDown = e => {\n    const { children } = this.props;\n    // Don't bind keyboard support when children specify the onKeyDown\n    if (children && children.props.onKeyDown) {\n      children.props.onKeyDown(e);\n      return;\n    }\n    const activeValue = [...this.state.activeValue];\n    const currentLevel = activeValue.length - 1 < 0 ? 0 : activeValue.length - 1;\n    const currentOptions = this.getCurrentLevelOptions();\n    const currentIndex = currentOptions.map(o => o.value).indexOf(activeValue[currentLevel]);\n    if (\n      e.keyCode !== KeyCode.DOWN &&\n      e.keyCode !== KeyCode.UP &&\n      e.keyCode !== KeyCode.LEFT &&\n      e.keyCode !== KeyCode.RIGHT &&\n      e.keyCode !== KeyCode.ENTER &&\n      e.keyCode !== KeyCode.BACKSPACE &&\n      e.keyCode !== KeyCode.ESC\n    ) {\n      return;\n    }\n    // Press any keys above to reopen menu\n    if (\n      !this.state.popupVisible &&\n      e.keyCode !== KeyCode.BACKSPACE &&\n      e.keyCode !== KeyCode.LEFT &&\n      e.keyCode !== KeyCode.RIGHT &&\n      e.keyCode !== KeyCode.ESC\n    ) {\n      this.setPopupVisible(true);\n      return;\n    }\n    if (e.keyCode === KeyCode.DOWN || e.keyCode === KeyCode.UP) {\n      let nextIndex = currentIndex;\n      if (nextIndex !== -1) {\n        if (e.keyCode === KeyCode.DOWN) {\n          nextIndex += 1;\n          nextIndex = nextIndex >= currentOptions.length ? 0 : nextIndex;\n        } else {\n          nextIndex -= 1;\n          nextIndex = nextIndex < 0 ? currentOptions.length - 1 : nextIndex;\n        }\n      } else {\n        nextIndex = 0;\n      }\n      activeValue[currentLevel] = currentOptions[nextIndex].value;\n    } else if (e.keyCode === KeyCode.LEFT || e.keyCode === KeyCode.BACKSPACE) {\n      activeValue.splice(activeValue.length - 1, 1);\n    } else if (e.keyCode === KeyCode.RIGHT) {\n      if (currentOptions[currentIndex] && currentOptions[currentIndex].children) {\n        activeValue.push(currentOptions[currentIndex].children[0].value);\n      }\n    } else if (e.keyCode === KeyCode.ESC) {\n      this.setPopupVisible(false);\n      return;\n    }\n    if (!activeValue || activeValue.length === 0) {\n      this.setPopupVisible(false);\n    }\n    const activeOptions = this.getActiveOptions(activeValue);\n    const targetOption = activeOptions[activeOptions.length - 1];\n    this.handleMenuSelect(targetOption, activeOptions.length - 1, false , e);\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n  };\n\n  saveTrigger = node => {\n    this.trigger = node;\n  };\n\n  render() {\n    const {\n      prefixCls,\n      transitionName,\n      popupClassName,\n      options,\n      disabled,\n      builtinPlacements,\n      popupPlacement,\n      children,\n      locale,\n      menuMode,\n      singleMenuStyle,\n      singleMenuItemStyle,\n      ...restProps\n    } = this.props;\n    // Did not show popup when there is no options\n    let menus = <div />;\n    let emptyMenuClassName = '';\n    if (options && options.length > 0) {\n      if( menuMode === \"multiple\") {\n        menus = (\n          <Menus\n            {...this.props}\n            value={this.state.value}\n            activeValue={this.state.activeValue}\n            onSelect={this.handleMenuSelect}\n            visible={this.state.popupVisible}\n          />)\n      }else if (menuMode === \"single\" ){\n        menus = (\n          <MenusSingle\n            {...this.props}\n            isTabSelected={this.state.isTabSelected}\n            value={this.state.value}\n            activeValue={this.state.activeValue}\n            onSelect={this.handleMenuSelect}\n            visible={this.state.popupVisible}\n            locale={locale}\n            singleMenuStyle={singleMenuStyle}\n            singleMenuItemStyle={singleMenuItemStyle}\n          />)\n\n      } else {\n        throw new Error('please use correct mode for menu ex \"single\" and \"multiple\"')\n      }\n    } else {\n      emptyMenuClassName = ` ${prefixCls}-menus-empty`;\n    }\n    return (\n      <Trigger\n        ref={this.saveTrigger}\n        {...restProps}\n        options={options}\n        disabled={disabled}\n        popupPlacement={popupPlacement}\n        builtinPlacements={builtinPlacements}\n        popupTransitionName={transitionName}\n        action={disabled ? [] : ['click']}\n        popupVisible={disabled ? false : this.state.popupVisible}\n        onPopupVisibleChange={this.handlePopupVisibleChange}\n        prefixCls={`${prefixCls}-menus`}\n        popupClassName={popupClassName + emptyMenuClassName}\n        popup={menus}\n      >\n        {cloneElement(children, {\n          onKeyDown: this.handleKeyDown,\n          tabIndex: disabled ? undefined : 0,\n        })}\n      </Trigger>\n    );\n  }\n}\n"]}