{"version":3,"sources":["createBaseForm.jsx"],"names":["DEFAULT_TRIGGER","createBaseForm","option","mixins","validateMessages","onFieldsChange","onValuesChange","mapProps","identity","mapPropsToFields","fieldNameProp","fieldMetaProp","fieldDataProp","formPropName","withRef","decorate","WrappedComponent","Form","getInitialState","fields","props","fieldsStore","instances","cachedBind","clearedFieldMetaCache","forEach","key","process","env","NODE_ENV","submitting","componentWillReceiveProps","nextProps","updateFields","onCollectCommon","name","action","args","fieldMeta","getFieldMeta","originalProps","value","getValueFromEvent","getFieldValue","valuesAll","getAllValues","valuesAllSet","Object","keys","field","getField","touched","onCollect","name_","validate","newField","dirty","setFields","onCollectValidate","validateFieldsInternal","options","firstFields","validateFirst","getCacheBind","fn","cache","bind","recoverClearedField","setFieldMeta","meta","getFieldDecorator","fieldOption","getFieldProps","fieldElem","valuePropName","defaultValuePropName","toUpperCase","slice","ref","getFieldValuePropValue","usersFieldOption","Error","isValidNestedFieldName","trigger","rules","validateTrigger","initialValue","inputProps","saveRef","validateRules","validateTriggers","indexOf","getFieldInstance","getRules","actionRules","filter","item","map","maybeNestedFields","callback","flattenRegisteredFields","changedFields","reduce","acc","getNestedAllFields","forceUpdate","resetFields","ns","newFields","length","names","Array","isArray","setFieldsValue","changedValues","fieldsMeta","values","isRegistered","allValues","_","component","clearField","fieldNames","allRules","allFields","alreadyErrors","force","errors","undefined","validating","f","getFieldsValue","isModifiedFields","validator","AsyncValidator","messages","errorsGroup","e","fieldName","fieldErrors","concat","push","expired","nowAllFields","nowField","message","validateFields","opt","cb","getValidFieldsFullName","getValidFieldsName","isSubmitting","state","submit","setState","render","wrappedComponentRef","restProps","formProps","getForm","call"],"mappings":"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","sourcesContent":["import React, { cloneElement } from 'react';\nimport createReactClass from 'create-react-class';\nimport AsyncValidator from 'async-validator';\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport set from 'lodash/set';\nimport createFieldsStore from './createFieldsStore';\nimport warning from '../../_util/warning';\nimport {\n  argumentContainer,\n  flattenArray,\n  getParams,\n  getValidateTriggers,\n  getValueFromEvent,\n  hasRules,\n  identity,\n  isEmptyObject,\n  normalizeValidateRules,\n} from './utils';\n\nconst DEFAULT_TRIGGER = 'onChange';\n\nfunction createBaseForm(option = {}, mixins = []) {\n  const {\n    validateMessages,\n    onFieldsChange,\n    onValuesChange,\n    mapProps = identity,\n    mapPropsToFields,\n    fieldNameProp,\n    fieldMetaProp,\n    fieldDataProp,\n    formPropName = 'form',\n    // @deprecated\n    withRef,\n  } = option;\n\n  return function decorate(WrappedComponent) {\n    const Form = createReactClass({\n      mixins,\n\n      getInitialState() {\n        const fields = mapPropsToFields && mapPropsToFields(this.props);\n        this.fieldsStore = createFieldsStore(fields || {});\n\n        this.instances = {};\n        this.cachedBind = {};\n        this.clearedFieldMetaCache = {};\n        ['getFieldsValue',\n          'getFieldValue',\n          'setFieldsInitialValue',\n          'getFieldsError',\n          'getFieldError',\n          'isFieldValidating',\n          'isFieldsValidating',\n          'isFieldsTouched',\n          'isFieldTouched',\n          'isModifiedFields',\n          'isModifiedFields'].forEach(key => this[key] = (...args) => {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'you should not use `ref` on enhanced form, please use `wrappedComponentRef`. ' +\n              'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140',\n            );\n          }\n          return this.fieldsStore[key](...args);\n        });\n\n        return {\n          submitting: false,\n        };\n      },\n\n      componentWillReceiveProps(nextProps) {\n        if (mapPropsToFields) {\n          this.fieldsStore.updateFields(mapPropsToFields(nextProps));\n        }\n      },\n\n      onCollectCommon(name, action, args) {\n        const fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta[action]) {\n          fieldMeta[action](...args);\n        } else if (fieldMeta.originalProps && fieldMeta.originalProps[action]) {\n          fieldMeta.originalProps[action](...args);\n        }\n        const value = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent(...args) : getValueFromEvent(...args);\n        if (onValuesChange && value !== this.fieldsStore.getFieldValue(name)) {\n          const valuesAll = this.fieldsStore.getAllValues();\n          const valuesAllSet = {};\n          valuesAll[name] = value;\n          Object.keys(valuesAll).forEach(key => set(valuesAllSet, key, valuesAll[key]));\n          onValuesChange(this.props, set({}, name, value), valuesAllSet);\n        }\n        const field = this.fieldsStore.getField(name);\n        return ({ name, field: { ...field, value, touched: true }, fieldMeta });\n      },\n\n      onCollect(name_, action, ...args) {\n        const { name, field, fieldMeta } = this.onCollectCommon(name_, action, args);\n        const { validate } = fieldMeta;\n        const newField = {\n          ...field,\n          dirty: hasRules(validate),\n        };\n        this.setFields({\n          [name]: newField,\n        });\n      },\n\n      onCollectValidate(name_, action, ...args) {\n        const { field, fieldMeta } = this.onCollectCommon(name_, action, args);\n        const newField = {\n          ...field,\n          dirty: true,\n        };\n        this.validateFieldsInternal([newField], {\n          action,\n          options: {\n            firstFields: !!fieldMeta.validateFirst,\n          },\n        });\n      },\n\n      getCacheBind(name, action, fn) {\n        if (!this.cachedBind[name]) {\n          this.cachedBind[name] = {};\n        }\n        const cache = this.cachedBind[name];\n        if (!cache[action]) {\n          cache[action] = fn.bind(this, name, action);\n        }\n        return cache[action];\n      },\n\n      recoverClearedField(name) {\n        if (this.clearedFieldMetaCache[name]) {\n          this.fieldsStore.setFields({\n            [name]: this.clearedFieldMetaCache[name].field,\n          });\n          this.fieldsStore.setFieldMeta(name, this.clearedFieldMetaCache[name].meta);\n          delete this.clearedFieldMetaCache[name];\n        }\n      },\n\n      getFieldDecorator(name, fieldOption) {\n        const props = this.getFieldProps(name, fieldOption);\n        return (fieldElem) => {\n          const fieldMeta = this.fieldsStore.getFieldMeta(name);\n          const originalProps = fieldElem.props;\n          if (process.env.NODE_ENV !== 'production') {\n            const valuePropName = fieldMeta.valuePropName;\n            warning(\n              !(valuePropName in originalProps),\n              `\\`getFieldDecorator\\` will override \\`${valuePropName}\\`, ` +\n              `so please don't set \\`${valuePropName}\\` directly ` +\n              `and use \\`setFieldsValue\\` to set it.`,\n            );\n            const defaultValuePropName =\n              `default${valuePropName[0].toUpperCase()}${valuePropName.slice(1)}`;\n            warning(\n              !(defaultValuePropName in originalProps),\n              `\\`${defaultValuePropName}\\` is invalid ` +\n              `for \\`getFieldDecorator\\` will set \\`${valuePropName}\\`,` +\n              ` please use \\`option.initialValue\\` instead.`,\n            );\n          }\n          fieldMeta.originalProps = originalProps;\n          fieldMeta.ref = fieldElem.ref;\n          return cloneElement(fieldElem, {\n            ...props,\n            ...this.fieldsStore.getFieldValuePropValue(fieldMeta),\n          });\n        };\n      },\n\n      getFieldProps(name, usersFieldOption = {}) {\n        if (!name) {\n          throw new Error('Must call `getFieldProps` with valid name string!');\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            this.fieldsStore.isValidNestedFieldName(name),\n            'One field name cannot be part of another, e.g. `a` and `a.b`.',\n          );\n          warning(\n            !('exclusive' in usersFieldOption),\n            '`option.exclusive` of `getFieldProps`|`getFieldDecorator` had been remove.',\n          );\n        }\n\n        delete this.clearedFieldMetaCache[name];\n\n        const fieldOption = {\n          name,\n          trigger: DEFAULT_TRIGGER,\n          valuePropName: 'value',\n          validate: [],\n          ...usersFieldOption,\n        };\n\n        const {\n          rules,\n          trigger,\n          validateTrigger = trigger,\n          validate,\n        } = fieldOption;\n\n        const fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if ('initialValue' in fieldOption) {\n          fieldMeta.initialValue = fieldOption.initialValue;\n        }\n\n        const inputProps = {\n          ...this.fieldsStore.getFieldValuePropValue(fieldOption),\n          ref: this.getCacheBind(name, `${name}__ref`, this.saveRef),\n        };\n        if (fieldNameProp) {\n          inputProps[fieldNameProp] = name;\n        }\n\n        const validateRules = normalizeValidateRules(validate, rules, validateTrigger);\n        const validateTriggers = getValidateTriggers(validateRules);\n        validateTriggers.forEach((action) => {\n          if (inputProps[action]) return;\n          inputProps[action] = this.getCacheBind(name, action, this.onCollectValidate);\n        });\n\n        // make sure that the value will be collect\n        if (trigger && validateTriggers.indexOf(trigger) === -1) {\n          inputProps[trigger] = this.getCacheBind(name, trigger, this.onCollect);\n        }\n\n        const meta = {\n          ...fieldMeta,\n          ...fieldOption,\n          validate: validateRules,\n        };\n        this.fieldsStore.setFieldMeta(name, meta);\n        if (fieldMetaProp) {\n          inputProps[fieldMetaProp] = meta;\n        }\n\n        if (fieldDataProp) {\n          inputProps[fieldDataProp] = this.fieldsStore.getField(name);\n        }\n\n        return inputProps;\n      },\n\n      getFieldInstance(name) {\n        return this.instances[name];\n      },\n\n      getRules(fieldMeta, action) {\n        const actionRules = fieldMeta.validate.filter((item) => {\n          return !action || item.trigger.indexOf(action) >= 0;\n        }).map((item) => item.rules);\n        return flattenArray(actionRules);\n      },\n\n      setFields(maybeNestedFields, callback) {\n        const fields = this.fieldsStore.flattenRegisteredFields(maybeNestedFields);\n        this.fieldsStore.setFields(fields);\n        if (onFieldsChange) {\n          const changedFields = Object.keys(fields)\n            .reduce((acc, name) => set(acc, name, this.fieldsStore.getField(name)), {});\n          onFieldsChange(this.props, changedFields, this.fieldsStore.getNestedAllFields());\n        }\n        this.forceUpdate(callback);\n      },\n\n      resetFields(ns) {\n        const newFields = this.fieldsStore.resetFields(ns);\n        if (Object.keys(newFields).length > 0) {\n          this.setFields(newFields);\n        }\n        if (ns) {\n          const names = Array.isArray(ns) ? ns : [ns];\n          names.forEach(name => delete this.clearedFieldMetaCache[name]);\n        } else {\n          this.clearedFieldMetaCache = {};\n        }\n      },\n\n      setFieldsValue(changedValues, callback) {\n        const { fieldsMeta } = this.fieldsStore;\n        const values = this.fieldsStore.flattenRegisteredFields(changedValues);\n        const newFields = Object.keys(values).reduce((acc, name) => {\n          const isRegistered = fieldsMeta[name];\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              isRegistered,\n              'Cannot use `setFieldsValue` until ' +\n              'you use `getFieldDecorator` or `getFieldProps` to register it.',\n            );\n          }\n          if (isRegistered) {\n            const value = values[name];\n            acc[name] = {\n              value,\n            };\n          }\n          return acc;\n        }, {});\n        this.setFields(newFields, callback);\n        if (onValuesChange) {\n          const allValues = this.fieldsStore.getAllValues();\n          onValuesChange(this.props, changedValues, allValues);\n        }\n      },\n\n      saveRef(name, _, component) {\n        if (!component) {\n          // after destroy, delete data\n          this.clearedFieldMetaCache[name] = {\n            field: this.fieldsStore.getField(name),\n            meta: this.fieldsStore.getFieldMeta(name),\n          };\n          this.fieldsStore.clearField(name);\n          delete this.instances[name];\n          delete this.cachedBind[name];\n          return;\n        }\n        this.recoverClearedField(name);\n        const fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta) {\n          const ref = fieldMeta.ref;\n          if (ref) {\n            if (typeof ref === 'string') {\n              throw new Error(`can not set ref string for ${name}`);\n            }\n            ref(component);\n          }\n        }\n        this.instances[name] = component;\n      },\n\n      validateFieldsInternal(fields, {\n        fieldNames,\n        action,\n        options = {},\n      }, callback) {\n        const allRules = {};\n        const allValues = {};\n        const allFields = {};\n        const alreadyErrors = {};\n        fields.forEach((field) => {\n          const name = field.name;\n          if (options.force !== true && field.dirty === false) {\n            if (field.errors) {\n              set(alreadyErrors, name, { errors: field.errors });\n            }\n            return;\n          }\n          const fieldMeta = this.fieldsStore.getFieldMeta(name);\n          const newField = {\n            ...field,\n          };\n          newField.errors = undefined;\n          newField.validating = true;\n          newField.dirty = true;\n          allRules[name] = this.getRules(fieldMeta, action);\n          allValues[name] = newField.value;\n          allFields[name] = newField;\n        });\n        this.setFields(allFields);\n        // in case normalize\n        Object.keys(allValues).forEach((f) => {\n          allValues[f] = this.fieldsStore.getFieldValue(f);\n        });\n        if (callback && isEmptyObject(allFields)) {\n          callback(isEmptyObject(alreadyErrors) ? null : alreadyErrors,\n            this.fieldsStore.getFieldsValue(fieldNames),\n            this.fieldsStore.isModifiedFields(fieldNames));\n          return;\n        }\n        const validator = new AsyncValidator(allRules);\n        if (validateMessages) {\n          validator.messages(validateMessages);\n        }\n        validator.validate(allValues, options, (errors) => {\n          const errorsGroup = {\n            ...alreadyErrors,\n          };\n          if (errors && errors.length) {\n            errors.forEach((e) => {\n              const fieldName = e.field;\n              if (!has(errorsGroup, fieldName)) {\n                set(errorsGroup, fieldName, { errors: [] });\n              }\n              const fieldErrors = get(errorsGroup, fieldName.concat('.errors'));\n              fieldErrors.push(e);\n            });\n          }\n          const expired = [];\n          const nowAllFields = {};\n          Object.keys(allRules).forEach((name) => {\n            const fieldErrors = get(errorsGroup, name);\n            const nowField = this.fieldsStore.getField(name);\n            // avoid concurrency problems\n            if (nowField.value !== allValues[name]) {\n              expired.push({\n                name,\n              });\n            } else {\n              nowField.errors = fieldErrors && fieldErrors.errors;\n              nowField.value = allValues[name];\n              nowField.validating = false;\n              nowField.dirty = false;\n              nowAllFields[name] = nowField;\n            }\n          });\n          this.setFields(nowAllFields);\n          if (callback) {\n            if (expired.length) {\n              expired.forEach(({ name }) => {\n                const fieldErrors = [{\n                  message: `${name} need to revalidate`,\n                  field: name,\n                }];\n                set(errorsGroup, name, {\n                  expired: true,\n                  errors: fieldErrors,\n                });\n              });\n            }\n\n            callback(isEmptyObject(errorsGroup) ? null : errorsGroup,\n              this.fieldsStore.getFieldsValue(fieldNames),\n              this.fieldsStore.isModifiedFields(fieldNames));\n          }\n        });\n      },\n\n      validateFields(ns, opt, cb) {\n        const { names, callback, options } = getParams(ns, opt, cb);\n        const fieldNames = names ? this.fieldsStore.getValidFieldsFullName(names) : this.fieldsStore.getValidFieldsName();\n        const fields = fieldNames\n          .filter(name => {\n            const fieldMeta = this.fieldsStore.getFieldMeta(name);\n            return hasRules(fieldMeta.validate);\n          }).map((name) => {\n            const field = this.fieldsStore.getField(name);\n            field.value = this.fieldsStore.getFieldValue(name);\n            return field;\n          });\n        if (!fields.length) {\n          if (callback) {\n            callback(null,\n              this.fieldsStore.getFieldsValue(fieldNames),\n              this.fieldsStore.isModifiedFields(fieldNames));\n          }\n          return;\n        }\n        if (!('firstFields' in options)) {\n          options.firstFields = fieldNames.filter((name) => {\n            const fieldMeta = this.fieldsStore.getFieldMeta(name);\n            return !!fieldMeta.validateFirst;\n          });\n        }\n        this.validateFieldsInternal(fields, {\n          fieldNames,\n          options,\n        }, callback);\n      },\n\n      isSubmitting() {\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(\n            false,\n            '`isSubmitting` is deprecated. ' +\n            'Actually, it\\'s more convenient to handle submitting status by yourself.',\n          );\n        }\n        return this.state.submitting;\n      },\n\n      submit(callback) {\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(\n            false,\n            '`submit` is deprecated.' +\n            'Actually, it\\'s more convenient to handle submitting status by yourself.',\n          );\n        }\n        const fn = () => {\n          this.setState({\n            submitting: false,\n          });\n        };\n        this.setState({\n          submitting: true,\n        });\n        callback(fn);\n      },\n\n      render() {\n        const { wrappedComponentRef, ...restProps } = this.props;\n        const formProps = {\n          [formPropName]: this.getForm(),\n        };\n        if (withRef) {\n          if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n            warning(\n              false,\n              '`withRef` is deprecated, please use `wrappedComponentRef` instead. ' +\n              'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140',\n            );\n          }\n          formProps.ref = 'wrappedComponent';\n        } else if (wrappedComponentRef) {\n          formProps.ref = wrappedComponentRef;\n        }\n        const props = mapProps.call(this, {\n          ...formProps,\n          ...restProps,\n        });\n        return <WrappedComponent {...props} />;\n      },\n    });\n\n    return argumentContainer(Form, WrappedComponent);\n  };\n}\n\nexport default createBaseForm;\n"]}