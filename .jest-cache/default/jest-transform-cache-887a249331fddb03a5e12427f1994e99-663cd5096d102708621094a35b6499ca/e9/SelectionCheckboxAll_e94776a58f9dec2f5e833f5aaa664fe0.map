{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/table/SelectionCheckboxAll.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport Checkbox, { CheckboxChangeEvent } from '../checkbox';\nimport Dropdown from '../dropdown';\nimport Menu from '../menu';\nimport Icon from '../icon';\nimport { SelectionCheckboxAllProps, SelectionCheckboxAllState, SelectionItem } from './interface';\n\nexport default class SelectionCheckboxAll<T> extends Component<\n  SelectionCheckboxAllProps<T>,\n  SelectionCheckboxAllState\n> {\n  unsubscribe: () => void;\n\n  defaultSelections: SelectionItem[];\n\n  constructor(props: SelectionCheckboxAllProps<T>) {\n    super(props);\n\n    this.defaultSelections = props.hideDefaultSelections\n      ? []\n      : [\n          {\n            key: 'all',\n            text: props.locale.selectAll,\n            onSelect: () => {},\n          },\n          {\n            key: 'invert',\n            text: props.locale.selectInvert,\n            onSelect: () => {},\n          },\n        ];\n\n    this.state = {\n      checked: this.getCheckState(props),\n      indeterminate: this.getIndeterminateState(props),\n    };\n  }\n\n  componentDidMount() {\n    this.subscribe();\n  }\n\n  componentWillReceiveProps(nextProps: SelectionCheckboxAllProps<T>) {\n    this.setCheckState(nextProps);\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  subscribe() {\n    const { store } = this.props;\n    this.unsubscribe = store.subscribe(() => {\n      this.setCheckState(this.props);\n    });\n  }\n\n  checkSelection(data: T[], type: string, byDefaultChecked: boolean) {\n    const { store, getCheckboxPropsByItem, getRecordKey } = this.props;\n    // type should be 'every' | 'some'\n    if (type === 'every' || type === 'some') {\n      return byDefaultChecked\n        ? data[type]((item, i) => getCheckboxPropsByItem(item, i).defaultChecked)\n        : data[type](\n            (item, i) => store.getState().selectedRowKeys.indexOf(getRecordKey(item, i)) >= 0,\n          );\n    }\n    return false;\n  }\n\n  setCheckState(props: SelectionCheckboxAllProps<T>) {\n    const checked = this.getCheckState(props);\n    const { state } = this;\n    const indeterminate = this.getIndeterminateState(props);\n    if (checked !== state.checked) {\n      this.setState({ checked });\n    }\n    if (indeterminate !== state.indeterminate) {\n      this.setState({ indeterminate });\n    }\n  }\n\n  getCheckState(props: SelectionCheckboxAllProps<T>) {\n    const { store, data } = props;\n    let checked;\n    if (!data.length) {\n      checked = false;\n    } else {\n      checked = store.getState().selectionDirty\n        ? this.checkSelection(data, 'every', false)\n        : this.checkSelection(data, 'every', false) || this.checkSelection(data, 'every', true);\n    }\n    return checked;\n  }\n\n  getIndeterminateState(props: SelectionCheckboxAllProps<T>) {\n    const { store, data } = props;\n    let indeterminate;\n    if (!data.length) {\n      indeterminate = false;\n    } else {\n      indeterminate = store.getState().selectionDirty\n        ? this.checkSelection(data, 'some', false) && !this.checkSelection(data, 'every', false)\n        : (this.checkSelection(data, 'some', false) &&\n            !this.checkSelection(data, 'every', false)) ||\n          (this.checkSelection(data, 'some', true) && !this.checkSelection(data, 'every', true));\n    }\n    return indeterminate;\n  }\n\n  handleSelectAllChagne = (e: CheckboxChangeEvent) => {\n    const { checked } = e.target;\n    const { onSelect } = this.props;\n    onSelect(checked ? 'all' : 'removeAll', 0, null);\n  };\n\n  renderMenus(selections: SelectionItem[]) {\n    const { onSelect } = this.props;\n    return selections.map((selection, index) => {\n      return (\n        <Menu.Item key={selection.key || index}>\n          <div onClick={() => onSelect(selection.key, index, selection.onSelect)}>\n            {selection.text}\n          </div>\n        </Menu.Item>\n      );\n    });\n  }\n\n  render() {\n    const { disabled, prefixCls, selections, getPopupContainer } = this.props;\n    const { checked, indeterminate } = this.state;\n\n    const selectionPrefixCls = `${prefixCls}-selection`;\n\n    let customSelections: ReactNode = null;\n\n    if (selections) {\n      const newSelections = Array.isArray(selections)\n        ? this.defaultSelections.concat(selections)\n        : this.defaultSelections;\n\n      const menu = (\n        <Menu className={`${selectionPrefixCls}-menu`} selectedKeys={[]}>\n          {this.renderMenus(newSelections)}\n        </Menu>\n      );\n\n      customSelections =\n        newSelections.length > 0 ? (\n          <Dropdown overlay={menu} getPopupContainer={getPopupContainer}>\n            <div className={`${selectionPrefixCls}-down`}>\n              <Icon type=\"expand_more\" />\n            </div>\n          </Dropdown>\n        ) : null;\n    }\n\n    return (\n      <div className={selectionPrefixCls}>\n        <Checkbox\n          className={classNames({ [`${selectionPrefixCls}-select-all-custom`]: customSelections })}\n          checked={checked}\n          indeterminate={indeterminate}\n          disabled={disabled}\n          onChange={this.handleSelectAllChagne}\n        />\n        {customSelections}\n      </div>\n    );\n  }\n}\n"]}