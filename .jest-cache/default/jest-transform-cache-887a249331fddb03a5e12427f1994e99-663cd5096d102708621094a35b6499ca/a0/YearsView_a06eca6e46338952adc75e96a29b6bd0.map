{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/date-picker/YearsView.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqB,S;;;;;;;;;;;;;;0CAMA;AACjB,WAAK,kBAAL,CAAwB,KAAK,YAAL,GAAoB,QAApB,CAA6B,EAA7B,EAAiC,GAAjC,CAAxB;AACD;;;uCAGe;AACd,WAAK,cAAL,CAAmB;AAAA;AAAnB;AACD;;;0CAGkB;AACjB,WAAK,kBAAL,CAAwB,KAAK,YAAL,GAAoB,GAApB,CAAwB,EAAxB,EAA4B,GAA5B,CAAxB;AACD;;;sCAEiB,C,EAAC;AACjB,mCAAU,CAAV;AACA,UAAM,IAAI,GAAG,KAAK,YAAL,EAAb;AACA,WAAK,kBAAL,CAAwB,IAAI,CAAC,QAAL,CAAc,IAAI,CAAC,IAAL,KAAc,EAA5B,EAAgC,GAAhC,CAAxB;AACD;;;qCAEgB,C,EAAC;AAChB,mCAAU,CAAV;AACA,UAAM,IAAI,GAAG,KAAK,YAAL,EAAb;AACA,WAAK,kBAAL,CAAwB,IAAI,CAAC,GAAL,CAAS,IAAK,IAAI,CAAC,IAAL,KAAc,EAA5B,EAAiC,GAAjC,CAAxB;AACD;;;sCAEiB,C,EAAC;AACjB,mCAAU,CAAV;;AACA,UAAI,CAAC,CAAC,MAAN,EAAc;AACZ,aAAK,cAAL,CAAmB;AAAA;AAAnB;AACD,OAFD,MAEO;AACL,aAAK,kBAAL,CAAwB,KAAK,YAAL,GAAoB,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,CAAxB;AACD;AACF;;;uCAEkB,C,EAAC;AAClB,mCAAU,CAAV;;AACA,UAAI,CAAC,CAAC,MAAN,EAAc;AACZ,YAAI,KAAK,KAAL,CAAW,IAAX,KAAe;AAAA;AAAnB,UAAuC;AACrC,iBAAK,cAAL,CAAmB;AAAA;AAAnB;AACD;AACF,OAJD,MAIO;AACL,aAAK,kBAAL,CAAwB,KAAK,YAAL,GAAoB,GAApB,CAAwB,CAAxB,EAA2B,GAA3B,CAAxB;AACD;AACF;;;oCAEe,C,EAAC;AACf,mCAAU,CAAV;AACA,WAAK,kBAAL,CAAwB,KAAK,YAAL,GAAoB,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,CAAxB;AACD;;;sCAEiB,C,EAAC;AACjB,mCAAU,CAAV;AACA,WAAK,kBAAL,CAAwB,KAAK,YAAL,GAAoB,GAApB,CAAwB,CAAxB,EAA2B,GAA3B,CAAxB;AACD;;;wCAEmB,C,EAAC;AACnB,mCAAU,CAAV;AACA,WAAK,kBAAL,CAAwB,KAAK,YAAL,GAAoB,QAApB,CAA6B,CAAC,CAAC,MAAF,GAAW,GAAX,GAAiB,EAA9C,EAAkD,GAAlD,CAAxB;AACD;;;0CAEqB,C,EAAC;AACrB,mCAAU,CAAV;AACA,WAAK,kBAAL,CAAwB,KAAK,YAAL,GAAoB,GAApB,CAAwB,CAAC,CAAC,MAAF,GAAW,GAAX,GAAiB,EAAzC,EAA6C,GAA7C,CAAxB;AACD;;;mCAEW;AAAA,UAER,SAFQ,GAIN,IAJM,CAER,SAFQ;AAAA,UAGC,IAHD,GAIN,IAJM,CAGR,KAHQ,CAGC,IAHD;AAKV,UAAM,IAAI,GAAG,IAAI,CAAC,IAAL,KAAc,EAA3B;AACA,UAAM,IAAI,GAAG,IAAI,CAAC,KAAL,GAAa,QAAb,CAAsB,IAAtB,EAA4B,GAA5B,CAAb;AACA,UAAM,EAAE,GAAG,IAAI,CAAC,KAAL,GAAa,GAAb,CAAiB,CAAjB,EAAoB,GAApB,CAAX;AACA,aACE,kBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,YAAK,SAAL;AAAd,OAAA,EACE,kBAAA,aAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAS,YAAK,SAAL,eAAZ;AAAwC,QAAA,OAAO,EAAE,KAAK;AAAtD,OAAA,EACE,kBAAA,aAAA,CAAC,gBAAD,EAAK;AAAC,QAAA,IAAI,EAAC;AAAN,OAAL,CADF,CADF,EAIE,kBAAA,aAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAS,YAAK,SAAL,iBAAZ;AAA0C,QAAA,OAAO,EAAE,KAAK;AAAxD,OAAA,EACG,IAAI,CAAC,IAAL,EADH,E,KAAA,EACmB,EAAE,CAAC,IAAH,EADnB,CAJF,EAOE,kBAAA,aAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAS,YAAK,SAAL;AAAZ,OAAA,EACE,kBAAA,aAAA,CAAC,gBAAD,EAAK;AAAC,QAAA,IAAI,EAAC,WAAN;AAAkB,QAAA,OAAO,EAAE,KAAK;AAAhC,OAAL,CADF,CAPF,CADF;AAaD;;;sCAEc;AACb,aAAO,SAAP;AACD;;;sCAEc;AAAA,UAEX,SAFW,GAIT,IAJS,CAEX,SAFW;AAAA,wBAIT,IAJS,CAGX,KAHW;AAAA,UAGF,IAHE,eAGF,IAHE;AAAA,6CAGI,QAHJ;AAAA,UAGI,QAHJ,qCAGe,KAAK,UAHpB;AAAA,8CAGgC,WAHhC;AAAA,UAGgC,WAHhC,sCAG8C,0BAH9C;AAKb,UAAM,QAAQ,GAAG,IAAI,CAAC,KAAL,EAAjB;AACA,UAAM,IAAI,GAAG,IAAI,CACd,KADU,GAEV,OAFU,CAEF,GAFE,EAGV,QAHU,CAGD,IAAI,CAAC,IAAL,KAAc,EAHb,EAGiB,GAHjB,CAAb;AAIA,UAAM,EAAE,GAAG,IAAI,CAAC,KAAL,GAAa,GAAb,CAAiB,EAAjB,EAAqB,GAArB,CAAX;AACA,UAAM,QAAQ,GAAG,IAAI,CAAC,KAAL,GAAa,QAAb,CAAsB,CAAtB,EAAyB,GAAzB,CAAjB;AACA,UAAM,QAAQ,GAAG,EAAE,CAAC,KAAH,GAAW,GAAX,CAAe,CAAf,EAAkB,GAAlB,CAAjB;AACA,UAAM,IAAI,GAAgB,EAA1B;AACA,UAAI,KAAK,GAAgB,EAAzB;;AAEA,aAAO,QAAQ,CAAC,QAAT,CAAkB,QAAlB,CAAP,EAAoC;AAAA;;AAClC,YAAM,WAAW,GAAG,QAAQ,CAAC,KAAT,EAApB;AACA,YAAM,UAAU,GAAG,CAAC,WAAW,CAAC,WAAD,EAAc,QAAd,CAA/B;AACA,YAAM,SAAS,GAAG,sCAAc,SAAd,uFACZ,SADY,WACM,WAAW,CAAC,QAAZ,CAAqB,IAArB,EAA2B,GAA3B,CADN,2DAEZ,SAFY,WAEM,WAAW,CAAC,MAAZ,CAAmB,EAAnB,EAAuB,GAAvB,CAFN,2DAGZ,SAHY,gBAGW,QAAQ,CAAC,MAAT,CAAgB,QAAhB,EAA0B,GAA1B,CAHX,2DAIZ,SAJY,gBAIW,UAJX,gBAAlB;AAOA,YAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAT,EAAD,CAAnB;AAEA,YAAM,SAAS,GAAQ;AACrB,UAAA,GAAG,EAAE,IADgB;AAErB,UAAA,SAAS,EAAT,SAFqB;AAGrB,UAAA,QAAQ,EAAE,KAAK,WAAL,CAAiB,IAAjB;AAHW,SAAvB;;AAMA,YAAI,CAAC,UAAL,EAAiB;AACf,UAAA,SAAS,CAAC,OAAV,GAAoB,KAAK,eAAL,CAAqB,IAArB,CAA0B,IAA1B,EAAgC,WAAhC,CAApB;AACD;;AAED,QAAA,KAAK,CAAC,IAAN,CAAW,QAAQ,CAAC,SAAD,EAAY,IAAZ,EAAkB,WAAlB,EAA+B,QAA/B,CAAnB;;AAEA,YAAI,KAAK,CAAC,MAAN,KAAiB,CAArB,EAAwB;AACtB,UAAA,IAAI,CAAC,IAAL,CAAU,kBAAA,aAAA,CAAA,IAAA,EAAA;AAAI,YAAA,GAAG,EAAE;AAAT,WAAA,EAAgB,KAAhB,CAAV;AACA,UAAA,KAAK,GAAG,EAAR;AACD;;AAED,QAAA,QAAQ,CAAC,GAAT,CAAa,CAAb,EAAgB,GAAhB;AACD;;AAED,aAAO,IAAP;AACD;;;mCAEW;AACV,aAAO,SAAP;AACD;;;oCAEY;AACX,uBAAU,KAAK,SAAf;AACD;;;2BAEM,I,EAAY;AAAA,UACT,IADS,GACA,KAAK,KADL,CACT,IADS;;AAEjB,UAAI,IAAI,KAAA;AAAA;AAAR,QAA4B;AAC1B,eAAK,kBAAL,CAAwB,IAAxB;AACA,eAAK,cAAL,CAAmB;AAAA;AAAnB;AACD,SAHD,MAGO;AACL,gHAAa,IAAb;AACD;AACF;;;EAtKoC,qB;;;AAC9B,SAAA,CAAA,WAAA,GAAc,WAAd;AAEA,SAAA,CAAA,IAAA,GAAI;AAAA;AAAJ;AAGP,uBAAA,CADC,oBACD,CAAA,E,mBAAA,E,qBAAA,EAEC,IAFD;AAKA,uBAAA,CADC,oBACD,CAAA,E,mBAAA,E,kBAAA,EAEC,IAFD;AAKA,uBAAA,CADC,oBACD,CAAA,E,mBAAA,E,qBAAA,EAEC,IAFD","sourcesContent":["import React, { ReactNode } from 'react';\nimport { Moment } from 'moment';\nimport classNames from 'classnames';\nimport autobind from '../_util/autobind';\nimport Icon from '../icon';\nimport { ViewMode } from './enum';\nimport DaysView, { alwaysValidDate } from './DaysView';\nimport { FieldType } from '../data-set/enum';\nimport { stopEvent } from '../_util/EventManager';\n\nexport default class YearsView extends DaysView {\n  static displayName = 'YearsView';\n\n  static type = FieldType.year;\n\n  @autobind\n  handlePrevYearClick() {\n    this.changeSelectedDate(this.getCloneDate().subtract(10, 'y'));\n  }\n\n  @autobind\n  handleYearSelect() {\n    this.changeViewMode(ViewMode.decade);\n  }\n\n  @autobind\n  handleNextYearClick() {\n    this.changeSelectedDate(this.getCloneDate().add(10, 'y'));\n  }\n\n  handleKeyDownHome(e) {\n    stopEvent(e);\n    const date = this.getCloneDate();\n    this.changeSelectedDate(date.subtract(date.year() % 10, 'y'));\n  }\n\n  handleKeyDownEnd(e) {\n    stopEvent(e);\n    const date = this.getCloneDate();\n    this.changeSelectedDate(date.add(9 - (date.year() % 10), 'y'));\n  }\n\n  handleKeyDownLeft(e) {\n    stopEvent(e);\n    if (e.altKey) {\n      this.changeViewMode(ViewMode.decade);\n    } else {\n      this.changeSelectedDate(this.getCloneDate().subtract(1, 'y'));\n    }\n  }\n\n  handleKeyDownRight(e) {\n    stopEvent(e);\n    if (e.altKey) {\n      if (this.props.mode !== ViewMode.year) {\n        this.changeViewMode(ViewMode.month);\n      }\n    } else {\n      this.changeSelectedDate(this.getCloneDate().add(1, 'y'));\n    }\n  }\n\n  handleKeyDownUp(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().subtract(3, 'y'));\n  }\n\n  handleKeyDownDown(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().add(3, 'y'));\n  }\n\n  handleKeyDownPageUp(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().subtract(e.altKey ? 100 : 10, 'y'));\n  }\n\n  handleKeyDownPageDown(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().add(e.altKey ? 100 : 10, 'y'));\n  }\n\n  renderHeader(): ReactNode {\n    const {\n      prefixCls,\n      props: { date },\n    } = this;\n    const year = date.year() % 10;\n    const from = date.clone().subtract(year, 'y');\n    const to = from.clone().add(9, 'y');\n    return (\n      <div className={`${prefixCls}-header`}>\n        <a className={`${prefixCls}-prev-year`} onClick={this.handlePrevYearClick}>\n          <Icon type=\"first_page\" />\n        </a>\n        <a className={`${prefixCls}-view-select`} onClick={this.handleYearSelect}>\n          {from.year()} - {to.year()}\n        </a>\n        <a className={`${prefixCls}-next-year`}>\n          <Icon type=\"last_page\" onClick={this.handleNextYearClick} />\n        </a>\n      </div>\n    );\n  }\n\n  renderPanelHead(): ReactNode {\n    return undefined;\n  }\n\n  renderPanelBody(): ReactNode {\n    const {\n      prefixCls,\n      props: { date, renderer = this.renderCell, isValidDate = alwaysValidDate },\n    } = this;\n    const selected = date.clone();\n    const from = date\n      .clone()\n      .startOf('y')\n      .subtract(date.year() % 10, 'y');\n    const to = from.clone().add(10, 'y');\n    const prevYear = from.clone().subtract(1, 'y');\n    const lastYear = to.clone().add(1, 'y');\n    const rows: ReactNode[] = [];\n    let cells: ReactNode[] = [];\n\n    while (prevYear.isBefore(lastYear)) {\n      const currentYear = prevYear.clone();\n      const isDisabled = !isValidDate(currentYear, selected);\n      const className = classNames(`${prefixCls}-cell`, {\n        [`${prefixCls}-old`]: currentYear.isBefore(from, 'y'),\n        [`${prefixCls}-new`]: currentYear.isSame(to, 'y'),\n        [`${prefixCls}-selected`]: prevYear.isSame(selected, 'y'),\n        [`${prefixCls}-disabled`]: isDisabled,\n      });\n\n      const text = String(prevYear.year());\n\n      const yearProps: any = {\n        key: text,\n        className,\n        children: this.renderInner(text),\n      };\n\n      if (!isDisabled) {\n        yearProps.onClick = this.handleCellClick.bind(this, currentYear);\n      }\n\n      cells.push(renderer(yearProps, text, currentYear, selected));\n\n      if (cells.length === 3) {\n        rows.push(<tr key={text}>{cells}</tr>);\n        cells = [];\n      }\n\n      prevYear.add(1, 'y');\n    }\n\n    return rows;\n  }\n\n  renderFooter(): ReactNode {\n    return undefined;\n  }\n\n  getPanelClass(): string {\n    return `${this.prefixCls}-year-panel`;\n  }\n\n  choose(date: Moment): void {\n    const { mode } = this.props;\n    if (mode !== ViewMode.year) {\n      this.changeSelectedDate(date);\n      this.changeViewMode(ViewMode.month);\n    } else {\n      super.choose(date);\n    }\n  }\n}\n"]}