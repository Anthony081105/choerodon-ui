{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/_util/PromiseMerger.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;IAEqB,a;;;AAanB,yBAAY,QAAZ,EAAgE,MAAhE,EAA6F;AAAA,QAArB,OAAqB,uEAAH,GAAG;AAAA;AAR7F,SAAA,WAAA,GAAgF,EAAhF;AASE,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,KAAL,GAAa,IAAI,iBAAJ,CAAqB,MAArB,CAAb;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,QAAL,GAAgB,gCAAoB,KAAK,KAAzB,CAAhB;AACD;;;;8BAEM;AACL,WAAK,QAAL;AACD;;;wBAGG,I,EAAY;AAAA;;AAAA,UACN,KADM,GACiB,IADjB,CACN,KADM;AAAA,UACC,WADD,GACiB,IADjB,CACC,WADD;AAEd,UAAM,IAAI,GAAG,KAAK,CAAC,GAAN,CAAU,IAAV,CAAb;;AACA,UAAI,IAAJ,EAAU;AACR,eAAO,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAP;AACD;;AACD,aAAO,IAAI,OAAJ,CAAe,UAAC,OAAD,EAAU,MAAV,EAAoB;AACxC,YAAI,OAAO,GAAG,WAAW,CAAC,IAAD,CAAzB;;AACA,YAAM,eAAe,GAAG,SAAlB,eAAkB,GAAK;AAC3B,UAAA,OAAO,CAAC,KAAK,CAAC,GAAN,CAAU,IAAV,CAAD,CAAP;AACD,SAFD;;AAGA,YAAM,cAAc,GAAG,SAAjB,cAAiB,GAAK;AAC1B,UAAA,MAAM;AACP,SAFD;;AAGA,YAAI,OAAJ,EAAa;AACX,UAAA,OAAO,CAAC,QAAR,CAAiB,IAAjB,CAAsB,eAAtB;AACA,UAAA,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAqB,cAArB;AACD,SAHD,MAGO;AACL,cAAI,KAAI,CAAC,MAAT,EAAiB;AACf,YAAA,YAAY,CAAC,KAAI,CAAC,MAAN,CAAZ;AACD;;AACD,UAAA,OAAO,GAAG;AACR,YAAA,QAAQ,EAAE,CAAC,eAAD,CADF;AAER,YAAA,OAAO,EAAE,CAAC,cAAD;AAFD,WAAV;AAIA,UAAA,KAAI,CAAC,WAAL,CAAiB,IAAjB,IAAyB,OAAzB;AACA,UAAA,KAAI,CAAC,MAAL,GAAc,UAAU,CAAC,YAAK;AAC5B,gBAAM,QAAQ,GAAa,MAAM,CAAC,IAAP,CAAY,WAAZ,CAA3B;AACA,gBAAM,IAAI,sCAAQ,WAAR,CAAV;AACA,YAAA,KAAI,CAAC,WAAL,GAAmB,EAAnB;;AAEA,gBAAI,OAAO,CAAC,GAAR,CAAY,YAAZ,KAA6B,MAAjC,EAAyC;AACvC;AACA,cAAA,OAAO,CAAC,IAAR,0BAA+B,QAA/B;AACD;;AACD,YAAA,KAAI,CAAC,QAAL,CAAc,QAAd,EACG,IADH,CACQ,UAAA,GAAG,EAAG;AACV,cAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,GAAG,EAAG;AACrB,oBAAM,IAAI,GAAG,GAAG,CAAC,GAAD,CAAhB;;AADqB,2BAEK,IAAI,CAAC,GAAD,CAAJ,IAAa,EAFlB;AAAA,yCAEb,QAFa;AAAA,oBAEb,QAFa,8BAEF,EAFE;;AAGrB,gBAAA,KAAI,CAAC,KAAL,CAAW,GAAX,CAAe,GAAf,EAAoB,IAApB;;AACA,gBAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,CAAC;AAAA,yBAAI,CAAC,CAAC,IAAD,CAAL;AAAA,iBAAlB;AACD,eALD;AAMD,aARH,WASS,UAAA,KAAK,EAAG;AACb,cAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,GAAG,EAAG;AAAA,4BACI,IAAI,CAAC,GAAD,CAAJ,IAAa,EADjB;AAAA,0CACb,OADa;AAAA,oBACb,OADa,8BACH,EADG;;AAErB,gBAAA,OAAO,CAAC,OAAR,CAAgB,UAAA,CAAC;AAAA,yBAAI,CAAC,CAAC,KAAD,CAAL;AAAA,iBAAjB;AACD,eAHD;AAID,aAdH;AAeD,WAxBuB,EAwBrB,KAAI,CAAC,OAxBgB,CAAxB;AAyBD;AACF,OA9CM,CAAP;AA+CD;;;;;;AArDD,uBAAA,CADC,YACD,CAAA,E,uBAAA,E,KAAA,EAqDC,IArDD","sourcesContent":["import { action, IReactionDisposer } from 'mobx';\nimport Cache, { refreshCacheOptions } from './Cache';\n\nexport default class PromiseMerger<V> {\n  timeout: number;\n\n  cache: Cache<string, V>;\n\n  promiseList: { [key: string]: { resolves: Function[]; rejects: Function[] } } = {};\n\n  waitID;\n\n  callback: (codes) => Promise<{ [key: string]: V }>;\n\n  reaction: IReactionDisposer;\n\n  constructor(callback: (codes) => Promise<{ [key: string]: V }>, config, timeout: number = 200) {\n    this.timeout = timeout;\n    this.cache = new Cache<string, V>(config);\n    this.callback = callback;\n    this.reaction = refreshCacheOptions(this.cache);\n  }\n\n  dispose() {\n    this.reaction();\n  }\n\n  @action\n  add(code: string): Promise<V> {\n    const { cache, promiseList } = this;\n    const item = cache.get(code);\n    if (item) {\n      return Promise.resolve(item);\n    }\n    return new Promise<V>((resolve, reject) => {\n      let promise = promiseList[code];\n      const resolveCallback = () => {\n        resolve(cache.get(code));\n      };\n      const rejectCallback = () => {\n        reject();\n      };\n      if (promise) {\n        promise.resolves.push(resolveCallback);\n        promise.rejects.push(rejectCallback);\n      } else {\n        if (this.waitID) {\n          clearTimeout(this.waitID);\n        }\n        promise = {\n          resolves: [resolveCallback],\n          rejects: [rejectCallback],\n        };\n        this.promiseList[code] = promise;\n        this.waitID = setTimeout(() => {\n          const codeList: string[] = Object.keys(promiseList);\n          const memo = { ...promiseList };\n          this.promiseList = {};\n\n          if (process.env.LOGGER_LEVEL === 'info') {\n            // eslint-disable-next-line no-console\n            console.info(`batch request: ${codeList}`);\n          }\n          this.callback(codeList)\n            .then(res => {\n              codeList.forEach(key => {\n                const data = res[key];\n                const { resolves = [] } = memo[key] || {};\n                this.cache.set(key, data);\n                resolves.forEach(r => r(data));\n              });\n            })\n            .catch(error => {\n              codeList.forEach(key => {\n                const { rejects = [] } = memo[key] || {};\n                rejects.forEach(r => r(error));\n              });\n            });\n        }, this.timeout);\n      }\n    });\n  }\n}\n"]}