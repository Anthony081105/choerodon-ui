{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/form/Form.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {\n  Children,\n  createElement,\n  FormEvent,\n  FormEventHandler,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  CSSProperties,\n  cloneElement,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { action as mobxAction, computed, isArrayLike, observable, runInAction } from 'mobx';\nimport omit from 'lodash/omit';\nimport isNumber from 'lodash/isNumber';\nimport isString from 'lodash/isString';\nimport noop from 'lodash/noop';\nimport defaultTo from 'lodash/defaultTo';\nimport { AxiosInstance } from 'axios';\nimport Responsive from 'choerodon-ui/lib/responsive/Responsive';\nimport { getConfig, getProPrefixCls } from 'choerodon-ui/lib/configure';\nimport { pxToRem } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport isFunction from 'lodash/isFunction';\nimport isArray from 'lodash/isArray';\nimport axios from '../axios';\nimport autobind from '../_util/autobind';\nimport { FormField, FormFieldProps, getFieldsById } from '../field/FormField';\nimport FormContext from './FormContext';\nimport DataSetComponent, { DataSetComponentProps } from '../data-set/DataSetComponent';\nimport DataSet from '../data-set/DataSet';\nimport Record from '../data-set/Record';\nimport { LabelAlign, LabelLayout, ResponsiveKeys } from './enum';\nimport {\n  defaultColumns,\n  defaultLabelWidth,\n  FIELD_SUFFIX,\n  getProperty,\n  normalizeLabelWidth,\n  defaultExcludeUseColonTag,\n  findFirstInvalidElement,\n} from './utils';\nimport FormVirtualGroup from './FormVirtualGroup';\n\n/**\n * 表单name生成器\n */\nconst NameGen: IterableIterator<string> = (function* (start: number) {\n  while (true) {\n    start += 1;\n    yield `form-${start}`;\n  }\n})(0);\n\nexport type LabelWidth = number | number[];\n\nexport type LabelWidthType = LabelWidth | { [key in ResponsiveKeys]: LabelWidth };\nexport type LabelAlignType = LabelAlign | { [key in ResponsiveKeys]: LabelAlign };\nexport type LabelLayoutType = LabelLayout | { [key in ResponsiveKeys]: LabelLayout };\nexport type ColumnsType = number | { [key in ResponsiveKeys]: number };\nexport type SeparateSpacing = { width: number, height: number }\n\nexport interface FormProps extends DataSetComponentProps {\n  /**\n   * 表单提交请求地址\n   */\n  action?: string;\n  /**\n   * 表单提交的HTTP Method\n   * 可选值：POST | GET\n   * @default POST\n   */\n  method?: string;\n  /**\n   * 表单提交的目标\n   * 当表单设置了设置target且没有dataSet时作浏览器默认提交，否则作Ajax提交\n   */\n  target?: string;\n  /**\n   * Ajax提交时的参数回调\n   */\n  processParams?: (e: FormEvent<any>) => any;\n  /**\n   * 是否使用冒号\n   */\n  useColon?: boolean,\n  /**\n   * 不使用冒号的列表\n   */\n  excludeUseColonTagList?: string[],\n  /**\n   * 内部控件的标签的宽度\n   */\n  labelWidth?: LabelWidthType;\n  /**\n   * 标签文字对齐方式\n   * 可选值： 'left' | 'center' | 'right'\n   * @default right;\n   */\n  labelAlign?: LabelAlignType;\n  /**\n   * 标签位置\n   * 可选值： 'horizontal' | 'vertical' | 'placeholder' | 'none'\n   */\n  labelLayout?: LabelLayoutType;\n  /**\n   * 表单列数\n   */\n  columns?: ColumnsType;\n  /**\n   * 显示原始值\n   */\n  pristine?: boolean;\n  /**\n   * 表单头，若提供则同时显示表单头和表单头下方的分隔线\n   *\n   * @type {string} 暂定为string方便写样式\n   * @memberof FormProps\n   */\n  header?: string;\n  /**\n   * 对照record在DataSet中的index\n   * @default dataSet.currentIndex\n   */\n  dataIndex?: number;\n  /**\n   * 对照record\n   * 优先级高于dataSet和dataIndex\n   */\n  record?: Record;\n  /**\n   * 提交回调\n   */\n  onSubmit?: FormEventHandler<any>;\n  /**\n   * 重置回调\n   */\n  onReset?: FormEventHandler<any>;\n  /**\n   * 提交成功回调\n   */\n  onSuccess?: (resp: any) => void;\n  /**\n   * 提交失败回调\n   */\n  onError?: (error: Error) => void;\n  /**\n   * 切分单元格间隔，当label布局为默认值horizontal时候使用padding修改单元格横向间距可能需要结合labelwidth效果会更好\n   */\n  separateSpacing?: SeparateSpacing;\n  axios?: AxiosInstance;\n}\n\nconst labelWidthPropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.arrayOf(PropTypes.number),\n]);\nconst labelAlignPropTypes = PropTypes.oneOf([LabelAlign.left, LabelAlign.center, LabelAlign.right]);\nconst labelLayoutPropTypes = PropTypes.oneOf([\n  LabelLayout.horizontal,\n  LabelLayout.vertical,\n  LabelLayout.placeholder,\n  LabelLayout.float,\n]);\n\n@observer\nexport default class Form extends DataSetComponent<FormProps> {\n  static displayName = 'Form';\n\n  static FormVirtualGroup = FormVirtualGroup;\n\n  static propTypes = {\n    /**\n     * 表单提交请求地址\n     */\n    action: PropTypes.string,\n    /**\n     * 表单提交的HTTP Method\n     * 可选值：POST | GET\n     * @default POST\n     */\n    method: PropTypes.string,\n    /**\n     * 表单提交的目标\n     * 当表单设置了设置target且没有dataSet时作浏览器默认提交，否则作Ajax提交\n     */\n    target: PropTypes.string,\n    /**\n     * Ajax提交时的参数回调\n     */\n    processParams: PropTypes.func,\n    /**\n     * 内部控件的标签的宽度\n     */\n    labelWidth: PropTypes.oneOfType([\n      labelWidthPropTypes,\n      PropTypes.shape({\n        [ResponsiveKeys.xs]: labelWidthPropTypes,\n        [ResponsiveKeys.sm]: labelWidthPropTypes,\n        [ResponsiveKeys.md]: labelWidthPropTypes,\n        [ResponsiveKeys.lg]: labelWidthPropTypes,\n        [ResponsiveKeys.xl]: labelWidthPropTypes,\n        [ResponsiveKeys.xxl]: labelWidthPropTypes,\n      }),\n    ]),\n    useColon: PropTypes.bool,\n    excludeUseColonTagList: PropTypes.array,\n    /**\n     * 标签文字对齐方式\n     * 可选值： 'left' | 'center' | 'right'\n     */\n    labelAlign: PropTypes.oneOfType([\n      labelAlignPropTypes,\n      PropTypes.shape({\n        [ResponsiveKeys.xs]: labelAlignPropTypes,\n        [ResponsiveKeys.sm]: labelAlignPropTypes,\n        [ResponsiveKeys.md]: labelAlignPropTypes,\n        [ResponsiveKeys.lg]: labelAlignPropTypes,\n        [ResponsiveKeys.xl]: labelAlignPropTypes,\n        [ResponsiveKeys.xxl]: labelAlignPropTypes,\n      }),\n    ]),\n    /**\n     * 标签位置\n     * 可选值： 'horizontal' | 'vertical' | 'placeholder' | 'float' | 'none'\n     */\n    labelLayout: PropTypes.oneOfType([\n      labelLayoutPropTypes,\n      PropTypes.shape({\n        [ResponsiveKeys.xs]: labelLayoutPropTypes,\n        [ResponsiveKeys.sm]: labelLayoutPropTypes,\n        [ResponsiveKeys.md]: labelLayoutPropTypes,\n        [ResponsiveKeys.lg]: labelLayoutPropTypes,\n        [ResponsiveKeys.xl]: labelLayoutPropTypes,\n        [ResponsiveKeys.xxl]: labelLayoutPropTypes,\n      }),\n    ]),\n    /**\n     * 表单列数\n     */\n    columns: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.shape({\n        [ResponsiveKeys.xs]: PropTypes.number,\n        [ResponsiveKeys.sm]: PropTypes.number,\n        [ResponsiveKeys.md]: PropTypes.number,\n        [ResponsiveKeys.lg]: PropTypes.number,\n        [ResponsiveKeys.xl]: PropTypes.number,\n        [ResponsiveKeys.xxl]: PropTypes.number,\n      }),\n    ]),\n    pristine: PropTypes.bool,\n    /**\n     * 表单头\n     */\n    header: PropTypes.string,\n    /**\n     * 提交回调\n     */\n    onSubmit: PropTypes.func,\n    /**\n     * 重置回调\n     */\n    onReset: PropTypes.func,\n    /**\n     * 提交成功回调\n     */\n    onSuccess: PropTypes.func,\n    /**\n     * 提交失败回调\n     */\n    onError: PropTypes.func,\n    separateSpacing: PropTypes.object,\n    ...DataSetComponent.propTypes,\n  };\n\n  static defaultProps = {\n    suffixCls: 'form',\n    columns: defaultColumns,\n    labelWidth: defaultLabelWidth,\n  };\n\n  static contextType = FormContext;\n\n  fields: FormField<FormFieldProps>[] = [];\n\n  @observable responsiveItems: any[];\n\n  name = NameGen.next().value;\n\n  constructor(props, context) {\n    super(props, context);\n    runInAction(() => {\n      this.responsiveItems = [];\n    });\n  }\n\n  @computed\n  get axios(): AxiosInstance {\n    return this.observableProps.axios || getConfig('axios') || axios;\n  }\n\n\n  @computed\n  get dataSet(): DataSet | undefined {\n    const { record } = this;\n    if (record) {\n      return record.dataSet;\n    }\n    return this.observableProps.dataSet;\n  }\n\n  @computed\n  get record(): Record | undefined {\n    const { record, dataSet, dataIndex } = this.observableProps;\n    if (record) {\n      return record;\n    }\n    if (dataSet) {\n      if (isNumber(dataIndex)) {\n        return dataSet.get(dataIndex);\n      }\n      return dataSet.current;\n    }\n    return undefined;\n  }\n\n  @computed\n  get dataIndex(): number | undefined {\n    return this.observableProps.dataIndex;\n  }\n\n  @computed\n  get useColon(): boolean {\n    const { useColon } = this.observableProps;\n\n    if (useColon !== undefined) {\n      return useColon;\n    }\n\n    const configUseColon = getConfig('useColon');\n    if (configUseColon !== undefined) {\n      return configUseColon;\n    }\n\n    return false;\n  }\n\n  @computed\n  get excludeUseColonTagList(): string[] {\n    const { excludeUseColonTagList } = this.observableProps;\n\n    if (excludeUseColonTagList !== undefined) {\n      return excludeUseColonTagList;\n    }\n\n    const configExcludeUseColonTagList = getConfig('excludeUseColonTagList');\n    if (configExcludeUseColonTagList !== undefined) {\n      return configExcludeUseColonTagList;\n    }\n\n    return defaultExcludeUseColonTag;\n  }\n\n  @computed\n  get columns(): number {\n    const { columns } = this.observableProps;\n    if (isNumber(columns)) {\n      return columns;\n    }\n    if (columns) {\n      const responsiveColumns = this.responsiveItems[0];\n      if (responsiveColumns) {\n        return responsiveColumns;\n      }\n    }\n    return defaultColumns;\n  }\n\n  @computed\n  get labelWidth(): LabelWidth {\n    const { labelWidth } = this.observableProps;\n    if (isNumber(labelWidth) || isArrayLike(labelWidth)) {\n      return labelWidth;\n    }\n    if (labelWidth) {\n      const responsiveWidth = this.responsiveItems[1];\n      if (responsiveWidth !== undefined) {\n        return responsiveWidth;\n      }\n    }\n    return defaultLabelWidth;\n  }\n\n  @computed\n  get labelAlign(): LabelAlign {\n    const { labelAlign } = this.observableProps;\n    const defaultLabelAlign =\n      this.labelLayout === LabelLayout.vertical ? LabelAlign.left : LabelAlign.right;\n    if (isString(labelAlign)) {\n      return labelAlign as LabelAlign;\n    }\n    if (labelAlign) {\n      const responsiveAlign = this.responsiveItems[2];\n      if (responsiveAlign) {\n        return responsiveAlign;\n      }\n    }\n    return defaultLabelAlign;\n  }\n\n  @computed\n  get labelLayout(): LabelLayout {\n    const defaultLabelLayout = (getConfig('labelLayout') as LabelLayout) || LabelLayout.horizontal;\n    const { labelLayout } = this.observableProps;\n    if (isString(labelLayout)) {\n      return labelLayout as LabelLayout;\n    }\n    if (labelLayout) {\n      const responsiveLabelLayout = this.responsiveItems[3];\n      if (responsiveLabelLayout) {\n        return responsiveLabelLayout;\n      }\n    }\n    return defaultLabelLayout;\n  }\n\n  @computed\n  get pristine(): boolean {\n    return this.observableProps.pristine;\n  }\n\n  @computed\n  get separateSpacing(): SeparateSpacing | undefined {\n    const { separateSpacing } = this.props;\n    if (separateSpacing && (separateSpacing.width || separateSpacing.height)) {\n      const separateSpacingCopy = { width: 0, height: 0 }\n      if (separateSpacing.width) {\n        separateSpacingCopy.width = separateSpacing.width\n      }\n      if (separateSpacing.height) {\n        separateSpacingCopy.height = separateSpacing.height\n      }\n      return separateSpacingCopy\n    }\n    return undefined;\n  }\n\n  isDisabled() {\n    return super.isDisabled() || this.context.disabled;\n  }\n\n  getObservableProps(props, context) {\n    return {\n      dataSet: 'dataSet' in props ? props.dataSet : context.dataSet,\n      record: 'record' in props ? props.record : context.record,\n      dataIndex: defaultTo(props.dataIndex, context.dataIndex),\n      labelLayout: 'labelLayout' in props ? props.labelLayout : context.labelLayout,\n      labelAlign: 'labelAlign' in props ? props.labelAlign : context.labelAlign,\n      labelWidth: defaultTo(props.labelWidth, context.labelWidth),\n      pristine: 'pristine' in props ? props.pristine : context.pristine,\n      columns: props.columns,\n      useColon: props.useColon,\n      excludeUseColonTagList: props.excludeUseColonTagList,\n    };\n  }\n\n  getOtherProps() {\n    const otherProps = omit(super.getOtherProps(), [\n      'record',\n      'dataIndex',\n      'onSuccess',\n      'onError',\n      'processParams',\n      'labelWidth',\n      'labelAlign',\n      'labelLayout',\n      'columns',\n      'pristine',\n      'axios',\n      'useColon',\n      'excludeUseColonTagList',\n      'separateSpacing',\n    ]);\n    otherProps.onSubmit = this.handleSubmit;\n    otherProps.onReset = this.handleReset;\n    if (!otherProps.name) {\n      otherProps.name = this.name;\n    }\n    return otherProps;\n  }\n\n  getHeader(): ReactNode {\n    const {\n      props: { header },\n      prefixCls,\n    } = this;\n    if (header) {\n      return (\n        <div key=\"form-header\" className={`${prefixCls}-header`}>\n          {header}\n        </div>\n      );\n    }\n  }\n\n  getClassName(...props): string | undefined {\n    const { prefixCls, labelLayout } = this;\n    return super.getClassName({\n      ...props,\n      [`${prefixCls}-float-label`]: labelLayout === LabelLayout.float,\n    });\n  }\n\n  componentWillMount() {\n    this.processDataSetListener(true);\n  }\n\n\n  componentWillUnmount() {\n    this.processDataSetListener(false);\n  }\n\n  processDataSetListener(flag: boolean) {\n    const { dataSet } = this;\n    if (dataSet) {\n      const handler = flag ? dataSet.addEventListener : dataSet.removeEventListener;\n      handler.call(dataSet, 'validate', this.handleDataSetValidate);\n    }\n  }\n\n  // 处理校验失败定位\n  @autobind\n  async handleDataSetValidate({ result }) {\n    if (!await result) {\n      const item = this.element ? findFirstInvalidElement(this.element) : null;\n      if (item) {\n        item.focus();\n      }\n    }\n  }\n\n  rasterizedChildren() {\n    const {\n      dataSet,\n      record,\n      columns,\n      labelLayout,\n      labelAlign,\n      useColon,\n      excludeUseColonTagList,\n      props: { children },\n    } = this;\n    const prefixCls = getProPrefixCls(FIELD_SUFFIX);\n    const labelWidth = normalizeLabelWidth(this.labelWidth, columns);\n    const rows: ReactElement<any>[] = [];\n    let cols: ReactElement<any>[] = [];\n    let rowIndex = 0;\n    let colIndex = 0;\n    const matrix: (boolean | undefined)[][] = [[]];\n    let noLabel = true;\n    const childrenArray: ReactElement<any>[] = [];\n    const separateSpacingWidth: number = this.separateSpacing ? this.separateSpacing.width / 2 : 0;\n    Children.forEach(children, child => {\n      if (isValidElement(child)) {\n        const setChild = (arr, outChild, groupProps = {}) => {\n          if (\n            noLabel === true &&\n            labelLayout === LabelLayout.horizontal &&\n            getProperty(outChild.props, 'label', dataSet, record)\n          ) {\n            noLabel = false;\n          }\n          if (!outChild?.type) {\n            return;\n          }\n          if (outChild?.type && (outChild.type as any).displayName === 'FormVirtualGroup') {\n            if (!outChild.props.children) {\n              return;\n            }\n            if (isArray(outChild.props.children)) {\n              outChild.props.children.forEach((c) => {\n                setChild(arr, c, omit(outChild.props, ['children']));\n              });\n            } else if (outChild?.type && (outChild.type as any).displayName === 'FormVirtualGroup') {\n              setChild(arr, outChild.props.children, omit(outChild.props, ['children']));\n            } else {\n              arr.push(cloneElement(outChild.props.children, {\n                ...groupProps,\n                ...outChild.props.children.props,\n              }));\n            }\n          } else {\n            arr.push(cloneElement(outChild, {\n              ...groupProps,\n              ...outChild.props,\n            }));\n          }\n        };\n        setChild(childrenArray, child);\n      }\n    });\n\n    function completeLine() {\n      if (cols.length) {\n        rows.push((<tr key={`row-${rowIndex}`}>{cols}</tr>));\n        cols = [];\n      }\n      rowIndex++;\n      colIndex = 0;\n      matrix[rowIndex] = matrix[rowIndex] || [];\n    }\n\n    for (let index = 0, len = childrenArray.length; index < len;) {\n      const { props, key, type } = childrenArray[index];\n\n      let TagName = type;\n      if (isFunction(type)) {\n        TagName = (type as any).displayName;\n      }\n\n      const label = getProperty(props, 'label', dataSet, record);\n      const fieldLabelWidth = getProperty(props, 'labelWidth', dataSet, record);\n      const required = getProperty(props, 'required', dataSet, record);\n      const readOnly = getProperty(props, 'readOnly', dataSet, record);\n      const {\n        rowSpan = 1,\n        colSpan = 1,\n        newLine,\n        className,\n        placeholder,\n        ...otherProps\n      } = props as any;\n      let newColSpan = colSpan;\n      const currentRow = matrix[rowIndex];\n      if (newLine) {\n        if (colIndex !== 0) {\n          completeLine();\n          continue;\n        }\n      }\n      while (currentRow[colIndex]) {\n        colIndex++;\n      }\n      if (colIndex >= columns) {\n        completeLine();\n        continue;\n      }\n      if (newColSpan + colIndex > columns) {\n        newColSpan = columns - colIndex;\n      }\n      for (let i = colIndex, k = colIndex + newColSpan; i < k; i++) {\n        if (currentRow[i]) {\n          newColSpan = i - colIndex;\n          break;\n        }\n      }\n      for (let i = rowIndex; i < rowSpan + rowIndex; i++) {\n        for (let j = colIndex, k = newColSpan + colIndex; j < k; j++) {\n          if (!matrix[i]) {\n            matrix[i] = [];\n          }\n          matrix[i][j] = true;\n        }\n      }\n      const isOutput =\n        labelLayout === LabelLayout.horizontal && (type as any).displayName === 'Output';\n      const labelClassName = classNames(`${prefixCls}-label`, `${prefixCls}-label-${labelAlign}`, {\n        [`${prefixCls}-required`]: required,\n        [`${prefixCls}-readonly`]: readOnly,\n        [`${prefixCls}-label-vertical`]: labelLayout === LabelLayout.vertical,\n        [`${prefixCls}-label-output`]: isOutput,\n        [`${prefixCls}-label-useColon`]: useColon && !excludeUseColonTagList.find(v => v === TagName),\n      });\n      const wrapperClassName = classNames(`${prefixCls}-wrapper`, {\n        [`${prefixCls}-output`]: isOutput,\n      });\n      if (!noLabel) {\n        if (!isNaN(fieldLabelWidth)) {\n          labelWidth[colIndex] = Math.max(labelWidth[colIndex], fieldLabelWidth);\n        }\n        cols.push(\n          <td\n            key={`row-${rowIndex}-col-${colIndex}-label`}\n            className={labelClassName}\n            rowSpan={rowSpan}\n            style={this.labelLayout === LabelLayout.horizontal\n              && separateSpacingWidth\n              ? { paddingLeft: pxToRem(separateSpacingWidth + 5) } : undefined}\n          >\n            <label title={isString(label) ? label : ''}>\n              <span>\n                {label}\n              </span>\n            </label>\n          </td>,\n        );\n      }\n      const fieldElementProps: any = {\n        key,\n        className: classNames(prefixCls, className),\n        placeholder: label && labelLayout === LabelLayout.placeholder ? label : placeholder,\n        ...otherProps,\n      };\n      if (!isString(type)) {\n        fieldElementProps.rowIndex = rowIndex;\n        fieldElementProps.colIndex = colIndex;\n      }\n      cols.push(\n        <td\n          key={`row-${rowIndex}-col-${colIndex}-field`}\n          colSpan={noLabel ? newColSpan : newColSpan * 2 - 1}\n          rowSpan={rowSpan}\n          style={this.labelLayout === LabelLayout.horizontal\n            && separateSpacingWidth\n            ? { paddingRight: pxToRem(separateSpacingWidth + 5) } : undefined}\n        >\n          {labelLayout === LabelLayout.vertical && (\n            <label className={labelClassName}>{label}</label>\n          )}\n          <div className={wrapperClassName}>{createElement(type, fieldElementProps)}</div>\n        </td>,\n      );\n      if (index === len - 1) {\n        completeLine();\n      } else {\n        colIndex++;\n      }\n      index++;\n    }\n    cols = [];\n    // 优化当使用separateSoacing label宽度太窄问题\n    const labelWidthProcess = (widthInner: number) => {\n      if (isNumber(widthInner)) {\n        if (this.labelLayout === LabelLayout.horizontal) {\n          return separateSpacingWidth + widthInner\n        }\n        return widthInner\n      }\n      return separateSpacingWidth + defaultLabelWidth\n    }\n    if (!noLabel) {\n      for (let i = 0; i < columns; i++) {\n        cols.push(\n          <col key={`label-${i}`} style={{ width: pxToRem(labelWidthProcess(labelWidth[i % columns])) }} />,\n          <col key={`wrapper-${i}`} />,\n        );\n      }\n    } else {\n      for (let i = 0; i < columns; i++) {\n        cols.push(\n          <col key={`wrapper-${i}`} />,\n        );\n      }\n    }\n\n    let tableStyle: CSSProperties | undefined;\n\n    if (this.separateSpacing) {\n      if (this.labelLayout === LabelLayout.horizontal) {\n        tableStyle = {\n          borderCollapse: 'separate',\n          borderSpacing: `0rem ${pxToRem(this.separateSpacing.height)}`,\n        }\n      } else {\n        tableStyle = {\n          borderCollapse: 'separate',\n          borderSpacing: `${pxToRem(this.separateSpacing.width)} ${pxToRem(this.separateSpacing.height)}`,\n        }\n      }\n    }\n\n\n    return [\n      this.getHeader(),\n      (<table style={tableStyle} key=\"form-body\">\n        {cols.length ? <colgroup>{cols}</colgroup> : undefined}\n        <tbody>{rows}</tbody>\n      </table>),\n    ];\n  }\n\n  render() {\n    const {\n      labelWidth,\n      labelAlign,\n      labelLayout,\n      pristine,\n      dataSet,\n      record,\n      dataIndex,\n      observableProps,\n    } = this;\n    const { formNode } = this.context;\n    const value = {\n      formNode: formNode || this,\n      dataSet,\n      dataIndex,\n      record,\n      labelWidth,\n      labelAlign,\n      labelLayout,\n      pristine,\n      disabled: this.isDisabled(),\n    };\n    let children: ReactNode = this.rasterizedChildren();\n    if (!formNode) {\n      children = (\n        <form {...this.getMergedProps()} noValidate>\n          {children}\n        </form>\n      );\n    }\n    return (\n      <Responsive\n        items={[\n          observableProps.columns,\n          observableProps.labelWidth,\n          observableProps.labelAlign,\n          observableProps.labelLayout,\n        ]}\n        onChange={this.handleResponsive}\n      >\n        <FormContext.Provider value={value}>{children}</FormContext.Provider>\n      </Responsive>\n    );\n  }\n\n  @autobind\n  @mobxAction\n  handleResponsive(items) {\n    this.responsiveItems = items;\n  }\n\n  @autobind\n  async handleSubmit(e) {\n    e.preventDefault();\n    e.persist();\n    if (await this.checkValidity()) {\n      const {\n        target,\n        action,\n        dataSet,\n        method,\n        processParams = noop,\n        onSuccess = noop,\n        onError = noop,\n        onSubmit = noop,\n      } = this.props;\n      onSubmit(e);\n      try {\n        if (dataSet) {\n          onSuccess(await dataSet.submit());\n        } else if (action) {\n          if (target && this.element) {\n            this.element.submit();\n          } else {\n            onSuccess(await this.axios[method || 'get'](action, processParams(e)));\n          }\n        }\n      } catch (error) {\n        onError(error);\n      }\n    }\n  }\n\n  @autobind\n  handleReset(e) {\n    const { onReset = noop } = this.props;\n    const { record } = this;\n    onReset(e);\n    if (!e.isDefaultPrevented()) {\n      if (record) {\n        record.reset();\n      } else {\n        this.getFields().forEach(field => field.reset());\n      }\n    }\n  }\n\n  checkValidity() {\n    const { dataSet } = this;\n    if (dataSet) {\n      if (!dataSet.length) {\n        dataSet.create();\n      }\n      return dataSet.validate();\n    }\n    return Promise.all(this.getFields().map(field => field.checkValidity())).then(results =>\n      results.every(result => result),\n    );\n  }\n\n  getFields(): FormField<FormFieldProps>[] {\n    const { id } = this.props;\n    if (id) {\n      return ([] as FormField<FormFieldProps>[]).concat(this.fields, getFieldsById(id));\n    }\n    return this.fields;\n  }\n\n  getField(name: string): FormField<FormFieldProps> | undefined {\n    return this.getFields().find(field => field.props.name === name);\n  }\n\n  addField(field: FormField<FormFieldProps>) {\n    this.fields.push(field);\n  }\n\n  removeField(field) {\n    const index = this.fields.indexOf(field);\n    if (index !== -1) {\n      this.fields.splice(index, 1);\n    }\n  }\n}\n"]}