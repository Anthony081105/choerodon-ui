654d6ffc9504b36a4a9e77f0f4a308f3
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _moment = _interopRequireDefault(require("moment"));

var _yearPicker = _interopRequireDefault(require("../../year-picker"));

var _focusTest = _interopRequireDefault(require("../../../tests/shared/focusTest"));

var _triggerPopTest = _interopRequireDefault(require("../../../tests/shared/triggerPopTest"));

var _utils = require("./utils");

describe('years-picker-pro', function () {
  (0, _focusTest["default"])(_yearPicker["default"]);
  (0, _triggerPopTest["default"])(_yearPicker["default"]);
  beforeEach(function () {
    jest.useFakeTimers();
  });
  afterEach(function () {
    jest.useRealTimers();
  });
  it('the year will be controlled by the value', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_yearPicker["default"], {
      value: (0, _moment["default"])('2020-02-20')
    }));
    expect(wrapper.find('input').at(0).prop('value')).toBe('2020');
    wrapper.setProps({
      value: (0, _moment["default"])('2021-02-20')
    });
    wrapper.update();
    expect(wrapper.find('input').at(0).prop('value')).toBe('2021');
  });
  it('the keyDown event keyCode should render correctly', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_yearPicker["default"], {
      mode: "year"
    }));
    wrapper.find('input').simulate('click');
    jest.runAllTimers();
    wrapper.update();
    (0, _utils.simulateCode)(wrapper, 39);
    (0, _utils.simulateCode)(wrapper, 37);
    (0, _utils.simulateCode)(wrapper, 40);
    (0, _utils.simulateCode)(wrapper, 38);
    (0, _utils.simulateCode)(wrapper, 35);
    (0, _utils.simulateCode)(wrapper, 36);
    (0, _utils.simulateCode)(wrapper, 33);
    (0, _utils.simulateCode)(wrapper, 34);
    (0, _utils.simulateCode)(wrapper, 13);
    (0, _utils.simulateCode)(wrapper, 10);
    wrapper.update();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInllYXJzLnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJZZWFyc1BpY2tlciIsImJlZm9yZUVhY2giLCJqZXN0IiwidXNlRmFrZVRpbWVycyIsImFmdGVyRWFjaCIsInVzZVJlYWxUaW1lcnMiLCJpdCIsIndyYXBwZXIiLCJleHBlY3QiLCJmaW5kIiwiYXQiLCJwcm9wIiwidG9CZSIsInNldFByb3BzIiwidmFsdWUiLCJ1cGRhdGUiLCJzaW11bGF0ZSIsInJ1bkFsbFRpbWVycyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBQSxRQUFRLENBQUMsa0JBQUQsRUFBcUIsWUFBTTtBQUNqQyw2QkFBVUMsc0JBQVY7QUFDQSxrQ0FBZUEsc0JBQWY7QUFFQUMsRUFBQUEsVUFBVSxDQUFDLFlBQU07QUFDZkMsSUFBQUEsSUFBSSxDQUFDQyxhQUFMO0FBQ0QsR0FGUyxDQUFWO0FBSUFDLEVBQUFBLFNBQVMsQ0FBQyxZQUFNO0FBQ2RGLElBQUFBLElBQUksQ0FBQ0csYUFBTDtBQUNELEdBRlEsQ0FBVDtBQUlBQyxFQUFBQSxFQUFFLENBQUMsMENBQUQsRUFBNkMsWUFBTTtBQUNuRCxRQUFNQyxPQUFPLEdBQUcsbUJBQU0sZ0NBQUMsc0JBQUQ7QUFBYSxNQUFBLEtBQUssRUFBRSx3QkFBTyxZQUFQO0FBQXBCLE1BQU4sQ0FBaEI7QUFDQUMsSUFBQUEsTUFBTSxDQUNKRCxPQUFPLENBQ0pFLElBREgsQ0FDUSxPQURSLEVBRUdDLEVBRkgsQ0FFTSxDQUZOLEVBR0dDLElBSEgsQ0FHUSxPQUhSLENBREksQ0FBTixDQUtFQyxJQUxGLENBS08sTUFMUDtBQU1BTCxJQUFBQSxPQUFPLENBQUNNLFFBQVIsQ0FBaUI7QUFBRUMsTUFBQUEsS0FBSyxFQUFFLHdCQUFPLFlBQVA7QUFBVCxLQUFqQjtBQUNBUCxJQUFBQSxPQUFPLENBQUNRLE1BQVI7QUFDQVAsSUFBQUEsTUFBTSxDQUNKRCxPQUFPLENBQ0pFLElBREgsQ0FDUSxPQURSLEVBRUdDLEVBRkgsQ0FFTSxDQUZOLEVBR0dDLElBSEgsQ0FHUSxPQUhSLENBREksQ0FBTixDQUtFQyxJQUxGLENBS08sTUFMUDtBQU1ELEdBaEJDLENBQUY7QUFrQkFOLEVBQUFBLEVBQUUsQ0FBQyxtREFBRCxFQUFzRCxZQUFNO0FBQzVELFFBQU1DLE9BQU8sR0FBRyxtQkFBTSxnQ0FBQyxzQkFBRDtBQUFhLE1BQUEsSUFBSSxFQUFDO0FBQWxCLE1BQU4sQ0FBaEI7QUFDQUEsSUFBQUEsT0FBTyxDQUFDRSxJQUFSLENBQWEsT0FBYixFQUFzQk8sUUFBdEIsQ0FBK0IsT0FBL0I7QUFDQWQsSUFBQUEsSUFBSSxDQUFDZSxZQUFMO0FBQ0FWLElBQUFBLE9BQU8sQ0FBQ1EsTUFBUjtBQUNBLDZCQUFhUixPQUFiLEVBQXNCLEVBQXRCO0FBQ0EsNkJBQWFBLE9BQWIsRUFBc0IsRUFBdEI7QUFDQSw2QkFBYUEsT0FBYixFQUFzQixFQUF0QjtBQUNBLDZCQUFhQSxPQUFiLEVBQXNCLEVBQXRCO0FBQ0EsNkJBQWFBLE9BQWIsRUFBc0IsRUFBdEI7QUFDQSw2QkFBYUEsT0FBYixFQUFzQixFQUF0QjtBQUNBLDZCQUFhQSxPQUFiLEVBQXNCLEVBQXRCO0FBQ0EsNkJBQWFBLE9BQWIsRUFBc0IsRUFBdEI7QUFDQSw2QkFBYUEsT0FBYixFQUFzQixFQUF0QjtBQUNBLDZCQUFhQSxPQUFiLEVBQXNCLEVBQXRCO0FBQ0FBLElBQUFBLE9BQU8sQ0FBQ1EsTUFBUjtBQUNELEdBaEJDLENBQUY7QUFpQkQsQ0EvQ08sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtb3VudCB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgWWVhcnNQaWNrZXIgZnJvbSAnLi4vLi4veWVhci1waWNrZXInO1xuaW1wb3J0IGZvY3VzVGVzdCBmcm9tICcuLi8uLi8uLi90ZXN0cy9zaGFyZWQvZm9jdXNUZXN0JztcbmltcG9ydCB0cmlnZ2VyUG9wVGVzdCBmcm9tICcuLi8uLi8uLi90ZXN0cy9zaGFyZWQvdHJpZ2dlclBvcFRlc3QnO1xuaW1wb3J0IHsgc2ltdWxhdGVDb2RlIH0gZnJvbSAnLi91dGlscyc7XG5cbmRlc2NyaWJlKCd5ZWFycy1waWNrZXItcHJvJywgKCkgPT4ge1xuICBmb2N1c1Rlc3QoWWVhcnNQaWNrZXIpO1xuICB0cmlnZ2VyUG9wVGVzdChZZWFyc1BpY2tlcik7XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgamVzdC51c2VGYWtlVGltZXJzKCk7XG4gIH0pO1xuXG4gIGFmdGVyRWFjaCgoKSA9PiB7XG4gICAgamVzdC51c2VSZWFsVGltZXJzKCk7XG4gIH0pO1xuXG4gIGl0KCd0aGUgeWVhciB3aWxsIGJlIGNvbnRyb2xsZWQgYnkgdGhlIHZhbHVlJywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudCg8WWVhcnNQaWNrZXIgdmFsdWU9e21vbWVudCgnMjAyMC0wMi0yMCcpfSAvPik7XG4gICAgZXhwZWN0KFxuICAgICAgd3JhcHBlclxuICAgICAgICAuZmluZCgnaW5wdXQnKVxuICAgICAgICAuYXQoMClcbiAgICAgICAgLnByb3AoJ3ZhbHVlJyksXG4gICAgKS50b0JlKCcyMDIwJyk7XG4gICAgd3JhcHBlci5zZXRQcm9wcyh7IHZhbHVlOiBtb21lbnQoJzIwMjEtMDItMjAnKSB9KTtcbiAgICB3cmFwcGVyLnVwZGF0ZSgpO1xuICAgIGV4cGVjdChcbiAgICAgIHdyYXBwZXJcbiAgICAgICAgLmZpbmQoJ2lucHV0JylcbiAgICAgICAgLmF0KDApXG4gICAgICAgIC5wcm9wKCd2YWx1ZScpLFxuICAgICkudG9CZSgnMjAyMScpO1xuICB9KTtcblxuICBpdCgndGhlIGtleURvd24gZXZlbnQga2V5Q29kZSBzaG91bGQgcmVuZGVyIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gbW91bnQoPFllYXJzUGlja2VyIG1vZGU9XCJ5ZWFyXCIgLz4pO1xuICAgIHdyYXBwZXIuZmluZCgnaW5wdXQnKS5zaW11bGF0ZSgnY2xpY2snKTtcbiAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgIHdyYXBwZXIudXBkYXRlKCk7XG4gICAgc2ltdWxhdGVDb2RlKHdyYXBwZXIsIDM5KTtcbiAgICBzaW11bGF0ZUNvZGUod3JhcHBlciwgMzcpO1xuICAgIHNpbXVsYXRlQ29kZSh3cmFwcGVyLCA0MCk7XG4gICAgc2ltdWxhdGVDb2RlKHdyYXBwZXIsIDM4KTtcbiAgICBzaW11bGF0ZUNvZGUod3JhcHBlciwgMzUpO1xuICAgIHNpbXVsYXRlQ29kZSh3cmFwcGVyLCAzNik7XG4gICAgc2ltdWxhdGVDb2RlKHdyYXBwZXIsIDMzKTtcbiAgICBzaW11bGF0ZUNvZGUod3JhcHBlciwgMzQpO1xuICAgIHNpbXVsYXRlQ29kZSh3cmFwcGVyLCAxMyk7XG4gICAgc2ltdWxhdGVDb2RlKHdyYXBwZXIsIDEwKTtcbiAgICB3cmFwcGVyLnVwZGF0ZSgpO1xuICB9KTtcbn0pO1xuIl19