67acd97230f30d0fa27ba2506e791d23
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _mock = require("./mock");

var _ = _interopRequireDefault(require(".."));

var props = {
  headers: {
    'Access-Control-Allow-Origin': '*'
  },
  action: 'http://upload.com',
  multiple: true,
  accept: ['.deb', '.txt', '.pdf', 'image/*'],
  uploadImmediately: false
};

var setupByMount = function setupByMount() {
  var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], props));
  return {
    wrapper: wrapper,
    props: props
  };
};

describe('Tree-pro', function () {
  beforeEach(function () {
    (0, _mock.setup)();
    jest.useFakeTimers();
  });
  afterEach(function () {
    (0, _mock.teardown)();
    jest.useRealTimers();
  });
  it('should have a Tooltip inside  ', function () {
    var _setupByMount = setupByMount(),
        wrapper = _setupByMount.wrapper;

    expect(wrapper.find('Tooltip').prop('title')).toBe('点击上传');
  });
  it('should have a Tooltip inside', function () {
    var props1 = {
      headers: {
        'Access-Control-Allow-Origin': '*'
      },
      action: 'http://upload.com/',
      multiple: true,
      accept: ['.deb', '.txt', '.pdf', 'image/*'],
      uploadImmediately: false
    };
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], props1));
    wrapper.find('.c7n-pro-btn-icon-only').first().simulate('click');
    expect(wrapper).toMatchSnapshot();
  });
  it('uplaod the file to the server', function () {
    var fileChange = jest.fn();
    global.URL.createObjectURL = jest.fn(function () {
      return 'details';
    });
    var file = new File(['foo'], 'foo.txt', {
      type: 'text/plain'
    });
    var props1 = {
      headers: {
        'Access-Control-Allow-Origin': '*'
      },
      action: 'http://upload.com/',
      multiple: true,
      accept: ['.deb', '.txt', '.pdf', 'image/*'],
      uploadImmediately: true,
      onFileChange: fileChange
    };
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], props1));
    wrapper.find('input').simulate('change', {
      target: {
        files: [file]
      }
    });
    expect(fileChange).toHaveBeenCalled();
  });
  it('return when targetItem is null', function () {
    var fileList = [{
      uid: 'file'
    }];
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], {
      type: "drag",
      fileList: fileList
    }, _react["default"].createElement("button", {
      type: "button"
    }, "upload"))).instance();
    expect(wrapper.handleSuccess('', '', {
      uid: 'fileItem'
    })).toBe(undefined);
    expect(wrapper.handleProgress('', {
      uid: 'fileItem'
    })).toBe(undefined);
    expect(wrapper.handleError('', '', '', {
      uid: 'fileItem'
    })).toBe(undefined);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRlc3QuanMiXSwibmFtZXMiOlsicHJvcHMiLCJoZWFkZXJzIiwiYWN0aW9uIiwibXVsdGlwbGUiLCJhY2NlcHQiLCJ1cGxvYWRJbW1lZGlhdGVseSIsInNldHVwQnlNb3VudCIsIndyYXBwZXIiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJqZXN0IiwidXNlRmFrZVRpbWVycyIsImFmdGVyRWFjaCIsInVzZVJlYWxUaW1lcnMiLCJpdCIsImV4cGVjdCIsImZpbmQiLCJwcm9wIiwidG9CZSIsInByb3BzMSIsImZpcnN0Iiwic2ltdWxhdGUiLCJ0b01hdGNoU25hcHNob3QiLCJmaWxlQ2hhbmdlIiwiZm4iLCJnbG9iYWwiLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJmaWxlIiwiRmlsZSIsInR5cGUiLCJvbkZpbGVDaGFuZ2UiLCJ0YXJnZXQiLCJmaWxlcyIsInRvSGF2ZUJlZW5DYWxsZWQiLCJmaWxlTGlzdCIsInVpZCIsImluc3RhbmNlIiwiaGFuZGxlU3VjY2VzcyIsInVuZGVmaW5lZCIsImhhbmRsZVByb2dyZXNzIiwiaGFuZGxlRXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUc7QUFDWkMsRUFBQUEsT0FBTyxFQUFFO0FBQ1AsbUNBQStCO0FBRHhCLEdBREc7QUFJWkMsRUFBQUEsTUFBTSxFQUFFLG1CQUpJO0FBS1pDLEVBQUFBLFFBQVEsRUFBRSxJQUxFO0FBTVpDLEVBQUFBLE1BQU0sRUFBRSxDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLE1BQWpCLEVBQXlCLFNBQXpCLENBTkk7QUFPWkMsRUFBQUEsaUJBQWlCLEVBQUU7QUFQUCxDQUFkOztBQVNBLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFlLEdBQU07QUFDekIsTUFBTUMsT0FBTyxHQUFHLG1CQUFNLGdDQUFDLFlBQUQsRUFBWVAsS0FBWixDQUFOLENBQWhCO0FBQ0EsU0FBTztBQUNMTyxJQUFBQSxPQUFP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QUM7QUFBRUMsTUFBQUEsR0FBRyxFQUFFO0FBQVAsS0FBRCxDQUFqQjtBQUNBLFFBQU03QixPQUFPLEdBQUcsbUJBQ2QsZ0NBQUMsWUFBRDtBQUFRLE1BQUEsSUFBSSxFQUFDLE1BQWI7QUFBb0IsTUFBQSxRQUFRLEVBQUU0QjtBQUE5QixPQUNFO0FBQVEsTUFBQSxJQUFJLEVBQUM7QUFBYixnQkFERixDQURjLEVBSWRFLFFBSmMsRUFBaEI7QUFLQXRCLElBQUFBLE1BQU0sQ0FBQ1IsT0FBTyxDQUFDK0IsYUFBUixDQUFzQixFQUF0QixFQUEwQixFQUExQixFQUE4QjtBQUFFRixNQUFBQSxHQUFHLEVBQUU7QUFBUCxLQUE5QixDQUFELENBQU4sQ0FBMkRsQixJQUEzRCxDQUFnRXFCLFNBQWhFO0FBQ0F4QixJQUFBQSxNQUFNLENBQUNSLE9BQU8sQ0FBQ2lDLGNBQVIsQ0FBdUIsRUFBdkIsRUFBMkI7QUFBRUosTUFBQUEsR0FBRyxFQUFFO0FBQVAsS0FBM0IsQ0FBRCxDQUFOLENBQXdEbEIsSUFBeEQsQ0FBNkRxQixTQUE3RDtBQUNBeEIsSUFBQUEsTUFBTSxDQUFDUixPQUFPLENBQUNrQyxXQUFSLENBQW9CLEVBQXBCLEVBQXdCLEVBQXhCLEVBQTRCLEVBQTVCLEVBQWdDO0FBQUVMLE1BQUFBLEdBQUcsRUFBRTtBQUFQLEtBQWhDLENBQUQsQ0FBTixDQUE2RGxCLElBQTdELENBQWtFcUIsU0FBbEU7QUFDRCxHQVZDLENBQUY7QUFXRCxDQXRFTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1vdW50IH0gZnJvbSAnZW56eW1lJztcbmltcG9ydCB7IHNldHVwLCB0ZWFyZG93biB9IGZyb20gJy4vbW9jayc7XG5pbXBvcnQgVXBsb2FkIGZyb20gJy4uJztcblxuY29uc3QgcHJvcHMgPSB7XG4gIGhlYWRlcnM6IHtcbiAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonLFxuICB9LFxuICBhY3Rpb246ICdodHRwOi8vdXBsb2FkLmNvbScsXG4gIG11bHRpcGxlOiB0cnVlLFxuICBhY2NlcHQ6IFsnLmRlYicsICcudHh0JywgJy5wZGYnLCAnaW1hZ2UvKiddLFxuICB1cGxvYWRJbW1lZGlhdGVseTogZmFsc2UsXG59O1xuY29uc3Qgc2V0dXBCeU1vdW50ID0gKCkgPT4ge1xuICBjb25zdCB3cmFwcGVyID0gbW91bnQoPFVwbG9hZCB7Li4ucHJvcHN9IC8+KTtcbiAgcmV0dXJuIHtcbiAgICB3cmFwcGVyLFxuICAgIHByb3BzLFxuICB9O1xufTtcblxuZGVzY3JpYmUoJ1RyZWUtcHJvJywgKCkgPT4ge1xuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBzZXR1cCgpO1xuICAgIGplc3QudXNlRmFrZVRpbWVycygpO1xuICB9KTtcblxuICBhZnRlckVhY2goKCkgPT4ge1xuICAgIHRlYXJkb3duKCk7XG4gICAgamVzdC51c2VSZWFsVGltZXJzKCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgaGF2ZSBhIFRvb2x0aXAgaW5zaWRlICAnLCAoKSA9PiB7XG4gICAgY29uc3QgeyB3cmFwcGVyIH0gPSBzZXR1cEJ5TW91bnQoKTtcbiAgICBleHBlY3Qod3JhcHBlci5maW5kKCdUb29sdGlwJykucHJvcCgndGl0bGUnKSkudG9CZSgn54K55Ye75LiK5LygJyk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgaGF2ZSBhIFRvb2x0aXAgaW5zaWRlJywgKCkgPT4ge1xuICAgIGNvbnN0IHByb3BzMSA9IHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6ICcqJyxcbiAgICAgIH0sXG4gICAgICBhY3Rpb246ICdodHRwOi8vdXBsb2FkLmNvbS8nLFxuICAgICAgbXVsdGlwbGU6IHRydWUsXG4gICAgICBhY2NlcHQ6IFsnLmRlYicsICcudHh0JywgJy5wZGYnLCAnaW1hZ2UvKiddLFxuICAgICAgdXBsb2FkSW1tZWRpYXRlbHk6IGZhbHNlLFxuICAgIH07XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KDxVcGxvYWQgey4uLnByb3BzMX0gLz4pO1xuICAgIHdyYXBwZXJcbiAgICAgIC5maW5kKCcuYzduLXByby1idG4taWNvbi1vbmx5JylcbiAgICAgIC5maXJzdCgpXG4gICAgICAuc2ltdWxhdGUoJ2NsaWNrJyk7XG4gICAgZXhwZWN0KHdyYXBwZXIpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuICB9KTtcblxuICBpdCgndXBsYW9kIHRoZSBmaWxlIHRvIHRoZSBzZXJ2ZXInLCAoKSA9PiB7XG4gICAgY29uc3QgZmlsZUNoYW5nZSA9IGplc3QuZm4oKTtcbiAgICBnbG9iYWwuVVJMLmNyZWF0ZU9iamVjdFVSTCA9IGplc3QuZm4oKCkgPT4gJ2RldGFpbHMnKTtcbiAgICBjb25zdCBmaWxlID0gbmV3IEZpbGUoWydmb28nXSwgJ2Zvby50eHQnLCB7XG4gICAgICB0eXBlOiAndGV4dC9wbGFpbicsXG4gICAgfSk7XG4gICAgY29uc3QgcHJvcHMxID0ge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonLFxuICAgICAgfSxcbiAgICAgIGFjdGlvbjogJ2h0dHA6Ly91cGxvYWQuY29tLycsXG4gICAgICBtdWx0aXBsZTogdHJ1ZSxcbiAgICAgIGFjY2VwdDogWycuZGViJywgJy50eHQnLCAnLnBkZicsICdpbWFnZS8qJ10sXG4gICAgICB1cGxvYWRJbW1lZGlhdGVseTogdHJ1ZSxcbiAgICAgIG9uRmlsZUNoYW5nZTogZmlsZUNoYW5nZSxcbiAgICB9O1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudCg8VXBsb2FkIHsuLi5wcm9wczF9IC8+KTtcbiAgICB3cmFwcGVyLmZpbmQoJ2lucHV0Jykuc2ltdWxhdGUoJ2NoYW5nZScsIHtcbiAgICAgIHRhcmdldDoge1xuICAgICAgICBmaWxlczogW2ZpbGVdLFxuICAgICAgfSxcbiAgICB9KTtcbiAgICBleHBlY3QoZmlsZUNoYW5nZSkudG9IYXZlQmVlbkNhbGxlZCgpO1xuICB9KTtcblxuICBpdCgncmV0dXJuIHdoZW4gdGFyZ2V0SXRlbSBpcyBudWxsJywgKCkgPT4ge1xuICAgIGNvbnN0IGZpbGVMaXN0ID0gW3sgdWlkOiAnZmlsZScgfV07XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KFxuICAgICAgPFVwbG9hZCB0eXBlPVwiZHJhZ1wiIGZpbGVMaXN0PXtmaWxlTGlzdH0+XG4gICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiPnVwbG9hZDwvYnV0dG9uPlxuICAgICAgPC9VcGxvYWQ+LFxuICAgICkuaW5zdGFuY2UoKTtcbiAgICBleHBlY3Qod3JhcHBlci5oYW5kbGVTdWNjZXNzKCcnLCAnJywgeyB1aWQ6ICdmaWxlSXRlbScgfSkpLnRvQmUodW5kZWZpbmVkKTtcbiAgICBleHBlY3Qod3JhcHBlci5oYW5kbGVQcm9ncmVzcygnJywgeyB1aWQ6ICdmaWxlSXRlbScgfSkpLnRvQmUodW5kZWZpbmVkKTtcbiAgICBleHBlY3Qod3JhcHBlci5oYW5kbGVFcnJvcignJywgJycsICcnLCB7IHVpZDogJ2ZpbGVJdGVtJyB9KSkudG9CZSh1bmRlZmluZWQpO1xuICB9KTtcbn0pO1xuIl19