{"version":3,"sources":["Anchor.test.js"],"names":["Link","Anchor","describe","it","wrapper","find","simulate","instance","handleScroll","expect","state","not","toBe","activeLink","root","document","getElementById","createElement","id","body","appendChild","attachTo","handleScrollTo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport Anchor from '..';\n\nconst { Link } = Anchor;\n\ndescribe('Anchor Render', () => {\n  it('Anchor render perfectly', () => {\n    const wrapper = mount(\n      <Anchor>\n        <Link href=\"#API\" title=\"API\" />\n      </Anchor>,\n    );\n\n    wrapper.find('a[href=\"#API\"]').simulate('click');\n\n    wrapper.instance().handleScroll();\n    expect(wrapper.instance().state).not.toBe(null);\n  });\n\n  it('Anchor render perfectly for complete href - click', () => {\n    const wrapper = mount(\n      <Anchor>\n        <Link href=\"http://www.example.com/#API\" title=\"API\" />\n      </Anchor>,\n    );\n    wrapper.find('a[href=\"http://www.example.com/#API\"]').simulate('click');\n    expect(wrapper.instance().state.activeLink).toBe('http://www.example.com/#API');\n  });\n\n  it('Anchor render perfectly for complete href - scroll', () => {\n    let root = document.getElementById('root');\n    if (!root) {\n      root = document.createElement('div', { id: 'root' });\n      root.id = 'root';\n      document.body.appendChild(root);\n    }\n    mount(<div id=\"API\">Hello</div>, { attachTo: root });\n    const wrapper = mount(\n      <Anchor>\n        <Link href=\"http://www.example.com/#API\" title=\"API\" />\n      </Anchor>,\n    );\n    wrapper.instance().handleScroll();\n    expect(wrapper.instance().state.activeLink).toBe('http://www.example.com/#API');\n  });\n\n  it('Anchor render perfectly for complete href - scollTo', () => {\n    let root = document.getElementById('root');\n    if (!root) {\n      root = document.createElement('div', { id: 'root' });\n      root.id = 'root';\n      document.body.appendChild(root);\n    }\n    mount(<div id=\"API\">Hello</div>, { attachTo: root });\n    const wrapper = mount(\n      <Anchor>\n        <Link href=\"##API\" title=\"API\" />\n      </Anchor>,\n    );\n    wrapper.instance().handleScrollTo('##API');\n    expect(wrapper.instance().state.activeLink).toBe('##API');\n  });\n});\n"]}