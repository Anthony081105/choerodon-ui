{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/list/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Children, cloneElement, Component, ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport Spin, { SpinProps } from '../spin';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport { Size } from '../_util/enum';\nimport Pagination from '../pagination';\nimport { Row } from '../grid';\nimport Item from './Item';\nimport { getPrefixCls } from '../configure';\n\nexport { ListItemProps, ListItemMetaProps } from './Item';\n\nexport type ColumnCount = 1 | 2 | 3 | 4 | 6 | 8 | 12 | 24;\n\nexport type ColumnType = 'gutter' | 'column' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n\nexport interface ListGridType {\n  gutter?: number;\n  column?: ColumnCount;\n  xs?: ColumnCount;\n  sm?: ColumnCount;\n  md?: ColumnCount;\n  lg?: ColumnCount;\n  xl?: ColumnCount;\n  xxl?: ColumnCount;\n}\n\nexport interface ListProps {\n  bordered?: boolean;\n  className?: string;\n  children?: ReactNode;\n  dataSource: any;\n  extra?: ReactNode;\n  grid?: ListGridType;\n  id?: string;\n  itemLayout?: string;\n  loading?: boolean | SpinProps;\n  loadMore?: ReactNode;\n  pagination?: any;\n  prefixCls?: string;\n  rowKey?: any;\n  renderItem: any;\n  size?: Size;\n  split?: boolean;\n  header?: ReactNode;\n  footer?: ReactNode;\n  empty?: ReactNode;\n  locale?: Object;\n}\n\nexport interface ListLocale {\n  emptyText: string;\n}\n\nexport default class List extends Component<ListProps> {\n  static displayName = 'List';\n\n  static Item: typeof Item = Item;\n\n  static childContextTypes = {\n    grid: PropTypes.any,\n  };\n\n  static defaultProps = {\n    dataSource: [],\n    bordered: false,\n    split: true,\n    loading: false,\n    pagination: false,\n  };\n\n  private keys: { [key: string]: string } = {};\n\n  getChildContext() {\n    const { grid } = this.props;\n    return {\n      grid,\n    };\n  }\n\n  renderItem = (item: ReactElement<any>, index: number) => {\n    const { dataSource, renderItem, rowKey } = this.props;\n    let key;\n\n    if (typeof rowKey === 'function') {\n      key = rowKey(dataSource[index]);\n    } else if (typeof rowKey === 'string') {\n      key = dataSource[rowKey];\n    } else {\n      key = dataSource.key;\n    }\n\n    if (!key) {\n      key = `list-item-${index}`;\n    }\n\n    this.keys[index] = key;\n\n    return renderItem(item, index);\n  };\n\n  isSomethingAfterLastTtem() {\n    const { loadMore, pagination, footer } = this.props;\n    return !!(loadMore || pagination || footer);\n  }\n\n  renderEmpty = (contextLocale: ListLocale) => {\n    const { props } = this;\n    const locale = { ...contextLocale, ...props.locale };\n    return <div className={`${this.getPrefixCls()}-empty-text`}>{locale.emptyText}</div>;\n  };\n\n  getPrefixCls() {\n    const { prefixCls } = this.props;\n    return getPrefixCls('list', prefixCls);\n  }\n\n  render() {\n    const {\n      bordered,\n      split,\n      className,\n      children,\n      itemLayout,\n      loadMore,\n      pagination,\n      grid,\n      dataSource,\n      size,\n      header,\n      footer,\n      empty,\n      loading,\n      ...rest\n    } = this.props;\n    const prefixCls = this.getPrefixCls();\n    let loadingProp = loading;\n    if (typeof loadingProp === 'boolean') {\n      loadingProp = {\n        spinning: loadingProp,\n      };\n    }\n    const isLoading = loadingProp && loadingProp.spinning;\n\n    // large => lg\n    // small => sm\n    let sizeCls = '';\n    switch (size) {\n      case Size.large:\n        sizeCls = 'lg';\n        break;\n      case Size.small:\n        sizeCls = 'sm';\n        break;\n      default:\n    }\n\n    const classString = classNames(prefixCls, className, {\n      [`${prefixCls}-vertical`]: itemLayout === 'vertical',\n      [`${prefixCls}-${sizeCls}`]: sizeCls,\n      [`${prefixCls}-split`]: split,\n      [`${prefixCls}-bordered`]: bordered,\n      [`${prefixCls}-loading`]: isLoading,\n      [`${prefixCls}-grid`]: grid,\n      [`${prefixCls}-something-after-last-item`]: this.isSomethingAfterLastTtem(),\n    });\n\n    const paginationContent = (\n      <div className={`${prefixCls}-pagination`}>\n        <Pagination {...pagination} />\n      </div>\n    );\n\n    let childrenContent;\n    childrenContent = isLoading && <div style={{ minHeight: 53 }} />;\n    if (dataSource.length > 0) {\n      const items = dataSource.map((item: any, index: number) => this.renderItem(item, index));\n      const childrenList = Children.map(items, (child: any, index) =>\n        cloneElement(child, {\n          key: this.keys[index],\n        }),\n      );\n\n      childrenContent = grid ? <Row gutter={grid.gutter}>{childrenList}</Row> : childrenList;\n    } else if (!children && !isLoading && !empty) {\n      childrenContent = (\n        <LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n          {this.renderEmpty}\n        </LocaleReceiver>\n      );\n    } else {\n      childrenContent = empty;\n    }\n\n    const content = (\n      <div>\n        <Spin {...loadingProp}>{childrenContent}</Spin>\n        {loadMore}\n        {!loadMore && pagination ? paginationContent : null}\n      </div>\n    );\n\n    return (\n      <div className={classString} {...omit(rest, ['prefixCls', 'rowKey', 'renderItem','selectable'])}>\n        {header && <div className={`${prefixCls}-header`}>{header}</div>}\n        {content}\n        {children}\n        {footer && <div className={`${prefixCls}-footer`}>{footer}</div>}\n      </div>\n    );\n  }\n}\n"]}