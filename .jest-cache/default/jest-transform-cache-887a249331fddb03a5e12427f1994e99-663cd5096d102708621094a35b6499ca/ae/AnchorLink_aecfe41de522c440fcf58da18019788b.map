{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/anchor/AnchorLink.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUqB,U;;;;;;;AAArB,wBAAA;AAAA;;AAAA;;;AAoCE,UAAA,WAAA,GAAc,UAAC,CAAD,EAAqC;AAAA,kCAG7C,MAAK,OAHwC,CAE/C,SAF+C;AAAA,UAElC,QAFkC,yBAElC,QAFkC;AAAA,UAExB,OAFwB,yBAExB,OAFwB;AAAA,wBAIzB,MAAK,KAJoB;AAAA,UAIzC,IAJyC,eAIzC,IAJyC;AAAA,UAInC,KAJmC,eAInC,KAJmC;;AAKjD,UAAI,OAAJ,EAAa;AACX,QAAA,OAAO,CAAC,CAAD,EAAI;AAAE,UAAA,KAAK,EAAL,KAAF;AAAS,UAAA,IAAI,EAAJ;AAAT,SAAJ,CAAP;AACD;;AACD,MAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KATD;;AApCF;AAwEC;;;;wCAzDkB;AAAA,UACP,SADO,GACO,KAAK,OADZ,CACP,SADO;AAAA,UAEP,IAFO,GAEE,KAAK,KAFP,CAEP,IAFO;AAGf,MAAA,SAAS,CAAC,YAAV,CAAuB,IAAvB;AACD;;;6CAEqD;AAAA,UAA3B,QAA2B,QAAjC,IAAiC;AAAA,UAC5C,IAD4C,GACnC,KAAK,KAD8B,CAC5C,IAD4C;;AAEpD,UAAI,QAAQ,KAAK,IAAjB,EAAuB;AAAA,YACb,SADa,GACC,KAAK,OADN,CACb,SADa;AAErB,QAAA,SAAS,CAAC,cAAV,CAAyB,QAAzB;AACA,QAAA,SAAS,CAAC,YAAV,CAAuB,IAAvB;AACD;AACF;;;2CAEmB;AAAA,UACV,SADU,GACI,KAAK,OADT,CACV,SADU;AAAA,UAEV,IAFU,GAED,KAAK,KAFJ,CAEV,IAFU;AAGlB,MAAA,SAAS,CAAC,cAAV,CAAyB,IAAzB;AACD;;;6BAaK;AAAA,UACI,SADJ,GACkB,KAAK,OADvB,CACI,SADJ;AAAA,yBAEwE,KAAK,KAF7E;AAAA,UAEe,kBAFf,gBAEI,SAFJ;AAAA,UAEmC,IAFnC,gBAEmC,IAFnC;AAAA,UAEyC,KAFzC,gBAEyC,KAFzC;AAAA,UAEgD,QAFhD,gBAEgD,QAFhD;AAAA,UAE0D,SAF1D,gBAE0D,SAF1D;AAGJ,UAAM,SAAS,GAAG,6BAAa,QAAb,EAAuB,kBAAvB,CAAlB;AACA,UAAM,MAAM,GAAG,SAAS,CAAC,UAAV,KAAyB,IAAxC;AACA,UAAM,gBAAgB,GAAG,4BAAW,SAAX,YAAyB,SAAzB,2DACnB,SADmB,mBACO,MADP,EAAzB;AAGA,UAAM,cAAc,GAAG,sCAAc,SAAd,iEACjB,SADiB,yBACe,MADf,EAAvB;AAGA,aACE,kBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE;AAAhB,OAAA,EACE,kBAAA,aAAA,CAAA,GAAA,EAAA;AACE,QAAA,SAAS,EAAE,cADb;AAEE,QAAA,IAAI,EAAE,IAFR;AAGE,QAAA,KAAK,EAAE,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,EAH7C;AAIE,QAAA,OAAO,EAAE,KAAK;AAJhB,OAAA,EAMG,KANH,CADF,EASG,QATH,CADF;AAaD;;;EAvEqC,gB;;;AAC/B,UAAA,CAAA,WAAA,GAAc,YAAd;AAEA,UAAA,CAAA,YAAA,GAAe;AACpB,EAAA,IAAI,EAAE;AADc,CAAf;AAIA,UAAA,CAAA,YAAA,GAAe;AACpB,EAAA,SAAS,EAAE,sBAAU;AADD,CAAf","sourcesContent":["import React, { Component, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { C7NAnchor } from './Anchor';\nimport { getPrefixCls } from '../configure';\n\nexport interface AnchorLinkProps {\n  prefixCls?: string;\n  href: string;\n  title: ReactNode;\n  children?: any;\n  className?: string;\n}\n\nexport default class AnchorLink extends Component<AnchorLinkProps, any> {\n  static displayName = 'AnchorLink';\n\n  static defaultProps = {\n    href: '#',\n  };\n\n  static contextTypes = {\n    c7nAnchor: PropTypes.object,\n  };\n\n  context: {\n    c7nAnchor: C7NAnchor;\n  };\n\n  componentDidMount() {\n    const { c7nAnchor } = this.context;\n    const { href } = this.props;\n    c7nAnchor.registerLink(href);\n  }\n\n  componentDidUpdate({ href: prevHref }: AnchorLinkProps) {\n    const { href } = this.props;\n    if (prevHref !== href) {\n      const { c7nAnchor } = this.context;\n      c7nAnchor.unregisterLink(prevHref);\n      c7nAnchor.registerLink(href);\n    }\n  }\n\n  componentWillUnmount() {\n    const { c7nAnchor } = this.context;\n    const { href } = this.props;\n    c7nAnchor.unregisterLink(href);\n  }\n\n  handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    const {\n      c7nAnchor: { scrollTo, onClick },\n    } = this.context;\n    const { href, title } = this.props;\n    if (onClick) {\n      onClick(e, { title, href });\n    }\n    scrollTo(href);\n  };\n\n  render() {\n    const { c7nAnchor } = this.context;\n    const { prefixCls: customizePrefixCls, href, title, children, className } = this.props;\n    const prefixCls = getPrefixCls('anchor', customizePrefixCls);\n    const active = c7nAnchor.activeLink === href;\n    const wrapperClassName = classNames(className, `${prefixCls}-link`, {\n      [`${prefixCls}-link-active`]: active,\n    });\n    const titleClassName = classNames(`${prefixCls}-link-title`, {\n      [`${prefixCls}-link-title-active`]: active,\n    });\n    return (\n      <div className={wrapperClassName}>\n        <a\n          className={titleClassName}\n          href={href}\n          title={typeof title === 'string' ? title : ''}\n          onClick={this.handleClick}\n        >\n          {title}\n        </a>\n        {children}\n      </div>\n    );\n  }\n}\n"]}