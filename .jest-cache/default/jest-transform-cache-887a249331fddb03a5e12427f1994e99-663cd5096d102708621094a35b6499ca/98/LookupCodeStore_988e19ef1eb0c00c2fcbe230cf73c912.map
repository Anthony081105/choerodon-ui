{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/stores/LookupCodeStore.tsx"],"names":[],"mappings":"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","sourcesContent":["import { action } from 'mobx';\nimport { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport isString from 'lodash/isString';\nimport { getConfig } from 'choerodon-ui/lib/configure';\nimport axios from '../axios';\nimport Field from '../data-set/Field';\nimport lovCodeStore from './LovCodeStore';\nimport { FieldType } from '../data-set/enum';\nimport { generateResponseData } from '../data-set/utils';\nimport { getLovPara, processAxiosConfig } from './utils';\nimport cacheAdapterEnhancer from '../axios/cacheAdapterEnhancer';\nimport throttleAdapterEnhancer from '../axios/throttleAdapterEnhancer';\nimport PromiseMerger from '../_util/PromiseMerger';\n\nconst adapter = throttleAdapterEnhancer(cacheAdapterEnhancer(axios.defaults.adapter!));\n\nexport type responseData = object[];\nexport type responseType = responseData | undefined;\n\nexport class LookupCodeStore {\n  get axios(): AxiosInstance {\n    return getConfig('axios') || axios;\n  }\n\n  batchCallback = (codes): Promise<{ [key: string]: responseData }> => {\n    const lookupBatchAxiosConfig = getConfig('lookupBatchAxiosConfig');\n    if (lookupBatchAxiosConfig) {\n      return this.axios(lookupBatchAxiosConfig(codes)) as any;\n    }\n    return Promise.resolve({});\n  };\n\n  merger: PromiseMerger<responseData> = new PromiseMerger<responseData>(\n    this.batchCallback,\n    getConfig('lookupCache'),\n  );\n\n  async fetchLookupData(\n    key: AxiosRequestConfig | string,\n    axiosConfig: AxiosRequestConfig = {},\n  ): Promise<responseType> {\n    let config: AxiosRequestConfig = {};\n    if (isString(key)) {\n      config = {\n        ...axiosConfig,\n        url: key,\n        method: axiosConfig.method || getConfig('lookupAxiosMethod') || 'post',\n      };\n    } else {\n      config = key as AxiosRequestConfig;\n    }\n    if (config.url) {\n      let data: responseData | undefined;\n      // SSR do not fetch the lookup\n      if (typeof window !== 'undefined') {\n        const result: any = await this.axios(config);\n        if (result) {\n          data = generateResponseData(result, getConfig('dataKey'));\n        }\n      }\n      return data;\n    }\n  }\n\n  async fetchLookupDataInBatch(code: string): Promise<responseType> {\n    return this.merger.add(code);\n  }\n\n  getAxiosConfig(field: Field): AxiosRequestConfig {\n    const lookupAxiosConfig = field.get('lookupAxiosConfig') || getConfig('lookupAxiosConfig');\n    const { record } = field;\n    const params = getLovPara(field, record);\n    const config = processAxiosConfig(lookupAxiosConfig, {\n      dataSet: field.dataSet,\n      record,\n      params,\n      lookupCode: field.get('lookupCode'),\n    });\n    return {\n      adapter,\n      ...config,\n      url: config.url || this.getUrl(field),\n      method: config.method || getConfig('lookupAxiosMethod') || 'post',\n      params: config.params || params,\n    };\n  }\n\n  getUrl(field: Field): string | undefined {\n    const type = field.get('type');\n    const lovCode = field.get('lovCode');\n    const lookupUrl = field.get('lookupUrl');\n    const lookupCode = field.get('lookupCode');\n    if (typeof lookupUrl === 'function' && lookupCode) {\n      return lookupUrl(lookupCode);\n    }\n    if (isString(lookupUrl)) {\n      return lookupUrl;\n    }\n    if (lovCode && type !== FieldType.object) {\n      return lovCodeStore.getQueryAxiosConfig(lovCode, field)({ dataSet: field.dataSet }).url;\n    }\n  }\n\n  // @deprecate\n  @action\n  clearCache() {}\n}\n\nexport default new LookupCodeStore();\n"]}