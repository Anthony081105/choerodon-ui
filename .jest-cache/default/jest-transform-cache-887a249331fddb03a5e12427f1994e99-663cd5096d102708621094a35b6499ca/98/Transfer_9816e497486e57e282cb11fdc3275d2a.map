{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/transfer/Transfer.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { action, observable, runInAction } from 'mobx';\nimport { Select, SelectProps } from '../select/Select';\nimport Option from '../option/Option';\nimport OptGroup from '../option/OptGroup';\nimport TransferList from './TransferList';\nimport TransferOperation from './TransferOperation';\nimport autobind from '../_util/autobind';\nimport Record from '../data-set/Record';\nimport isSameLike from '../_util/isSameLike';\n\nexport interface TransferProps extends SelectProps {\n  titles?: [ReactNode, ReactNode];\n  footer?: (props: any) => ReactNode;\n}\n\n@observer\nexport default class Transfer extends Select<TransferProps> {\n  static displayName = 'Transfer';\n\n  static propTypes = {\n    ...Select.propTypes,\n    titles: PropTypes.arrayOf(PropTypes.node),\n  };\n\n  static defaultProps = {\n    ...Select.defaultProps,\n    suffixCls: 'transfer',\n    multiple: true,\n  };\n\n  static Option = Option;\n\n  static OptGroup = OptGroup;\n\n  @observable sourceSelected: Record[];\n\n  @observable targetSelected: Record[];\n\n  constructor(props, context) {\n    super(props, context);\n    runInAction(() => {\n      this.sourceSelected = [];\n      this.targetSelected = [];\n    });\n  }\n\n  @autobind\n  sourceFilter(record, index, array) {\n    const {\n      valueField,\n      props: { optionsFilter },\n    } = this;\n    if (optionsFilter && !optionsFilter(record, index, array)) {\n      return false;\n    }\n    const values = this.getValues();\n    if (values.length) {\n      return values.every(v => !isSameLike(record.get(valueField), v));\n    }\n    return true;\n  }\n\n  @autobind\n  targetFilter(record, index, array) {\n    const {\n      valueField,\n      props: { optionsFilter },\n    } = this;\n    if (optionsFilter && !optionsFilter(record, index, array)) {\n      return false;\n    }\n    const values = this.getValues();\n    if (values.length) {\n      return values.some(v => isSameLike(record.get(valueField), v));\n    }\n    return false;\n  }\n\n  @autobind\n  handleMenuClick({\n    item: {\n      props: { value },\n    },\n  }) {\n    if (this.multiple) {\n      this.selectRecord(value, this.sourceSelected);\n    } else {\n      this.prepareSetValue(this.processRecordToObject(value));\n    }\n  }\n\n  @autobind\n  handleTargetMenuClick({\n    item: {\n      props: { value },\n    },\n  }) {\n    if (this.multiple) {\n      this.selectRecord(value, this.targetSelected);\n    } else {\n      this.removeValue(value);\n    }\n  }\n\n  @autobind\n  @action\n  handleMoveToLeft() {\n    const { valueField } = this;\n    this.removeValues(this.targetSelected.map(record => record.get(valueField)));\n    this.targetSelected = [];\n  }\n\n  @autobind\n  @action\n  handleMoveToRight() {\n    const { valueField } = this;\n    this.prepareSetValue(...this.sourceSelected.map(record => record.get(valueField)));\n    this.sourceSelected = [];\n  }\n\n  @autobind\n  @action\n  handleSourceSelectAllChange(selected: Record[]) {\n    this.sourceSelected = selected;\n  }\n\n  @autobind\n  @action\n  handleTargetSelectAllChange(selected: Record[]) {\n    this.targetSelected = selected;\n  }\n\n  @action\n  selectRecord(value: Record, selected: Record[]) {\n    const index = selected.indexOf(value);\n    if (index !== -1) {\n      selected.splice(index, 1);\n    } else {\n      selected.push(value);\n    }\n  }\n\n  renderWrapper() {\n    const {\n      prefixCls,\n      targetSelected,\n      sourceSelected,\n      multiple,\n      props: { titles = [] },\n    } = this;\n    const disabled = this.isDisabled();\n    return (\n      <span key=\"wrapper\" className={`${prefixCls}-wrapper`}>\n        <TransferList\n          {...this.props}\n          options={this.options}\n          selected={sourceSelected}\n          header={titles[0]}\n          onSelectAll={this.handleSourceSelectAllChange}\n          onSelect={this.handleMenuClick}\n          optionsFilter={this.sourceFilter}\n        />\n        <TransferOperation\n          className={`${prefixCls}-operation`}\n          leftActive={!(!targetSelected.length || disabled)}\n          rightActive={!(!sourceSelected.length || disabled)}\n          moveToLeft={this.handleMoveToLeft}\n          moveToRight={this.handleMoveToRight}\n          multiple={multiple}\n        />\n        <TransferList\n          {...this.props}\n          options={this.options}\n          selected={targetSelected}\n          header={titles[1]}\n          onSelectAll={this.handleTargetSelectAllChange}\n          onSelect={this.handleTargetMenuClick}\n          optionsFilter={this.targetFilter}\n        />\n      </span>\n    );\n  }\n}\n"]}