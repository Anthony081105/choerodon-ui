{"version":3,"sources":["index.test.js"],"names":["setupByMount","wrapper","describe","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","it","expect","find","length","toBe","toHaveLength","setProps","type"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,OAAO,GAAG,mBAAM,gCAAC,wBAAD,OAAN,CAAhB;AACA,SAAO;AACLA,IAAAA,OAAO,EAAPA;AADK,GAAP;AAGD,CALD;;AAOAC,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BC,EAAAA,UAAU,CAAC,YAAM;AACfC,IAAAA,IAAI,CAACC,aAAL;AACD,GAFS,CAAV;AAIAC,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,IAAI,CAACG,aAAL;AACD,GAFQ,CAAT;AAIAC,EAAAA,EAAE,CAAC,oBAAD,EAAuB,YAAM;AAAA,wBACTR,YAAY,EADH;AAAA,QACrBC,OADqB,iBACrBA,OADqB;;AAE7BQ,IAAAA,MAAM,CAACR,OAAO,CAACS,IAAR,CAAa,oBAAb,EAAmCC,MAApC,CAAN,CAAkDC,IAAlD,CAAuD,CAAvD;AACD,GAHC,CAAF;AAKAJ,EAAAA,EAAE,CAAC,iEAAD;AAAA;AAAA;AAAA;AAAA,+BAAoE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAChDR,YAAY,EADoC,EAC5DC,OAD4D,kBAC5DA,OAD4D;AAEpEQ,YAAAA,MAAM,CAACR,OAAO,CAACS,IAAR,CAAa,8BAAb,CAAD,CAAN,CAAqDG,YAArD,CAAkE,CAAlE;;AAFoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApE,GAAF;AAKAL,EAAAA,EAAE,CAAC,0CAAD;AAAA;AAAA;AAAA;AAAA,+BAA6C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BACzBR,YAAY,EADa,EACrCC,OADqC,kBACrCA,OADqC;AAE7CA,YAAAA,OAAO,CAACa,QAAR,CAAiB;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAjB;AACAN,YAAAA,MAAM,CAACR,OAAO,CAACS,IAAR,CAAa,yBAAb,EAAwCC,MAAzC,CAAN,CAAuDC,IAAvD,CAA4D,CAA5D;;AAH6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7C,GAAF;AAKD,CAxBO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport ProgressTest from './ProgressTest';\n\nconst setupByMount = () => {\n  const wrapper = mount(<ProgressTest />);\n  return {\n    wrapper,\n  };\n};\n\ndescribe('Progress-pro', () => {\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  it('should have a line', () => {\n    const { wrapper } = setupByMount();\n    expect(wrapper.find('.c7n-progress-line').length).toBe(1);\n  });\n\n  it('successPercent should decide the progress status when it exists', async () => {\n    const { wrapper } = setupByMount();\n    expect(wrapper.find('.c7n-progress-status-success')).toHaveLength(1);\n  });\n\n  it('should have a circle when type is circle', async () => {\n    const { wrapper } = setupByMount();\n    wrapper.setProps({ type: 'circle' });\n    expect(wrapper.find('svg.c7n-progress-circle').length).toBe(1);\n  });\n});\n"]}