{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/screening/ScreeningItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ReactElement, isValidElement, Key, ReactNode } from 'react';\nimport { observer } from 'mobx-react';\nimport Icon from 'choerodon-ui/lib/icon';\nimport warning from 'choerodon-ui/lib/_util/warning';\nimport { observable, isArrayLike, runInAction, action, computed, toJS } from 'mobx';\nimport isNumber from 'lodash/isNumber';\nimport isNil from 'lodash/isNil';\nimport noop from 'lodash/noop';\nimport omit from 'lodash/omit';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { isMoment, Moment } from 'moment';\nimport defaultTo from 'lodash/defaultTo';\nimport { ColProps } from 'choerodon-ui/lib/col';\nimport Row, { RowProps } from 'choerodon-ui/lib/row';\nimport classNames from 'classnames';\nimport * as ObjectChainValue from '../_util/ObjectChainValue';\nimport DataSetComponent, { DataSetComponentProps } from '../data-set/DataSetComponent';\nimport ScreeningOption, { ScreeningOptionProps } from './ScreeningOption';\nimport DataSet from '../data-set/DataSet';\nimport Field from '../data-set/Field';\nimport Record from '../data-set/Record';\nimport normalizeOptions from '../option/normalizeOptions';\nimport autobind from '../_util/autobind';\nimport isEmpty from '../_util/isEmpty';\nimport { getDateFormatByField, toMultipleValue } from '../field/utils';\nimport { FieldType } from '../data-set/enum';\nimport { formatString } from '../formatter';\nimport isSame from '../_util/isSame';\nimport isSameLike from '../_util/isSameLike';\nimport ObserverButton from '../button/Button';\nimport { $l } from '../locale-context';\n\nconst disabledField = '__disabled';\n\n\nconst expandedButton = (iconExpanded) => {\n  if (iconExpanded === true) {\n    return (\n      <>\n        <span>{`${$l('Screening', 'pack_up')}`}</span>\n        <Icon type=\"expand_less\" />\n      </>\n    )\n  }\n  return (\n    <>\n      <span>{`${$l('Screening', 'more')}`}</span>\n      <Icon type=\"expand_more\" />\n    </>\n  )\n}\n\nexport function getItemKey(record: Record, text: ReactNode, value: any) {\n  return `item-${value || record.id}-${(isValidElement(text) ? text.key : text) || record.id}`;\n}\n\nfunction getSimpleValue(value, valueField) {\n  if (isPlainObject(value)) {\n    return ObjectChainValue.get(value, valueField);\n  }\n  return value;\n}\n\nexport type RenderProps = {\n  options?: DataSet,\n  name?: string,\n  dataSet?: DataSet,\n  onConfirm?: (confirm: Confirm) => void,\n  record?: Record,\n};\n\nexport type Renderer = (props: RenderProps) => ReactNode;\n\nexport interface Confirm {\n  value: string;\n  fieldName: string | undefined;\n}\n\n\nexport interface ScreeningItemProps extends DataSetComponentProps {\n  multiple?: boolean;\n  dataSet?: DataSet;\n  name: string;\n  primitiveValue?: boolean;\n  onChange?: (value, oldValue, formNode) => void;\n  renderer?: Renderer;\n  onConfirm: (confirm: Confirm) => void;\n  onRef?: (ref) => void;\n  colProps?: ColProps;\n  rowProps?: RowProps;\n  optionRenderer?: ({ text, value, record }: { text: string, value: any, record: Record }) => ReactElement<any>;\n}\n\n@observer\nexport default class Screening extends DataSetComponent<ScreeningItemProps> {\n\n  static displayName = 'ScreeningItem';\n\n  @observable iconExpanded: boolean;\n\n  @observable observableProps: any;\n\n  @observable screeningMultiple: boolean;\n\n  emptyValue?: any = null;\n\n  text?: any = null;\n\n  constructor(props, context) {\n    super(props, context);\n    runInAction(() => {\n      this.iconExpanded = false;\n      this.screeningMultiple = false;\n      if (this.name && this.dataSet && this.record) {\n        const value = this.record.get(this.name)\n        if (!isNil(value)) {\n          this.value = value;\n        }\n      }\n    });\n  }\n\n  static defaultProps = {\n    suffixCls: 'screening-item',\n    multiple: false,\n    colProps: {\n      span: 4,\n    },\n  };\n\n  componentDidMount() {\n    const { onRef } = this.props;\n    if (onRef) {\n      onRef(this)\n    }\n  }\n\n  /**\n   * return the record: dataIndex record, current, undefined\n   */\n  @computed\n  get record(): Record | undefined {\n    const { record, dataSet, dataIndex } = this.observableProps;\n    if (record) {\n      return record;\n    }\n    if (dataSet) {\n      if (isNumber(dataIndex)) {\n        return dataSet.get(dataIndex);\n      }\n      return dataSet.current;\n    }\n    return undefined;\n  }\n\n  @computed\n  get value(): any | undefined {\n    return this.observableProps.value;\n  }\n\n  set value(value: any | undefined) {\n    runInAction(() => {\n      this.observableProps.value = value;\n    });\n  }\n\n  // @computed\n  get editable(): boolean {\n    return !this.isDisabled() && !this.isReadOnly();\n  }\n\n  /**\n   * 判断是否展示更多按钮\n   */\n  @computed\n  get needExpandButton(): boolean {\n    const { colProps } = this.props;\n    if (colProps) {\n      const { span } = colProps\n      if (isNumber(span) && span >= 1) {\n        const colNumber = 24 / span;\n        if (this.options && (this.options.length < colNumber)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  @computed\n  get name(): string | undefined {\n    return this.observableProps.name;\n  }\n\n  @computed\n  get primitive(): boolean {\n    const type = this.getProp('type');\n    return this.observableProps.primitiveValue !== false && type !== FieldType.object;\n  }\n\n  /**\n   * get field message: recordField,dsField,undefined\n   */\n  @computed\n  get field(): Field | undefined {\n    const { record, dataSet, name, observableProps } = this;\n    const { displayName } = this.constructor as any;\n    if (displayName !== 'Output' && !name) {\n      warning(!observableProps.dataSet, `${displayName} with binding DataSet need property name.`);\n      warning(!observableProps.record, `${displayName} with binding Record need property name.`);\n    }\n    if (name) {\n      const recordField = record ? record.getField(name) : undefined;\n      const dsField = dataSet ? dataSet.getField(name) : undefined;\n      if (recordField) {\n        return recordField;\n      }\n      return dsField;\n    }\n    return undefined;\n  }\n\n  getProp(propName: string) {\n    const { field } = this;\n    return defaultTo(field && field.get(propName), this.props[propName]);\n  }\n\n  @autobind\n  handleChange(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  @computed\n  get options(): DataSet {\n    const {\n      field,\n      textField,\n      valueField,\n      multiple,\n      observableProps: { children, options },\n    } = this;\n    return (\n      options ||\n      (field && field.options) ||\n      normalizeOptions({ textField, valueField, disabledField, multiple, children })\n    );\n  }\n\n  @computed\n  get multiple(): boolean {\n    return toJS(this.screeningMultiple) || !!this.getProp('multiple');\n  }\n\n  @computed\n  get textField(): string {\n    return this.getProp('textField') || 'meaning';\n  }\n\n  @computed\n  get valueField(): string {\n    return this.getProp('valueField') || 'value';\n  }\n\n  getFieldType(): FieldType {\n    const { field } = this;\n    return (field && field.get('type')) || FieldType.string;\n  }\n\n  getDateFormat(): string {\n    return getDateFormatByField(this.field, this.getFieldType());\n  }\n\n  @action\n  handleExpanedClick = () => {\n    this.iconExpanded = !this.iconExpanded\n  }\n\n  choose(record?: Record | null) {\n    if (record) {\n      this.handleOptionSelect(record);\n    }\n  }\n\n  unChoose(record?: Record | null) {\n    if (record) {\n      this.handleOptionUnSelect(record);\n    }\n  }\n\n  handleOptionSelect(record: Record) {\n    this.prepareSetValue(this.processRecordToObject(record));\n  }\n\n  handleOptionUnSelect(record: Record) {\n    const { valueField } = this;\n    const newValue = record.get(valueField);\n    this.removeValue(newValue, -1);\n  }\n\n  getDataSetValue(): any {\n    const { record, name } = this;\n    if (record) {\n      return record.get(name);\n    }\n  }\n\n  getValue(): any {\n    const { name, multiple } = this;\n    if (multiple) {\n      return this.value;\n    }\n    if (this.dataSet && name) {\n      return this.getDataSetValue();\n    }\n    return this.value;\n  }\n\n  getValues(): any[] {\n    return toMultipleValue(this.getValue(), false);\n  }\n\n  getOldValue(): any {\n    return this.getValue();\n  }\n\n  addValue(...values) {\n    if (this.multiple) {\n      const oldValues = this.getValues();\n      if (values.length) {\n        this.setValue([...oldValues, ...values]);\n      } else if (!oldValues.length) {\n        this.setValue(this.emptyValue);\n      }\n    } else {\n      this.setValue(values.pop());\n    }\n  }\n\n  getValueKey(v: any) {\n    if (isArrayLike(v)) {\n      return v.join(',');\n    }\n    return v;\n  }\n\n  removeValues(values: any[], index: number = 0) {\n    let repeat: number;\n    this.setValue(\n      values.reduce((oldValues, value) => {\n        repeat = 0;\n        return oldValues.filter(v => {\n          if (this.getValueKey(v) === this.getValueKey(value)) {\n            if (index === -1 || repeat === index) {\n              this.afterRemoveValue(value, repeat++);\n              return false;\n            }\n            repeat++;\n          }\n          return true;\n        });\n      }, this.getValues()),\n    );\n  }\n\n  afterRemoveValue(_value, _repeat: number) {\n  }\n\n  removeValue(value: any, index: number = 0) {\n    this.removeValues([value], index);\n  }\n\n  isReadOnly(): boolean {\n    return (\n      (this.getProp('readOnly') as boolean) ||\n      (!this.props.onChange)\n    );\n  }\n\n  @action\n  setValue(value: any): void {\n    const { onConfirm } = this.props;\n    if (!this.isReadOnly()) {\n      if (\n        this.multiple\n          ? isArrayLike(value) && !value.length\n          : isNil(value) || value === ''\n      ) {\n        value = this.emptyValue;\n      }\n      const {\n        name,\n        dataSet,\n        observableProps: { dataIndex },\n      } = this;\n      const { onChange = noop } = this.props;\n      const { formNode } = this.context;\n      const old = this.getOldValue();\n      if (dataSet && name && !this.multiple) {\n        (this.record || dataSet.create({}, dataIndex)).set(name, value);\n      } else {\n        value = formatString(value, {\n        });\n      }\n      // 转成实际的数据再进行判断\n      if (!isSame(toJS(old), toJS(value))) {\n        onChange(value, toJS(old), formNode);\n\n        if (this.multiple && value) {\n          this.text = value.map((item) => {\n            return this.processValue(item)\n          })\n        } else if (value) {\n          this.text = this.processValue(value)\n          if (onConfirm) {\n            onConfirm({\n              value,\n              fieldName: this.name,\n            })\n          }\n        }\n      }\n      this.value = value;\n    }\n  }\n\n  /**\n   * 提交值，触发dataSet修改和提交方法。\n   */\n  handleConfirm = () => {\n    const { onConfirm } = this.props;\n    const { value, dataSet, name, observableProps: { dataIndex } } = this\n    if (value && name && dataSet) {\n      (this.record || dataSet.create({}, dataIndex)).set(name, value);\n      if (onConfirm) {\n        onConfirm({\n          value: this.value,\n          fieldName: this.name,\n        })\n      }\n    }\n  }\n\n  @action\n  prepareSetValue(...value: any[]): void {\n    const values = value.filter(item => !isEmpty(item));\n    this.addValue(...values);\n  }\n\n\n  handleSelect = (info) => {\n    const record = info.value\n    this.choose(record)\n  }\n\n  handleDeselect = (info) => {\n    const record = info.value\n    this.unChoose(record)\n  }\n\n  handleClick = (_info) => {\n  }\n\n  findByValue(value): Record | undefined {\n    const { valueField } = this;\n    const autoType = this.getProp('type') === FieldType.auto;\n    value = getSimpleValue(value, valueField);\n    return this.options.find(record =>\n      autoType ? isSameLike(record.get(valueField), value) : isSame(record.get(valueField), value),\n    );\n  }\n\n  processObjectValue(value, textField) {\n    if (!isNil(value)) {\n      if (isPlainObject(value)) {\n        return ObjectChainValue.get(value, textField);\n      }\n      const found = this.findByValue(value);\n      if (found) {\n        return found.get(textField);\n      }\n    }\n  }\n\n  processValueNormal(value: any): string {\n    if (!isNil(value)) {\n      if (isMoment(value)) {\n        return (value as Moment).format(this.getDateFormat());\n      }\n      return value.toString();\n    }\n    return '';\n  }\n\n  processLookupValue(value) {\n    const { field, textField, primitive } = this;\n    if (primitive && field && field.lookup) {\n      return this.processValueNormal(field.getText(value));\n    }\n    return this.processValueNormal(this.processObjectValue(value, textField));\n  }\n\n  processValue(value: any): string {\n    const text = this.processLookupValue(value);\n    if (isEmpty(text)) {\n      if (isPlainObject(value)) {\n        return ObjectChainValue.get(value, this.valueField) || '';\n      }\n      return this.processValueNormal(value);\n    }\n    return text;\n  }\n\n\n  processRecordToObject(record: Record) {\n    const { primitive, valueField } = this;\n    return primitive ? record.get(valueField) : record.toData();\n  }\n\n  getTextNode(): ReactNode {\n    const text =\n      this.isFocused && this.editable\n        ? this.processValue(this.getValue())\n        : this.processRenderer(this.getValue());\n    return text;\n  }\n\n  getText(value: any): string {\n    return this.processValue(value);\n  }\n\n  processText(value: string): string {\n    return value;\n  }\n\n  processRenderer(value?: any): ReactNode {\n    const {\n      record,\n      dataSet,\n      props: { renderer, onConfirm },\n    } = this;\n    const text = this.processText(this.getText(value));\n    return renderer\n      ? renderer({\n        options: this.options,\n        name: this.name,\n        dataSet,\n        onConfirm,\n        record,\n      })\n      : text;\n  }\n\n\n  getScreeningOption = () => {\n    const { colProps, optionRenderer } = this.props;\n    const {\n      options,\n      textField,\n      valueField,\n      multiple,\n    } = this;\n    if (!options) {\n      return null;\n    }\n    const { data } = options;\n\n    if (!isEmpty(data)) {\n      return data.map((record) => {\n        const value = record.get(valueField);\n        const text = record.get(textField);\n        const key: Key = getItemKey(record, text, value);\n        let isSelected: boolean = false;\n        const valueRecord = this.processRecordToObject(record);\n        const selectedValue = toJS(this.value)\n        if (multiple) {\n          if (selectedValue && selectedValue.length > 0) {\n            isSelected = selectedValue.some(itemValue => {\n              return isSame(itemValue, valueRecord)\n            })\n          }\n        } else if (isSame(valueRecord, selectedValue)) {\n          isSelected = true;\n        }\n        const textNode = (<span className={`${this.prefixCls}-option-text`}>{text}</span>)\n        const screeningOptionProps = {\n          ...colProps,\n          onSelect: this.handleSelect,\n          onDeselect: this.handleDeselect,\n          onClick: this.handleClick,\n          value: record,\n          optionkey: key,\n          multiple,\n          isSelected,\n          prefixCls: this.prefixCls,\n          children: textNode,\n        } as ScreeningOptionProps\n\n        if (optionRenderer) {\n          screeningOptionProps.optionRender = optionRenderer({ record, text, value })\n        }\n\n        return (\n          <ScreeningOption key={key} {...screeningOptionProps} />\n        )\n      })\n    }\n    return null\n  }\n\n  getObservableProps(props, context) {\n    return {\n      name: props.name,\n      record: 'record' in props ? props.record : context.record,\n      dataSet: 'dataSet' in props ? props.dataSet : context.dataSet,\n      dataIndex: defaultTo(props.dataIndex, context.dataIndex),\n      value: this.observableProps || 'value' in props ? props.value : props.defaultValue,\n      primitiveValue: props.primitiveValue,\n    };\n  }\n\n  getOtherProps() {\n    const otherProps = omit(super.getOtherProps(), [\n      'record',\n      'defaultValue',\n      'dataIndex',\n      'onEnterDown',\n      'onClear',\n      'readOnly',\n      'renderer',\n      'pristine',\n      'primitiveValue',\n      'trim',\n      'onRef',\n      'onConfirm',\n      'colProps',\n    ]);\n    otherProps.onChange = !this.isDisabled() ? this.handleChange : noop;\n    return otherProps;\n  }\n\n  getLabel() {\n    return this.getProp('label');\n  }\n\n  @action\n  handleMultiple = () => {\n    this.screeningMultiple = !this.screeningMultiple\n  }\n\n  @action\n  handleClear = () => {\n    this.setValue(this.emptyValue);\n    this.value = this.emptyValue;\n    this.text = this.emptyValue;\n  }\n\n  handleCancel = () => {\n    this.handleClear()\n    this.handleMultiple()\n  }\n\n\n\n  render() {\n    const { iconExpanded, prefixCls, multiple } = this;\n    const { renderer, onConfirm } = this.props;\n    const label = this.getLabel();\n    const multipleButton = (\n      <div className={`${prefixCls}-multiple`} onClick={this.handleMultiple} >\n        <Icon type=\"add\" />\n        <span>{`${$l('Screening', 'multi_select')}`}</span>\n      </div>\n    )\n    const expandButtonContainer = this.needExpandButton && (<div className={`${prefixCls}-expanded`} onClick={this.handleExpanedClick}>{expandedButton(iconExpanded)}</div>)\n    const labelNode = (<span className={`${prefixCls}-label`}>{`${label}:`}</span>)\n    const allClassName = classNames(\n      {\n        [`${prefixCls}-multiple`]: multiple,\n        [`${prefixCls}-more`]: iconExpanded,\n      },\n      this.getMergedClassNames(),\n    )\n    return (\n      <div {...this.getMergedProps()} className={allClassName}>\n        {\n          renderer ? renderer(\n            {\n              options: this.options,\n              name: this.name,\n              dataSet: this.dataSet,\n              onConfirm,\n              record: this.record,\n            },\n          ) : (\n              <>\n                <div className={`${prefixCls}-title`}>{labelNode}</div>\n                <div className={`${prefixCls}-content`}>\n                  <div className={`${prefixCls}-scroll`}>\n                    <Row>\n                      {this.getScreeningOption()}\n                    </Row>\n                  </div>\n                </div>\n                {!this.multiple && (\n                  <div className={`${prefixCls}-operation`} >\n                    {expandButtonContainer}\n                    {multipleButton}\n                  </div>\n                )}\n                {this.multiple && (\n                  <div className={`${prefixCls}-footer`}>\n                    <ObserverButton onClick={this.handleConfirm}>{`${$l('Screening', 'confirm')}`}</ObserverButton>\n                    <ObserverButton onClick={this.handleCancel}>{`${$l('Screening', 'cancel')}`}</ObserverButton>\n                  </div>\n                )}\n              </>\n            )\n        }\n      </div>\n    );\n  }\n}\n"]}