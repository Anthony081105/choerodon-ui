{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/rc-components/tree/MotionTreeNode.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AAEA;;AACA;;AANA;AAEA;AAeA;AACA,IAAM,cAAc,GAGhB,SAHE,cAGF,OAYF,GAZE,EAaA;AAAA,MAXA,SAWA,QAXA,SAWA;AAAA,MAVA,KAUA,QAVA,KAUA;AAAA,MATA,MASA,QATA,MASA;AAAA,MARA,WAQA,QARA,WAQA;AAAA,MAPA,UAOA,QAPA,UAOA;AAAA,MANA,WAMA,QANA,WAMA;AAAA,MALA,MAKA,QALA,MAKA;AAAA,MAJA,qBAIA,QAJA,qBAIA;AAAA,MAHG,KAGH;;AAAA,wBAC4B,KAAK,CAAC,QAAN,CAAe,IAAf,CAD5B;AAAA;AAAA,MACK,OADL;AAAA,MACc,UADd,wBAEF;;;AAFE,0BAGoB,KAAK,CAAC,UAAN,CAAiB,yBAAjB,CAHpB;AAAA,MAGM,SAHN,qBAGM,SAHN;;AAKF,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACnB,QAAI,WAAW,IAAI,UAAU,KAAK,MAA9B,IAAwC,OAA5C,EAAqD;AACnD,MAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAJD,EAIG,CAAC,WAAD,CAJH;;AAMA,MAAI,WAAJ,EAAiB;AACf,WACE,KAAA,CAAA,aAAA,CAAC,qBAAD,EAAU,0BAAA;AACR,MAAA,GAAG,EAAE,GADG;AAER,MAAA,OAAO,EAAE;AAFD,KAAA,EAGJ,MAHI,EAGE;AACV,MAAA,YAAY,EAAE,UAAU,KAAK,MADnB;AAEV,MAAA,WAAW,EAAE,WAFH;AAGV,MAAA,UAAU,EAAE;AAHF,KAHF,CAAV,EAQG,iBAAqD,SAArD;AAAA,UAAc,eAAd,SAAG,SAAH;AAAA,UAAsC,WAAtC,SAA+B,KAA/B;AAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,GAAG,EAAE,SADP;AAEE,QAAA,SAAS,EAAE,sCACN,SADM,uBAET,eAFS,CAFb;AAME,QAAA,KAAK,EAAE;AANT,OAAA,EAQG,WAAW,CAAC,GAAZ,CAAgB,UAAC,QAAD,EAA0B;AAAA,6BAKrC,QALqC,CAEvC,IAFuC;AAAA,YAE/B,GAF+B,kBAE/B,GAF+B;AAAA,YAEvB,SAFuB;AAAA,YAGvC,OAHuC,GAKrC,QALqC,CAGvC,OAHuC;AAAA,YAIvC,KAJuC,GAKrC,QALqC,CAIvC,KAJuC;AAMzC,eAAO,SAAS,CAAC,QAAjB;AAEA,YAAM,aAAa,GAAG,gCACpB,GADoB,EAEpB,qBAFoB,CAAtB;AAKA,eACE,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAS,0BAAA,EAAA,EACH,SADG,EAEH,aAFG,EAEU;AACjB,UAAA,MAAM,EAAE,MADS;AAEjB,UAAA,IAAI,EAAE,QAAQ,CAAC,IAFE;AAGjB,UAAA,GAAG,EAAE,GAHY;AAIjB,UAAA,OAAO,EAAE,OAJQ;AAKjB,UAAA,KAAK,EAAE;AALU,SAFV,CAAT,CADF;AAWD,OAxBA,CARH,CADD;AAAA,KARH,CADF;AA+CD;;AACD,SACE,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAS,0BAAA;AACP,IAAA,MAAM,EAAE,GADD;AAEP,IAAA,SAAS,EAAE,SAFJ;AAGP,IAAA,KAAK,EAAE;AAHA,GAAA,EAIH,KAJG,EAIE;AACT,IAAA,MAAM,EAAE;AADC,GAJF,CAAT,CADF;AASD,CArFD;;AAuFA,cAAc,CAAC,WAAf,GAA6B,gBAA7B;AAEA,IAAM,iBAAiB,GAAG,KAAK,CAAC,UAAN,CAAiB,cAAjB,CAA1B;eAEe,iB","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n// @ts-ignore\nimport CSSMotion from 'rc-animate/lib/CSSMotion';\n// @ts-ignore\nimport TreeNode, { TreeNodeProps } from './TreeNode';\nimport { FlattenNode } from './interface';\nimport { getTreeNodeProps, TreeNodeRequiredProps } from './utils/treeUtil';\nimport { TreeContext } from './contextTypes';\n\ninterface MotionTreeNodeProps extends Omit<TreeNodeProps, 'domRef'> {\n  active: boolean;\n  motion?: any;\n  motionNodes?: FlattenNode[];\n  onMotionEnd: () => void;\n  motionType?: 'show' | 'hide';\n\n  treeNodeRequiredProps: TreeNodeRequiredProps;\n}\n// @ts-ignore\nconst MotionTreeNode: React.ForwardRefRenderFunction<\n  CSSMotion,\n  MotionTreeNodeProps\n> = (\n  {\n    className,\n    style,\n    motion,\n    motionNodes,\n    motionType,\n    onMotionEnd,\n    active,\n    treeNodeRequiredProps,\n    ...props\n  },\n  ref,\n) => {\n  const [visible, setVisible] = React.useState(true);\n  // @ts-ignore\n  const { prefixCls } = React.useContext(TreeContext);\n\n  React.useEffect(() => {\n    if (motionNodes && motionType === 'hide' && visible) {\n      setVisible(false);\n    }\n  }, [motionNodes]);\n\n  if (motionNodes) {\n    return (\n      <CSSMotion\n        ref={ref}\n        visible={visible}\n        {...motion}\n        motionAppear={motionType === 'show'}\n        onAppearEnd={onMotionEnd}\n        onLeaveEnd={onMotionEnd}\n      >\n        {({ className: motionClassName, style: motionStyle }, motionRef) => (\n          <div\n            ref={motionRef}\n            className={classNames(\n              `${prefixCls}-treenode-motion`,\n              motionClassName,\n            )}\n            style={motionStyle}\n          >\n            {motionNodes.map((treeNode: FlattenNode) => {\n              const {\n                data: { key, ...restProps },\n                isStart,\n                isEnd,\n              } = treeNode;\n              delete restProps.children;\n\n              const treeNodeProps = getTreeNodeProps(\n                key,\n                treeNodeRequiredProps,\n              );\n\n              return (\n                <TreeNode\n                  {...restProps}\n                  {...treeNodeProps}\n                  active={active}\n                  data={treeNode.data}\n                  key={key}\n                  isStart={isStart}\n                  isEnd={isEnd}\n                />\n              );\n            })}\n          </div>\n        )}\n      </CSSMotion>\n    );\n  }\n  return (\n    <TreeNode\n      domRef={ref}\n      className={className}\n      style={style}\n      {...props}\n      active={active}\n    />\n  );\n};\n\nMotionTreeNode.displayName = 'MotionTreeNode';\n\nconst RefMotionTreeNode = React.forwardRef(MotionTreeNode);\n\nexport default RefMotionTreeNode;\n"]}