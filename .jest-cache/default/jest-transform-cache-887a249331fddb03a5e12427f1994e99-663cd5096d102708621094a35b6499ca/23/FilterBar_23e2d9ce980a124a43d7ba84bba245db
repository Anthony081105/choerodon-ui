c1940c083ddf64e89428d223537ac199
"use strict";

/* istanbul ignore next */
function cov_2rfalqmmdx() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/table/FilterBar.tsx";
  var hash = "d2aedb0d8c8aeb469c45b45f2843835b3dbf5a29";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/table/FilterBar.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 31
        }
      },
      "3": {
        start: {
          line: 10,
          column: 13
        },
        end: {
          line: 10,
          column: 53
        }
      },
      "4": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 69
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 69
        }
      },
      "6": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "7": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "8": {
        start: {
          line: 19,
          column: 29
        },
        end: {
          line: 19,
          column: 55
        }
      },
      "9": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 55
        }
      },
      "10": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 53
        }
      },
      "11": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "12": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 23,
          column: 35
        }
      },
      "13": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 29
        }
      },
      "14": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "15": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 37
        }
      },
      "16": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 31
        }
      },
      "17": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "18": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 48,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "FilterBar",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 18
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 16
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d2aedb0d8c8aeb469c45b45f2843835b3dbf5a29"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2rfalqmmdx = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2rfalqmmdx();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2rfalqmmdx().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_2rfalqmmdx().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2rfalqmmdx().s[2]++;
exports["default"] = FilterBar;

var _react =
/* istanbul ignore next */
(cov_2rfalqmmdx().s[3]++, _interopRequireDefault(require("react")));

var _FilterSelect =
/* istanbul ignore next */
(cov_2rfalqmmdx().s[4]++, _interopRequireDefault(require("./FilterSelect")));

var _ColumnFilter =
/* istanbul ignore next */
(cov_2rfalqmmdx().s[5]++, _interopRequireDefault(require("./ColumnFilter")));

function FilterBar(props) {
  /* istanbul ignore next */
  cov_2rfalqmmdx().f[0]++;
  var prefixCls =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[6]++, props.prefixCls),
      columns =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[7]++, props.columns),
      onColumnFilterChange =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[8]++, props.onColumnFilterChange),
      onFilterSelectChange =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[9]++, props.onFilterSelectChange),
      onFilterSelectClear =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[10]++, props.onFilterSelectClear),
      onFilter =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[11]++, props.onFilter),
      dataSource =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[12]++, props.dataSource),
      filters =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[13]++, props.filters),
      columnFilters =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[14]++, props.columnFilters),
      placeholder =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[15]++, props.placeholder),
      multiple =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[16]++, props.multiple),
      getPopupContainer =
  /* istanbul ignore next */
  (cov_2rfalqmmdx().s[17]++, props.getPopupContainer);

  /* istanbul ignore next */
  cov_2rfalqmmdx().s[18]++;
  return _react["default"].createElement("div", {
    className: "".concat(prefixCls, "-filter-bar")
  }, _react["default"].createElement(_FilterSelect["default"], {
    prefixCls: prefixCls,
    placeholder: placeholder,
    columns: columns,
    dataSource: dataSource,
    onChange: onFilterSelectChange,
    onClear: onFilterSelectClear,
    onFilter: onFilter,
    filters: filters,
    columnFilters: columnFilters,
    getPopupContainer: getPopupContainer,
    multiple: multiple
  }), _react["default"].createElement(_ColumnFilter["default"], {
    prefixCls: prefixCls,
    columns: columns,
    onColumnFilterChange: onColumnFilterChange,
    getPopupContainer: getPopupContainer
  }));
}