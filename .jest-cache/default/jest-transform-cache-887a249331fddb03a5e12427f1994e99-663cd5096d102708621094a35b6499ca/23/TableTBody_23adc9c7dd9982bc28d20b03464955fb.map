{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/TableTBody.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAQA;;AACA;;AACA;;AAGA;;AACA;;AAGA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAqB,UAArB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mCAuCc;AACV,UAAI,KAAK,iBAAL,KAA2B,SAA/B,EAA0C;AACxC,wBAAI,MAAJ,CAAW,KAAK,iBAAhB;AACD;;AACD,WAAK,iBAAL,GAAyB,qBAAI,KAAK,cAAT,CAAzB;AACD;AA5CH;AAAA;AAAA,4BA+CU,IA/CV,EA+Cc;AACV,WAAK,SAAL,GAAiB,IAAjB;AACA,WAAK,YAAL;AACD;AAED;;;;AApDF;AAAA;AAAA,kCAwDa;AAAA,kCAGL,KAAK,OAHA,CAEP,UAFO;AAAA,UAEO,IAFP,yBAEO,IAFP;AAAA,yDAEa,aAFb;AAAA,UAEa,aAFb,uCAE6B,CAF7B;AAAA,UAEgC,MAFhC,yBAEgC,MAFhC;AAAA,UAEwC,SAFxC,yBAEwC,SAFxC;AAIT,UAAM,UAAU,GAAG,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,KAAL,CAAY,aAAa,GAAG,SAAjB,GAA8B,CAAzC,CAAT,EAAsD,CAAtD,CAAnB;AACA,UAAM,QAAQ,GAAG,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,KAAL,CAAW,CAAC,aAAa,GAAG,MAAjB,IAA2B,SAA3B,GAAuC,CAAlD,CAAT,EAA+D,IAAI,CAAC,MAApE,CAAjB;AACA,aAAO,IAAI,CAAC,KAAL,CAAW,UAAX,EAAuB,QAAvB,CAAP;AACD;AA/DH;AAAA;AAAA,6BAiEQ;AAAA;;AAAA,wBACqD,KAAK,KAD1D;AAAA,UACI,SADJ,eACI,SADJ;AAAA,UACe,IADf,eACe,IADf;AAAA,UACqB,UADrB,eACqB,UADrB;AAAA,UACiC,eADjC,eACiC,eADjC;AAAA,UAEI,WAFJ,GAEqC,IAFrC,CAEI,WAFJ;AAAA,UAEiB,eAFjB,GAEqC,IAFrC,CAEiB,eAFjB;AAAA,mCAKA,KAAK,OALL,CAIF,UAJE;AAAA,UAIY,IAJZ,0BAIY,IAJZ;AAAA,UAImC,oBAJnC,0BAIkB,eAJlB;AAAA,0DAIyD,KAJzD;AAAA,UAIkE,OAJlE,0BAIkE,OAJlE;AAAA,0DAI2E,aAJ3E;AAAA,UAI2E,aAJ3E,uCAI2F,EAJ3F;AAAA,UAIiG,OAJjG,0BAIiG,OAJjG;AAAA,UAI0G,MAJ1G,0BAI0G,MAJ1G;AAAA,UAIkH,OAJlH,0BAIkH,OAJlH;AAAA,UAMI,cANJ,GAMoC,aANpC,CAMI,cANJ;AAAA,UAMoB,YANpB,GAMoC,aANpC,CAMoB,WANpB;AAOJ,UAAM,OAAO,GAAG,OAAO,IAAI,MAAX,GAAoB,KAAK,WAAL,EAApB,GAAyC,IAAzD;AACA,UAAM,IAAI,GAAG,IAAI,CAAC,MAAL,GACT,KAAK,OAAL,CAAa,OAAb,EAAsB,WAAtB,EAAmC,IAAnC,EAAyC,IAAzC,CADS,GAET,KAAK,WAAL,CAAiB,WAAjB,EAA8B,IAA9B,CAFJ;;AAGA,UAAM,IAAI,GACR,kBAAA,aAAA,CAAC,4BAAD,EAAU,0BAAA;AACR,QAAA,WAAW,EAAC,OADJ;AAER,QAAA,GAAG,EAAC,OAFI;AAGR,QAAA,cAAc,EAAG,eAAe,IAAI,oBAApB,GAA4C,EAAE,eAAe,IAAI,oBAArB,CAA5C,GAAyF,CAAC,OAHlG;AAIR,QAAA,WAAW,EAAE,qBACX,QADW,EAEX,QAFW,EAGX,MAHW,EAIT;AACF,cAAM,MAAM,GAAG,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,MAAP,CAAc,KAA1B,CAAf;;AACA,cAAI,YAAW,IAAI,wBAAW,YAAX,CAAnB,EAA4C;AAC1C,mBAAO,YAAW,CAAC;AACjB,cAAA,QAAQ,EAAR,QADiB;AAEjB,cAAA,QAAQ,EAAR,QAFiB;AAGjB,cAAA,GAAG,EAAE,MAAM,CAAC,EAHK;AAIjB,cAAA,MAAM,EAAE,KAJS;AAKjB,cAAA,IAAI,EAAE,KALW;AAMjB,cAAA,UAAU,EAAV,UANiB;AAOjB,cAAA,SAAS,EAAT,SAPiB;AAQjB,cAAA,OAAO,EAAE,eARQ;AASjB,cAAA,MAAM,EAAN,MATiB;AAUjB,cAAA,KAAK,EAAE,MAAM,CAAC,EAVG;AAWjB,cAAA,eAAe,EAAf,eAXiB;AAYjB,cAAA,MAAM,EAAN;AAZiB,aAAD,CAAlB;AAcD;;AACD,iBACE,kBAAA,aAAA,CAAC,oBAAD,EAAS;AACP,YAAA,QAAQ,EAAE,QADH;AAEP,YAAA,QAAQ,EAAE,QAFH;AAGP,YAAA,GAAG,EAAE,MAAM,CAAC,EAHL;AAIP,YAAA,MAAM,EAAE,KAJD;AAKP,YAAA,IAAI,EAAE,KALC;AAMP,YAAA,UAAU,EAAE,UANL;AAOP,YAAA,SAAS,EAAE,SAPJ;AAQP,YAAA,OAAO,EAAE,eARF;AASP,YAAA,MAAM,EAAE,MATD;AAUP,YAAA,KAAK,EAAE,MAAM,CAAC,EAVP;AAWP,YAAA,eAAe,EAAE;AAXV,WAAT,CADF;AAeD,SAzCO;AA0CR,QAAA,oBAAoB,EAAE;AAAA,iBAAM,uBAAW,KAAjB;AAAA;AA1Cd,OAAA,EA2CJ,cA3CI,CAAV,EA6CG,UAAC,iBAAD;AAAA,eACC,kBAAA,aAAA,CAAA,OAAA,EAAA,0BAAA;AACE,UAAA,GAAG,EAAE,aAAC,IAAD,EAAwC;AAC3C,gBAAI,IAAJ,EAAS;AACP,cAAA,KAAI,CAAC,OAAL,CAAa,IAAb;;AACA,cAAA,iBAAiB,CAAC,QAAlB,CAA2B,IAA3B;AACD;AACF;AANH,SAAA,EAOM,iBAAiB,CAAC,cAPxB,EAOsC;AACpC,UAAA,SAAS,YAAK,SAAL;AAD2B,SAPtC,CAAA,EASC,IATD,EAUC,iBAAiB,CAAC,WAVnB,CADD;AAAA,OA7CH,CADF;;AA8DA,aAAO,IAAI,GACT,IADS,GAGT,kBAAA,aAAA,CAAC,0BAAD,EAAoB;AAAC,QAAA,QAAQ,EAAE,KAAK,YAAhB;AAA8B,QAAA,UAAU,EAAC;AAAzC,OAApB,EACG,IADH,CAHF;AAOD;AAjJH;AAAA;AAAA,yCAmJoB;AAChB,WAAK,sBAAL,CAA4B,IAA5B;AACD;AArJH;AAAA;AAAA,2CAwJsB;AAClB,WAAK,sBAAL,CAA4B,KAA5B;AACD;AA1JH;AAAA;AAAA,2CA4JyB,IA5JzB,EA4JsC;AAAA,UACZ,OADY,GACE,KAAK,OADP,CAC1B,UAD0B,CACZ,OADY;;AAElC,UAAI,OAAJ,EAAa;AACX,YAAM,OAAO,GAAG,IAAI,GAAG,OAAO,CAAC,gBAAX,GAA8B,OAAO,CAAC,mBAA1D;AACA,QAAA,OAAO,CAAC,IAAR,CAAa,OAAb,EAAsB,UAAtB,EAAkC,KAAK,qBAAvC;AACD;AACF;AAlKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqKgC,gBAAA,MArKhC,SAqKgC,MArKhC;AAAA;AAAA,uBAsKe,MAtKf;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuKY,gBAAA,IAvKZ,GAuKmB,KAAK,SAAL,GAAiB,6CAAiC,KAAK,SAAtC,CAAjB,GAAoE,IAvKvF;;AAwKM,oBAAI,IAAJ,EAAU;AACR,kBAAA,IAAI,CAAC,KAAL;AACD;;AA1KP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yCA8KoB;AAAA,yBACY,KAAK,KADjB;AAAA,UACR,IADQ,gBACR,IADQ;AAAA,UACF,SADE,gBACF,SADE;;AAEhB,UAAI,CAAC,IAAL,EAAW;AAAA,YAEO,IAFP,GAGL,KAAK,OAHA,CAEP,UAFO,CAEO,IAFP;;AAIT,YACE,kCAAQ,IAAI,CAAC,OAAb,EAAsB,GAAtB,WAA6B,SAA7B,kBACA,CAAC,IAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,QAAQ,CAAC,aAA/B,CAFH,EAGE;AACA,UAAA,IAAI,CAAC,KAAL;AACD;AACF;AACF;AA3LH;AAAA;AAAA,4BA8LI,OA9LJ,EA+LI,OA/LJ,EAgMI,QAhMJ,EAiMI,IAjMJ,EAiM+B;AAAA;;AAE3B,aAAO,OAAO,CAAC,GAAR,CAAY,UAAC,MAAD,EAAS,KAAT;AAAA,eAAmB,MAAI,CAAC,MAAL,CAAY,OAAZ,EAAqB,MAArB,EAA6B,KAA7B,EAAoC,QAApC,EAA8C,IAA9C,CAAnB;AAAA,OAAZ,CAAP;AACD;AApMH;AAAA;AAAA,gCAsMc,OAtMd,EAsMsC,IAtMtC,EAsMiE;AAAA,mCAGzD,KAAK,OAHoD,CAE3D,UAF2D;AAAA,UAE7C,OAF6C,0BAE7C,OAF6C;AAAA,UAEpC,SAFoC,0BAEpC,SAFoC;AAAA,UAEzB,KAFyB,0BAEzB,KAFyB;AAAA,UAIrD,SAJqD,GAIvC,KAAK,KAJkC,CAIrD,SAJqD;AAK7D,UAAM,KAAK,GAAkB,KAAK,GAC9B;AACA,QAAA,UAAU,EAAE,4BAAQ,KAAK,GAAG,CAAhB;AADZ,OAD8B,GAI9B;AACA,QAAA,SAAS,EAAE,MADX;AAEA,QAAA,OAAO,EAAE;AAFT,OAJJ;AAQA,UAAM,OAAO,GAAkB,KAAK,GAAG,EAAH,GAAQ;AAAE,QAAA,SAAS,EAAE;AAAb,OAA5C;AACA,aACE,kBAAA,aAAA,CAAA,IAAA,EAAA;AAAI,QAAA,SAAS,YAAK,SAAL;AAAb,OAAA,EACE,kBAAA,aAAA,CAAA,IAAA,EAAA;AAAI,QAAA,OAAO,EAAE,OAAO,CAAC,MAArB;AAA6B,QAAA,KAAK,EAAE;AAApC,OAAA,EACE,kBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,KAAK,EAAE;AAAZ,OAAA,EAAoB,CAAC,IAAD,IAAS,OAAO,CAAC,MAAR,KAAc;AAAA;AAAvB,SAAmD,SAAvE,CADF,CADF,CADF;AAOD;AA3NH;AAAA;AAAA,uCA+NI,OA/NJ,EAgOI,MAhOJ,EAiOI,UAjOJ,EAkOI,IAlOJ,EAkO+B;AAE3B,aAAO,KAAK,OAAL,CAAa,MAAM,CAAC,QAAP,IAAmB,EAAhC,EAAoC,OAApC,EAA6C,UAA7C,EAAyD,IAAzD,CAAP;AACD;AArOH;AAAA;AAAA,2BAwOI,OAxOJ,EAyOI,MAzOJ,EA0OI,KA1OJ,EA2OI,QA3OJ,EA4OI,IA5OJ,EA4O+B;AAAA,yBAEwB,KAAK,KAF7B;AAAA,UAEnB,SAFmB,gBAEnB,SAFmB;AAAA,UAER,UAFQ,gBAER,UAFQ;AAAA,UAEI,eAFJ,gBAEI,eAFJ;AAAA,mCAKvB,KAAK,OALkB,CAIzB,UAJyB;AAAA,UAIX,MAJW,0BAIX,MAJW;AAAA,UAIc,oBAJd,0BAIH,eAJG;AAAA,0DAIoC,KAJpC,CAI6C,aAJ7C;AAAA,UAI6C,aAJ7C,uCAI6D,EAJ7D;AAAA,UAImE,OAJnE,0BAImE,OAJnE;AAAA,UAMnB,cANmB,GAMA,aANA,CAMnB,cANmB;;AAO3B,UAAM,QAAQ,GAAG,MAAM,IACrB,kBAAA,aAAA,CAAC,uBAAD,EAAY;AAAC,QAAA,MAAM,EAAE,MAAT;AAAiB,QAAA,OAAO,EAAE,OAA1B;AAAmC,QAAA,IAAI,EAAE;AAAzC,OAAZ,EACG,KAAK,kBADR,CADF;;AAKA,aACE,kBAAA,aAAA,CAAC,4BAAD,EAAU;AACR,QAAA,WAAW,EAAE,MAAM,CAAC,GAAP,CAAW,QAAX,EADL;AAER,QAAA,KAAK,EAAE,KAFC;AAGR,QAAA,cAAc,EAAG,eAAe,IAAI,oBAApB,GAA4C,EAAE,eAAe,IAAI,oBAArB,CAA5C,GAAyF,CAAC,OAHlG;AAIR,QAAA,GAAG,EAAE,MAAM,CAAC;AAJJ,OAAV,EAMG,UACC,QADD,EAEC,QAFD;AAAA,eAIC,kBAAA,aAAA,CAAC,oBAAD,EAAS,0BAAA;AACP,UAAA,QAAQ,EAAE,QADH;AAEP,UAAA,QAAQ,EAAE,QAFH;AAGP,UAAA,GAAG,EAAE,MAAM,CAAC,GAHL;AAIP,UAAA,MAAM,EAAE,CAAC,QAJF;AAKP,UAAA,IAAI,EAAE,IALC;AAMP,UAAA,UAAU,EAAE,UANL;AAOP,UAAA,SAAS,EAAE,SAPJ;AAQP,UAAA,OAAO,EAAE,OARF;AASP,UAAA,MAAM,EAAE,MATD;AAUP,UAAA,KAAK,EAAE,KAVA;AAWP,UAAA,eAAe,EAAE;AAXV,SAAA,EAYH,cAZG,CAAT,EAcG,QAdH,CAJD;AAAA,OANH,CADF;AA8BD;AAtRH;AAAA;AAAA,qCA0RgB;AAAA,UACJ,UADI,GACW,KAAK,OADhB,CACJ,UADI;;AAEZ,UAAI,KAAK,SAAL,IAAkB,CAAC,UAAU,CAAC,MAAlC,EAA0C;AACxC,QAAA,UAAU,CAAC,UAAX,GAAwB,KAAK,SAAL,CAAe,YAAvC;AACD;AACF;AA/RH;AAAA;AAAA,wBAoBiB;AAAA,UACL,UADK,GACU,KAAK,OADf,CACL,UADK;AAAA,UAEL,IAFK,GAEI,KAAK,KAFT,CAEL,IAFK;;AAGb,UAAI,IAAI,KAAK,OAAb,EAAsB;AACpB,eAAO,UAAU,CAAC,gBAAX,CAA4B,MAA5B,CAAmC;AAAA,cAAG,MAAH,SAAG,MAAH;AAAA,iBAAgB,CAAC,MAAjB;AAAA,SAAnC,CAAP;AACD;;AACD,UAAI,IAAJ,EAAU;AACR,eAAO,UAAU,CAAC,eAAX,CAA2B,MAA3B,CAAkC;AAAA,cAAG,MAAH,SAAG,MAAH;AAAA,iBAAgB,CAAC,MAAjB;AAAA,SAAlC,CAAP;AACD;;AACD,aAAO,UAAU,CAAC,WAAX,CAAuB,MAAvB,CAA8B;AAAA,YAAG,MAAH,SAAG,MAAH;AAAA,eAAgB,CAAC,MAAjB;AAAA,OAA9B,CAAP;AACD;AA9BH;AAAA;AAAA,wBAiCqB;AAAA,UACT,UADS,GACM,KAAK,OADX,CACT,UADS;AAEjB,aAAO,UAAU,CAAC,WAAX,CAAuB,MAAvB,CAA8B;AAAA,YAAG,MAAH,SAAG,MAAH;AAAA,eAAgB,CAAC,MAAjB;AAAA,OAA9B,CAAP;AACD;AApCH;AAAA;AAAA,EAAwC,gBAAxC,CAAA;;AACS,UAAA,CAAA,WAAA,GAAc,YAAd;AAEA,UAAA,CAAA,SAAA,GAAY;AACjB,EAAA,IAAI,EAAE,sBAAU,SAAV,CAAoB,CACxB,sBAAU,IADc,EAExB,sBAAU,KAAV,CAAgB,CAAA;AAAA;AAAA,IAAA;AAAA;AAAA,GAAhB,CAFwB,CAApB,CADW;AAKjB,EAAA,eAAe,EAAE,sBAAU,KAAV,CAAgB,CAAA;AAAA;AAAA,IAAA;AAAA;AAAA,GAAhB,CALA;AAMjB,EAAA,SAAS,EAAE,sBAAU,MANJ;AAOjB,EAAA,UAAU,EAAE,sBAAU,MAAV,CAAiB;AAPZ,CAAZ;AAUA,UAAA,CAAA,WAAA,GAAc,wBAAd;AAOP,uBAAA,CADC,cACD,CAAA,E,oBAAA,E,aAAA,EAUC,IAVD;AAaA,uBAAA,CADC,cACD,CAAA,E,oBAAA,E,iBAAA,EAGC,IAHD;AAMA,uBAAA,CADC,oBACD,CAAA,E,oBAAA,E,cAAA,EAKC,IALD;AAQA,uBAAA,CADC,oBACD,CAAA,E,oBAAA,E,SAAA,EAGC,IAHD;AASA,uBAAA,CADC,oBACD,CAAA,E,oBAAA,E,aAAA,EAOC,IAPD;AA6GA,uBAAA,CADC,oBACD,CAAA,E,oBAAA,E,uBAAA,EAOC,IAPD;AAyDA,uBAAA,CADC,oBACD,CAAA,E,oBAAA,E,oBAAA,EAOC,IAPD;AA4DA,uBAAA,CAFC,oBAED,EADC,YACD,CAAA,E,oBAAA,E,gBAAA,EAKC,IALD;AA1RmB,UAAU,GAAA,uBAAA,CAD9B,mBAC8B,CAAA,EAAV,UAAU,CAAV;eAAA,U","sourcesContent":["import React, { Component, CSSProperties, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { action, computed } from 'mobx';\nimport classes from 'component-classes';\nimport raf from 'raf';\nimport {\n  Droppable,\n  Draggable,\n  DraggableProvided,\n  DraggableStateSnapshot,\n  DroppableProvided,\n  DraggableRubric,\n} from 'react-beautiful-dnd';\nimport { pxToRem } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport ReactResizeObserver from 'choerodon-ui/lib/_util/resizeObserver';\nimport { isFunction } from 'lodash';\nimport { ColumnProps } from './Column';\nimport { ElementProps } from '../core/ViewComponent';\nimport TableContext from './TableContext';\nimport TableRow from './TableRow';\nimport Record from '../data-set/Record';\nimport { ColumnLock, DragColumnAlign } from './enum';\nimport ExpandedRow from './ExpandedRow';\nimport { DataSetStatus } from '../data-set/enum';\nimport autobind from '../_util/autobind';\nimport { instance } from './Table';\nimport { findFirstFocusableInvalidElement } from './utils';\n\nexport interface TableTBodyProps extends ElementProps {\n  lock?: ColumnLock | boolean;\n  indentSize: number;\n  dragColumnAlign?: DragColumnAlign;\n}\n\n@observer\nexport default class TableTBody extends Component<TableTBodyProps, any> {\n  static displayName = 'TableTBody';\n\n  static propTypes = {\n    lock: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf([ColumnLock.right, ColumnLock.left]),\n    ]),\n    dragColumnAlign: PropTypes.oneOf([ColumnLock.right, ColumnLock.left]),\n    prefixCls: PropTypes.string,\n    indentSize: PropTypes.number.isRequired,\n  };\n\n  static contextType = TableContext;\n\n  tableBody: HTMLElement | null;\n\n  nextFrameActionId?: number;\n\n  @computed\n  get leafColumns(): ColumnProps[] {\n    const { tableStore } = this.context;\n    const { lock } = this.props;\n    if (lock === 'right') {\n      return tableStore.rightLeafColumns.filter(({ hidden }) => !hidden);\n    }\n    if (lock) {\n      return tableStore.leftLeafColumns.filter(({ hidden }) => !hidden);\n    }\n    return tableStore.leafColumns.filter(({ hidden }) => !hidden);\n  }\n\n  @computed\n  get leafColumnsBody(): ColumnProps[] {\n    const { tableStore } = this.context;\n    return tableStore.leafColumns.filter(({ hidden }) => !hidden);\n  }\n\n  @autobind\n  handleResize() {\n    if (this.nextFrameActionId !== undefined) {\n      raf.cancel(this.nextFrameActionId);\n    }\n    this.nextFrameActionId = raf(this.syncBodyHeight);\n  }\n\n  @autobind\n  saveRef(node) {\n    this.tableBody = node;\n    this.handleResize();\n  }\n\n  /**\n   * 虚拟滚动计算可视化数据\n   */\n  @autobind\n  processData() {\n    const {\n      tableStore: { data, lastScrollTop = 0, height, rowHeight },\n    } = this.context;\n    const startIndex = Math.max(Math.round((lastScrollTop / rowHeight) - 3), 0);\n    const endIndex = Math.min(Math.round((lastScrollTop + height) / rowHeight + 2), data.length);\n    return data.slice(startIndex, endIndex);\n  }\n\n  render() {\n    const { prefixCls, lock, indentSize, dragColumnAlign } = this.props;\n    const { leafColumns, leafColumnsBody } = this;\n    const {\n      tableStore: { data, dragColumnAlign: propsDragColumnAlign, props: { virtual, rowDragRender = {} }, dataSet, height, dragRow },\n    } = this.context;\n    const { droppableProps, renderClone } = rowDragRender;\n    const rowData = virtual && height ? this.processData() : data;\n    const rows = data.length\n      ? this.getRows(rowData, leafColumns, true, lock)\n      : this.getEmptyRow(leafColumns, lock);\n    const body = (\n      <Droppable\n        droppableId=\"table\"\n        key=\"table\"\n        isDropDisabled={(dragColumnAlign || propsDragColumnAlign) ? !(dragColumnAlign && propsDragColumnAlign) : !dragRow}\n        renderClone={(\n          provided: DraggableProvided,\n          snapshot: DraggableStateSnapshot,\n          rubric: DraggableRubric,\n        ) => {\n          const record = dataSet.get(rubric.source.index);\n          if (renderClone && isFunction(renderClone)) {\n            return renderClone({\n              provided,\n              snapshot,\n              key: record.id,\n              hidden: false,\n              lock: false,\n              indentSize,\n              prefixCls,\n              columns: leafColumnsBody,\n              record,\n              index: record.id,\n              dragColumnAlign,\n              rubric,\n            });\n          }\n          return (\n            <TableRow\n              provided={provided}\n              snapshot={snapshot}\n              key={record.id}\n              hidden={false}\n              lock={false}\n              indentSize={indentSize}\n              prefixCls={prefixCls}\n              columns={leafColumnsBody}\n              record={record}\n              index={record.id}\n              dragColumnAlign={dragColumnAlign}\n            />\n          );\n        }}\n        getContainerForClone={() => instance().tbody}\n        {...droppableProps}\n      >\n        {(droppableProvided: DroppableProvided) => (\n          <tbody\n            ref={(ref: HTMLTableSectionElement | null) => {\n              if (ref) {\n                this.saveRef(ref);\n                droppableProvided.innerRef(ref);\n              }\n            }}\n            {...droppableProvided.droppableProps}\n            className={`${prefixCls}-tbody`}>\n          {rows}\n          {droppableProvided.placeholder}\n          </tbody>\n        )}\n      </Droppable>\n    );\n    return lock ? (\n      body\n    ) : (\n      <ReactResizeObserver onResize={this.handleResize} resizeProp=\"height\">\n        {body}\n      </ReactResizeObserver>\n    );\n  }\n\n  componentWillMount() {\n    this.processDataSetListener(true);\n  }\n\n\n  componentWillUnmount() {\n    this.processDataSetListener(false);\n  }\n\n  processDataSetListener(flag: boolean) {\n    const { tableStore: { dataSet } } = this.context;\n    if (dataSet) {\n      const handler = flag ? dataSet.addEventListener : dataSet.removeEventListener;\n      handler.call(dataSet, 'validate', this.handleDataSetValidate);\n    }\n  }\n\n  @autobind\n  async handleDataSetValidate({ result }) {\n    if (!await result) {\n      const cell = this.tableBody ? findFirstFocusableInvalidElement(this.tableBody) : null;\n      if (cell) {\n        cell.focus();\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    const { lock, prefixCls } = this.props;\n    if (!lock) {\n      const {\n        tableStore: { node },\n      } = this.context;\n      if (\n        classes(node.wrapper).has(`${prefixCls}-focused`) &&\n        !node.wrapper.contains(document.activeElement)\n      ) {\n        node.focus();\n      }\n    }\n  }\n\n  getRows(\n    records: Record[],\n    columns: ColumnProps[],\n    expanded?: boolean,\n    lock?: ColumnLock | boolean,\n  ): ReactNode {\n    return records.map((record, index) => this.getRow(columns, record, index, expanded, lock));\n  }\n\n  getEmptyRow(columns: ColumnProps[], lock?: ColumnLock | boolean): ReactNode | undefined {\n    const {\n      tableStore: { dataSet, emptyText, width },\n    } = this.context;\n    const { prefixCls } = this.props;\n    const style: CSSProperties = width\n      ? {\n        marginLeft: pxToRem(width / 2),\n      }\n      : {\n        transform: 'none',\n        display: 'inline-block',\n      };\n    const tdStyle: CSSProperties = width ? {} : { textAlign: 'center' };\n    return (\n      <tr className={`${prefixCls}-empty-row`}>\n        <td colSpan={columns.length} style={tdStyle}>\n          <div style={style}>{!lock && dataSet.status === DataSetStatus.ready && emptyText}</div>\n        </td>\n      </tr>\n    );\n  }\n\n  @autobind\n  renderExpandedRows(\n    columns: ColumnProps[],\n    record: Record,\n    isExpanded?: boolean,\n    lock?: ColumnLock | boolean,\n  ): ReactNode {\n    return this.getRows(record.children || [], columns, isExpanded, lock);\n  }\n\n  getRow(\n    columns: ColumnProps[],\n    record: Record,\n    index: number,\n    expanded?: boolean,\n    lock?: ColumnLock | boolean,\n  ): ReactNode {\n    const { prefixCls, indentSize, dragColumnAlign } = this.props;\n    const {\n      tableStore: { isTree, dragColumnAlign: propsDragColumnAlign, props: { rowDragRender = {} }, dragRow },\n    } = this.context;\n    const { draggableProps } = rowDragRender;\n    const children = isTree && (\n      <ExpandedRow record={record} columns={columns} lock={lock}>\n        {this.renderExpandedRows}\n      </ExpandedRow>\n    );\n    return (\n      <Draggable\n        draggableId={record.key.toString()}\n        index={index}\n        isDragDisabled={(dragColumnAlign || propsDragColumnAlign) ? !(dragColumnAlign && propsDragColumnAlign) : !dragRow}\n        key={record.key}\n      >\n        {(\n          provided: DraggableProvided,\n          snapshot: DraggableStateSnapshot,\n        ) => (\n          <TableRow\n            provided={provided}\n            snapshot={snapshot}\n            key={record.key}\n            hidden={!expanded}\n            lock={lock}\n            indentSize={indentSize}\n            prefixCls={prefixCls}\n            columns={columns}\n            record={record}\n            index={index}\n            dragColumnAlign={dragColumnAlign}\n            {...draggableProps}\n          >\n            {children}\n          </TableRow>\n        )}\n      </Draggable>\n    );\n  }\n\n  @autobind\n  @action\n  syncBodyHeight() {\n    const { tableStore } = this.context;\n    if (this.tableBody && !tableStore.hidden) {\n      tableStore.bodyHeight = this.tableBody.offsetHeight;\n    }\n  }\n}\n"]}