{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/rc-components/tree/TreeNode.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\n// @ts-nocheck \nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// @ts-ignore\nimport { polyfill } from 'react-lifecycles-compat';\nimport { TreeContext, TreeContextProps } from './contextTypes';\nimport { getDataAndAria } from './util';\nimport { IconType, Key, DataNode } from './interface';\nimport Indent from './Indent';\nimport { convertNodePropsToEventData } from './utils/treeUtil';\n\n\n\nconst ICON_OPEN = 'open';\nconst ICON_CLOSE = 'close';\n\nconst defaultTitle = '---';\n\nexport interface TreeNodeProps {\n  eventKey?: Key; // Pass by parent `cloneElement`\n  prefixCls?: string;\n  className?: string;\n  style?: React.CSSProperties;\n\n  // By parent\n  expanded?: boolean;\n  selected?: boolean;\n  checked?: boolean;\n  loaded?: boolean;\n  loading?: boolean;\n  halfChecked?: boolean;\n  title?: React.ReactNode | ((data: DataNode) => React.ReactNode);\n  dragOver?: boolean;\n  dragOverGapTop?: boolean;\n  dragOverGapBottom?: boolean;\n  pos?: string;\n  domRef?: React.Ref<HTMLDivElement>;\n  /** New added in Tree for easy data access */\n  data?: DataNode;\n  isStart?: boolean[];\n  isEnd?: boolean[];\n  active?: boolean;\n  onMouseMove?: React.MouseEventHandler<HTMLDivElement>;\n\n  // By user\n  isLeaf?: boolean;\n  checkable?: boolean;\n  selectable?: boolean;\n  disabled?: boolean;\n  disableCheckbox?: boolean;\n  icon?: IconType;\n  switcherIcon?: IconType;\n  children?: React.ReactNode;\n}\n\nexport interface InternalTreeNodeProps extends TreeNodeProps {\n  context?: TreeContextProps;\n}\n\nexport interface TreeNodeState {\n  dragNodeHighlight: boolean;\n}\n\nclass InternalTreeNode extends React.Component<InternalTreeNodeProps, TreeNodeState> {\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    onSelect: PropTypes.func,\n\n    // By parent\n    eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    expanded: PropTypes.bool,\n    selected: PropTypes.bool,\n    checked: PropTypes.bool,\n    loaded: PropTypes.bool,\n    loading: PropTypes.bool,\n    halfChecked: PropTypes.bool,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    dragOver: PropTypes.bool,\n    dragOverGapTop: PropTypes.bool,\n    dragOverGapBottom: PropTypes.bool,\n    pos: PropTypes.string,\n\n    // By user\n    isLeaf: PropTypes.bool,\n    checkable: PropTypes.bool,\n    selectable: PropTypes.bool,\n    disabled: PropTypes.bool,\n    disableCheckbox: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  };\n\n  public state = {\n    dragNodeHighlight: false,\n  };\n\n  public selectHandle: HTMLSpanElement;\n\n  // Isomorphic needn't load data in server side\n  componentDidMount() {\n    this.syncLoadData(this.props);\n  }\n\n  componentDidUpdate() {\n    this.syncLoadData(this.props);\n  }\n \n  onSelectorClick = e => {\n    // Click trigger before select/check operation\n    const {\n      context: { onNodeClick },\n    } = this.props;\n    onNodeClick(e, convertNodePropsToEventData(this.props));\n\n    if (this.isSelectable()) {\n      this.onSelect(e);\n    } else {\n      this.onCheck(e);\n    }\n  };\n\n  onSelectorDoubleClick = e => {\n    const {\n      context: { onNodeDoubleClick },\n    } = this.props;\n    onNodeDoubleClick(e, convertNodePropsToEventData(this.props));\n  };\n  \n  onSelect = e => {\n    if (this.isDisabled()) return;\n\n    const {\n      context: { onNodeSelect },\n    } = this.props;\n    e.preventDefault();\n    onNodeSelect(e, convertNodePropsToEventData(this.props));\n  };\n\n  onCheck = e => {\n    if (this.isDisabled()) return;\n\n    const { disableCheckbox, checked } = this.props;\n    const {\n      context: { onNodeCheck },\n    } = this.props;\n\n    if (!this.isCheckable() || disableCheckbox) return;\n\n    e.preventDefault();\n    const targetChecked = !checked;\n    onNodeCheck(e, convertNodePropsToEventData(this.props), targetChecked);\n  };\n\n  onMouseEnter = e => {\n    const {\n      context: { onNodeMouseEnter },\n    } = this.props;\n    onNodeMouseEnter(e, convertNodePropsToEventData(this.props));\n  };\n\n  onMouseLeave = e => {\n    const {\n      context: { onNodeMouseLeave },\n    } = this.props;\n    onNodeMouseLeave(e, convertNodePropsToEventData(this.props));\n  };\n\n  onContextMenu = e => {\n    const {\n      context: { onNodeContextMenu },\n    } = this.props;\n    onNodeContextMenu(e, convertNodePropsToEventData(this.props));\n  };\n\n  onDragStart = e => {\n    const {\n      context: { onNodeDragStart },\n    } = this.props;\n\n    e.stopPropagation();\n    this.setState({\n      dragNodeHighlight: true,\n    });\n    onNodeDragStart(e, this);\n\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer.setData('text/plain', '');\n    } catch (error) {\n      // empty\n    }\n  };\n\n  onDragEnter = e => {\n    const {\n      context: { onNodeDragEnter },\n    } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n    onNodeDragEnter(e, this);\n  };\n\n  onDragOver = e => {\n    const {\n      context: { onNodeDragOver },\n    } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n    onNodeDragOver(e, this);\n  };\n\n  onDragLeave = e => {\n    const {\n      context: { onNodeDragLeave },\n    } = this.props;\n\n    e.stopPropagation();\n    onNodeDragLeave(e, this);\n  };\n\n  onDragEnd = e => {\n    const {\n      context: { onNodeDragEnd },\n    } = this.props;\n\n    e.stopPropagation();\n    this.setState({\n      dragNodeHighlight: false,\n    });\n    onNodeDragEnd(e, this);\n  };\n\n  onDrop = e => {\n    const {\n      context: { onNodeDrop },\n    } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({\n      dragNodeHighlight: false,\n    });\n    onNodeDrop(e, this);\n  };\n\n  // Disabled item still can be switch\n  onExpand: React.MouseEventHandler<HTMLDivElement> = e => {\n    const {\n      context: { onNodeExpand },\n    } = this.props;\n    onNodeExpand(e, convertNodePropsToEventData(this.props));\n  };\n\n  // Drag usage\n  setSelectHandle = node => {\n    this.selectHandle = node;\n  };\n\n  getNodeState = () => {\n    const { expanded } = this.props;\n\n    if (this.isLeaf()) {\n      return null;\n    }\n\n    return expanded ? ICON_OPEN : ICON_CLOSE;\n  };\n\n  hasChildren = () => {\n    const { eventKey } = this.props;\n    const {\n      context: { keyEntities },\n    } = this.props;\n    const {\n      node:{\n        hasChildren,\n      },\n    } = keyEntities[eventKey] || {}\n    const { children } = keyEntities[eventKey] || {};\n    return !!(children || []).length || hasChildren;\n  };\n\n  isLeaf = () => {\n    const { isLeaf, loaded } = this.props;\n    const {\n      context: { loadData },\n    } = this.props;\n\n    const hasChildren = this.hasChildren();\n\n    if (isLeaf === false) {\n      return false;\n    }\n\n    return isLeaf || (!loadData && !hasChildren) || (loadData && loaded && !hasChildren);\n  };\n\n  isDisabled = () => {\n    const { disabled } = this.props;\n    const {\n      context: { disabled: treeDisabled },\n    } = this.props;\n\n    return !!(treeDisabled || disabled);\n  };\n\n  isCheckable = () => {\n    const { checkable } = this.props;\n    const {\n      context: { checkable: treeCheckable },\n    } = this.props;\n\n    // Return false if tree or treeNode is not checkable\n    if (!treeCheckable || checkable === false) return false;\n    return treeCheckable;\n  };\n\n  // Load data to avoid default expanded tree without data\n  syncLoadData = props => {\n    const { expanded, loading, loaded } = props;\n    const {\n      context: { loadData, onNodeLoad },\n    } = this.props;\n\n    if (loading) return;\n\n    // read from state to avoid loadData at same time\n    if (loadData && expanded && !this.isLeaf()) {\n      // We needn't reload data when has children in sync logic\n      // It's only needed in node expanded\n      if (!this.hasChildren() && !loaded) {\n        onNodeLoad(convertNodePropsToEventData(this.props));\n      }\n    }\n  };\n\n  isSelectable() {\n    const { selectable } = this.props;\n    const {\n      context: { selectable: treeSelectable },\n    } = this.props;\n\n    // Ignore when selectable is undefined or null\n    if (typeof selectable === 'boolean') {\n      return selectable;\n    }\n\n    return treeSelectable;\n  }\n\n    // Switcher\n  renderSwitcher = () => {\n      const { expanded, switcherIcon: switcherIconFromProps } = this.props;\n      const {\n        context: { prefixCls, switcherIcon: switcherIconFromCtx },\n      } = this.props;\n  \n      const switcherIcon = switcherIconFromProps || switcherIconFromCtx;\n  \n      if (this.isLeaf()) {\n        return (\n          <span className={classNames(`${prefixCls}-switcher`, `${prefixCls}-switcher-noop`)}>\n            {typeof switcherIcon === 'function'\n              ? switcherIcon({ ...this.props, isLeaf: true })\n              : switcherIcon}\n          </span>\n        );\n      }\n  \n      const switcherCls = classNames(\n        `${prefixCls}-switcher`,\n        `${prefixCls}-switcher_${expanded ? ICON_OPEN : ICON_CLOSE}`,\n      );\n      return (\n        <span onClick={this.onExpand} className={switcherCls}>\n          {typeof switcherIcon === 'function'\n            ? switcherIcon({ ...this.props, isLeaf: false })\n            : switcherIcon}\n        </span>\n      );\n  };\n\n  // Checkbox\n  renderCheckbox = () => {\n    const { checked, halfChecked, disableCheckbox } = this.props;\n    const {\n      context: { prefixCls },\n    } = this.props;\n    const disabled = this.isDisabled();\n    const checkable = this.isCheckable();\n\n    if (!checkable) return null;\n\n    // [Legacy] Custom element should be separate with `checkable` in future\n    const $custom = typeof checkable !== 'boolean' ? checkable : null;\n\n    return (\n      <span\n        className={classNames(\n          `${prefixCls}-checkbox`,\n          checked && `${prefixCls}-checkbox-checked`,\n          !checked && halfChecked && `${prefixCls}-checkbox-indeterminate`,\n          (disabled || disableCheckbox) && `${prefixCls}-checkbox-disabled`,\n        )}\n        onClick={this.onCheck}\n      >\n        {$custom}\n      </span>\n    );\n  };\n\n  renderIcon = () => {\n    const { loading } = this.props;\n    const {\n      context: { prefixCls },\n    } = this.props;\n\n    return (\n      <span\n        className={classNames(\n          `${prefixCls}-iconEle`,\n          `${prefixCls}-icon__${this.getNodeState() || 'docu'}`,\n          loading && `${prefixCls}-icon_loading`,\n        )}\n      />\n    );\n  };\n\n  // Icon + Title\n  renderSelector = () => {\n    const { dragNodeHighlight } = this.state;\n    const { title, selected, icon, loading, data } = this.props;\n    const {\n      context: { prefixCls, showIcon, icon: treeIcon, draggable, loadData },\n    } = this.props;\n    const disabled = this.isDisabled();\n\n    const wrapClass = `${prefixCls}-node-content-wrapper`;\n\n    // Icon - Still show loading icon when loading without showIcon\n    let $icon;\n\n    if (showIcon) {\n      const currentIcon = icon || treeIcon;\n\n      $icon = currentIcon ? (\n        <span className={classNames(`${prefixCls}-iconEle`, `${prefixCls}-icon__customize`)}>\n          {typeof currentIcon === 'function' ? currentIcon(this.props) : currentIcon}\n        </span>\n      ) : (\n        this.renderIcon()\n      );\n    } else if (loadData && loading) {\n      $icon = this.renderIcon();\n    }\n\n    // Title\n    const $title = (\n      <span className={`${prefixCls}-title`}>\n        {typeof title === 'function' ? title(data) : title}\n      </span>\n    );\n\n    return (\n      <span\n        ref={this.setSelectHandle}\n        title={typeof title === 'string' ? title : ''}\n        className={classNames(\n          `${wrapClass}`,\n          `${wrapClass}-${this.getNodeState() || 'normal'}`,\n          !disabled && (selected || dragNodeHighlight) && `${prefixCls}-node-selected`,\n          !disabled && draggable && 'draggable',\n        )}\n        draggable={(!disabled && draggable) || undefined}\n        aria-grabbed={(!disabled && draggable) || undefined}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onContextMenu={this.onContextMenu}\n        onClick={this.onSelectorClick}\n        onDoubleClick={this.onSelectorDoubleClick}\n        onDragStart={draggable ? this.onDragStart : undefined}\n      >\n        {$icon}\n        {$title}\n      </span>\n    );\n  };\n\n  render() {\n    const {\n      eventKey,\n      className,\n      style,\n      dragOver,\n      dragOverGapTop,\n      dragOverGapBottom,\n      isLeaf,\n      isStart,\n      isEnd,\n      expanded,\n      selected,\n      checked,\n      halfChecked,\n      loading,\n      domRef,\n      active,\n      onMouseMove,\n      ...otherProps\n    } = this.props;\n    const {\n      context: { prefixCls, filterTreeNode, draggable, keyEntities },\n    } = this.props;\n    const disabled = this.isDisabled();\n    const dataOrAriaAttributeProps = getDataAndAria(otherProps);\n    const { level } = keyEntities[eventKey] || {};\n\n    return (\n      <div\n        ref={domRef}\n        className={classNames(className, `${prefixCls}-treenode`, {\n          [`${prefixCls}-treenode-disabled`]: disabled,\n          [`${prefixCls}-treenode-switcher-${expanded ? 'open' : 'close'}`]: !isLeaf,\n          [`${prefixCls}-treenode-checkbox-checked`]: checked,\n          [`${prefixCls}-treenode-checkbox-indeterminate`]: halfChecked,\n          [`${prefixCls}-treenode-selected`]: selected,\n          [`${prefixCls}-treenode-loading`]: loading,\n          [`${prefixCls}-treenode-active`]: active,\n\n          'drag-over': !disabled && dragOver,\n          'drag-over-gap-top': !disabled && dragOverGapTop,\n          'drag-over-gap-bottom': !disabled && dragOverGapBottom,\n          'filter-node': filterTreeNode && filterTreeNode(convertNodePropsToEventData(this.props)),\n        })}\n        style={style}\n        onDragEnter={draggable ? this.onDragEnter : undefined}\n        onDragOver={draggable ? this.onDragOver : undefined}\n        onDragLeave={draggable ? this.onDragLeave : undefined}\n        onDrop={draggable ? this.onDrop : undefined}\n        onDragEnd={draggable ? this.onDragEnd : undefined}\n        onMouseMove={onMouseMove}\n        {...dataOrAriaAttributeProps}\n      >\n        <Indent prefixCls={prefixCls} level={level} isStart={isStart} isEnd={isEnd} />\n        {this.renderSwitcher()}\n        {this.renderCheckbox()}\n        {this.renderSelector()}\n      </div>\n    );\n  }\n}\n\npolyfill(InternalTreeNode);\n\nconst ContextTreeNode: React.FC<TreeNodeProps> = props => (\n  <TreeContext.Consumer>\n    {context => <InternalTreeNode {...props} context={context} />}\n  </TreeContext.Consumer>\n);\n\nContextTreeNode.displayName = 'TreeNode';\n\nContextTreeNode.defaultProps = {\n  title: defaultTitle,\n};\n\n(ContextTreeNode as any).isTreeNode = 1;\n\nexport { InternalTreeNode };\n\nexport default ContextTreeNode;\n"]}