745a41e56e7bfc118a5b45eae98773f5
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.T = T;
exports.fileToObject = fileToObject;
exports.genPercentAdd = genPercentAdd;
exports.getFileItem = getFileItem;
exports.removeFileItem = removeFileItem;

function T() {
  return true;
} // Fix IE file.status problem
// via coping a new Object


function fileToObject(file) {
  return {
    lastModified: file.lastModified,
    lastModifiedDate: file.lastModifiedDate,
    name: file.filename || file.name,
    size: file.size,
    type: file.type,
    uid: file.uid,
    response: file.response,
    error: file.error,
    percent: 0,
    originFileObj: file
  };
}
/**
 * 生成Progress percent: 0.1 -> 0.98
 *   - for ie
 */


function genPercentAdd() {
  var k = 0.1;
  var i = 0.01;
  var end = 0.98;
  return function (s) {
    var start = s;

    if (start >= end) {
      return start;
    }

    start += k;
    k -= i;

    if (k < 0.001) {
      k = 0.001;
    }

    return start * 100;
  };
}

function getFileItem(file, fileList) {
  var matchKey = file.uid !== undefined ? 'uid' : 'name';
  return fileList.filter(function (item) {
    return item[matchKey] === file[matchKey];
  })[0];
}

function removeFileItem(file, fileList) {
  var matchKey = file.uid !== undefined ? 'uid' : 'name';
  var removed = fileList.filter(function (item) {
    return item[matchKey] !== file[matchKey];
  });

  if (removed.length === fileList.length) {
    return null;
  }

  return removed;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9odWlodWF3ay9Eb2N1bWVudHMvb3B0L2Nob2Vyb2Rvbi11aS9jb21wb25lbnRzL3VwbG9hZC91dGlscy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFTSxTQUFVLENBQVYsR0FBVztBQUNmLFNBQU8sSUFBUDtBQUNELEMsQ0FFRDtBQUNBOzs7QUFDTSxTQUFVLFlBQVYsQ0FBdUIsSUFBdkIsRUFBdUM7QUFDM0MsU0FBTztBQUNMLElBQUEsWUFBWSxFQUFFLElBQUksQ0FBQyxZQURkO0FBRUwsSUFBQSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsZ0JBRmxCO0FBR0wsSUFBQSxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQUwsSUFBaUIsSUFBSSxDQUFDLElBSHZCO0FBSUwsSUFBQSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBSk47QUFLTCxJQUFBLElBQUksRUFBRSxJQUFJLENBQUMsSUFMTjtBQU1MLElBQUEsR0FBRyxFQUFFLElBQUksQ0FBQyxHQU5MO0FBT0wsSUFBQSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBUFY7QUFRTCxJQUFBLEtBQUssRUFBRSxJQUFJLENBQUMsS0FSUDtBQVNMLElBQUEsT0FBTyxFQUFFLENBVEo7QUFVTCxJQUFBLGFBQWEsRUFBRTtBQVZWLEdBQVA7QUFZRDtBQUVEOzs7Ozs7QUFJTSxTQUFVLGFBQVYsR0FBdUI7QUFDM0IsTUFBSSxDQUFDLEdBQUcsR0FBUjtBQUNBLE1BQU0sQ0FBQyxHQUFHLElBQVY7QUFDQSxNQUFNLEdBQUcsR0FBRyxJQUFaO0FBQ0EsU0FBTyxVQUFTLENBQVQsRUFBa0I7QUFDdkIsUUFBSSxLQUFLLEdBQUcsQ0FBWjs7QUFDQSxRQUFJLEtBQUssSUFBSSxHQUFiLEVBQWtCO0FBQ2hCLGFBQU8sS0FBUDtBQUNEOztBQUVELElBQUEsS0FBSyxJQUFJLENBQVQ7QUFDQSxJQUFBLENBQUMsSUFBSSxDQUFMOztBQUNBLFFBQUksQ0FBQyxHQUFHLEtBQVIsRUFBZTtBQUNiLE1BQUEsQ0FBQyxHQUFHLEtBQUo7QUFDRDs7QUFDRCxXQUFPLEtBQUssR0FBRyxHQUFmO0FBQ0QsR0FaRDtBQWFEOztBQUVLLFNBQVUsV0FBVixDQUFzQixJQUF0QixFQUF3QyxRQUF4QyxFQUE4RDtBQUNsRSxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBTCxLQUFhLFNBQWIsR0FBeUIsS0FBekIsR0FBaUMsTUFBbEQ7QUFDQSxTQUFPLFFBQVEsQ0FBQyxNQUFULENBQWdCLFVBQUEsSUFBSTtBQUFBLFdBQUksSUFBSSxDQUFDLFFBQUQsQ0FBSixLQUFtQixJQUFJLENBQUMsUUFBRCxDQUEzQjtBQUFBLEdBQXBCLEVBQTJELENBQTNELENBQVA7QUFDRDs7QUFFSyxTQUFVLGNBQVYsQ0FBeUIsSUFBekIsRUFBMkMsUUFBM0MsRUFBaUU7QUFDckUsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLEdBQUwsS0FBYSxTQUFiLEdBQXlCLEtBQXpCLEdBQWlDLE1BQWxEO0FBQ0EsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLE1BQVQsQ0FBZ0IsVUFBQSxJQUFJO0FBQUEsV0FBSSxJQUFJLENBQUMsUUFBRCxDQUFKLEtBQW1CLElBQUksQ0FBQyxRQUFELENBQTNCO0FBQUEsR0FBcEIsQ0FBaEI7O0FBQ0EsTUFBSSxPQUFPLENBQUMsTUFBUixLQUFtQixRQUFRLENBQUMsTUFBaEMsRUFBd0M7QUFDdEMsV0FBTyxJQUFQO0FBQ0Q7O0FBQ0QsU0FBTyxPQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVcGxvYWRGaWxlIH0gZnJvbSAnLi9pbnRlcmZhY2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gVCgpIHtcbiAgcmV0dXJuIHRydWU7XG59XG5cbi8vIEZpeCBJRSBmaWxlLnN0YXR1cyBwcm9ibGVtXG4vLyB2aWEgY29waW5nIGEgbmV3IE9iamVjdFxuZXhwb3J0IGZ1bmN0aW9uIGZpbGVUb09iamVjdChmaWxlOiBVcGxvYWRGaWxlKSB7XG4gIHJldHVybiB7XG4gICAgbGFzdE1vZGlmaWVkOiBmaWxlLmxhc3RNb2RpZmllZCxcbiAgICBsYXN0TW9kaWZpZWREYXRlOiBmaWxlLmxhc3RNb2RpZmllZERhdGUsXG4gICAgbmFtZTogZmlsZS5maWxlbmFtZSB8fCBmaWxlLm5hbWUsXG4gICAgc2l6ZTogZmlsZS5zaXplLFxuICAgIHR5cGU6IGZpbGUudHlwZSxcbiAgICB1aWQ6IGZpbGUudWlkLFxuICAgIHJlc3BvbnNlOiBmaWxlLnJlc3BvbnNlLFxuICAgIGVycm9yOiBmaWxlLmVycm9yLFxuICAgIHBlcmNlbnQ6IDAsXG4gICAgb3JpZ2luRmlsZU9iajogZmlsZSBhcyAoRmlsZSB8IFVwbG9hZEZpbGUpLFxuICB9IGFzIFVwbG9hZEZpbGU7XG59XG5cbi8qKlxuICog55Sf5oiQUHJvZ3Jlc3MgcGVyY2VudDogMC4xIC0+IDAuOThcbiAqICAgLSBmb3IgaWVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdlblBlcmNlbnRBZGQoKSB7XG4gIGxldCBrID0gMC4xO1xuICBjb25zdCBpID0gMC4wMTtcbiAgY29uc3QgZW5kID0gMC45ODtcbiAgcmV0dXJuIGZ1bmN0aW9uKHM6IG51bWJlcikge1xuICAgIGxldCBzdGFydCA9IHM7XG4gICAgaWYgKHN0YXJ0ID49IGVuZCkge1xuICAgICAgcmV0dXJuIHN0YXJ0O1xuICAgIH1cblxuICAgIHN0YXJ0ICs9IGs7XG4gICAgayAtPSBpO1xuICAgIGlmIChrIDwgMC4wMDEpIHtcbiAgICAgIGsgPSAwLjAwMTtcbiAgICB9XG4gICAgcmV0dXJuIHN0YXJ0ICogMTAwO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RmlsZUl0ZW0oZmlsZTogVXBsb2FkRmlsZSwgZmlsZUxpc3Q6IFVwbG9hZEZpbGVbXSkge1xuICBjb25zdCBtYXRjaEtleSA9IGZpbGUudWlkICE9PSB1bmRlZmluZWQgPyAndWlkJyA6ICduYW1lJztcbiAgcmV0dXJuIGZpbGVMaXN0LmZpbHRlcihpdGVtID0+IGl0ZW1bbWF0Y2hLZXldID09PSBmaWxlW21hdGNoS2V5XSlbMF07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVGaWxlSXRlbShmaWxlOiBVcGxvYWRGaWxlLCBmaWxlTGlzdDogVXBsb2FkRmlsZVtdKSB7XG4gIGNvbnN0IG1hdGNoS2V5ID0gZmlsZS51aWQgIT09IHVuZGVmaW5lZCA/ICd1aWQnIDogJ25hbWUnO1xuICBjb25zdCByZW1vdmVkID0gZmlsZUxpc3QuZmlsdGVyKGl0ZW0gPT4gaXRlbVttYXRjaEtleV0gIT09IGZpbGVbbWF0Y2hLZXldKTtcbiAgaWYgKHJlbW92ZWQubGVuZ3RoID09PSBmaWxlTGlzdC5sZW5ndGgpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gcmVtb3ZlZDtcbn1cbiJdfQ==