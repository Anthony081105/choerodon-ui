6850b86296d770cecc5beba28c051c08
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var Marks = function Marks(_ref) {
  var className = _ref.className,
      vertical = _ref.vertical,
      marks = _ref.marks,
      included = _ref.included,
      upperBound = _ref.upperBound,
      lowerBound = _ref.lowerBound,
      max = _ref.max,
      min = _ref.min,
      onClickLabel = _ref.onClickLabel;
  var marksKeys = Object.keys(marks);
  var marksCount = marksKeys.length;
  var unit = marksCount > 1 ? 100 / (marksCount - 1) : 100;
  var markWidth = unit * 0.9;
  var range = max - min;
  var elements = marksKeys.map(parseFloat).sort(function (a, b) {
    return a - b;
  }).map(function (point) {
    var _classNames;

    var markPoint = marks[point];
    var markPointIsObject = (0, _typeof2["default"])(markPoint) === 'object' && !(0, _react.isValidElement)(markPoint);
    var markLabel = markPointIsObject ? markPoint.label : markPoint;

    if (!markLabel && markLabel !== 0) {
      return null;
    }

    var isActive = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
    var markClassName = (0, _classnames["default"])((_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(className, "-text"), true), (0, _defineProperty2["default"])(_classNames, "".concat(className, "-text-active"), isActive), _classNames));
    var bottomStyle = {
      marginBottom: '-50%',
      bottom: "".concat((point - min) / range * 100, "%")
    };
    var leftStyle = {
      width: "".concat(markWidth, "%"),
      marginLeft: "".concat(-markWidth / 2, "%"),
      left: "".concat((point - min) / range * 100, "%")
    };
    var style = vertical ? bottomStyle : leftStyle;
    var markStyle = markPointIsObject ? (0, _objectSpread2["default"])({}, style, {}, markPoint.style) : style;
    return _react["default"].createElement("span", {
      className: markClassName,
      style: markStyle,
      key: point,
      onMouseDown: function onMouseDown(e) {
        return onClickLabel(e, point);
      },
      onTouchStart: function onTouchStart(e) {
        return onClickLabel(e, point);
      }
    }, markLabel);
  });
  return _react["default"].createElement("div", {
    className: className
  }, elements);
};

var _default = Marks;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1hcmtzLmpzeCJdLCJuYW1lcyI6WyJNYXJrcyIsImNsYXNzTmFtZSIsInZlcnRpY2FsIiwibWFya3MiLCJpbmNsdWRlZCIsInVwcGVyQm91bmQiLCJsb3dlckJvdW5kIiwibWF4IiwibWluIiwib25DbGlja0xhYmVsIiwibWFya3NLZXlzIiwiT2JqZWN0Iiwia2V5cyIsIm1hcmtzQ291bnQiLCJsZW5ndGgiLCJ1bml0IiwibWFya1dpZHRoIiwicmFuZ2UiLCJlbGVtZW50cyIsIm1hcCIsInBhcnNlRmxvYXQiLCJzb3J0IiwiYSIsImIiLCJwb2ludCIsIm1hcmtQb2ludCIsIm1hcmtQb2ludElzT2JqZWN0IiwibWFya0xhYmVsIiwibGFiZWwiLCJpc0FjdGl2ZSIsIm1hcmtDbGFzc05hbWUiLCJib3R0b21TdHlsZSIsIm1hcmdpbkJvdHRvbSIsImJvdHRvbSIsImxlZnRTdHlsZSIsIndpZHRoIiwibWFyZ2luTGVmdCIsImxlZnQiLCJzdHlsZSIsIm1hcmtTdHlsZSIsImUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsS0FBSyxHQUFHLFNBQVJBLEtBQVEsT0FTUjtBQUFBLE1BUkpDLFNBUUksUUFSSkEsU0FRSTtBQUFBLE1BUEpDLFFBT0ksUUFQSkEsUUFPSTtBQUFBLE1BTkpDLEtBTUksUUFOSkEsS0FNSTtBQUFBLE1BTEpDLFFBS0ksUUFMSkEsUUFLSTtBQUFBLE1BSkpDLFVBSUksUUFKSkEsVUFJSTtBQUFBLE1BSEpDLFVBR0ksUUFISkEsVUFHSTtBQUFBLE1BRkpDLEdBRUksUUFGSkEsR0FFSTtBQUFBLE1BRkNDLEdBRUQsUUFGQ0EsR0FFRDtBQUFBLE1BREpDLFlBQ0ksUUFESkEsWUFDSTtBQUNKLE1BQU1DLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlULEtBQVosQ0FBbEI7QUFDQSxNQUFNVSxVQUFVLEdBQUdILFNBQVMsQ0FBQ0ksTUFBN0I7QUFDQSxNQUFNQyxJQUFJLEdBQUdGLFVBQVUsR0FBRyxDQUFiLEdBQWlCLE9BQU9BLFVBQVUsR0FBRyxDQUFwQixDQUFqQixHQUEwQyxHQUF2RDtBQUNBLE1BQU1HLFNBQVMsR0FBR0QsSUFBSSxHQUFHLEdBQXpCO0FBRUEsTUFBTUUsS0FBSyxHQUFHVixHQUFHLEdBQUdDLEdBQXBCO0FBQ0EsTUFBTVUsUUFBUSxHQUFHUixTQUFTLENBQUNTLEdBQVYsQ0FBY0MsVUFBZCxFQUEwQkMsSUFBMUIsQ0FBK0IsVUFBQ0MsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsV0FBVUQsQ0FBQyxHQUFHQyxDQUFkO0FBQUEsR0FBL0IsRUFBZ0RKLEdBQWhELENBQW9ELFVBQUFLLEtBQUssRUFBSTtBQUFBOztBQUM1RSxRQUFNQyxTQUFTLEdBQUd0QixLQUFLLENBQUNxQixLQUFELENBQXZCO0FBQ0EsUUFBTUUsaUJBQWlCLEdBQUcseUJBQU9ELFNBQVAsTUFBcUIsUUFBckIsSUFDbEIsQ0FBQywyQkFBZUEsU0FBZixDQURUO0FBRUEsUUFBTUUsU0FBUyxHQUFHRCxpQkFBaUIsR0FBR0QsU0FBUyxDQUFDRyxLQUFiLEdBQXFCSCxTQUF4RDs7QUFDQSxRQUFJLENBQUNFLFNBQUQsSUFBY0EsU0FBUyxLQUFLLENBQWhDLEVBQW1DO0FBQ2pDLGFBQU8sSUFBUDtBQUNEOztBQUVELFFBQU1FLFFBQVEsR0FBSSxDQUFDekIsUUFBRCxJQUFhb0IsS0FBSyxLQUFLbkIsVUFBeEIsSUFDUkQsUUFBUSxJQUFJb0IsS0FBSyxJQUFJbkIsVUFBckIsSUFBbUNtQixLQUFLLElBQUlsQixVQURyRDtBQUVBLFFBQU13QixhQUFhLEdBQUcsdUdBQ2hCN0IsU0FEZ0IsWUFDRyxJQURILDJEQUVoQkEsU0FGZ0IsbUJBRVU0QixRQUZWLGdCQUF0QjtBQUtBLFFBQU1FLFdBQVcsR0FBRztBQUNsQkMsTUFBQUEsWUFBWSxFQUFFLE1BREk7QUFFbEJDLE1BQUFBLE1BQU0sWUFBSyxDQUFDVCxLQUFLLEdBQUdoQixHQUFULElBQWdCUyxLQUFoQixHQUF3QixHQUE3QjtBQUZZLEtBQXBCO0FBS0EsUUFBTWlCLFNBQVMsR0FBRztBQUNoQkMsTUFBQUEsS0FBSyxZQUFLbkIsU0FBTCxNQURXO0FBRWhCb0IsTUFBQUEsVUFBVSxZQUFLLENBQUNwQixTQUFELEdBQWEsQ0FBbEIsTUFGTTtBQUdoQnFCLE1BQUFBLElBQUksWUFBSyxDQUFDYixLQUFLLEdBQUdoQixHQUFULElBQWdCUyxLQUFoQixHQUF3QixHQUE3QjtBQUhZLEtBQWxCO0FBTUEsUUFBTXFCLEtBQUssR0FBR3BDLFFBQVEsR0FBRzZCLFdBQUgsR0FBaUJHLFNBQXZDO0FBQ0EsUUFBTUssU0FBUyxHQUFHYixpQkFBaUIsc0NBQ3RCWSxLQURzQixNQUNaYixTQUFTLENBQUNhLEtBREUsSUFDUUEsS0FEM0M7QUFFQSxXQUNFO0FBQ0UsTUFBQSxTQUFTLEVBQUVSLGFBRGI7QUFFRSxNQUFBLEtBQUssRUFBRVMsU0FGVDtBQUdFLE1BQUEsR0FBRyxFQUFFZixLQUhQO0FBSUUsTUFBQSxXQUFXLEVBQUUscUJBQUNnQixDQUFEO0FBQUEsZUFBTy9CLFlBQVksQ0FBQytCLENBQUQsRUFBSWhCLEtBQUosQ0FBbkI7QUFBQSxPQUpmO0FBS0UsTUFBQSxZQUFZLEVBQUUsc0JBQUNnQixDQUFEO0FBQUEsZUFBTy9CLFlBQVksQ0FBQytCLENBQUQsRUFBSWhCLEtBQUosQ0FBbkI7QUFBQTtBQUxoQixPQU9HRyxTQVBILENBREY7QUFXRCxHQXpDZ0IsQ0FBakI7QUEyQ0EsU0FBTztBQUFLLElBQUEsU0FBUyxFQUFFMUI7QUFBaEIsS0FBNEJpQixRQUE1QixDQUFQO0FBQ0QsQ0E1REQ7O2VBOERlbEIsSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBpc1ZhbGlkRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5jb25zdCBNYXJrcyA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgdmVydGljYWwsXG4gIG1hcmtzLFxuICBpbmNsdWRlZCxcbiAgdXBwZXJCb3VuZCxcbiAgbG93ZXJCb3VuZCxcbiAgbWF4LCBtaW4sXG4gIG9uQ2xpY2tMYWJlbCxcbn0pID0+IHtcbiAgY29uc3QgbWFya3NLZXlzID0gT2JqZWN0LmtleXMobWFya3MpO1xuICBjb25zdCBtYXJrc0NvdW50ID0gbWFya3NLZXlzLmxlbmd0aDtcbiAgY29uc3QgdW5pdCA9IG1hcmtzQ291bnQgPiAxID8gMTAwIC8gKG1hcmtzQ291bnQgLSAxKSA6IDEwMDtcbiAgY29uc3QgbWFya1dpZHRoID0gdW5pdCAqIDAuOTtcblxuICBjb25zdCByYW5nZSA9IG1heCAtIG1pbjtcbiAgY29uc3QgZWxlbWVudHMgPSBtYXJrc0tleXMubWFwKHBhcnNlRmxvYXQpLnNvcnQoKGEsIGIpID0+IGEgLSBiKS5tYXAocG9pbnQgPT4ge1xuICAgIGNvbnN0IG1hcmtQb2ludCA9IG1hcmtzW3BvaW50XTtcbiAgICBjb25zdCBtYXJrUG9pbnRJc09iamVjdCA9IHR5cGVvZiBtYXJrUG9pbnQgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICAhaXNWYWxpZEVsZW1lbnQobWFya1BvaW50KTtcbiAgICBjb25zdCBtYXJrTGFiZWwgPSBtYXJrUG9pbnRJc09iamVjdCA/IG1hcmtQb2ludC5sYWJlbCA6IG1hcmtQb2ludDtcbiAgICBpZiAoIW1hcmtMYWJlbCAmJiBtYXJrTGFiZWwgIT09IDApIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGNvbnN0IGlzQWN0aXZlID0gKCFpbmNsdWRlZCAmJiBwb2ludCA9PT0gdXBwZXJCb3VuZCkgfHxcbiAgICAgICAgICAgIChpbmNsdWRlZCAmJiBwb2ludCA8PSB1cHBlckJvdW5kICYmIHBvaW50ID49IGxvd2VyQm91bmQpO1xuICAgIGNvbnN0IG1hcmtDbGFzc05hbWUgPSBjbGFzc05hbWVzKHtcbiAgICAgIFtgJHtjbGFzc05hbWV9LXRleHRgXTogdHJ1ZSxcbiAgICAgIFtgJHtjbGFzc05hbWV9LXRleHQtYWN0aXZlYF06IGlzQWN0aXZlLFxuICAgIH0pO1xuXG4gICAgY29uc3QgYm90dG9tU3R5bGUgPSB7XG4gICAgICBtYXJnaW5Cb3R0b206ICctNTAlJyxcbiAgICAgIGJvdHRvbTogYCR7KHBvaW50IC0gbWluKSAvIHJhbmdlICogMTAwfSVgLFxuICAgIH07XG5cbiAgICBjb25zdCBsZWZ0U3R5bGUgPSB7XG4gICAgICB3aWR0aDogYCR7bWFya1dpZHRofSVgLFxuICAgICAgbWFyZ2luTGVmdDogYCR7LW1hcmtXaWR0aCAvIDJ9JWAsXG4gICAgICBsZWZ0OiBgJHsocG9pbnQgLSBtaW4pIC8gcmFuZ2UgKiAxMDB9JWAsXG4gICAgfTtcblxuICAgIGNvbnN0IHN0eWxlID0gdmVydGljYWwgPyBib3R0b21TdHlsZSA6IGxlZnRTdHlsZTtcbiAgICBjb25zdCBtYXJrU3R5bGUgPSBtYXJrUG9pbnRJc09iamVjdCA/XG4gICAgICAgICAgICB7IC4uLnN0eWxlLCAuLi5tYXJrUG9pbnQuc3R5bGUgfSA6IHN0eWxlO1xuICAgIHJldHVybiAoXG4gICAgICA8c3BhblxuICAgICAgICBjbGFzc05hbWU9e21hcmtDbGFzc05hbWV9XG4gICAgICAgIHN0eWxlPXttYXJrU3R5bGV9XG4gICAgICAgIGtleT17cG9pbnR9XG4gICAgICAgIG9uTW91c2VEb3duPXsoZSkgPT4gb25DbGlja0xhYmVsKGUsIHBvaW50KX1cbiAgICAgICAgb25Ub3VjaFN0YXJ0PXsoZSkgPT4gb25DbGlja0xhYmVsKGUsIHBvaW50KX1cbiAgICAgID5cbiAgICAgICAge21hcmtMYWJlbH1cbiAgICAgIDwvc3Bhbj5cbiAgICApO1xuICB9KTtcblxuICByZXR1cm4gPGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZX0+e2VsZW1lbnRzfTwvZGl2Pjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE1hcmtzO1xuIl19