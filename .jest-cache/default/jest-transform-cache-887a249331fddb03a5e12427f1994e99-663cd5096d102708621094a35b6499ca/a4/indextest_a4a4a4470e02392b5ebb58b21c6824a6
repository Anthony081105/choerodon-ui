42a34a39d940dbee0cab0ed0c097f29f
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _ = _interopRequireDefault(require(".."));

describe('notification', function () {
  beforeAll(function () {
    jest.useFakeTimers();
  });
  afterAll(function () {
    jest.useRealTimers();
  });
  afterEach(function () {
    _["default"].destroy();
  });
  it('should be able to hide manually', function () {
    _["default"].open({
      message: 'Notification Title',
      duration: 0,
      key: '1'
    });

    _["default"].open({
      message: 'Notification Title',
      duration: 0,
      key: '2'
    });

    expect(document.querySelectorAll('.c7n-notification-notice').length).toBe(2);

    _["default"].close('1');

    jest.runAllTimers();
    expect(document.querySelectorAll('.c7n-notification-notice').length).toBe(1);

    _["default"].close('2');

    jest.runAllTimers();
    expect(document.querySelectorAll('.c7n-notification-notice').length).toBe(0);
  });
  it('should be able to destroy globally', function () {
    _["default"].open({
      message: 'Notification Title',
      duration: 0
    });

    _["default"].open({
      message: 'Notification Title',
      duration: 0
    });

    expect(document.querySelectorAll('.c7n-notification').length).toBe(1);
    expect(document.querySelectorAll('.c7n-notification-notice').length).toBe(2);

    _["default"].destroy();

    expect(document.querySelectorAll('.c7n-notification').length).toBe(0);
    expect(document.querySelectorAll('.c7n-notification-notice').length).toBe(0);
  });
  it('should be able to destroy after config', function () {
    _["default"].config({
      bottom: 100
    });

    _["default"].destroy();
  });
  it('should be able to open with icon', function () {
    var openNotificationWithIcon = function openNotificationWithIcon(type) {
      var iconPrefix = '.c7n-notification-notice-icon';

      _["default"][type]({
        message: 'Notification Title',
        duration: 0,
        description: 'This is the content of the notification.'
      });

      expect(document.querySelectorAll("".concat(iconPrefix, "-").concat(type)).length).toBe(1);
    };

    ['success', 'info', 'warning', 'error'].forEach(function (type) {
      openNotificationWithIcon(type);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJiZWZvcmVBbGwiLCJqZXN0IiwidXNlRmFrZVRpbWVycyIsImFmdGVyQWxsIiwidXNlUmVhbFRpbWVycyIsImFmdGVyRWFjaCIsIm5vdGlmaWNhdGlvbiIsImRlc3Ryb3kiLCJpdCIsIm9wZW4iLCJtZXNzYWdlIiwiZHVyYXRpb24iLCJrZXkiLCJleHBlY3QiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsZW5ndGgiLCJ0b0JlIiwiY2xvc2UiLCJydW5BbGxUaW1lcnMiLCJjb25maWciLCJib3R0b20iLCJvcGVuTm90aWZpY2F0aW9uV2l0aEljb24iLCJ0eXBlIiwiaWNvblByZWZpeCIsImRlc2NyaXB0aW9uIiwiZm9yRWFjaCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVBQSxRQUFRLENBQUMsY0FBRCxFQUFpQixZQUFNO0FBQzdCQyxFQUFBQSxTQUFTLENBQUMsWUFBTTtBQUNkQyxJQUFBQSxJQUFJLENBQUNDLGFBQUw7QUFDRCxHQUZRLENBQVQ7QUFJQUMsRUFBQUEsUUFBUSxDQUFDLFlBQU07QUFDYkYsSUFBQUEsSUFBSSxDQUFDRyxhQUFMO0FBQ0QsR0FGTyxDQUFSO0FBSUFDLEVBQUFBLFNBQVMsQ0FBQyxZQUFNO0FBQ2RDLGlCQUFhQyxPQUFiO0FBQ0QsR0FGUSxDQUFUO0FBSUFDLEVBQUFBLEVBQUUsQ0FBQyxpQ0FBRCxFQUFvQyxZQUFNO0FBQzFDRixpQkFBYUcsSUFBYixDQUFrQjtBQUNoQkMsTUFBQUEsT0FBTyxFQUFFLG9CQURPO0FBRWhCQyxNQUFBQSxRQUFRLEVBQUUsQ0FGTTtBQUdoQkMsTUFBQUEsR0FBRyxFQUFFO0FBSFcsS0FBbEI7O0FBS0FOLGlCQUFhRyxJQUFiLENBQWtCO0FBQ2hCQyxNQUFBQSxPQUFPLEVBQUUsb0JBRE87QUFFaEJDLE1BQUFBLFFBQVEsRUFBRSxDQUZNO0FBR2hCQyxNQUFBQSxHQUFHLEVBQUU7QUFIVyxLQUFsQjs7QUFLQUMsSUFBQUEsTUFBTSxDQUFDQyxRQUFRLENBQUNDLGdCQUFULENBQTBCLDBCQUExQixFQUFzREMsTUFBdkQsQ0FBTixDQUFxRUMsSUFBckUsQ0FBMEUsQ0FBMUU7O0FBQ0FYLGlCQUFhWSxLQUFiLENBQW1CLEdBQW5COztBQUNBakIsSUFBQUEsSUFBSSxDQUFDa0IsWUFBTDtBQUNBTixJQUFBQSxNQUFNLENBQUNDLFFBQVEsQ0FBQ0MsZ0JBQVQsQ0FBMEIsMEJBQTFCLEVBQXNEQyxNQUF2RCxDQUFOLENBQXFFQyxJQUFyRSxDQUEwRSxDQUExRTs7QUFDQVgsaUJBQWFZLEtBQWIsQ0FBbUIsR0FBbkI7O0FBQ0FqQixJQUFBQSxJQUFJLENBQUNrQixZQUFMO0FBQ0FOLElBQUFBLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQiwwQkFBMUIsRUFBc0RDLE1BQXZELENBQU4sQ0FBcUVDLElBQXJFLENBQTBFLENBQTFFO0FBQ0QsR0FsQkMsQ0FBRjtBQW9CQVQsRUFBQUEsRUFBRSxDQUFDLG9DQUFELEVBQXVDLFlBQU07QUFDN0NGLGlCQUFhRyxJQUFiLENBQWtCO0FBQ2hCQyxNQUFBQSxPQUFPLEVBQUUsb0JBRE87QUFFaEJDLE1BQUFBLFFBQVEsRUFBRTtBQUZNLEtBQWxCOztBQUlBTCxpQkFBYUcsSUFBYixDQUFrQjtBQUNoQkMsTUFBQUEsT0FBTyxFQUFFLG9CQURPO0FBRWhCQyxNQUFBQSxRQUFRLEVBQUU7QUFGTSxLQUFsQjs7QUFJQUUsSUFBQUEsTUFBTSxDQUFDQyxRQUFRLENBQUNDLGdCQUFULENBQTBCLG1CQUExQixFQUErQ0MsTUFBaEQsQ0FBTixDQUE4REMsSUFBOUQsQ0FBbUUsQ0FBbkU7QUFDQUosSUFBQUEsTUFBTSxDQUFDQyxRQUFRLENBQUNDLGdCQUFULENBQTBCLDBCQUExQixFQUFzREMsTUFBdkQsQ0FBTixDQUFxRUMsSUFBckUsQ0FBMEUsQ0FBMUU7O0FBQ0FYLGlCQUFhQyxPQUFiOztBQUNBTSxJQUFBQSxNQUFNLENBQUNDLFFBQVEsQ0FBQ0MsZ0JBQVQsQ0FBMEIsbUJBQTFCLEVBQStDQyxNQUFoRCxDQUFOLENBQThEQyxJQUE5RCxDQUFtRSxDQUFuRTtBQUNBSixJQUFBQSxNQUFNLENBQUNDLFFBQVEsQ0FBQ0MsZ0JBQVQsQ0FBMEIsMEJBQTFCLEVBQXNEQyxNQUF2RCxDQUFOLENBQXFFQyxJQUFyRSxDQUEwRSxDQUExRTtBQUNELEdBZEMsQ0FBRjtBQWdCQVQsRUFBQUEsRUFBRSxDQUFDLHdDQUFELEVBQTJDLFlBQU07QUFDakRGLGlCQUFhYyxNQUFiLENBQW9CO0FBQ2xCQyxNQUFBQSxNQUFNLEVBQUU7QUFEVSxLQUFwQjs7QUFHQWYsaUJBQWFDLE9BQWI7QUFDRCxHQUxDLENBQUY7QUFPQUMsRUFBQUEsRUFBRSxDQUFDLGtDQUFELEVBQXFDLFlBQU07QUFDM0MsUUFBTWMsd0JBQXdCLEdBQUcsU0FBM0JBLHdCQUEyQixDQUFDQyxJQUFELEVBQVU7QUFDekMsVUFBTUMsVUFBVSxHQUFHLCtCQUFuQjs7QUFDQWxCLG1CQUFhaUIsSUFBYixFQUFtQjtBQUNqQmIsUUFBQUEsT0FBTyxFQUFFLG9CQURRO0FBRWpCQyxRQUFBQSxRQUFRLEVBQUUsQ0FGTztBQUdqQmMsUUFBQUEsV0FBVyxFQUFFO0FBSEksT0FBbkI7O0FBS0FaLE1BQUFBLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDQyxnQkFBVCxXQUE2QlMsVUFBN0IsY0FBMkNELElBQTNDLEdBQW1EUCxNQUFwRCxDQUFOLENBQWtFQyxJQUFsRSxDQUF1RSxDQUF2RTtBQUNELEtBUkQ7O0FBU0EsS0FBQyxTQUFELEVBQVksTUFBWixFQUFvQixTQUFwQixFQUErQixPQUEvQixFQUF3Q1MsT0FBeEMsQ0FBZ0QsVUFBQ0gsSUFBRCxFQUFVO0FBQ3hERCxNQUFBQSx3QkFBd0IsQ0FBQ0MsSUFBRCxDQUF4QjtBQUNELEtBRkQ7QUFHRCxHQWJDLENBQUY7QUFjRCxDQXRFTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5vdGlmaWNhdGlvbiBmcm9tICcuLic7XG5cbmRlc2NyaWJlKCdub3RpZmljYXRpb24nLCAoKSA9PiB7XG4gIGJlZm9yZUFsbCgoKSA9PiB7XG4gICAgamVzdC51c2VGYWtlVGltZXJzKCk7XG4gIH0pO1xuXG4gIGFmdGVyQWxsKCgpID0+IHtcbiAgICBqZXN0LnVzZVJlYWxUaW1lcnMoKTtcbiAgfSk7XG5cbiAgYWZ0ZXJFYWNoKCgpID0+IHtcbiAgICBub3RpZmljYXRpb24uZGVzdHJveSgpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGJlIGFibGUgdG8gaGlkZSBtYW51YWxseScsICgpID0+IHtcbiAgICBub3RpZmljYXRpb24ub3Blbih7XG4gICAgICBtZXNzYWdlOiAnTm90aWZpY2F0aW9uIFRpdGxlJyxcbiAgICAgIGR1cmF0aW9uOiAwLFxuICAgICAga2V5OiAnMScsXG4gICAgfSk7XG4gICAgbm90aWZpY2F0aW9uLm9wZW4oe1xuICAgICAgbWVzc2FnZTogJ05vdGlmaWNhdGlvbiBUaXRsZScsXG4gICAgICBkdXJhdGlvbjogMCxcbiAgICAgIGtleTogJzInLFxuICAgIH0pO1xuICAgIGV4cGVjdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYzduLW5vdGlmaWNhdGlvbi1ub3RpY2UnKS5sZW5ndGgpLnRvQmUoMik7XG4gICAgbm90aWZpY2F0aW9uLmNsb3NlKCcxJyk7XG4gICAgamVzdC5ydW5BbGxUaW1lcnMoKTtcbiAgICBleHBlY3QoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmM3bi1ub3RpZmljYXRpb24tbm90aWNlJykubGVuZ3RoKS50b0JlKDEpO1xuICAgIG5vdGlmaWNhdGlvbi5jbG9zZSgnMicpO1xuICAgIGplc3QucnVuQWxsVGltZXJzKCk7XG4gICAgZXhwZWN0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jN24tbm90aWZpY2F0aW9uLW5vdGljZScpLmxlbmd0aCkudG9CZSgwKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBiZSBhYmxlIHRvIGRlc3Ryb3kgZ2xvYmFsbHknLCAoKSA9PiB7XG4gICAgbm90aWZpY2F0aW9uLm9wZW4oe1xuICAgICAgbWVzc2FnZTogJ05vdGlmaWNhdGlvbiBUaXRsZScsXG4gICAgICBkdXJhdGlvbjogMCxcbiAgICB9KTtcbiAgICBub3RpZmljYXRpb24ub3Blbih7XG4gICAgICBtZXNzYWdlOiAnTm90aWZpY2F0aW9uIFRpdGxlJyxcbiAgICAgIGR1cmF0aW9uOiAwLFxuICAgIH0pO1xuICAgIGV4cGVjdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYzduLW5vdGlmaWNhdGlvbicpLmxlbmd0aCkudG9CZSgxKTtcbiAgICBleHBlY3QoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmM3bi1ub3RpZmljYXRpb24tbm90aWNlJykubGVuZ3RoKS50b0JlKDIpO1xuICAgIG5vdGlmaWNhdGlvbi5kZXN0cm95KCk7XG4gICAgZXhwZWN0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jN24tbm90aWZpY2F0aW9uJykubGVuZ3RoKS50b0JlKDApO1xuICAgIGV4cGVjdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYzduLW5vdGlmaWNhdGlvbi1ub3RpY2UnKS5sZW5ndGgpLnRvQmUoMCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgYmUgYWJsZSB0byBkZXN0cm95IGFmdGVyIGNvbmZpZycsICgpID0+IHtcbiAgICBub3RpZmljYXRpb24uY29uZmlnKHtcbiAgICAgIGJvdHRvbTogMTAwLFxuICAgIH0pO1xuICAgIG5vdGlmaWNhdGlvbi5kZXN0cm95KCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgYmUgYWJsZSB0byBvcGVuIHdpdGggaWNvbicsICgpID0+IHtcbiAgICBjb25zdCBvcGVuTm90aWZpY2F0aW9uV2l0aEljb24gPSAodHlwZSkgPT4ge1xuICAgICAgY29uc3QgaWNvblByZWZpeCA9ICcuYzduLW5vdGlmaWNhdGlvbi1ub3RpY2UtaWNvbic7XG4gICAgICBub3RpZmljYXRpb25bdHlwZV0oe1xuICAgICAgICBtZXNzYWdlOiAnTm90aWZpY2F0aW9uIFRpdGxlJyxcbiAgICAgICAgZHVyYXRpb246IDAsXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnVGhpcyBpcyB0aGUgY29udGVudCBvZiB0aGUgbm90aWZpY2F0aW9uLicsXG4gICAgICB9KTtcbiAgICAgIGV4cGVjdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAke2ljb25QcmVmaXh9LSR7dHlwZX1gKS5sZW5ndGgpLnRvQmUoMSk7XG4gICAgfTtcbiAgICBbJ3N1Y2Nlc3MnLCAnaW5mbycsICd3YXJuaW5nJywgJ2Vycm9yJ10uZm9yRWFjaCgodHlwZSkgPT4ge1xuICAgICAgb3Blbk5vdGlmaWNhdGlvbldpdGhJY29uKHR5cGUpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19