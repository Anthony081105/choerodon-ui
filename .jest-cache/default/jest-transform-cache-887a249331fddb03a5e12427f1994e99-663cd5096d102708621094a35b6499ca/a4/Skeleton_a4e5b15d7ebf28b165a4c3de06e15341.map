{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/skeleton/Skeleton.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAqB,QAArB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,oCAaiB;AACT,UAAM,UAAU,GAAG,qIAA4B,CAC7C,gBAD6C,CAA5B,CAAnB;AAGA,aAAO,UAAP;AACH;AAlBL;AAAA;AAAA,6BAoBU;AAAA,wBACgD,KAAK,KADrD;AAAA,UACM,OADN,eACM,OADN;AAAA,UACc,cADd,eACc,cADd;AAAA,UACiC,UADjC;AAEF,UAAM,KAAK,GAAoB;AAC3B,QAAA,KAAK,EAAC;AADqB,OAA/B;AAGA,UAAM,SAAS,GAAG,sBAAK,UAAL,EAAgB,OAAhB,CAAlB;;AAEA,UAAI,OAAJ,EAAa;AACT;AACA,QAAA,KAAK,CAAC,OAAN,GAAgB,OAAO,CAAC,MAAR,KAAc;AAAA;AAA9B;AACH;;AAED,aAAO,kBAAA,aAAA,CAAC,oBAAD,EAAY,0BAAA,EAAA,EAAK,SAAL,EAAoB,KAApB,CAAZ,CAAP;AACH;AAjCL;AAAA;AAAA,EAAsC,6BAAtC,CAAA;;AACW,QAAA,CAAA,WAAA,GAAc,YAAd;AAEA,QAAA,CAAA,MAAA,GAAS,kBAAT;AAEA,QAAA,CAAA,KAAA,GAAQ,iBAAR;AAEA,QAAA,CAAA,MAAA,GAAS,kBAAT;AAEA,QAAA,CAAA,YAAA,GAAsC;AACzC,EAAA,cAAc,EAAC;AAD0B,CAAtC;AATU,QAAQ,GAAA,uBAAA,CAD5B,mBAC4B,CAAA,EAAR,QAAQ,CAAR;eAAA,Q","sourcesContent":["import C7nSkeleton,{SkeletonProps as C7nSkeletonProps} from 'choerodon-ui/lib/skeleton';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport omit from 'lodash/omit';\nimport { DataSetStatus } from '../data-set/enum';\nimport DataSetComponent,{ DataSetComponentProps } from '../data-set/DataSetComponent';\nimport SkeletonButton from './Button'\nimport SkeletonInput from './Input';\nimport Avatar from './Avatar';\n\nexport interface SkeletonProps extends DataSetComponentProps,Omit<C7nSkeletonProps,'title'>{\n    skeletonTitile?:boolean,\n}\n\n\n@observer\nexport default class Skeleton extends DataSetComponent<SkeletonProps>{\n    static displayName = 'Skeletions'\n\n    static Button = SkeletonButton\n\n    static Input = SkeletonInput\n\n    static Avatar = Avatar\n\n    static defaultProps:Partial<SkeletonProps> = {\n        skeletonTitile:true,\n    }\n\n    getOtherProps() {\n        const otherProps = omit(super.getOtherProps(), [\n          'skeletonTitile',\n        ]);\n        return otherProps;\n    }\n\n    render(){\n        const { dataSet,skeletonTitile, ...otherProps } = this.props;\n        const props:C7nSkeletonProps = {\n            title:skeletonTitile,\n        }  \n        const omitProps = omit(otherProps,'title')\n        \n        if (dataSet) {\n            // @ts-ignore\n            props.loading = dataSet.status !== DataSetStatus.ready;\n        }\n        \n        return <C7nSkeleton {...omitProps} {...props} />;\n    }\n}\n\n\n\n"]}