{"version":3,"sources":["cascader/index.js"],"names":["MenuMode","index","className","key","option","label","node","highlightKeyword","elem","a","b","defaultDisplayRender","Cascader","Component","inputValue","selectedOptions","unwrappedValue","value","unwrappedSelectedOptions","popupVisible","inputFocused","onPopupVisibleChange","e","KeyCode","onChange","props","flattenOptions","nextProps","options","displayRender","Array","o","changeOnSelect","ancestor","path","prefixCls","showSearch","notFoundContent","filter","render","sort","filtered","__IS_FILTERED_OPTION","disabled","state","customizePrefixCls","customizeInputPrefixCls","children","placeholder","size","style","allowClear","otherProps","inputPrefixCls","defaultValue","sizeCls","arrowCls","pickerCls","inputProps","dropdownMenuColumnStyle","isNotFound","resultListMatchInputWidth","clearIcon","Icon","type","onClick","clearSelection","input","Input","ref","readOnly","autoComplete","onBlur","onKeyDown","undefined","renderCascader","cascaderLocal","enUS","RcCascader","locale","LocaleReceiver","componentName","defaultLocale","transitionName","popupPlacement","menuMode","multiple"],"mappings":"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","sourcesContent":["import React, { Component, } from 'react';\nimport arrayTreeFilter from 'array-tree-filter';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport isEmpty from 'lodash/isEmpty';\nimport Input from '../input';\nimport Icon from '../icon';\nimport RcCascader from '../rc-components/cascader';\nimport KeyCode from '../_util/KeyCode';\nimport { getPrefixCls } from '../configure';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport enUS from '../rc-components/cascader/locale/en_US';\nexport var MenuMode;\n(function (MenuMode) {\n    MenuMode[\"single\"] = \"single\";\n    MenuMode[\"multiple\"] = \"multiple\";\n})(MenuMode || (MenuMode = {}));\nfunction highlightKeyword(str, keyword, prefixCls) {\n    return str.split(keyword).map((node, index) => index === 0\n        ? node\n        : [\n            React.createElement(\"span\", { className: `${prefixCls}-menu-item-keyword`, key: \"seperator\" }, keyword),\n            node,\n        ]);\n}\nfunction defaultFilterOption(inputValue, path) {\n    return path.some(option => option.label.indexOf(inputValue) > -1);\n}\nfunction defaultRenderFilteredOption(inputValue, path, prefixCls) {\n    return path.map(({ label }, index) => {\n        const node = label.indexOf(inputValue) > -1\n            ? highlightKeyword(label, inputValue, prefixCls)\n            : label;\n        return index === 0 ? node : [' / ', node];\n    });\n}\nfunction defaultSortFilteredOption(a, b, inputValue) {\n    function callback(elem) {\n        return elem.label.indexOf(inputValue) > -1;\n    }\n    return a.findIndex(callback) - b.findIndex(callback);\n}\nconst defaultDisplayRender = (label) => label.join(' / ');\nexport default class Cascader extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (value, selectedOptions) => {\n            this.setState({ inputValue: '' });\n            if (selectedOptions[0].__IS_FILTERED_OPTION) {\n                const unwrappedValue = value[0];\n                const unwrappedSelectedOptions = selectedOptions[0].path;\n                this.setValue(unwrappedValue, unwrappedSelectedOptions);\n                return;\n            }\n            this.setValue(value, selectedOptions);\n        };\n        this.handlePopupVisibleChange = (popupVisible) => {\n            if (!('popupVisible' in this.props)) {\n                const { inputValue } = this.state;\n                this.setState({\n                    popupVisible,\n                    inputFocused: popupVisible,\n                    inputValue: popupVisible ? inputValue : '',\n                });\n            }\n            const { onPopupVisibleChange } = this.props;\n            if (onPopupVisibleChange) {\n                onPopupVisibleChange(popupVisible);\n            }\n        };\n        this.handleInputBlur = () => {\n            this.setState({\n                inputFocused: false,\n            });\n        };\n        this.handleInputClick = e => {\n            const { inputFocused, popupVisible } = this.state;\n            // Prevent `Trigger` behaviour.\n            if (inputFocused || popupVisible) {\n                e.stopPropagation();\n                e.nativeEvent.stopImmediatePropagation();\n            }\n        };\n        this.handleKeyDown = (e) => {\n            if (e.keyCode === KeyCode.BACKSPACE) {\n                e.stopPropagation();\n            }\n        };\n        this.handleInputChange = (e) => {\n            const inputValue = e.target.value;\n            this.setState({ inputValue });\n        };\n        this.clearSelection = e => {\n            e.preventDefault();\n            e.stopPropagation();\n            const { inputValue } = this.state;\n            if (!inputValue) {\n                this.setValue([]);\n                this.handlePopupVisibleChange(false);\n            }\n            else {\n                this.setState({ inputValue: '' });\n            }\n        };\n        this.setValue = (value, selectedOptions = []) => {\n            if (!('value' in this.props)) {\n                this.setState({ value });\n            }\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(value, selectedOptions);\n            }\n        };\n        this.saveInput = (node) => {\n            this.input = node;\n        };\n        this.state = {\n            value: props.value || props.defaultValue || [],\n            inputValue: '',\n            inputFocused: false,\n            popupVisible: props.popupVisible,\n            flattenOptions: props.showSearch && this.flattenTree(props.options, props.changeOnSelect),\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        if ('value' in nextProps) {\n            this.setState({ value: nextProps.value || [] });\n        }\n        if ('popupVisible' in nextProps) {\n            this.setState({ popupVisible: nextProps.popupVisible });\n        }\n        const { options } = this.props;\n        if (nextProps.showSearch && options !== nextProps.options) {\n            this.setState({\n                flattenOptions: this.flattenTree(nextProps.options, nextProps.changeOnSelect),\n            });\n        }\n    }\n    getLabel() {\n        const { options, displayRender = defaultDisplayRender } = this.props;\n        const { value } = this.state;\n        const unwrappedValue = Array.isArray(value[0]) ? value[0] : value;\n        const selectedOptions = arrayTreeFilter(options, (o, level) => o.value === unwrappedValue[level]);\n        const label = selectedOptions.map(o => o.label);\n        return displayRender(label, selectedOptions);\n    }\n    flattenTree(options, changeOnSelect, ancestor = []) {\n        let flattenOptions = [];\n        options.forEach(option => {\n            const path = ancestor.concat(option);\n            if (changeOnSelect || !option.children || !option.children.length) {\n                flattenOptions.push(path);\n            }\n            if (option.children) {\n                flattenOptions = flattenOptions.concat(this.flattenTree(option.children, changeOnSelect, path));\n            }\n        });\n        return flattenOptions;\n    }\n    generateFilteredOptions(prefixCls) {\n        const { showSearch, notFoundContent } = this.props;\n        const { filter = defaultFilterOption, render = defaultRenderFilteredOption, sort = defaultSortFilteredOption, } = showSearch;\n        const { flattenOptions, inputValue } = this.state;\n        const filtered = flattenOptions\n            .filter(path => filter(inputValue, path))\n            .sort((a, b) => sort(a, b, inputValue));\n        if (filtered.length > 0) {\n            return filtered.map((path) => {\n                return {\n                    __IS_FILTERED_OPTION: true,\n                    path,\n                    label: render(inputValue, path, prefixCls),\n                    value: path.map((o) => o.value),\n                    disabled: path.some((o) => o.disabled),\n                };\n            });\n        }\n        return [{ label: notFoundContent, value: 'ANT_CASCADER_NOT_FOUND', disabled: true }];\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    render() {\n        const { props, state } = this;\n        const { prefixCls: customizePrefixCls, inputPrefixCls: customizeInputPrefixCls, children, placeholder, size, disabled, className, style, showSearch = false, allowClear, ...otherProps } = props;\n        const prefixCls = getPrefixCls('cascader', customizePrefixCls);\n        const inputPrefixCls = getPrefixCls('input', customizeInputPrefixCls);\n        const defaultValue = props.defaultValue;\n        const value = state.value;\n        const sizeCls = classNames({\n            [`${inputPrefixCls}-lg`]: size === \"large\" /* large */,\n            [`${inputPrefixCls}-sm`]: size === \"small\" /* small */,\n        });\n        const arrowCls = classNames({\n            [`${prefixCls}-picker-arrow`]: true,\n            [`${prefixCls}-picker-arrow-expand`]: state.popupVisible,\n        });\n        const pickerCls = classNames(className, `${prefixCls}-picker`, {\n            [`${prefixCls}-picker-with-value`]: state.inputValue,\n            [`${prefixCls}-picker-disabled`]: disabled,\n            [`${prefixCls}-picker-${size}`]: !!size,\n            [`${inputPrefixCls}-has-value`]: !!defaultValue || value.length,\n            [`${inputPrefixCls}-focused`]: state.popupVisible,\n        });\n        // Fix bug of https://github.com/facebook/react/pull/5004\n        // and https://fb.me/react-unknown-prop\n        const inputProps = omit(otherProps, [\n            'onChange',\n            'options',\n            'popupPlacement',\n            'transitionName',\n            'displayRender',\n            'onPopupVisibleChange',\n            'changeOnSelect',\n            'expandTrigger',\n            'popupVisible',\n            'getPopupContainer',\n            'loadData',\n            'popupClassName',\n            'filterOption',\n            'renderFilteredOption',\n            'sortFilteredOption',\n            'notFoundContent',\n            'allowClear',\n            'singleMenuStyle',\n            'singleMenuItemStyle',\n            'singlePleaseRender',\n            'singleMenuItemRender',\n            'menuMode',\n            'defaultValue',\n        ]);\n        let options = props.options;\n        if (state.inputValue) {\n            options = this.generateFilteredOptions(prefixCls);\n        }\n        // Dropdown menu should keep previous status until it is fully closed.\n        if (!state.popupVisible) {\n            options = this.cachedOptions;\n        }\n        else {\n            this.cachedOptions = options;\n        }\n        const dropdownMenuColumnStyle = {};\n        const isNotFound = (options || []).length === 1 && options[0].value === 'ANT_CASCADER_NOT_FOUND';\n        if (isNotFound) {\n            dropdownMenuColumnStyle.height = 'auto'; // Height of one row.\n        }\n        // The default value of `matchInputWidth` is `true`\n        const resultListMatchInputWidth = showSearch.matchInputWidth !== false;\n        if (resultListMatchInputWidth && state.inputValue && this.input) {\n            dropdownMenuColumnStyle.width = this.input.input.offsetWidth;\n        }\n        const clearIcon = (allowClear && !disabled && value.length > 0) || state.inputValue ? (React.createElement(Icon, { type: \"close\", className: `${prefixCls}-picker-clear`, onClick: this.clearSelection })) : null;\n        const input = children || (React.createElement(\"span\", { style: style, className: pickerCls },\n            React.createElement(\"span\", { className: `${prefixCls}-picker-label` }, this.getLabel()),\n            React.createElement(Input, Object.assign({}, inputProps, { ref: this.saveInput, prefixCls: inputPrefixCls, placeholder: value && value.length > 0 ? undefined : placeholder, className: `${prefixCls}-input ${sizeCls}`, value: state.inputValue, disabled: disabled, readOnly: !showSearch, autoComplete: \"off\", onClick: showSearch ? this.handleInputClick : undefined, onBlur: showSearch ? this.handleInputBlur : undefined, onKeyDown: this.handleKeyDown, onChange: showSearch ? this.handleInputChange : undefined })),\n            clearIcon,\n            React.createElement(Icon, { type: \"arrow_drop_down\", className: arrowCls })));\n        /**\n         * 添加多语言配置\n         * @param locale any\n         */\n        const renderCascader = (locale) => {\n            // 只配置部分语言其他英语即可\n            const cascaderLocal = isEmpty(locale) ? enUS.Cascader : locale;\n            return (React.createElement(RcCascader, Object.assign({}, props, { inputPrefixCls: inputPrefixCls, prefixCls: prefixCls, options: options, value: value, popupVisible: state.popupVisible, onPopupVisibleChange: this.handlePopupVisibleChange, onChange: this.handleChange, dropdownMenuColumnStyle: dropdownMenuColumnStyle, locale: cascaderLocal }), input));\n        };\n        return (React.createElement(LocaleReceiver, { componentName: \"Cascader\", defaultLocale: enUS }, renderCascader));\n    }\n}\nCascader.displayName = 'Cascader';\nCascader.defaultProps = {\n    placeholder: 'Please select',\n    transitionName: 'slide-up',\n    popupPlacement: 'bottomLeft',\n    options: [],\n    disabled: false,\n    allowClear: true,\n    notFoundContent: 'Not Found',\n    menuMode: MenuMode.multiple,\n};\n"]}