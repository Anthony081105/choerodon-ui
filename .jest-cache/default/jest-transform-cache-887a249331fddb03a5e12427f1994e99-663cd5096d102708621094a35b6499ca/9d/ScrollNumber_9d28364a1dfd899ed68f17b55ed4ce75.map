{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/badge/ScrollNumber.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, createElement, CSSProperties, ReactElement } from 'react';\nimport omit from 'lodash/omit';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../configure';\n\nfunction getNumberArray(num: string | number | undefined) {\n  return num\n    ? num\n        .toString()\n        .split('')\n        .reverse()\n        .map(i => Number(i))\n    : [];\n}\n\nexport interface ScrollNumberProps {\n  prefixCls?: string;\n  className?: string;\n  count?: string | number;\n  component?: string;\n  onAnimated?: Function;\n  style?: CSSProperties;\n  title?: string | number;\n  hidden?: boolean;\n}\n\nexport interface ScrollNumberState {\n  animateStarted?: boolean;\n  count?: string | number;\n}\n\nexport default class ScrollNumber extends Component<ScrollNumberProps, ScrollNumberState> {\n  static displayName = 'ScrollNumber';\n\n  static defaultProps = {\n    count: null,\n    onAnimated() {},\n  };\n\n  lastCount: any;\n\n  constructor(props: ScrollNumberProps) {\n    super(props);\n    this.state = {\n      animateStarted: true,\n      count: props.count,\n    };\n  }\n\n  getPositionByNum(num: number, i: number) {\n    const { animateStarted, count } = this.state;\n    if (animateStarted) {\n      return 10 + num;\n    }\n    const currentDigit = getNumberArray(count)[i];\n    const lastDigit = getNumberArray(this.lastCount)[i];\n    // 同方向则在同一侧切换数字\n    if (count! > this.lastCount) {\n      if (currentDigit >= lastDigit) {\n        return 10 + num;\n      }\n      return 20 + num;\n    }\n    if (currentDigit <= lastDigit) {\n      return 10 + num;\n    }\n    return num;\n  }\n\n  componentWillReceiveProps(nextProps: ScrollNumberProps) {\n    if ('count' in nextProps) {\n      const { count } = this.state;\n      if (count === nextProps.count) {\n        return;\n      }\n      this.lastCount = count;\n      // 复原数字初始位置\n      this.setState(\n        {\n          animateStarted: true,\n        },\n        () => {\n          // 等待数字位置复原完毕\n          // 开始设置完整的数字\n          setTimeout(() => {\n            this.setState(\n              {\n                animateStarted: false,\n                count: nextProps.count,\n              },\n              () => {\n                const { onAnimated } = this.props;\n                if (onAnimated) {\n                  onAnimated();\n                }\n              },\n            );\n          }, 5);\n        },\n      );\n    }\n  }\n\n  getPrefixCls() {\n    const { prefixCls } = this.props;\n    return getPrefixCls('scroll-number', prefixCls);\n  }\n\n  renderNumberList(position: number) {\n    const childrenToReturn: ReactElement<any>[] = [];\n    for (let i = 0; i < 30; i++) {\n      const currentClassName = position === i ? 'current' : '';\n      childrenToReturn.push(\n        <p key={i.toString()} className={currentClassName}>\n          {i % 10}\n        </p>,\n      );\n    }\n    return childrenToReturn;\n  }\n\n  renderCurrentNumber = (num: number, i: number) => {\n    const position = this.getPositionByNum(num, i);\n    const { animateStarted } = this.state;\n    const removeTransition = animateStarted || getNumberArray(this.lastCount)[i] === undefined;\n    return createElement(\n      'span',\n      {\n        className: `${this.getPrefixCls()}-only`,\n        style: {\n          transition: removeTransition && 'none',\n          msTransform: `translateY(${-position * 100}%)`,\n          WebkitTransform: `translateY(${-position * 100}%)`,\n          transform: `translateY(${-position * 100}%)`,\n        },\n        key: i,\n      },\n      this.renderNumberList(position),\n    );\n  };\n\n  renderNumberElement() {\n    const state = this.state;\n    if (!state.count || isNaN(state.count as number)) {\n      return state.count;\n    }\n    return getNumberArray(state.count)\n      .map(this.renderCurrentNumber)\n      .reverse();\n  }\n\n  render() {\n    const { className, style, component = 'sup' } = this.props;\n    const restProps = omit<ScrollNumberProps, 'count' | 'onAnimated' | 'component' | 'prefixCls'>(\n      this.props,\n      ['count', 'onAnimated', 'component', 'prefixCls'],\n    );\n    const newProps = {\n      ...restProps,\n      className: classNames(this.getPrefixCls(), className),\n    };\n    if (style && style.borderColor) {\n      newProps.style!.boxShadow = `0 0 0 1px ${style.borderColor} inset`;\n    }\n    return createElement(component as any, newProps, this.renderNumberElement());\n  }\n}\n"]}