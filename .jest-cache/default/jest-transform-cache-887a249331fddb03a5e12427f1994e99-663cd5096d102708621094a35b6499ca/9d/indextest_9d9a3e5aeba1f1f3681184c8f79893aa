75e69b30f11d1d97759c29b09254218e
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _ = _interopRequireDefault(require(".."));

var _mountTest = _interopRequireDefault(require("../../../tests/shared/mountTest"));

describe('Skeleton', function () {
  var genSkeleton = function genSkeleton(props) {
    return (0, _enzyme.mount)(_react["default"].createElement(_["default"], (0, _extends2["default"])({
      loading: true
    }, props), "Bamboo"));
  };

  var genSkeletonButton = function genSkeletonButton(props) {
    return (0, _enzyme.mount)(_react["default"].createElement(_["default"].Button, props));
  };

  var genSkeletonAvatar = function genSkeletonAvatar(props) {
    return (0, _enzyme.mount)(_react["default"].createElement(_["default"].Avatar, props));
  };

  var genSkeletonInput = function genSkeletonInput(props) {
    return (0, _enzyme.mount)(_react["default"].createElement(_["default"].Input, props));
  };

  (0, _mountTest["default"])(_["default"]);
  it('should without avatar and paragraph', function () {
    var wrapperSmall = genSkeleton({
      avatar: false,
      paragraph: false
    });
    expect(wrapperSmall.render()).toMatchSnapshot();
  });
  it('should square avatar', function () {
    var wrapperSmall = genSkeleton({
      avatar: true,
      paragraph: false
    });
    expect(wrapperSmall.render()).toMatchSnapshot();
  });
  describe('avatar', function () {
    it('size', function () {
      var wrapperSmall = genSkeleton({
        avatar: {
          size: 'small'
        }
      });
      expect(wrapperSmall.render()).toMatchSnapshot();
      var wrapperDefault = genSkeleton({
        avatar: {
          size: 'default'
        }
      });
      expect(wrapperDefault.render()).toMatchSnapshot();
      var wrapperLarge = genSkeleton({
        avatar: {
          size: 'large'
        }
      });
      expect(wrapperLarge.render()).toMatchSnapshot();
      var wrapperNumber = genSkeleton({
        avatar: {
          size: 20
        }
      });
      expect(wrapperNumber.render()).toMatchSnapshot();
    });
    it('shape', function () {
      var wrapperCircle = genSkeleton({
        avatar: {
          shape: 'circle'
        }
      });
      expect(wrapperCircle.render()).toMatchSnapshot();
      var wrapperSquare = genSkeleton({
        avatar: {
          shape: 'square'
        }
      });
      expect(wrapperSquare.render()).toMatchSnapshot();
    });
  });
  describe('title', function () {
    it('width', function () {
      var wrapper = genSkeleton({
        title: {
          width: '93%'
        }
      });
      expect(wrapper.render()).toMatchSnapshot();
    });
  });
  describe('paragraph', function () {
    it('rows', function () {
      var wrapper = genSkeleton({
        paragraph: {
          rows: 5
        }
      });
      expect(wrapper.render()).toMatchSnapshot();
    });
    it('width', function () {
      var wrapperPure = genSkeleton({
        paragraph: {
          width: '93%'
        }
      });
      expect(wrapperPure.render()).toMatchSnapshot();
      var wrapperList = genSkeleton({
        paragraph: {
          width: ['28%', '93%']
        }
      });
      expect(wrapperList.render()).toMatchSnapshot();
    });
  });
  describe('button element', function () {
    it('active', function () {
      var wrapper = genSkeletonButton({
        active: true
      });
      expect(wrapper.render()).toMatchSnapshot();
    });
    it('size', function () {
      var wrapperDefault = genSkeletonButton({
        size: 'default'
      });
      expect(wrapperDefault.render()).toMatchSnapshot();
      var wrapperLarge = genSkeletonButton({
        size: 'large'
      });
      expect(wrapperLarge.render()).toMatchSnapshot();
      var wrapperSmall = genSkeletonButton({
        size: 'small'
      });
      expect(wrapperSmall.render()).toMatchSnapshot();
    });
    it('shape', function () {
      var wrapperDefault = genSkeletonButton({
        shape: 'default'
      });
      expect(wrapperDefault.render()).toMatchSnapshot();
      var wrapperRound = genSkeletonButton({
        shape: 'round'
      });
      expect(wrapperRound.render()).toMatchSnapshot();
      var wrapperCircle = genSkeletonButton({
        shape: 'circle'
      });
      expect(wrapperCircle.render()).toMatchSnapshot();
    });
  });
  describe('avatar element', function () {
    it('active', function () {
      var wrapper = genSkeletonAvatar({
        active: true
      });
      expect(wrapper.render()).toMatchSnapshot();
    });
    it('size', function () {
      var wrapperSmall = genSkeletonAvatar({
        size: 'small'
      });
      expect(wrapperSmall.render()).toMatchSnapshot();
      var wrapperDefault = genSkeletonAvatar({
        size: 'default'
      });
      expect(wrapperDefault.render()).toMatchSnapshot();
      var wrapperLarge = genSkeletonAvatar({
        size: 'large'
      });
      expect(wrapperLarge.render()).toMatchSnapshot();
      var wrapperNumber = genSkeletonAvatar({
        size: 20
      });
      expect(wrapperNumber.render()).toMatchSnapshot();
    });
    it('shape', function () {
      var wrapperCircle = genSkeletonAvatar({
        shape: 'circle'
      });
      expect(wrapperCircle.render()).toMatchSnapshot();
      var wrapperSquare = genSkeletonAvatar({
        shape: 'square'
      });
      expect(wrapperSquare.render()).toMatchSnapshot();
    });
  });
  describe('input element', function () {
    it('active', function () {
      var wrapper = genSkeletonInput({
        active: true
      });
      expect(wrapper.render()).toMatchSnapshot();
    });
    it('size', function () {
      var wrapperSmall = genSkeletonInput({
        size: 'small'
      });
      expect(wrapperSmall.render()).toMatchSnapshot();
      var wrapperDefault = genSkeletonInput({
        size: 'default'
      });
      expect(wrapperDefault.render()).toMatchSnapshot();
      var wrapperLarge = genSkeletonInput({
        size: 'large'
      });
      expect(wrapperLarge.render()).toMatchSnapshot();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,