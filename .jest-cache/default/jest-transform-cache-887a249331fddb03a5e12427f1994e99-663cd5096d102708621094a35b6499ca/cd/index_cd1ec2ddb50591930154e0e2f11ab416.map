{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/transfer/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Component, CSSProperties, ReactNode, SyntheticEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport List, { TransferListProps } from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport { TransferDirection } from './enum';\nimport { getPrefixCls } from '../configure';\n\nexport { TransferListProps } from './list';\nexport { TransferOperationProps } from './operation';\nexport { TransferSearchProps } from './search';\n\nexport interface TransferItem {\n  key: string;\n  title: string;\n  description?: string;\n  disabled?: boolean;\n}\n\nexport interface TransferProps {\n  prefixCls?: string;\n  className?: string;\n  dataSource: TransferItem[];\n  targetKeys?: string[];\n  selectedKeys?: string[];\n  render?: (record: TransferItem) => ReactNode;\n  onChange?: (targetKeys: string[], direction: string, moveKeys: any) => void;\n  onSelectChange?: (sourceSelectedKeys: string[], targetSelectedKeys: string[]) => void;\n  style?: CSSProperties;\n  listStyle?: CSSProperties;\n  titles?: string[];\n  operations?: string[];\n  showSearch?: boolean;\n  filterOption?: (inputValue: any, item: any) => boolean;\n  searchPlaceholder?: string;\n  notFoundContent?: ReactNode;\n  footer?: (props: TransferListProps) => ReactNode;\n  body?: (props: TransferListProps) => ReactNode;\n  rowKey?: (record: TransferItem) => string;\n  onSearchChange?: (direction: TransferDirection, e: ChangeEvent<HTMLInputElement>) => void;\n  lazy?: {} | boolean;\n  onScroll?: (direction: TransferDirection, e: SyntheticEvent<HTMLDivElement>) => void;\n}\n\nexport interface TransferLocale {\n  titles: string[];\n  notFoundContent: string;\n  searchPlaceholder: string;\n  itemUnit: string;\n  itemsUnit: string;\n}\n\nexport default class Transfer extends Component<TransferProps, any> {\n  static displayName = 'Transfer';\n\n  static List = List;\n\n  static Operation = Operation;\n\n  static Search = Search;\n\n  static defaultProps = {\n    dataSource: [],\n    render: noop,\n    showSearch: false,\n  };\n\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    dataSource: PropTypes.array,\n    render: PropTypes.func,\n    targetKeys: PropTypes.array,\n    onChange: PropTypes.func,\n    listStyle: PropTypes.object,\n    className: PropTypes.string,\n    titles: PropTypes.array,\n    operations: PropTypes.array,\n    showSearch: PropTypes.bool,\n    filterOption: PropTypes.func,\n    searchPlaceholder: PropTypes.string,\n    notFoundContent: PropTypes.node,\n    body: PropTypes.func,\n    footer: PropTypes.func,\n    rowKey: PropTypes.func,\n    lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  };\n\n  splitedDataSource: {\n    leftDataSource: TransferItem[];\n    rightDataSource: TransferItem[];\n  } | null;\n\n  constructor(props: TransferProps) {\n    super(props);\n\n    const { selectedKeys = [], targetKeys = [] } = props;\n    this.state = {\n      leftFilter: '',\n      rightFilter: '',\n      sourceSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) === -1),\n      targetSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) > -1),\n    };\n  }\n\n  componentWillReceiveProps(nextProps: TransferProps) {\n    const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n    const { props } = this;\n\n    if (nextProps.targetKeys !== props.targetKeys || nextProps.dataSource !== props.dataSource) {\n      // clear cached splited dataSource\n      this.splitedDataSource = null;\n\n      if (!nextProps.selectedKeys) {\n        // clear key nolonger existed\n        // clear checkedKeys according to targetKeys\n        const { dataSource, targetKeys = [] } = nextProps;\n\n        const newSourceSelectedKeys: String[] = [];\n        const newTargetSelectedKeys: String[] = [];\n        dataSource.forEach(({ key }) => {\n          if (sourceSelectedKeys.includes(key) && !targetKeys.includes(key)) {\n            newSourceSelectedKeys.push(key);\n          }\n          if (targetSelectedKeys.includes(key) && targetKeys.includes(key)) {\n            newTargetSelectedKeys.push(key);\n          }\n        });\n        this.setState({\n          sourceSelectedKeys: newSourceSelectedKeys,\n          targetSelectedKeys: newTargetSelectedKeys,\n        });\n      }\n    }\n\n    if (nextProps.selectedKeys) {\n      const targetKeys = nextProps.targetKeys || [];\n      this.setState({\n        sourceSelectedKeys: nextProps.selectedKeys.filter(key => !targetKeys.includes(key)),\n        targetSelectedKeys: nextProps.selectedKeys.filter(key => targetKeys.includes(key)),\n      });\n    }\n  }\n\n  splitDataSource() {\n    if (this.splitedDataSource) {\n      return this.splitedDataSource;\n    }\n\n    const { dataSource, rowKey, targetKeys = [] } = this.props;\n\n    const leftDataSource: TransferItem[] = [];\n    const rightDataSource: TransferItem[] = new Array(targetKeys.length);\n    dataSource.forEach(record => {\n      if (rowKey) {\n        record.key = rowKey(record);\n      }\n\n      // rightDataSource should be ordered by targetKeys\n      // leftDataSource should be ordered by dataSource\n      const indexOfKey = targetKeys.indexOf(record.key);\n      if (indexOfKey !== -1) {\n        rightDataSource[indexOfKey] = record;\n      } else {\n        leftDataSource.push(record);\n      }\n    });\n\n    this.splitedDataSource = {\n      leftDataSource,\n      rightDataSource,\n    };\n\n    return this.splitedDataSource;\n  }\n\n  moveTo = (direction: TransferDirection) => {\n    const { targetKeys = [], dataSource = [], onChange } = this.props;\n    const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n    const moveKeys =\n      direction === TransferDirection.right ? sourceSelectedKeys : targetSelectedKeys;\n    // filter the disabled options\n    const newMoveKeys = moveKeys.filter(\n      (key: string) => !dataSource.some(data => !!(key === data.key && data.disabled)),\n    );\n    // move items to target box\n    const newTargetKeys =\n      direction === TransferDirection.right\n        ? newMoveKeys.concat(targetKeys)\n        : targetKeys.filter(targetKey => newMoveKeys.indexOf(targetKey) === -1);\n\n    // empty checked keys\n    const oppositeDirection =\n      direction === TransferDirection.right ? TransferDirection.left : TransferDirection.right;\n    this.setState({\n      [this.getSelectedKeysName(oppositeDirection)]: [],\n    });\n    this.handleSelectChange(oppositeDirection, []);\n\n    if (onChange) {\n      onChange(newTargetKeys, direction, newMoveKeys);\n    }\n  };\n\n  moveToLeft = () => this.moveTo(TransferDirection.left);\n\n  moveToRight = () => this.moveTo(TransferDirection.right);\n\n  handleSelectChange(direction: TransferDirection, holder: string[]) {\n    const { onSelectChange } = this.props;\n    const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n    if (!onSelectChange) {\n      return;\n    }\n\n    if (direction === TransferDirection.left) {\n      onSelectChange(holder, targetSelectedKeys);\n    } else {\n      onSelectChange(sourceSelectedKeys, holder);\n    }\n  }\n\n  handleSelectAll = (\n    direction: TransferDirection,\n    filteredDataSource: TransferItem[],\n    checkAll: boolean,\n  ) => {\n    const {\n      state,\n      props: { selectedKeys },\n    } = this;\n    const originalSelectedKeys = state[this.getSelectedKeysName(direction)] || [];\n    const currentKeys = filteredDataSource.map(item => item.key);\n    // Only operate current keys from original selected keys\n    const newKeys1 = originalSelectedKeys.filter((key: string) => currentKeys.indexOf(key) === -1);\n    const newKeys2 = [...originalSelectedKeys];\n    currentKeys.forEach(key => {\n      if (newKeys2.indexOf(key) === -1) {\n        newKeys2.push(key);\n      }\n    });\n    const holder = checkAll ? newKeys1 : newKeys2;\n    this.handleSelectChange(direction, holder);\n\n    if (!selectedKeys) {\n      this.setState({\n        [this.getSelectedKeysName(direction)]: holder,\n      });\n    }\n  };\n\n  handleLeftSelectAll = (filteredDataSource: TransferItem[], checkAll: boolean) =>\n    this.handleSelectAll(TransferDirection.left, filteredDataSource, checkAll);\n\n  handleRightSelectAll = (filteredDataSource: TransferItem[], checkAll: boolean) =>\n    this.handleSelectAll(TransferDirection.right, filteredDataSource, checkAll);\n\n  handleFilter = (direction: TransferDirection, e: ChangeEvent<HTMLInputElement>) => {\n    const { onSearchChange } = this.props;\n    this.setState({\n      // add filter\n      [`${direction}Filter`]: e.target.value,\n    });\n    if (onSearchChange) {\n      onSearchChange(direction, e);\n    }\n  };\n\n  handleLeftFilter = (e: ChangeEvent<HTMLInputElement>) =>\n    this.handleFilter(TransferDirection.left, e);\n\n  handleRightFilter = (e: ChangeEvent<HTMLInputElement>) =>\n    this.handleFilter(TransferDirection.right, e);\n\n  handleClear = (direction: string) => {\n    this.setState({\n      [`${direction}Filter`]: '',\n    });\n  };\n\n  handleLeftClear = () => this.handleClear(TransferDirection.left);\n\n  handleRightClear = () => this.handleClear(TransferDirection.right);\n\n  handleSelect = (direction: TransferDirection, selectedItem: TransferItem, checked: boolean) => {\n    const { selectedKeys } = this.props;\n    const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n    const holder =\n      direction === TransferDirection.left ? [...sourceSelectedKeys] : [...targetSelectedKeys];\n    const index = holder.indexOf(selectedItem.key);\n    if (index > -1) {\n      holder.splice(index, 1);\n    }\n    if (checked) {\n      holder.push(selectedItem.key);\n    }\n    this.handleSelectChange(direction, holder);\n\n    if (!selectedKeys) {\n      this.setState({\n        [this.getSelectedKeysName(direction)]: holder,\n      });\n    }\n  };\n\n  handleLeftSelect = (selectedItem: TransferItem, checked: boolean) => {\n    return this.handleSelect(TransferDirection.left, selectedItem, checked);\n  };\n\n  handleRightSelect = (selectedItem: TransferItem, checked: boolean) => {\n    return this.handleSelect(TransferDirection.right, selectedItem, checked);\n  };\n\n  handleScroll = (direction: TransferDirection, e: SyntheticEvent<HTMLDivElement>) => {\n    const { onScroll } = this.props;\n    if (onScroll) {\n      onScroll(direction, e);\n    }\n  };\n\n  handleLeftScroll = (e: SyntheticEvent<HTMLDivElement>) =>\n    this.handleScroll(TransferDirection.left, e);\n\n  handleRightScroll = (e: SyntheticEvent<HTMLDivElement>) =>\n    this.handleScroll(TransferDirection.right, e);\n\n  getTitles(transferLocale: TransferLocale): string[] {\n    const { props } = this;\n    if (props.titles) {\n      return props.titles;\n    }\n    return transferLocale.titles;\n  }\n\n  getSelectedKeysName(direction: TransferDirection) {\n    return direction === TransferDirection.left ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n  }\n\n  renderTransfer = (locale: TransferLocale) => {\n    const {\n      prefixCls: customizePrefixCls,\n      className,\n      operations = [],\n      showSearch,\n      notFoundContent,\n      searchPlaceholder,\n      body,\n      footer,\n      listStyle,\n      filterOption,\n      render,\n      lazy,\n    } = this.props;\n    const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n    const { leftFilter, rightFilter, sourceSelectedKeys, targetSelectedKeys } = this.state;\n\n    const { leftDataSource, rightDataSource } = this.splitDataSource();\n    const leftActive = targetSelectedKeys.length > 0;\n    const rightActive = sourceSelectedKeys.length > 0;\n\n    const cls = classNames(className, prefixCls);\n\n    const titles = this.getTitles(locale);\n    return (\n      <div className={cls}>\n        <List\n          prefixCls={`${prefixCls}-list`}\n          titleText={titles[0]}\n          dataSource={leftDataSource}\n          filter={leftFilter}\n          filterOption={filterOption}\n          style={listStyle}\n          checkedKeys={sourceSelectedKeys}\n          handleFilter={this.handleLeftFilter}\n          handleClear={this.handleLeftClear}\n          handleSelect={this.handleLeftSelect}\n          handleSelectAll={this.handleLeftSelectAll}\n          render={render}\n          showSearch={showSearch}\n          searchPlaceholder={searchPlaceholder || locale.searchPlaceholder}\n          notFoundContent={notFoundContent || locale.notFoundContent}\n          itemUnit={locale.itemUnit}\n          itemsUnit={locale.itemsUnit}\n          body={body}\n          footer={footer}\n          lazy={lazy}\n          onScroll={this.handleLeftScroll}\n        />\n        <Operation\n          className={`${prefixCls}-operation`}\n          rightActive={rightActive}\n          rightArrowText={operations[0]}\n          moveToRight={this.moveToRight}\n          leftActive={leftActive}\n          leftArrowText={operations[1]}\n          moveToLeft={this.moveToLeft}\n        />\n        <List\n          prefixCls={`${prefixCls}-list`}\n          titleText={titles[1]}\n          dataSource={rightDataSource}\n          filter={rightFilter}\n          filterOption={filterOption}\n          style={listStyle}\n          checkedKeys={targetSelectedKeys}\n          handleFilter={this.handleRightFilter}\n          handleClear={this.handleRightClear}\n          handleSelect={this.handleRightSelect}\n          handleSelectAll={this.handleRightSelectAll}\n          render={render}\n          showSearch={showSearch}\n          searchPlaceholder={searchPlaceholder || locale.searchPlaceholder}\n          notFoundContent={notFoundContent || locale.notFoundContent}\n          itemUnit={locale.itemUnit}\n          itemsUnit={locale.itemsUnit}\n          body={body}\n          footer={footer}\n          lazy={lazy}\n          onScroll={this.handleRightScroll}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <LocaleReceiver componentName=\"Transfer\" defaultLocale={defaultLocale.Transfer}>\n        {this.renderTransfer}\n      </LocaleReceiver>\n    );\n  }\n}\n"]}