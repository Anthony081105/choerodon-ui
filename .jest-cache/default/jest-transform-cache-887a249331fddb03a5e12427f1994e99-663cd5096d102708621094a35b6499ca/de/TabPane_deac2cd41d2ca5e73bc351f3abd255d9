e509925c65cf427e9e8e7a4fa0fb9029
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _createReactClass = _interopRequireDefault(require("create-react-class"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _utils = require("./utils");

var TabPane = (0, _createReactClass["default"])({
  displayName: 'TabPane',
  propTypes: {
    className: _propTypes["default"].string,
    active: _propTypes["default"].bool,
    style: _propTypes["default"].any,
    destroyInactiveTabPane: _propTypes["default"].bool,
    forceRender: _propTypes["default"].bool,
    placeholder: _propTypes["default"].node
  },
  getDefaultProps: function getDefaultProps() {
    return {
      placeholder: null
    };
  },
  render: function render() {
    var _classnames;

    var _this$props = this.props,
        className = _this$props.className,
        destroyInactiveTabPane = _this$props.destroyInactiveTabPane,
        active = _this$props.active,
        forceRender = _this$props.forceRender,
        rootPrefixCls = _this$props.rootPrefixCls,
        style = _this$props.style,
        children = _this$props.children,
        placeholder = _this$props.placeholder,
        restProps = (0, _objectWithoutProperties2["default"])(_this$props, ["className", "destroyInactiveTabPane", "active", "forceRender", "rootPrefixCls", "style", "children", "placeholder"]);
    this._isActived = this._isActived || active;
    var prefixCls = "".concat(rootPrefixCls, "-tabpane");
    var cls = (0, _classnames2["default"])((_classnames = {}, (0, _defineProperty2["default"])(_classnames, prefixCls, 1), (0, _defineProperty2["default"])(_classnames, "".concat(prefixCls, "-inactive"), !active), (0, _defineProperty2["default"])(_classnames, "".concat(prefixCls, "-active"), active), (0, _defineProperty2["default"])(_classnames, className, className), _classnames));
    var isRender = destroyInactiveTabPane ? active : this._isActived;
    return _react["default"].createElement("div", (0, _extends2["default"])({
      style: style,
      role: "tabpanel",
      "aria-hidden": active ? 'false' : 'true',
      className: cls
    }, (0, _utils.getDataAttr)(restProps)), isRender || forceRender ? children : placeholder);
  }
});
var _default = TabPane;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYlBhbmUuanN4Il0sIm5hbWVzIjpbIlRhYlBhbmUiLCJkaXNwbGF5TmFtZSIsInByb3BUeXBlcyIsImNsYXNzTmFtZSIsIlByb3BUeXBlcyIsInN0cmluZyIsImFjdGl2ZSIsImJvb2wiLCJzdHlsZSIsImFueSIsImRlc3Ryb3lJbmFjdGl2ZVRhYlBhbmUiLCJmb3JjZVJlbmRlciIsInBsYWNlaG9sZGVyIiwibm9kZSIsImdldERlZmF1bHRQcm9wcyIsInJlbmRlciIsInByb3BzIiwicm9vdFByZWZpeENscyIsImNoaWxkcmVuIiwicmVzdFByb3BzIiwiX2lzQWN0aXZlZCIsInByZWZpeENscyIsImNscyIsImlzUmVuZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxPQUFPLEdBQUcsa0NBQWlCO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUUsU0FEa0I7QUFFL0JDLEVBQUFBLFNBQVMsRUFBRTtBQUNUQyxJQUFBQSxTQUFTLEVBQUVDLHNCQUFVQyxNQURaO0FBRVRDLElBQUFBLE1BQU0sRUFBRUYsc0JBQVVHLElBRlQ7QUFHVEMsSUFBQUEsS0FBSyxFQUFFSixzQkFBVUssR0FIUjtBQUlUQyxJQUFBQSxzQkFBc0IsRUFBRU4sc0JBQVVHLElBSnpCO0FBS1RJLElBQUFBLFdBQVcsRUFBRVAsc0JBQVVHLElBTGQ7QUFNVEssSUFBQUEsV0FBVyxFQUFFUixzQkFBVVM7QUFOZCxHQUZvQjtBQVUvQkMsRUFBQUEsZUFWK0IsNkJBVWI7QUFDaEIsV0FBTztBQUFFRixNQUFBQSxXQUFXLEVBQUU7QUFBZixLQUFQO0FBQ0QsR0FaOEI7QUFhL0JHLEVBQUFBLE1BYitCLG9CQWF0QjtBQUFBOztBQUFBLHNCQVdILEtBQUtDLEtBWEY7QUFBQSxRQUVMYixTQUZLLGVBRUxBLFNBRks7QUFBQSxRQUdMTyxzQkFISyxlQUdMQSxzQkFISztBQUFBLFFBSUxKLE1BSkssZUFJTEEsTUFKSztBQUFBLFFBS0xLLFdBTEssZUFLTEEsV0FMSztBQUFBLFFBTUxNLGFBTkssZUFNTEEsYUFOSztBQUFBLFFBT0xULEtBUEssZUFPTEEsS0FQSztBQUFBLFFBUUxVLFFBUkssZUFRTEEsUUFSSztBQUFBLFFBU0xOLFdBVEssZUFTTEEsV0FUSztBQUFBLFFBVUZPLFNBVkU7QUFZUCxTQUFLQyxVQUFMLEdBQWtCLEtBQUtBLFVBQUwsSUFBbUJkLE1BQXJDO0FBQ0EsUUFBTWUsU0FBUyxhQUFNSixhQUFOLGFBQWY7QUFDQSxRQUFNSyxHQUFHLEdBQUcsOEZBQ1RELFNBRFMsRUFDRyxDQURILDJEQUVOQSxTQUZNLGdCQUVpQixDQUFDZixNQUZsQiwyREFHTmUsU0FITSxjQUdlZixNQUhmLGlEQUlUSCxTQUpTLEVBSUdBLFNBSkgsZ0JBQVo7QUFNQSxRQUFNb0IsUUFBUSxHQUFHYixzQkFBc0IsR0FBR0osTUFBSCxHQUFZLEtBQUtjLFVBQXhEO0FBQ0EsV0FDRTtBQUNFLE1BQUEsS0FBSyxFQUFFWixLQURUO0FBRUUsTUFBQSxJQUFJLEVBQUMsVUFGUDtBQUdFLHFCQUFhRixNQUFNLEdBQUcsT0FBSCxHQUFhLE1BSGxDO0FBSUUsTUFBQSxTQUFTLEVBQUVnQjtBQUpiLE9BS00sd0JBQVlILFNBQVosQ0FMTixHQU9HSSxRQUFRLElBQUlaLFdBQVosR0FBMEJPLFFBQTFCLEdBQXFDTixXQVB4QyxDQURGO0FBV0Q7QUE3QzhCLENBQWpCLENBQWhCO2VBZ0RlWixPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY3JlYXRlUmVhY3RDbGFzcyBmcm9tICdjcmVhdGUtcmVhY3QtY2xhc3MnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyBnZXREYXRhQXR0ciB9IGZyb20gJy4vdXRpbHMnO1xuXG5jb25zdCBUYWJQYW5lID0gY3JlYXRlUmVhY3RDbGFzcyh7XG4gIGRpc3BsYXlOYW1lOiAnVGFiUGFuZScsXG4gIHByb3BUeXBlczoge1xuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0eWxlOiBQcm9wVHlwZXMuYW55LFxuICAgIGRlc3Ryb3lJbmFjdGl2ZVRhYlBhbmU6IFByb3BUeXBlcy5ib29sLFxuICAgIGZvcmNlUmVuZGVyOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBwbGFjZWhvbGRlcjogUHJvcFR5cGVzLm5vZGUsXG4gIH0sXG4gIGdldERlZmF1bHRQcm9wcygpIHtcbiAgICByZXR1cm4geyBwbGFjZWhvbGRlcjogbnVsbCB9O1xuICB9LFxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY2xhc3NOYW1lLFxuICAgICAgZGVzdHJveUluYWN0aXZlVGFiUGFuZSxcbiAgICAgIGFjdGl2ZSxcbiAgICAgIGZvcmNlUmVuZGVyLFxuICAgICAgcm9vdFByZWZpeENscyxcbiAgICAgIHN0eWxlLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICBwbGFjZWhvbGRlcixcbiAgICAgIC4uLnJlc3RQcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIHRoaXMuX2lzQWN0aXZlZCA9IHRoaXMuX2lzQWN0aXZlZCB8fCBhY3RpdmU7XG4gICAgY29uc3QgcHJlZml4Q2xzID0gYCR7cm9vdFByZWZpeENsc30tdGFicGFuZWA7XG4gICAgY29uc3QgY2xzID0gY2xhc3NuYW1lcyh7XG4gICAgICBbcHJlZml4Q2xzXTogMSxcbiAgICAgIFtgJHtwcmVmaXhDbHN9LWluYWN0aXZlYF06ICFhY3RpdmUsXG4gICAgICBbYCR7cHJlZml4Q2xzfS1hY3RpdmVgXTogYWN0aXZlLFxuICAgICAgW2NsYXNzTmFtZV06IGNsYXNzTmFtZSxcbiAgICB9KTtcbiAgICBjb25zdCBpc1JlbmRlciA9IGRlc3Ryb3lJbmFjdGl2ZVRhYlBhbmUgPyBhY3RpdmUgOiB0aGlzLl9pc0FjdGl2ZWQ7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICByb2xlPVwidGFicGFuZWxcIlxuICAgICAgICBhcmlhLWhpZGRlbj17YWN0aXZlID8gJ2ZhbHNlJyA6ICd0cnVlJ31cbiAgICAgICAgY2xhc3NOYW1lPXtjbHN9XG4gICAgICAgIHsuLi5nZXREYXRhQXR0cihyZXN0UHJvcHMpfVxuICAgICAgPlxuICAgICAgICB7aXNSZW5kZXIgfHwgZm9yY2VSZW5kZXIgPyBjaGlsZHJlbiA6IHBsYWNlaG9sZGVyfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBUYWJQYW5lO1xuIl19