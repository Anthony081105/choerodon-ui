{"version":3,"sources":["_util/EventManager.js"],"names":["el","EventManager","eventName","fn","useCapture","events","index","event","on","off","capture","rest","result","Promise","Object","e","preventDefault","stopPropagation"],"mappings":"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","sourcesContent":["function on(eventName, fn, el, useCapture) {\n    if (el) {\n        if (el.addEventListener) {\n            el.addEventListener(eventName, fn, useCapture);\n        }\n        else if (el.attachEvent) {\n            el.attachEvent(`on${eventName}`, fn);\n        }\n    }\n}\nfunction off(eventName, fn, el, useCapture) {\n    if (el) {\n        if (el.removeEventListener) {\n            el.removeEventListener(eventName, fn, useCapture);\n        }\n        else if (el.attachEvent) {\n            el.detachEvent(`on${eventName}`, fn);\n        }\n    }\n}\nexport default class EventManager {\n    constructor(el) {\n        this.events = {};\n        this.el = el;\n    }\n    addEventListener(eventName, fn, useCapture = false) {\n        eventName = eventName.toLowerCase();\n        const events = this.events[eventName] || [];\n        const index = events.findIndex(([event]) => event === fn);\n        if (index === -1) {\n            events.push([fn, useCapture]);\n            this.events[eventName] = events;\n            on(eventName, fn, this.el, useCapture);\n        }\n        return this;\n    }\n    removeEventListener(eventName, fn, useCapture = false) {\n        eventName = eventName.toLowerCase();\n        const events = this.events[eventName];\n        if (events) {\n            if (fn) {\n                const index = events.findIndex(([event]) => event === fn);\n                if (index !== -1) {\n                    events.splice(index, 1);\n                }\n                off(eventName, fn, this.el, useCapture);\n            }\n            else {\n                this.events[eventName] = this.el\n                    ? (this.events[eventName] || []).filter(([event, capture]) => {\n                        off(eventName, event, this.el, capture);\n                        return false;\n                    })\n                    : [];\n            }\n        }\n        return this;\n    }\n    fireEvent(eventName, ...rest) {\n        const events = this.events[eventName.toLowerCase()];\n        return events\n            ? Promise.all(events.map(([fn]) => fn(...rest))).then(all => all.every(result => result !== false))\n            : Promise.resolve(true);\n    }\n    clear() {\n        if (this.el) {\n            Object.keys(this.events).forEach(eventName => this.removeEventListener(eventName));\n        }\n        this.events = {};\n        return this;\n    }\n}\nexport function preventDefault(e) {\n    e.preventDefault();\n}\nexport function stopPropagation(e) {\n    e.stopPropagation();\n}\nexport function stopEvent(e) {\n    preventDefault(e);\n    stopPropagation(e);\n}\n"]}