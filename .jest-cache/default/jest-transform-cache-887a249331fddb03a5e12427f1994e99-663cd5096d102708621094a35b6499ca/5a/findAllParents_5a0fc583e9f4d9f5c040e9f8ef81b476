146b4854f6678109163e50dab90153fa
"use strict";

/* istanbul ignore next */
function cov_18ucpmwpgf() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/findAllParents.ts";
  var hash = "fb8b1c4831112f489eaf8475f13e3f8ed9353f25";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/findAllParents.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 36
        }
      },
      "2": {
        start: {
          line: 9,
          column: 16
        },
        end: {
          line: 9,
          column: 18
        }
      },
      "3": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "6": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "7": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 22,
          column: 7
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 33
        }
      },
      "9": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "10": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 27,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "findAllParents",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 23
          }
        },
        loc: {
          start: {
            line: 8,
            column: 41
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "findParent",
        decl: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 21
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 24,
            column: 3
          }
        },
        line: 15
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        }, {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 6
          },
          end: {
            line: 22,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 6
          },
          end: {
            line: 22,
            column: 7
          }
        }, {
          start: {
            line: 20,
            column: 6
          },
          end: {
            line: 22,
            column: 7
          }
        }],
        line: 20
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fb8b1c4831112f489eaf8475f13e3f8ed9353f25"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_18ucpmwpgf = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_18ucpmwpgf();
cov_18ucpmwpgf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_18ucpmwpgf().s[1]++;
exports["default"] = findAllParents;

function findAllParents(rowData, rowKey) {
  /* istanbul ignore next */
  cov_18ucpmwpgf().f[0]++;
  var parents =
  /* istanbul ignore next */
  (cov_18ucpmwpgf().s[2]++, []);

  /* istanbul ignore next */
  cov_18ucpmwpgf().s[3]++;

  if (!rowData) {
    /* istanbul ignore next */
    cov_18ucpmwpgf().b[0][0]++;
    cov_18ucpmwpgf().s[4]++;
    return parents;
  } else
  /* istanbul ignore next */
  {
    cov_18ucpmwpgf().b[0][1]++;
  }

  function findParent(data) {
    /* istanbul ignore next */
    cov_18ucpmwpgf().f[1]++;
    cov_18ucpmwpgf().s[5]++;

    if (data) {
      /* istanbul ignore next */
      cov_18ucpmwpgf().b[1][0]++;
      cov_18ucpmwpgf().s[6]++;
      // @ts-ignore
      parents.push(data[rowKey]);

      /* istanbul ignore next */
      cov_18ucpmwpgf().s[7]++;

      if (data._parent) {
        /* istanbul ignore next */
        cov_18ucpmwpgf().b[2][0]++;
        cov_18ucpmwpgf().s[8]++;
        findParent(data._parent);
      } else
      /* istanbul ignore next */
      {
        cov_18ucpmwpgf().b[2][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_18ucpmwpgf().b[1][1]++;
    }
  }

  /* istanbul ignore next */
  cov_18ucpmwpgf().s[9]++;
  findParent(rowData._parent);

  /* istanbul ignore next */
  cov_18ucpmwpgf().s[10]++;
  return parents;
}