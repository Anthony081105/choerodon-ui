{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/Validity.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEqB,Q;;;AA8BnB,oBAAY,KAAZ,EAA0B;AAAA;AACxB,SAAK,IAAL,CAAU,KAAV;AACD;;;;4BAEI;AACH,WAAK,IAAL;AACD;;;yBAGI,K,EAAc;AACjB,WAAK,QAAL,GAAgB,KAAhB;AACA,WAAK,WAAL,GAAmB,KAAnB;AACA,WAAK,eAAL,GAAuB,KAAvB;AACA,WAAK,aAAL,GAAqB,KAArB;AACA,WAAK,cAAL,GAAsB,KAAtB;AACA,WAAK,YAAL,GAAoB,KAApB;AACA,WAAK,OAAL,GAAe,KAAf;AACA,WAAK,QAAL,GAAgB,KAAhB;AACA,WAAK,YAAL,GAAoB,KAApB;AACA,WAAK,YAAL,GAAoB,KAApB;AACA,WAAK,WAAL,GAAmB,KAAnB;;AACA,UAAI,KAAJ,EAAW;AACT,kCAAc,IAAd,EAAoB,KAApB;AACD;AACF;;;wBA9BQ;AAAA;;AACP,aAAO,MAAM,CAAC,IAAP,CAAY,IAAZ,EACJ,MADI,CACG,UAAA,GAAG;AAAA,eAAI,GAAG,KAAK,OAAZ;AAAA,OADN,EAEJ,KAFI,CAEE,UAAA,GAAG;AAAA,eAAI,CAAC,KAAI,CAAC,GAAD,CAAT;AAAA,OAFL,CAAP;AAGD;;;;;;AA3BW,uBAAA,CAAX,gBAAW,CAAA,E,kBAAA,E,UAAA,E,KAAkB,CAAlB;AAEA,uBAAA,CAAX,gBAAW,CAAA,E,kBAAA,E,aAAA,E,KAAqB,CAArB;AAEA,uBAAA,CAAX,gBAAW,CAAA,E,kBAAA,E,iBAAA,E,KAAyB,CAAzB;AAEA,uBAAA,CAAX,gBAAW,CAAA,E,kBAAA,E,eAAA,E,KAAuB,CAAvB;AAEA,uBAAA,CAAX,gBAAW,CAAA,E,kBAAA,E,gBAAA,E,KAAwB,CAAxB;AAEA,uBAAA,CAAX,gBAAW,CAAA,E,kBAAA,E,cAAA,E,KAAsB,CAAtB;AAEA,uBAAA,CAAX,gBAAW,CAAA,E,kBAAA,E,SAAA,E,KAAiB,CAAjB;AAEA,uBAAA,CAAX,gBAAW,CAAA,E,kBAAA,E,UAAA,E,KAAkB,CAAlB;AAEA,uBAAA,CAAX,gBAAW,CAAA,E,kBAAA,E,cAAA,E,KAAsB,CAAtB;AAEA,uBAAA,CAAX,gBAAW,CAAA,E,kBAAA,E,cAAA,E,KAAsB,CAAtB;AAEA,uBAAA,CAAX,gBAAW,CAAA,E,kBAAA,E,aAAA,E,KAAqB,CAArB;AAGZ,uBAAA,CADC,cACD,CAAA,E,kBAAA,E,OAAA,EAIC,IAJD;AAeA,uBAAA,CADC,YACD,CAAA,E,kBAAA,E,MAAA,EAeC,IAfD","sourcesContent":["import { action, computed, observable } from 'mobx';\n\nexport default class Validity {\n  @observable badInput: boolean;\n\n  @observable customError: boolean;\n\n  @observable patternMismatch: boolean;\n\n  @observable rangeOverflow: boolean;\n\n  @observable rangeUnderflow: boolean;\n\n  @observable stepMismatch: boolean;\n\n  @observable tooLong: boolean;\n\n  @observable tooShort: boolean;\n\n  @observable typeMismatch: boolean;\n\n  @observable valueMissing: boolean;\n\n  @observable uniqueError: boolean;\n\n  @computed\n  get valid(): boolean {\n    return Object.keys(this)\n      .filter(key => key !== 'valid')\n      .every(key => !this[key]);\n  }\n\n  constructor(props?: object) {\n    this.init(props);\n  }\n\n  reset() {\n    this.init();\n  }\n\n  @action\n  init(props?: object) {\n    this.badInput = false;\n    this.customError = false;\n    this.patternMismatch = false;\n    this.rangeOverflow = false;\n    this.rangeUnderflow = false;\n    this.stepMismatch = false;\n    this.tooLong = false;\n    this.tooShort = false;\n    this.typeMismatch = false;\n    this.valueMissing = false;\n    this.uniqueError = false;\n    if (props) {\n      Object.assign(this, props);\n    }\n  }\n}\n"]}