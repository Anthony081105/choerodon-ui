3cef996783bcbffa425d7b71eab99fe7
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _moment = _interopRequireDefault(require("moment"));

var _mockdate = _interopRequireDefault(require("mockdate"));

var _ = require("../..");

var _en_GB = _interopRequireDefault(require("../en_GB"));

var _fr_FR = _interopRequireDefault(require("../fr_FR"));

var _nl_BE = _interopRequireDefault(require("../nl_BE"));

var _it_IT = _interopRequireDefault(require("../it_IT"));

var _en_US = _interopRequireDefault(require("../en_US"));

var _pt_BR = _interopRequireDefault(require("../pt_BR"));

var _pt_PT = _interopRequireDefault(require("../pt_PT"));

var _ru_RU = _interopRequireDefault(require("../ru_RU"));

var _es_ES = _interopRequireDefault(require("../es_ES"));

var _sv_SE = _interopRequireDefault(require("../sv_SE"));

var _fr_BE = _interopRequireDefault(require("../fr_BE"));

var _de_DE = _interopRequireDefault(require("../de_DE"));

var _nl_NL = _interopRequireDefault(require("../nl_NL"));

var _ca_ES = _interopRequireDefault(require("../ca_ES"));

var _cs_CZ = _interopRequireDefault(require("../cs_CZ"));

var _ko_KR = _interopRequireDefault(require("../ko_KR"));

var _et_EE = _interopRequireDefault(require("../et_EE"));

var _sk_SK = _interopRequireDefault(require("../sk_SK"));

var _ja_JP = _interopRequireDefault(require("../ja_JP"));

var _tr_TR = _interopRequireDefault(require("../tr_TR"));

var _zh_TW = _interopRequireDefault(require("../zh_TW"));

var _fi_FI = _interopRequireDefault(require("../fi_FI"));

var _pl_PL = _interopRequireDefault(require("../pl_PL"));

var _bg_BG = _interopRequireDefault(require("../bg_BG"));

var _vi_VN = _interopRequireDefault(require("../vi_VN"));

var _th_TH = _interopRequireDefault(require("../th_TH"));

var _fa_IR = _interopRequireDefault(require("../fa_IR"));

var _el_GR = _interopRequireDefault(require("../el_GR"));

var _nb_NO = _interopRequireDefault(require("../nb_NO"));

var _sr_RS = _interopRequireDefault(require("../sr_RS"));

var _sl_SI = _interopRequireDefault(require("../sl_SI"));

var _is_IS = _interopRequireDefault(require("../is_IS"));

var _ar_EG = _interopRequireDefault(require("../ar_EG"));

var _uk_UA = _interopRequireDefault(require("../uk_UA"));

var _zh_CN = _interopRequireDefault(require("../zh_CN"));

var _ku_IQ = _interopRequireDefault(require("../ku_IQ"));

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = (0, _getPrototypeOf2["default"])(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0, _possibleConstructorReturn2["default"])(this, result);
  };
}

var locales = [_en_US["default"], _pt_BR["default"], _pt_PT["default"], _ru_RU["default"], _es_ES["default"], _sv_SE["default"], _fr_BE["default"], _de_DE["default"], _nl_NL["default"], _ca_ES["default"], _cs_CZ["default"], _ko_KR["default"], _et_EE["default"], _sk_SK["default"], _ja_JP["default"], _tr_TR["default"], _zh_TW["default"], _fi_FI["default"], _pl_PL["default"], _bg_BG["default"], _en_GB["default"], _fr_FR["default"], _nl_BE["default"], _it_IT["default"], _vi_VN["default"], _th_TH["default"], _fa_IR["default"], _el_GR["default"], _nb_NO["default"], _sr_RS["default"], _sl_SI["default"], _is_IS["default"], _ar_EG["default"], _uk_UA["default"], _zh_CN["default"], _ku_IQ["default"]];
var Option = _.Select.Option;
var RangePicker = _.DatePicker.RangePicker;
var columns = [{
  title: 'Name',
  dataIndex: 'name',
  filters: [{
    text: 'filter1',
    value: 'filter1'
  }]
}, {
  title: 'Age',
  dataIndex: 'age'
}];

var App = function App() {
  return _react["default"].createElement("div", null, _react["default"].createElement(_.Pagination, {
    defaultCurrent: 1,
    total: 50,
    showSizeChanger: true
  }), _react["default"].createElement(_.Select, {
    showSearch: true,
    style: {
      width: 200
    }
  }, _react["default"].createElement(Option, {
    value: "jack"
  }, "jack"), _react["default"].createElement(Option, {
    value: "lucy"
  }, "lucy")), _react["default"].createElement(_.DatePicker, {
    open: true
  }), _react["default"].createElement(_.TimePicker, {
    open: true,
    defaultOpenValue: (0, _moment["default"])()
  }), _react["default"].createElement(RangePicker, {
    open: true,
    style: {
      width: 200
    }
  }), _react["default"].createElement(_.Popconfirm, {
    title: "Question?",
    visible: true
  }, _react["default"].createElement("a", null, "Click to confirm")), _react["default"].createElement(_.Transfer, {
    dataSource: [],
    showSearch: true,
    targetKeys: [],
    render: function render(item) {
      return item.title;
    }
  }), _react["default"].createElement(_.Calendar, {
    fullscreen: false,
    value: (0, _moment["default"])()
  }), _react["default"].createElement(_.Table, {
    dataSource: [],
    columns: columns
  }), _react["default"].createElement(_.Modal, {
    title: "Locale Modal",
    visible: true
  }, _react["default"].createElement("p", null, "Locale Modal")));
};

describe('Locale Provider', function () {
  beforeAll(function () {
    _mockdate["default"].set((0, _moment["default"])('2017-09-18T03:30:07.795'));
  });
  afterAll(function () {
    _mockdate["default"].reset();
  });
  locales.forEach(function (locale) {
    it("should display the text as ".concat(locale.locale), function () {
      var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_.LocaleProvider, {
        locale: locale
      }, _react["default"].createElement(App, null)));
      expect(wrapper.render()).toMatchSnapshot();
    });
  });
  it('should change locale of Modal.xxx', function () {
    var ModalDemo =
    /*#__PURE__*/
    function (_React$Component) {
      (0, _inherits2["default"])(ModalDemo, _React$Component);

      var _super = _createSuper(ModalDemo);

      function ModalDemo() {
        (0, _classCallCheck2["default"])(this, ModalDemo);
        return _super.apply(this, arguments);
      }

      (0, _createClass2["default"])(ModalDemo, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          _.Modal.confirm({
            title: 'Hello World!'
          });
        }
      }, {
        key: "render",
        value: function render() {
          return null;
        }
      }]);
      return ModalDemo;
    }(_react["default"].Component);

    locales.forEach(function (locale) {
      (0, _enzyme.mount)(_react["default"].createElement(_.LocaleProvider, {
        locale: locale
      }, _react["default"].createElement(ModalDemo, null)));
      var currentConfirmNode = document.querySelectorAll('.c7n-confirm')[document.querySelectorAll('.c7n-confirm').length - 1];
      var cancelButtonText = currentConfirmNode.querySelectorAll('.c7n-btn:not(.c7n-btn-primary) span')[0].innerHTML;
      var okButtonText = currentConfirmNode.querySelectorAll('.c7n-btn-primary span')[0].innerHTML;

      if (locale.locale === 'zh-cn') {
        cancelButtonText = cancelButtonText.replace(' ', '');
        okButtonText = okButtonText.replace(' ', '');
      }

      expect(cancelButtonText).toBe(locale.Modal.cancelText);
      expect(okButtonText).toBe(locale.Modal.okText);
    });
  });
  it('set moment locale when locale changes', function () {
    var Test =
    /*#__PURE__*/
    function (_React$Component2) {
      (0, _inherits2["default"])(Test, _React$Component2);

      var _super2 = _createSuper(Test);

      function Test() {
        var _this;

        (0, _classCallCheck2["default"])(this, Test);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super2.call.apply(_super2, [this].concat(args));
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
          locale: _zh_CN["default"]
        });
        return _this;
      }

      (0, _createClass2["default"])(Test, [{
        key: "render",
        value: function render() {
          var locale = this.state.locale;
          return _react["default"].createElement(_.LocaleProvider, {
            locale: locale
          }, _react["default"].createElement("div", null, _react["default"].createElement(_.DatePicker, {
            defaultValue: (0, _moment["default"])(),
            open: true
          })));
        }
      }]);
      return Test;
    }(_react["default"].Component);

    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(Test, null));
    expect(wrapper.render()).toMatchSnapshot();
    wrapper.setState({
      locale: _fr_FR["default"]
    });
    expect(wrapper.render()).toMatchSnapshot();
    wrapper.setState({
      locale: null
    });
    expect(wrapper.render()).toMatchSnapshot();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,