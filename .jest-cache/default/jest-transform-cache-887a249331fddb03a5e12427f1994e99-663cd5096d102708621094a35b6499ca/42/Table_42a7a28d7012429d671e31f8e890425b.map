{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/Table.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { MouseEventHandler, ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport raf from 'raf';\nimport { observer } from 'mobx-react';\nimport omit from 'lodash/omit';\nimport isNumber from 'lodash/isNumber';\nimport isUndefined from 'lodash/isUndefined';\nimport debounce from 'lodash/debounce';\nimport isObject from 'lodash/isObject';\nimport noop from 'lodash/noop';\nimport classes from 'component-classes';\nimport { action, toJS } from 'mobx';\nimport {\n  DragDropContext,\n  DropResult,\n  ResponderProvided,\n  DroppableProps,\n  DraggableProps,\n  DraggableRubric,\n  DraggableStateSnapshot,\n} from 'react-beautiful-dnd';\nimport { getConfig, getProPrefixCls } from 'choerodon-ui/lib/configure';\nimport warning from 'choerodon-ui/lib/_util/warning';\nimport { pxToRem, toPx } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport measureScrollbar from 'choerodon-ui/lib/_util/measureScrollbar';\nimport KeyCode from 'choerodon-ui/lib/_util/KeyCode';\nimport ReactResizeObserver from 'choerodon-ui/lib/_util/resizeObserver';\nimport Column, { ColumnProps, defaultMinWidth } from './Column';\nimport TableRow, { TableRowProps } from './TableRow';\nimport TableHeaderCell, { TableHeaderCellProps } from './TableHeaderCell';\nimport DataSet from '../data-set/DataSet';\nimport Record from '../data-set/Record';\nimport TableStore, { DRAG_KEY } from './TableStore';\nimport TableHeader from './TableHeader';\nimport autobind from '../_util/autobind';\nimport Pagination, { PaginationProps } from '../pagination/Pagination';\nimport Spin, { SpinProps } from '../spin';\nimport DataSetComponent, { DataSetComponentProps } from '../data-set/DataSetComponent';\nimport TableContext from './TableContext';\nimport TableWrapper from './TableWrapper';\nimport TableTBody from './TableTBody';\nimport TableFooter from './TableFooter';\nimport {\n  ColumnLock,\n  ScrollPosition,\n  SelectionMode,\n  TableButtonType,\n  TableCommandType,\n  TableEditMode,\n  TableMode,\n  TablePaginationPosition,\n  TableQueryBarType,\n  TableAutoHeightType,\n  DragColumnAlign,\n  ColumnsEditType,\n} from './enum';\nimport Switch from '../switch/Switch';\nimport Tooltip from '../tooltip/Tooltip';\nimport { $l } from '../locale-context';\nimport TableQueryBar from './query-bar';\nimport FilterBar from './query-bar/TableFilterBar';\nimport AdvancedQueryBar from './query-bar/TableAdvancedQueryBar';\nimport ProfessionalBar from './query-bar/TableProfessionalBar';\nimport ToolBar from './query-bar/TableToolBar';\nimport { findIndexedSibling, getHeight, getPaginationPosition } from './utils';\nimport { ButtonProps } from '../button/Button';\nimport TableBody from './TableBody';\n\nexport type TableButtonProps = ButtonProps & { afterClick?: MouseEventHandler<any>; children?: ReactNode; };\n\nexport type Buttons =\n  | TableButtonType\n  | [TableButtonType, TableButtonProps]\n  | ReactElement<TableButtonProps>;\n\nexport interface TableQueryBarHookProps {\n  dataSet: DataSet;\n  queryDataSet?: DataSet;\n  buttons: ReactElement<ButtonProps>[];\n  queryFields: ReactElement<any>[];\n  queryFieldsLimit: number;\n  pagination?: ReactElement<PaginationProps>;\n}\n\nexport interface expandedRowRendererProps {\n  dataSet: DataSet;\n  record: Record;\n}\n\nexport interface expandIconProps {\n  prefixCls?: string;\n  expanded: boolean;\n  onExpand: Function;\n  record: Record;\n  expandable: boolean;\n  needIndentSpaced: boolean;\n}\n\nexport interface onRowProps {\n  dataSet: DataSet;\n  record: Record;\n  index: number;\n  expandedRow: boolean;\n}\n\nexport type TableQueryBarHook = (props: TableQueryBarHookProps) => ReactNode;\nexport type Commands =\n  | TableCommandType\n  | [TableCommandType, TableButtonProps]\n  | ReactElement<TableButtonProps>;\n\nexport const buttonsEnumType = PropTypes.oneOf([\n  TableButtonType.add,\n  TableButtonType.save,\n  TableButtonType.remove,\n  TableButtonType.delete,\n  TableButtonType.reset,\n  TableButtonType.query,\n  TableButtonType.export,\n  TableButtonType.expandAll,\n  TableButtonType.collapseAll,\n]);\n\nexport interface TablePaginationConfig extends PaginationProps {\n  position?: TablePaginationPosition;\n}\n\nexport type SpinIndicator = ReactElement<any>;\n\nexport interface TableSpinConfig extends SpinProps {\n  spinning?: boolean;\n  indicator?: SpinIndicator;\n}\n\nexport interface Instance {\n  tbody: React.ReactElement;\n  headtr: React.ReactElement;\n}\n\n/**\n * DraggableRubric 可以获取拖动起来item的index和id从列表获取信息\n */\nexport interface DragTableHeaderCellProps extends TableHeaderCellProps {\n  rubric: DraggableRubric\n}\n\nexport interface DragTableRowProps extends TableRowProps {\n  rubric: DraggableRubric\n}\n\nexport interface RowRenderIcon {\n  column: ColumnProps;\n  dataSet: DataSet;\n  snapshot: DraggableStateSnapshot;\n}\n\nexport interface ColumnRenderIcon {\n  record: Record;\n}\n\nexport interface DragRender {\n  droppableProps?: DroppableProps;\n  draggableProps?: DraggableProps;\n  renderClone?: ((dragRenderProps: DragTableRowProps) => ReactElement<any>) | ((dragRenderProps: DragTableHeaderCellProps) => ReactElement<any>);\n  renderIcon?: ((rowRenderIcon:RowRenderIcon) => ReactElement<any>) | ((columnRenderIcon:ColumnRenderIcon) => ReactElement<any>);\n}\n\nexport interface ChangeColumns {\n  column:ColumnProps;\n  columns:ColumnProps[];\n  type:ColumnsEditType;\n}\n\nlet _instance;\n// 构造一个单例table来防止body下不能有table元素的报错\nexport const instance = (): Instance => {\n  // Using a table as the portal so that we do not get react\n  // warnings when mounting a tr element\n  const _tableContain = (): Instance => {\n    const table: HTMLElement = document.createElement('table');\n    table.classList.add(`${getProPrefixCls('table')}-drag-container`);\n\n    const thead: HTMLElement = document.createElement('thead');\n    thead.classList.add(`${getProPrefixCls('table')}-thead`);\n    table.appendChild(thead);\n\n    const headtr: HTMLElement = document.createElement('tr');\n    thead.appendChild(headtr);\n    const tbody: HTMLElement = document.createElement('tbody');\n\n    tbody.classList.add(`${getProPrefixCls('table')}-tbody`);\n    table.appendChild(tbody);\n    if (!document.body) {\n      throw new Error('document.body required a body to append');\n    }\n    document.body.appendChild(table);\n    return {\n      // @ts-ignore\n      tbody,\n      // @ts-ignore\n      headtr,\n    };\n  };\n  if (_instance) {\n    return _instance;\n  }\n  return _instance = _tableContain();\n};\n\nexport interface TableProps extends DataSetComponentProps {\n  columns?: ColumnProps[];\n  /**\n   * 表头\n   */\n  header?: ReactNode | ((records: Record[]) => ReactNode);\n  /**\n   * 表脚\n   */\n  footer?: ReactNode | ((records: Record[]) => ReactNode);\n  /**\n   * 是否显示边框\n   * @default true\n   */\n  border?: boolean;\n  /**\n   * 数据源\n   */\n  dataSet: DataSet;\n  /**\n   * 选择记录的模式\n   */\n  selectionMode?: SelectionMode;\n  /**\n   * 在其他模式下是不是要是要rowbox\n   */\n  alwaysShowRowBox?: boolean;\n  /**\n   * 设置行属性\n   * @param {onRowProps} props\n   * @return {Object} 行属性\n   */\n  onRow?: (props: onRowProps) => object;\n  /**\n   * @deprecated\n   * 请使用 onRow\n   */\n  rowRenderer?: (record: Record, index: number) => object;\n  /**\n   * 功能按钮\n   * 可选值：`add` `delete` `remove` `save` `query` `reset` `expandAll` `collapseAll` `export` 或 自定义按钮\n   * 给内置按钮加属性：buttons={[['add', { color: 'red' }], ...]}\n   */\n  buttons?: Buttons[];\n  /**\n   * 自定义查询字段组件\n   * @example\n   * { age: <NumberField /> }\n   *\n   * 默认会根据queryDataSet中定义的field类型自动匹配组件， 匹配类型如下\n   * lovCode => Lov\n   * lookupCode => Select\n   * type:number => NumberField\n   * type:date => DatePicker\n   * type:dateTime => DatePicker[mode=dateTime]\n   * type:week => DatePicker[mode=week]\n   * default => TextField\n   */\n  queryFields?: { [key: string]: ReactElement<any>; };\n  /**\n   * 头部显示的查询字段的数量，超出限制的查询字段放入弹出窗口\n   * @default 1\n   */\n  queryFieldsLimit?: number;\n  /**\n   * 显示查询条\n   * 可选值: `advancedBar` `normal` `bar` `none` `professionalBar`\n   * @default 'normal'\n   */\n  queryBar?: TableQueryBarType | TableQueryBarHook;\n  /**\n   * 是否使用拖拽选择\n   * @default false\n   */\n  useMouseBatchChoose?: boolean;\n  /**\n   * @deprecated\n   * 请使用 queryBar=\"none\"\n   */\n  showQueryBar?: boolean;\n  /**\n   * 行高\n   * @default 31\n   */\n  rowHeight?: number | 'auto';\n  /**\n   * 默认行是否展开，当dataSet没有设置expandField时才有效\n   * @default false;\n   */\n  defaultRowExpanded?: boolean;\n  /**\n   * 通过点击行来展开子行\n   */\n  expandRowByClick?: boolean;\n  /**\n   * 展开行渲染器\n   */\n  expandedRowRenderer?: (props: expandedRowRendererProps) => ReactNode;\n  /**\n   * 自定义展开图标\n   */\n  expandIcon?: (props: expandIconProps) => ReactNode;\n  /**\n   * 展开图标所在列索引\n   */\n  expandIconColumnIndex?: number;\n  /**\n   * 展示树形数据时，每层缩进的宽度\n   */\n  indentSize?: number;\n  /**\n   * 数据过滤\n   * 返回值 true - 显示 false - 不显示\n   * @param {Record} record 记录\n   * @return {boolean}\n   */\n  filter?: (record: Record) => boolean;\n  /**\n   * 表格展示的模式\n   * tree需要配合dataSet的`idField`和`parentField`来展示\n   * 可选值: `list` `tree`\n   */\n  mode?: TableMode;\n  /**\n   * 表格编辑的模式\n   * 可选值: `cell` `inline`\n   * @default cell\n   */\n  editMode?: TableEditMode;\n  /**\n   * queryBar为bar时，直接输入的过滤条件的字段名\n   */\n  filterBarFieldName?: string;\n  /**\n   * queryBar为bar时输入框的占位符\n   */\n  filterBarPlaceholder?: string;\n  /**\n   * 分页导航条属性\n   */\n  pagination?: TablePaginationConfig | false;\n  /**\n   * 高亮行\n   */\n  highLightRow?: boolean;\n  /**\n   * 勾选高亮行\n   */\n  selectedHighLightRow?: boolean;\n  /**\n   * 可调整列宽\n   */\n  columnResizable?: boolean;\n  /**\n   * 显示原始值\n   */\n  pristine?: boolean;\n  /**\n   * 点击展开图标时触发\n   */\n  onExpand?: (expanded: boolean, record: Record) => void;\n  /**\n   * 加载条属性\n   */\n  spin?: TableSpinConfig | false;\n  /**\n   * 虚拟滚动\n   */\n  virtual?: boolean;\n  /**\n   * 虚拟滚动是否显示加载\n   */\n  virtualSpin?: boolean;\n  /**\n   * 是否开启自适应高度\n   */\n  autoHeight?: boolean | { type: TableAutoHeightType, diff: number };\n  /**\n   * 是否开启宽度双击最大值\n   */\n  autoMaxWidth?: boolean;\n  /**\n   * 设置drag框体位置\n   */\n  dragColumnAlign?: DragColumnAlign;\n  /**\n   * 开启列拖拽，但是无法使用宽度拖拽\n   */\n  dragColumn?: boolean;\n  /**\n   * 开启行拖拽\n   */\n  dragRow?: boolean;\n  /**\n   * 拖拽触发事件\n   */\n  onDragEnd?: (dataSet: DataSet, columns: ColumnProps[], resultDrag: DropResult, provided: ResponderProvided) => void\n  /**\n   * 渲染列拖拽\n   */\n  columnsDragRender?: DragRender;\n  /**\n   * 渲染行拖拽\n   */\n  rowDragRender?: DragRender;\n  /**\n   * 是否开启回车跳转下一行编辑\n   */\n  editorNextKeyEnterDown?: boolean;\n  /**\n   * 优先级高于colums，可以实现表头文字修改和列的位置修改\n   */\n  columnsMergeCoverage?:ColumnProps[];\n  /**\n   * 拖拽列和修改表头触发事件\n   */\n  columnsOnChange?:(change:ChangeColumns) => void;\n  /**\n   * 合并列信息选择，目前可以选择表头文字或者表的位置进行合并。\n  */\n  columnsEditType?:ColumnsEditType,\n  /**\n   * 拖拽触发事件位置切换前回调\n   */\n  onDragEndBefore?:(dataSet: DataSet, columns: ColumnProps[], resultDrag: DropResult, provided: ResponderProvided) => DropResult | boolean | void,\n}\n\n@observer\nexport default class Table extends DataSetComponent<TableProps> {\n  static displayName = 'Table';\n\n  static Column = Column;\n\n  static FilterBar = FilterBar;\n\n  static AdvancedQueryBar = AdvancedQueryBar;\n\n  static ProfessionalBar = ProfessionalBar;\n\n  static ToolBar = ToolBar;\n\n  static TableRow = TableRow;\n\n  static TableHeaderCell = TableHeaderCell;\n\n  static propTypes = {\n    columns: PropTypes.array,\n    /**\n     * 表头\n     */\n    header: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    /**\n     * 表脚\n     */\n    footer: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    /**\n     * 是否显示边框\n     * @default true\n     */\n    border: PropTypes.bool,\n    /**\n     * 功能按钮\n     * 可选值：`add` `delete` `remove` `save` `query` `expandAll` `collapseAll` 或 自定义按钮\n     */\n    buttons: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        buttonsEnumType,\n        PropTypes.arrayOf(PropTypes.oneOfType([buttonsEnumType, PropTypes.object])),\n        PropTypes.node,\n      ]),\n    ),\n    /**\n     * 自定义查询字段组件\n     * 默认会根据queryDataSet中定义的field类型自动匹配组件， 匹配类型如下\n     * lovCode => Lov\n     * lookupCode => Select\n     * type:number => NumberField\n     * type:date => DatePicker\n     * type:dateTime => DatePicker[mode=dateTime]\n     * type:week => DatePicker[mode=week]\n     * default => TextField\n     */\n    queryFields: PropTypes.object,\n    /**\n     * 头部显示的查询字段的数量，超出限制的查询字段放入弹出窗口\n     * @default 1\n     */\n    queryFieldsLimit: PropTypes.number,\n    /**\n     * 显示查询条\n     * @default true\n     */\n    queryBar: PropTypes.oneOfType([\n      PropTypes.oneOf([\n        TableQueryBarType.advancedBar,\n        TableQueryBarType.normal,\n        TableQueryBarType.bar,\n        TableQueryBarType.none,\n        TableQueryBarType.professionalBar,\n      ]),\n      PropTypes.func,\n    ]),\n    useMouseBatchChoose: PropTypes.bool,\n    /**\n     * 行高\n     * @default 30\n     */\n    rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n    alwaysShowRowBox: PropTypes.bool,\n    defaultRowExpanded: PropTypes.bool,\n    expandRowByClick: PropTypes.bool,\n    indentSize: PropTypes.number,\n    filter: PropTypes.func,\n    mode: PropTypes.oneOf([TableMode.list, TableMode.tree]),\n    editMode: PropTypes.oneOf([TableEditMode.inline, TableEditMode.cell]),\n    filterBarFieldName: PropTypes.string,\n    filterBarPlaceholder: PropTypes.string,\n    highLightRow: PropTypes.bool,\n    selectedHighLightRow: PropTypes.bool,\n    autoMaxWidth: PropTypes.bool,\n    /**\n     * 设置drag框体位置\n     */\n    dragColumnAlign: PropTypes.oneOf([DragColumnAlign.left, DragColumnAlign.right]),\n    /**\n     * 开启列拖拽，但是无法使用宽度拖拽\n     */\n    dragColumn: PropTypes.bool,\n    /**\n     * 开启行拖拽\n     */\n    dragRow: PropTypes.bool,\n    columnsMergeCoverage: PropTypes.array,\n    columnsDragRender: PropTypes.object,\n    expandIcon: PropTypes.func,\n    rowDragRender: PropTypes.object,\n    columnsEditType: PropTypes.oneOf([ColumnsEditType.all, ColumnsEditType.header, ColumnsEditType.order]),\n    onDragEndBefore: PropTypes.func,\n    ...DataSetComponent.propTypes,\n  };\n\n  static defaultProps = {\n    suffixCls: 'table',\n    tabIndex: 0,\n    selectionMode: SelectionMode.rowbox,\n    queryFields: {},\n    defaultRowExpanded: false,\n    expandRowByClick: false,\n    indentSize: 15,\n    filterBarFieldName: 'params',\n    virtual: false,\n    virtualSpin: false,\n    autoHeight: false,\n    autoMaxWidth: false,\n    columnsMergeCoverage:[],\n  };\n\n  tableStore: TableStore = new TableStore(this);\n\n  nextFrameActionId?: number;\n\n  scrollId?: number;\n\n  resizeLine: HTMLDivElement | null;\n\n  tableHeadWrap: HTMLDivElement | null;\n\n  tableBodyWrap: HTMLDivElement | null;\n\n  tableFootWrap: HTMLDivElement | null;\n\n  fixedColumnsBodyLeft: HTMLDivElement | null;\n\n  fixedColumnsBodyRight: HTMLDivElement | null;\n\n  dragColumnsBodyLeft: HTMLDivElement | null;\n\n  dragColumnsBodyRight: HTMLDivElement | null;\n\n  lastScrollLeft: number;\n\n  lastScrollTop: number;\n\n  scrollPosition: ScrollPosition;\n\n  refUpperPlaceholder: Array<HTMLDivElement | null> = [];\n\n  refUnderPlaceholder: Array<HTMLDivElement | null> = [];\n\n  refSpin: HTMLDivElement | null = null;\n\n  refScroll: HTMLDivElement | null = null;\n\n  get currentRow(): HTMLTableRowElement | null {\n    return this.element.querySelector(\n      `.${this.prefixCls}-row-current`,\n    ) as HTMLTableRowElement | null;\n  }\n\n  get firstRow(): HTMLTableRowElement | null {\n    return this.element.querySelector(\n      `.${this.prefixCls}-row:first-child`,\n    ) as HTMLTableRowElement | null;\n  }\n\n  get lastRow(): HTMLTableRowElement | null {\n    return this.element.querySelector(\n      `.${this.prefixCls}-row:last-child`,\n    ) as HTMLTableRowElement | null;\n  }\n\n  @autobind\n  saveResizeRef(node: HTMLDivElement | null) {\n    this.resizeLine = node;\n  }\n\n  @autobind\n  @action\n  handleSwitchChange(value) {\n    this.tableStore.showCachedSeletion = !!value;\n  }\n\n  @autobind\n  handleResize(width: number) {\n    const { element, tableStore } = this;\n    if (!element.offsetParent) {\n      tableStore.styledHidden = true;\n    } else if (!tableStore.hidden) {\n      this.syncSizeInFrame(width);\n    } else {\n      tableStore.styledHidden = false;\n    }\n  }\n\n  @autobind\n  handleDataSetLoad() {\n    this.initDefaultExpandedRows();\n  }\n\n  @autobind\n  handleDataSetCreate({ record, dataSet }) {\n    const { tableStore } = this;\n    if (tableStore.inlineEdit) {\n      if (tableStore.currentEditRecord) {\n        tableStore.currentEditRecord.reset();\n        dataSet.remove(record);\n      } else {\n        tableStore.currentEditRecord = record;\n      }\n    }\n  }\n\n  @autobind\n  handleKeyDown(e) {\n    const { tableStore } = this;\n    if (!tableStore.editing) {\n      try {\n        const { dataSet } = this.props;\n        switch (e.keyCode) {\n          case KeyCode.UP:\n            this.handleKeyDownUp(e);\n            break;\n          case KeyCode.DOWN:\n            this.handleKeyDownDown(e);\n            break;\n          case KeyCode.RIGHT:\n            this.handleKeyDownRight(e);\n            break;\n          case KeyCode.LEFT:\n            this.handleKeyDownLeft(e);\n            break;\n          case KeyCode.PAGE_UP:\n            e.preventDefault();\n            dataSet.prePage();\n            break;\n          case KeyCode.PAGE_DOWN:\n            e.preventDefault();\n            dataSet.nextPage();\n            break;\n          case KeyCode.HOME:\n            this.handleKeyDownHome(e);\n            break;\n          case KeyCode.END:\n            this.handleKeyDownEnd(e);\n            break;\n          default:\n        }\n      } catch (error) {\n        warning(false, error.message);\n      }\n    }\n    const { onKeyDown = noop } = this.props;\n    onKeyDown(e);\n  }\n\n  focusRow(row: HTMLTableRowElement | null) {\n    if (row) {\n      const { index } = row.dataset;\n      if (index) {\n        const { dataSet } = this.props;\n        const record = dataSet.findRecordById(index);\n        if (record) {\n          dataSet.current = record;\n        }\n      }\n    }\n  }\n\n  async handleKeyDownHome(e) {\n    e.preventDefault();\n    const { dataSet } = this.props;\n    if (!this.tableStore.isTree) {\n      await dataSet.first();\n    }\n    this.focusRow(this.firstRow);\n  }\n\n  async handleKeyDownEnd(e) {\n    e.preventDefault();\n    const { dataSet } = this.props;\n    if (!this.tableStore.isTree) {\n      await dataSet.last();\n    }\n    this.focusRow(this.lastRow);\n  }\n\n  async handleKeyDownUp(e) {\n    e.preventDefault();\n    const { currentRow } = this;\n    if (currentRow) {\n      const previousElementSibling = findIndexedSibling(currentRow, -1);\n      if (previousElementSibling) {\n        this.focusRow(previousElementSibling);\n      } else {\n        const { dataSet } = this.props;\n        await dataSet.prePage();\n        this.focusRow(this.lastRow);\n      }\n    }\n  }\n\n  async handleKeyDownDown(e) {\n    e.preventDefault();\n    const { currentRow } = this;\n    if (currentRow) {\n      const nextElementSibling = findIndexedSibling(currentRow, 1);\n      if (nextElementSibling) {\n        this.focusRow(nextElementSibling);\n      } else {\n        const { dataSet } = this.props;\n        await dataSet.nextPage();\n        this.focusRow(this.firstRow);\n      }\n    }\n  }\n\n  handleKeyDownRight(e) {\n    const {\n      tableStore,\n      props: { expandedRowRenderer, dataSet },\n    } = this;\n    if (tableStore.isTree || expandedRowRenderer) {\n      const { current } = dataSet;\n      if (current) {\n        e.preventDefault();\n        tableStore.setRowExpanded(current, true);\n      }\n    }\n  }\n\n  handleKeyDownLeft(e) {\n    const {\n      tableStore,\n      props: { expandedRowRenderer, dataSet },\n    } = this;\n    if (tableStore.isTree || expandedRowRenderer) {\n      const { current } = dataSet;\n      if (current) {\n        e.preventDefault();\n        tableStore.setRowExpanded(current, false);\n      }\n    }\n  }\n\n  getOtherProps() {\n    const otherProps = omit(super.getOtherProps(), [\n      'columns',\n      'header',\n      'footer',\n      'border',\n      'style',\n      'selectionMode',\n      'alwaysShowRowBox',\n      'onRow',\n      'rowRenderer',\n      'buttons',\n      'rowHeight',\n      'queryFields',\n      'queryFieldsLimit',\n      'queryBar',\n      'defaultRowExpanded',\n      'expandRowByClick',\n      'expandedRowRenderer',\n      'expandIconColumnIndex',\n      'indentSize',\n      'filter',\n      'mode',\n      'editMode',\n      'filterBarFieldName',\n      'filterBarPlaceholder',\n      'pagination',\n      'highLightRow',\n      'selectedHighLightRow',\n      'columnResizable',\n      'pristine',\n      'expandIcon',\n      'spin',\n      'virtual',\n      'virtualSpin',\n      'autoHeight',\n      'useMouseBatchChoose',\n      'autoMaxWidth',\n      'dragColumnAlign',\n      'dragColumn',\n      'dragRow',\n      'onDragEnd',\n      'columnsOnChange',\n      'columnsMergeCoverage',\n      'columnsEditType',\n      'rowDragRender',\n      'columnsDragRender',\n      'onDragEndBefore',\n    ]);\n    otherProps.onKeyDown = this.handleKeyDown;\n    const { rowHeight } = this.tableStore;\n    if (rowHeight !== 'auto') {\n      otherProps.style = { lineHeight: pxToRem(rowHeight) };\n    }\n    return otherProps;\n  }\n\n  getClassName(): string | undefined {\n    const {\n      prefixCls,\n      tableStore: { border, rowHeight },\n    } = this;\n    return super.getClassName(`${prefixCls}-scroll-position-left`, {\n      [`${prefixCls}-bordered`]: border,\n      [`${prefixCls}-row-height-fixed`]: isNumber(rowHeight),\n    });\n  }\n\n  getWrapperProps(props = {}) {\n    const { style } = this.props;\n    const { tableStore } = this;\n    const newStyle: any = omit(style, ['width', 'height']);\n    if (style && style.width !== undefined && style.width !== 'auto') {\n      newStyle.width = Math.max(\n        style.width as number,\n        tableStore.leftLeafColumnsWidth + tableStore.rightLeafColumnsWidth + defaultMinWidth,\n      );\n    }\n    return super.getWrapperProps({\n      style: newStyle,\n      ...props,\n    });\n  }\n\n  /**\n   * 获取传入的 Spin props\n   */\n  getSpinProps() {\n    const { spin, dataSet } = this.props;\n    if (spin && !isUndefined(spin.spinning)) return { ...spin };\n    return {\n      ...spin,\n      dataSet,\n    };\n  }\n\n\n  @autobind\n  handleDragMouseUp() {\n    const { dataSet, mouseBatchChooseIdList } = this.tableStore;\n    if (this.tableStore.mouseBatchChooseState) {\n      this.tableStore.mouseBatchChooseState = false;\n      const { mouseBatchChooseStartId, mouseBatchChooseEndId } = this.tableStore;\n      if (mouseBatchChooseStartId === mouseBatchChooseEndId) {\n        return;\n      }\n      (mouseBatchChooseIdList || []).forEach((id: number) => {\n        const record = dataSet.find((innerRecord) => innerRecord.id === id);\n        if (record) {\n          dataSet.select(record);\n        }\n      });\n    }\n  };\n\n  componentWillMount() {\n    super.componentWillMount();\n    this.initDefaultExpandedRows();\n    this.processDataSetListener(true);\n  }\n\n  componentDidMount() {\n    this.syncSize();\n    this.syncSizeInFrame();\n    // 为什么使用 pointerup\n    // 因为需要对disabled的元素进行特殊处理\n    // 因为状态的改变依赖 mouseup 而在disabled的元素上 无法触发mouseup事件\n    // 导致状态无法进行修正\n    // 以下两种方案通过 pointer-events:none 进行处理\n    // https://stackoverflow.com/questions/322378/javascript-check-if-mouse-button-down\n    // https://stackoverflow.com/questions/62081666/the-event-of-the-document-is-not-triggered-when-it-is-on-a-disabled-element\n    // 而使用指针事件可以突破disabled的限制\n    // https://stackoverflow.com/questions/62126515/how-to-get-the-state-of-the-mouse-through-javascript/62127845#62127845\n    document.addEventListener('pointerup', this.handleDragMouseUp);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    super.componentWillReceiveProps(nextProps, nextContext);\n    this.processDataSetListener(false);\n    this.tableStore.setProps(nextProps);\n    this.processDataSetListener(true);\n  }\n\n  componentWillUnmount() {\n    this.processDataSetListener(false);\n    document.removeEventListener('pointerup', this.handleDragMouseUp);\n  }\n\n  processDataSetListener(flag: boolean) {\n    const { isTree, dataSet, inlineEdit } = this.tableStore;\n    if (dataSet) {\n      const handler = flag ? dataSet.addEventListener : dataSet.removeEventListener;\n      if (isTree) {\n        handler.call(dataSet, 'load', this.handleDataSetLoad);\n      }\n      if (inlineEdit) {\n        handler.call(dataSet, 'create', this.handleDataSetCreate);\n      }\n    }\n  }\n\n  render() {\n    const {\n      prefixCls,\n      tableStore,\n      tableStore: { overflowX, isAnyColumnsLeftLock, isAnyColumnsRightLock, dragRow, dragColumnAlign },\n      props: {\n        style,\n        spin,\n        virtual,\n        virtualSpin,\n        buttons,\n        queryFields,\n        queryFieldsLimit,\n        filterBarFieldName,\n        filterBarPlaceholder,\n      },\n    } = this;\n    const content = this.getTable();\n    const context = { tableStore };\n    const pagination = this.getPagination(TablePaginationPosition.top);\n    const tableSpinProps = getConfig('tableSpinProps');\n    const styleHeight = style ? toPx(style.height) : 0;\n\n    return (\n      <ReactResizeObserver resizeProp=\"width\" onResize={this.handleResize}>\n        <div {...this.getWrapperProps()}>\n          <TableContext.Provider value={context}>\n            {this.getHeader()}\n            <TableQueryBar\n              prefixCls={prefixCls}\n              buttons={buttons}\n              pagination={pagination}\n              queryFields={queryFields}\n              queryFieldsLimit={queryFieldsLimit}\n              filterBarFieldName={filterBarFieldName}\n              filterBarPlaceholder={filterBarPlaceholder}\n            />\n            <Spin {...tableSpinProps} {...this.getSpinProps()} key=\"content\">\n              {virtual && <div\n                ref={(node) => this.refSpin = node}\n                style={{\n                  display: 'none',\n                }}\n              >\n                {virtualSpin && <Spin\n                  key=\"virtual\"\n                  spinning\n                  style={{\n                    height: pxToRem(styleHeight),\n                    lineHeight: pxToRem(styleHeight),\n                    position: 'absolute',\n                    width: '100%',\n                    zIndex: 4,\n                  }}\n                  {...tableSpinProps}\n                  {...spin}\n                />}\n              </div>}\n              <div {...this.getOtherProps()}>\n                <div className={`${prefixCls}-content`}>\n                  {content}\n                  {isAnyColumnsLeftLock && overflowX && this.getLeftFixedTable()}\n                  {isAnyColumnsRightLock && overflowX && this.getRightFixedTable()}\n                  {dragRow && dragColumnAlign === DragColumnAlign.left && isAnyColumnsLeftLock && this.getLeftFixedTable(DragColumnAlign.left)}\n                  {dragRow && dragColumnAlign === DragColumnAlign.right && isAnyColumnsRightLock && this.getRightFixedTable(DragColumnAlign.right)}\n                  <div ref={this.saveResizeRef} className={`${prefixCls}-split-line`} />\n                </div>\n                {this.getFooter()}\n              </div>\n            </Spin>\n            {this.getPagination(TablePaginationPosition.bottom)}\n          </TableContext.Provider>\n        </div>\n      </ReactResizeObserver>\n    );\n  }\n\n  @action\n  reorderDataSet(dataset: DataSet, startIndex: number, endIndex: number) {\n    dataset.move(startIndex, endIndex);\n  };\n\n  @action\n  reorderColumns(columns: ColumnProps[], startIndex: number, endIndex: number) {\n    const { columnsOnChange } = this.props;\n    if(startIndex !== endIndex){\n      const cloneColumns = columns.slice();\n      const [dropItem] = cloneColumns.slice(endIndex, endIndex + 1);\n      const [dragItem] = cloneColumns.slice(startIndex, startIndex + 1);\n      const normalColumnLock = (lock) => {\n        if (lock === true) {\n          return ColumnLock.left;\n        }\n        if (!lock) {\n          return false;\n        }\n        return lock;\n      };\n      if (\n        dropItem &&\n        dragItem &&\n        dropItem.key !== DRAG_KEY &&\n        dragItem.key !== DRAG_KEY &&\n        normalColumnLock(dragItem.lock) === normalColumnLock(dropItem.lock)) {\n        const [removed] = columns.splice(startIndex, 1);\n        if (columns.length) {\n          columns.splice(endIndex, 0, removed);\n          if(columnsOnChange){\n            columnsOnChange({column:toJS(removed),columns:toJS(columns),type:ColumnsEditType.order})\n          }\n        }\n      }\n    }\n  };\n\n  @autobind\n  onDragEnd(resultDrag: DropResult, provided: ResponderProvided) {\n    const { onDragEnd, onDragEndBefore } = this.props;\n    // @ts-ignore ts 中判断是否属于目标类型的方法\n    const isDropresult = (dropResult: any): dropResult is DropResult => {\n      if (dropResult && dropResult.destination) {\n        return ((typeof (dropResult as DropResult).source.index === 'number')\n          && (typeof (dropResult as DropResult).destination === 'object')\n          && (typeof (dropResult as DropResult).destination!.index === 'number'))\n      }\n    }\n\n    let resultBefore\n    if (onDragEndBefore) {\n      const result = onDragEndBefore(this.tableStore.dataSet, toJS(this.tableStore.columns), resultDrag, provided)\n      if (result === false) {\n        return\n      }\n      if (result && isDropresult(result)) {\n        resultBefore = result;\n      }\n    }\n    resultBefore = resultDrag\n    if (resultBefore && resultBefore.destination) {\n      if (resultBefore.destination.droppableId === 'table') {\n        this.reorderDataSet(\n          this.tableStore.dataSet,\n          resultBefore.source.index,\n          resultBefore.destination.index,\n        );\n      }\n      if (resultBefore.destination.droppableId === 'tableHeader') {\n        this.reorderColumns(\n          this.tableStore.columns,\n          resultBefore.source.index,\n          resultBefore.destination.index,\n        );\n      }\n    }\n    /**\n     * 相应变化后的数据\n     */\n    if (onDragEnd) {\n      onDragEnd(this.tableStore.dataSet, toJS(this.tableStore.columns), resultDrag, provided);\n    }\n  }\n\n  @autobind\n  handleBodyScroll(e: React.SyntheticEvent) {\n    if (this.scrollId !== undefined) {\n      raf.cancel(this.scrollId);\n    }\n    const { currentTarget } = e;\n    e.persist();\n    this.scrollId = raf(() => {\n      this.handleBodyScrollTop(e, currentTarget);\n      this.handleBodyScrollLeft(e, currentTarget);\n    });\n  }\n\n  /**\n   * 滚动结束隐藏spin\n   */\n  setSpin = debounce(() => {\n    this.refSpin!.style.display = 'none';\n  }, 300);\n\n  handleBodyScrollTop(e, currentTarget) {\n    const { target } = e;\n    const {\n      tableStore: { rowHeight, height },\n      observableProps: { dataSet },\n      props: { virtual, autoHeight },\n    } = this;\n    if (\n      (this.tableStore.height === undefined && !autoHeight) ||\n      currentTarget !== target ||\n      target === this.tableFootWrap\n    ) {\n      return;\n    }\n    const fixedColumnsBodyLeft = this.fixedColumnsBodyLeft;\n    const dragColumnsBodyLeft = this.dragColumnsBodyLeft;\n    const bodyTable = this.tableBodyWrap;\n    const fixedColumnsBodyRight = this.fixedColumnsBodyRight;\n    const dragColumnsBodyRight = this.dragColumnsBodyRight;\n    const { scrollTop } = target;\n    if (scrollTop !== this.lastScrollTop) {\n      if (fixedColumnsBodyLeft && target !== fixedColumnsBodyLeft) {\n        fixedColumnsBodyLeft.scrollTop = scrollTop;\n      }\n      if (bodyTable && target !== bodyTable) {\n        bodyTable.scrollTop = scrollTop;\n      }\n      if (fixedColumnsBodyRight && target !== fixedColumnsBodyRight) {\n        fixedColumnsBodyRight.scrollTop = scrollTop;\n      }\n\n      if (dragColumnsBodyLeft && target !== dragColumnsBodyLeft) {\n        dragColumnsBodyLeft.scrollTop = scrollTop;\n      }\n\n      if (dragColumnsBodyRight && target !== dragColumnsBodyRight) {\n        dragColumnsBodyRight.scrollTop = scrollTop;\n      }\n\n      if (virtual) {\n        this.refSpin!.style.display = 'block';\n        this.setSpin();\n      }\n    }\n    if (virtual) {\n      const startIndex = Math.max(Math.round((scrollTop / Number(rowHeight)) - 3), 0);\n      const endIndex = Math.min(Math.round((scrollTop + height) / Number(rowHeight) + 2), dataSet.length);\n      this.refUpperPlaceholder.map(upperNode => {\n        if (upperNode) {\n          upperNode.style.height = `${startIndex * Number(rowHeight)}px`;\n          upperNode.style.display = startIndex === 0 ? 'none' : 'block';\n        }\n        return null;\n      });\n      this.refUnderPlaceholder.map(underNode => {\n        if (underNode) {\n          underNode.style.display = endIndex === dataSet.length ? 'none' : 'block';\n        }\n        return null;\n      });\n      this.tableStore.setLastScrollTop(scrollTop);\n    }\n    this.lastScrollTop = scrollTop;\n  }\n\n  handleBodyScrollLeft(e, currentTarget) {\n    const { target } = e;\n    const headTable = this.tableHeadWrap;\n    const bodyTable = this.tableBodyWrap;\n    const footTable = this.tableFootWrap;\n    if (\n      this.tableStore.overflowX === undefined ||\n      currentTarget !== target ||\n      target === this.fixedColumnsBodyRight ||\n      target === this.fixedColumnsBodyLeft\n    ) {\n      return;\n    }\n    const { scrollLeft } = target;\n    if (scrollLeft !== this.lastScrollLeft) {\n      if (headTable && target !== headTable) {\n        headTable.scrollLeft = scrollLeft;\n      }\n      if (bodyTable && target !== bodyTable) {\n        bodyTable.scrollLeft = scrollLeft;\n      }\n      if (footTable && target !== footTable) {\n        footTable.scrollLeft = scrollLeft;\n      }\n      this.setScrollPositionClassName(target);\n    }\n    this.lastScrollLeft = scrollLeft;\n  }\n\n  setScrollPositionClassName(target?: any): void {\n    if (this.tableStore.isAnyColumnsLock) {\n      const node = target || this.tableBodyWrap;\n      if (node) {\n        const scrollToLeft = node.scrollLeft === 0;\n        const table = node.querySelector('table');\n        const scrollToRight = table && node.scrollLeft >= table.offsetWidth - node.offsetWidth;\n        if (scrollToLeft && scrollToRight) {\n          this.setScrollPosition(ScrollPosition.both);\n        } else if (scrollToLeft) {\n          this.setScrollPosition(ScrollPosition.left);\n        } else if (scrollToRight) {\n          this.setScrollPosition(ScrollPosition.right);\n        } else {\n          this.setScrollPosition(ScrollPosition.middle);\n        }\n      }\n    }\n  }\n\n  setScrollPosition(position: ScrollPosition): void {\n    if (this.scrollPosition !== position) {\n      this.scrollPosition = position;\n      const { prefixCls } = this;\n      const cls = classes(this.element).remove(new RegExp(`^${prefixCls}-scroll-position-.+$`));\n      if (position === ScrollPosition.both) {\n        cls.add(`${prefixCls}-scroll-position-left`).add(`${prefixCls}-scroll-position-right`);\n      } else {\n        cls.add(`${prefixCls}-scroll-position-${position}`);\n      }\n    }\n  }\n\n  @autobind\n  saveRef(node) {\n    this.refScroll = node;\n  }\n\n  renderTable(\n    hasHeader: boolean,\n    hasBody: boolean,\n    hasFooter: boolean,\n    lock?: ColumnLock | boolean,\n    dragColumnAlign?: DragColumnAlign,\n  ): ReactNode {\n    const {\n      prefixCls,\n      tableStore: { rowHeight, height },\n      observableProps: { dataSet },\n      props: { virtual },\n    } = this;\n\n    const virtualH = Math.round(dataSet.length * Number(rowHeight));\n\n    return virtual && height ?\n      (\n        <>\n          <TableWrapper\n            prefixCls={prefixCls}\n            key=\"tableWrapper-header\"\n            lock={lock}\n            hasBody={false}\n            hasHeader={hasHeader}\n            hasFooter={false}\n            dragColumnAlign={dragColumnAlign}\n          >\n            {hasHeader && this.getTableHeader(lock, dragColumnAlign)}\n          </TableWrapper>\n          {hasBody &&\n          <div\n            className={`${prefixCls}-tbody-wrapper`}\n            style={{ height: virtualH }}\n            ref={this.saveRef}\n          >\n            <div className='refUpperPlaceholder' style={{ display: 'none' }} ref={(node) => this.refUpperPlaceholder.push(node)} />\n            <TableWrapper\n              prefixCls={prefixCls}\n              key=\"tableWrapper-body\"\n              lock={lock}\n              hasBody={hasBody}\n              hasHeader={false}\n              hasFooter={false}\n              dragColumnAlign={dragColumnAlign}\n            >\n              {hasBody && this.getTableBody(lock, dragColumnAlign)}\n            </TableWrapper>\n            <div className='refUnderPlaceholder' style={{ display: 'none' }} ref={(node) => this.refUnderPlaceholder.push(node)} />\n          </div>}\n          <TableWrapper\n            prefixCls={prefixCls}\n            key=\"tableWrapper-footer\"\n            lock={lock}\n            hasBody={false}\n            hasHeader={false}\n            hasFooter={hasFooter}\n            dragColumnAlign={dragColumnAlign}\n          >\n            {hasFooter && this.getTableFooter(lock, dragColumnAlign)}\n          </TableWrapper>\n        </>\n      ) : (\n        <TableWrapper\n          prefixCls={prefixCls}\n          key=\"tableWrapper\"\n          lock={lock}\n          hasBody={hasBody}\n          hasHeader={hasHeader}\n          hasFooter={hasFooter}\n          dragColumnAlign={dragColumnAlign}\n        >\n          {hasHeader && this.getTableHeader(lock, dragColumnAlign)}\n          {hasBody && this.getTableBody(lock, dragColumnAlign)}\n          {hasFooter && this.getTableFooter(lock, dragColumnAlign)}\n        </TableWrapper>\n      );\n  }\n\n  getHeader(): ReactNode {\n    const {\n      prefixCls,\n      props: { header, dataSet },\n    } = this;\n    if (header) {\n      const data = dataSet ? dataSet.records : [];\n      return (\n        <div key=\"header\" className={`${prefixCls}-header`}>\n          {typeof header === 'function' ? header(data) : header}\n        </div>\n      );\n    }\n  }\n\n  getFooter(): ReactNode | undefined {\n    const {\n      prefixCls,\n      props: { footer, dataSet },\n    } = this;\n    if (footer) {\n      const data = dataSet ? dataSet.records : [];\n      return (\n        <div key=\"footer\" className={`${prefixCls}-footer`}>\n          {typeof footer === 'function' ? footer(data) : footer}\n        </div>\n      );\n    }\n  }\n\n  getPagination(position: TablePaginationPosition): ReactElement<PaginationProps> | undefined {\n    const {\n      prefixCls,\n      props: { dataSet },\n      tableStore: { pagination },\n    } = this;\n    if (pagination !== false && dataSet && dataSet.paging) {\n      const paginationPosition = getPaginationPosition(pagination);\n      if (paginationPosition === TablePaginationPosition.both || paginationPosition === position) {\n        const paginationProps = omit(pagination, 'position');\n        return (\n          <Pagination\n            key={`pagination-${position}`}\n            {...paginationProps}\n            className={classNames(`${prefixCls}-pagination`, paginationProps.className)}\n            dataSet={dataSet}\n          >\n            {this.getCacheSelectionSwitch()}\n          </Pagination>\n        );\n      }\n    }\n  }\n\n  getCacheSelectionSwitch() {\n    const {\n      props: { dataSet },\n      prefixCls,\n    } = this;\n    if (dataSet && dataSet.cacheSelectionKeys && dataSet.cachedSelected.length) {\n      const { showCachedSeletion } = this.tableStore;\n      return (\n        <Tooltip\n          title={$l('Table', showCachedSeletion ? 'hide_cached_seletion' : 'show_cached_seletion')}\n        >\n          <Switch\n            className={`${prefixCls}-switch`}\n            checked={showCachedSeletion}\n            onChange={this.handleSwitchChange}\n          />\n        </Tooltip>\n      );\n    }\n  }\n\n  getTable(lock?: ColumnLock | boolean, dragColumnAlign?: DragColumnAlign): ReactNode {\n    const { prefixCls, props: { autoHeight } } = this;\n    const { overflowX, height, hasFooter: footer } = this.tableStore;\n    let tableHead: ReactNode;\n    let tableBody: ReactNode;\n    let tableFooter: ReactNode;\n    if ((!dragColumnAlign && overflowX) || height !== undefined || autoHeight) {\n      if (autoHeight) this.syncSize();\n      const { lockColumnsBodyRowsHeight, rowHeight } = this.tableStore;\n      let bodyHeight = height;\n      let tableHeadRef;\n      let tableBodyRef;\n      let tableFootRef;\n      if (!lock) {\n        tableHeadRef = node => (this.tableHeadWrap = node);\n        tableFootRef = node => (this.tableFootWrap = node);\n        tableBodyRef = node => (this.tableBodyWrap = node);\n      } else if (lock === 'right') {\n        if (dragColumnAlign === DragColumnAlign.right) {\n          tableBodyRef = node => (this.dragColumnsBodyRight = node);\n        }\n        tableBodyRef = node => (this.fixedColumnsBodyRight = node);\n      } else {\n        if (dragColumnAlign === DragColumnAlign.left) {\n          tableBodyRef = node => (this.dragColumnsBodyLeft = node);\n        }\n        tableBodyRef = node => (this.fixedColumnsBodyLeft = node);\n      }\n      if (bodyHeight !== undefined) {\n        bodyHeight = Math.max(\n          bodyHeight,\n          isNumber(rowHeight) ? rowHeight : lockColumnsBodyRowsHeight[0] || 0,\n        );\n        if (lock && !footer) {\n          bodyHeight -= measureScrollbar();\n        }\n      }\n\n      tableHead = (\n        <div key=\"tableHead\" ref={tableHeadRef} className={`${prefixCls}-head`}>\n          {this.renderTable(true, false, false, lock, dragColumnAlign)}\n        </div>\n      );\n\n      tableBody = (\n        <TableBody\n          key=\"tableBody\"\n          getRef={tableBodyRef}\n          prefixCls={prefixCls}\n          lock={lock}\n          height={bodyHeight}\n          onScroll={this.handleBodyScroll}\n        >\n          {this.renderTable(false, true, false, lock, dragColumnAlign)}\n        </TableBody>\n      );\n\n      if (footer) {\n        tableFooter = (\n          <div\n            key=\"tableFooter\"\n            ref={tableFootRef}\n            className={`${prefixCls}-foot`}\n            onScroll={this.handleBodyScroll}\n          >\n            {this.renderTable(false, false, true, lock, dragColumnAlign)}\n          </div>\n        );\n      }\n    } else {\n      tableBody = this.renderTable(true, true, footer, lock, dragColumnAlign);\n    }\n    return [tableHead, tableBody, tableFooter];\n  }\n\n  getLeftFixedTable(dragColumnAlign?: DragColumnAlign): ReactNode {\n    const { overflowX, height } = this.tableStore;\n    if ((!dragColumnAlign && !overflowX) && height === undefined) {\n      return;\n    }\n    const { prefixCls } = this;\n    const table = this.getTable(ColumnLock.left, dragColumnAlign);\n    const isDragLeft = dragColumnAlign === DragColumnAlign.left;\n    const FixedTableClassName = classNames(`${prefixCls}-fixed-left`, {\n      [`${prefixCls}-drag-left`]: isDragLeft,\n    });\n    let styleNOShadow = {};\n    if (isDragLeft) {\n      if (this.tableStore.leftLeafColumns.length !== 1) {\n        styleNOShadow = { boxShadow: 'none' };\n      }\n    }\n    return <div style={styleNOShadow} className={FixedTableClassName}>{table}</div>;\n  }\n\n  getRightFixedTable(dragColumnAlign?: DragColumnAlign): ReactNode | undefined {\n    const { overflowX, height } = this.tableStore;\n    if ((!dragColumnAlign && !overflowX) && height === undefined) {\n      return;\n    }\n    const { prefixCls } = this;\n    const table = this.getTable(ColumnLock.right, dragColumnAlign);\n    return <div className={`${prefixCls}-fixed-right`}>{table}</div>;\n  }\n\n  getTableBody(lock?: ColumnLock | boolean, dragColumnAlign?: DragColumnAlign): ReactNode {\n    const {\n      prefixCls,\n      props: { indentSize },\n    } = this;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <TableTBody key=\"tbody\" prefixCls={prefixCls} lock={lock} indentSize={indentSize!} dragColumnAlign={dragColumnAlign} />\n      </DragDropContext>\n    );\n  }\n\n  getTableHeader(lock?: ColumnLock | boolean, dragColumnAlign?: DragColumnAlign): ReactNode {\n    const {\n      prefixCls,\n      props: { dataSet },\n    } = this;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <TableHeader key=\"thead\" prefixCls={prefixCls} lock={lock} dataSet={dataSet} dragColumnAlign={dragColumnAlign} />\n      </DragDropContext>\n    );\n  }\n\n  getTableFooter(lock?: ColumnLock | boolean, dragColumnAlign?: DragColumnAlign): ReactNode {\n    const {\n      prefixCls,\n      props: { dataSet },\n    } = this;\n    return <TableFooter key=\"tfoot\" prefixCls={prefixCls} lock={lock} dataSet={dataSet} dragColumnAlign={dragColumnAlign} />;\n  }\n\n  getStyleHeight(): number | undefined {\n    const { style } = this.props;\n    if (style) {\n      return toPx(style.height);\n    }\n  }\n\n  syncSizeInFrame(width: number = this.getWidth()) {\n    if (this.nextFrameActionId !== undefined) {\n      raf.cancel(this.nextFrameActionId);\n    }\n    this.nextFrameActionId = raf(this.syncSize.bind(this, width));\n  }\n\n  getContentHeight() {\n    const { wrapper, element, prefixCls, props: { autoHeight } } = this;\n    if (autoHeight) {\n      const { top: parentTop, height: parentHeight } = wrapper.parentNode.getBoundingClientRect();\n      const { top: tableTop } = element.getBoundingClientRect();\n      let type = TableAutoHeightType.minHeight;\n      let diff = 80;\n      if (isObject(autoHeight)) {\n        type = autoHeight.type || TableAutoHeightType.minHeight;\n        diff = autoHeight.diff || 80;\n      }\n      if (wrapper) {\n        if (type === TableAutoHeightType.minHeight) {\n          return parentHeight - (tableTop - parentTop) - diff;\n        }\n        const tableBody: HTMLDivElement[] | null = element.querySelectorAll(`.${prefixCls}-body`);\n        if (tableBody) {\n          tableBody.forEach(tbody => {\n            tbody.style.maxHeight = pxToRem(parentHeight - (tableTop - parentTop) - diff) || '';\n            tbody.style.overflow = 'auto';\n          });\n        }\n      }\n    }\n    return this.getStyleHeight();\n  };\n\n  @autobind\n  @action\n  syncSize(width: number = this.getWidth()) {\n    const { element, tableStore } = this;\n    if (element) {\n      tableStore.width = Math.floor(width);\n      const { prefixCls } = this;\n      let height = this.getContentHeight();\n      if (element && isNumber(height)) {\n        const tableTitle: HTMLDivElement | null = element.querySelector(`.${prefixCls}-title`);\n        const tableHeader: HTMLTableSectionElement | null = element.querySelector(\n          `.${prefixCls}-thead`,\n        );\n        const tableFooter: HTMLTableSectionElement | null = element.querySelector(\n          `.${prefixCls}-footer`,\n        );\n        const tableFootWrap: HTMLDivElement | null = element.querySelector(`.${prefixCls}-foot`);\n        if (tableTitle) {\n          height -= getHeight(tableTitle);\n        }\n        if (tableHeader) {\n          height -= getHeight(tableHeader);\n        }\n        if (tableFooter) {\n          height -= getHeight(tableFooter);\n        }\n        if (tableFootWrap) {\n          height -= getHeight(tableFootWrap);\n        }\n        this.tableStore.height = height;\n      }\n    }\n    this.setScrollPositionClassName();\n  }\n\n  @action\n  initDefaultExpandedRows() {\n    const {\n      tableStore,\n      props: { dataSet, defaultRowExpanded },\n    } = this;\n    if (tableStore.isTree && defaultRowExpanded && !dataSet.props.expandField) {\n      tableStore.expandedRows = dataSet.reduce<(string | number)[]>((array, record) => {\n        if (record.children) {\n          array.push(record.key);\n        }\n        return array;\n      }, []);\n    }\n  }\n\n  getWidth(): number {\n    const { wrapper } = this;\n    if (wrapper) {\n      return Math.floor(wrapper.getBoundingClientRect().width);\n    }\n    return 0;\n  }\n}\n"]}