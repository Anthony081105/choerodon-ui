{"version":3,"sources":["button/Button.js"],"names":["Button","Component","clearTimeout","clicked","onClick","loading","props","nextProps","currentLoading","customizePrefixCls","type","shape","size","className","htmlType","children","icon","ghost","funcType","others","prefixCls","sizeCls","ComponentProp","classes","iconNode","Icon","Progress","key","kids","React","Ripple","disabled","handleClick","PropTypes"],"mappings":"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","sourcesContent":["import React, { Children, Component, } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport Icon from '../icon';\nimport Ripple from '../ripple';\nimport { getPrefixCls } from '../configure';\nimport Progress from '../progress';\nexport default class Button extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = e => {\n            clearTimeout(this.timeout);\n            this.timeout = window.setTimeout(() => this.setState({ clicked: false }), 500);\n            const { onClick } = this.props;\n            if (onClick) {\n                onClick(e);\n            }\n        };\n        this.state = {\n            loading: props.loading,\n            clicked: false,\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        const { loading: currentLoading } = this.props;\n        const { loading } = nextProps;\n        if (currentLoading) {\n            clearTimeout(this.delayTimeout);\n        }\n        if (typeof loading !== 'boolean' && loading && loading.delay) {\n            this.delayTimeout = window.setTimeout(() => this.setState({ loading }), loading.delay);\n        }\n        else {\n            this.setState({ loading });\n        }\n    }\n    componentWillUnmount() {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n        if (this.delayTimeout) {\n            clearTimeout(this.delayTimeout);\n        }\n    }\n    render() {\n        const { prefixCls: customizePrefixCls, type, shape, size, className, htmlType, children, icon, ghost, funcType, ...others } = this.props;\n        const { loading, clicked } = this.state;\n        const prefixCls = getPrefixCls('btn', customizePrefixCls);\n        // large => lg\n        // small => sm\n        let sizeCls = '';\n        switch (size) {\n            case \"large\" /* large */:\n                sizeCls = 'lg';\n                break;\n            case \"small\" /* small */:\n                sizeCls = 'sm';\n                break;\n            default:\n        }\n        const ComponentProp = others.href ? 'a' : 'button';\n        const classes = classNames(prefixCls, className, {\n            [`${prefixCls}-${type}`]: type,\n            [`${prefixCls}-${shape}`]: shape,\n            [`${prefixCls}-${sizeCls}`]: sizeCls,\n            [`${prefixCls}-icon-only`]: !children && icon,\n            [`${prefixCls}-loading`]: loading,\n            [`${prefixCls}-clicked`]: clicked,\n            [`${prefixCls}-background-ghost`]: ghost,\n            [`${prefixCls}-${funcType}`]: funcType,\n        });\n        let iconNode = icon ? React.createElement(Icon, { type: icon }) : null;\n        iconNode = loading ? (React.createElement(Progress, { key: \"loading\", type: \"loading\" /* loading */, size: \"small\" /* small */ })) : (iconNode);\n        const kids = children || children === 0\n            ? Children.map(children, child => {\n                if (typeof child === 'string') {\n                    return React.createElement(\"span\", null, child);\n                }\n                return child;\n            })\n            : null;\n        return (React.createElement(Ripple, { disabled: others.disabled },\n            React.createElement(ComponentProp, Object.assign({}, omit(others, ['loading']), { \n                // 如果没有href属性，则表示组件使用button标签，type为'submit' | 'reset' | 'button'\n                type: others.href ? undefined : htmlType || 'button', className: classes, onClick: this.handleClick }),\n                iconNode,\n                kids)));\n    }\n}\nButton.displayName = 'Button';\nButton.__ANT_BUTTON = true;\nButton.defaultProps = {\n    loading: false,\n    ghost: false,\n    funcType: 'flat',\n};\nButton.propTypes = {\n    type: PropTypes.string,\n    shape: PropTypes.oneOf(['circle', 'circle-outline']),\n    size: PropTypes.oneOf([\"large\" /* large */, \"default\" /* default */, \"small\" /* small */]),\n    htmlType: PropTypes.oneOf(['submit', 'button', 'reset']),\n    onClick: PropTypes.func,\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    className: PropTypes.string,\n    icon: PropTypes.string,\n    ghost: PropTypes.bool,\n    funcType: PropTypes.oneOf(['raised', 'flat']),\n};\n"]}