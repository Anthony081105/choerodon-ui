{"version":3,"sources":["util.jsx"],"names":["getValuePropValue","child","props","value","key","Error","getPropValue","prop","isMultiple","multiple","treeCheckable","toArray","ret","undefined","Array","isArray","preventDefaultEvent","e","preventDefault","UNSELECTABLE_STYLE","userSelect","WebkitUserSelect","UNSELECTABLE_ATTRIBUTE","unselectable","labelCompatible","newProp","isInclude","smallArray","bigArray","every","ii","i","isPositionPrefix","smallPos","bigPos","length","charAt","substr","getChildrenlength","children","len","getSiblingPosition","index","siblingPosition","first","last","loopAllChildren","childs","callback","parent","loop","level","_parent","Children","forEach","handler","item","pos","type","node","flatToHierarchy","arr","hierarchyNodes","levelObj","posLen","split","push","levelArr","Object","keys","sort","a","b","reduce","pre","cur","haveParent","concat","filterParentPosition","j","_i","filter","p","nArr","stripTail","str","match","st","splitPosition","handleCheckState","obj","checkedPositionArr","checkIt","objKeys","iArr","saved","_pos","_posArr","halfChecked","checked","__pos","_posLen","sibling","siblingChecked","parentPosition","indexOf","splice","pIndex","getCheck","treeNodesStates","checkedPositions","halfCheckedKeys","checkedKeys","checkedNodes","itemObj","getTreeNodesStates","values","keyOrPos","recursiveCloneChildren","cb","ch","from","map","newChild","recursiveGen","title","label","subChildren","rest","o","recursive","filterAllCheckedData","vs","treeNodes","vals","data","checkedNodesPositions","checkChildren","__checked","ci","checkParent","root","__halfChecked","processSimpleTreeData","treeData","format","unflatten2","array","id","rootPId","pId","saveRef","instance","name","saveRefs"],"mappings":"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","sourcesContent":["/* eslint no-loop-func: 0*/\nimport { Children, cloneElement } from 'react';\n\nexport function getValuePropValue(child) {\n  const props = child.props;\n  if ('value' in props) {\n    return props.value;\n  }\n  if (child.key) {\n    return child.key;\n  }\n  throw new Error(`no key or value for ${child}`);\n}\n\nexport function getPropValue(child, prop) {\n  if (prop === 'value') {\n    return getValuePropValue(child);\n  }\n  return child.props[prop];\n}\n\nexport function isMultiple(props) {\n  return !!(props.multiple || props.treeCheckable);\n}\n\nexport function toArray(value) {\n  let ret = value;\n  if (value === undefined) {\n    ret = [];\n  } else if (!Array.isArray(value)) {\n    ret = [value];\n  }\n  return ret;\n}\n\nexport function preventDefaultEvent(e) {\n  e.preventDefault();\n}\n\nexport const UNSELECTABLE_STYLE = {\n  userSelect: 'none',\n  WebkitUserSelect: 'none',\n};\n\nexport const UNSELECTABLE_ATTRIBUTE = {\n  unselectable: 'unselectable',\n};\n\n\nexport function labelCompatible(prop) {\n  let newProp = prop;\n  if (newProp === 'label') {\n    newProp = 'title';\n  }\n  return newProp;\n}\n\n\nexport function isInclude(smallArray, bigArray) {\n  // attention: [0,0,1] [0,0,10]\n  return smallArray.every((ii, i) => {\n    return ii === bigArray[i];\n  });\n}\n\nexport function isPositionPrefix(smallPos, bigPos) {\n  if (!bigPos || !smallPos) {\n    // console.log(smallPos, bigPos);\n    return false;\n  }\n  if (bigPos.length < smallPos.length) {\n    return false;\n  }\n  // attention: \"0-0-1\" \"0-0-10\"\n  if ((bigPos.length > smallPos.length) && (bigPos.charAt(smallPos.length) !== '-')) {\n    return false;\n  }\n  return bigPos.substr(0, smallPos.length) === smallPos;\n}\n\n/*\nexport function getCheckedKeys(node, checkedKeys, allCheckedNodesKeys) {\n  const nodeKey = node.props.eventKey;\n  let newCks = [...checkedKeys];\n  let nodePos;\n  const unCheck = allCheckedNodesKeys.some(item => {\n    if (item.key === nodeKey) {\n      nodePos = item.pos;\n      return true;\n    }\n  });\n  if (unCheck) {\n    newCks = [];\n    allCheckedNodesKeys.forEach(item => {\n      if (isPositionPrefix(item.pos, nodePos) || isPositionPrefix(nodePos, item.pos)) {\n        return;\n      }\n      newCks.push(item.key);\n    });\n  } else {\n    newCks.push(nodeKey);\n  }\n  return newCks;\n}\n*/\n\nfunction getChildrenlength(children) {\n  let len = 1;\n  if (Array.isArray(children)) {\n    len = children.length;\n  }\n  return len;\n}\n\nfunction getSiblingPosition(index, len, siblingPosition) {\n  if (len === 1) {\n    siblingPosition.first = true;\n    siblingPosition.last = true;\n  } else {\n    siblingPosition.first = index === 0;\n    siblingPosition.last = index === len - 1;\n  }\n  return siblingPosition;\n}\n\nexport function loopAllChildren(childs, callback, parent) {\n  const loop = (children, level, _parent) => {\n    const len = getChildrenlength(children);\n    Children.forEach(children, function handler(item, index) { // eslint-disable-line\n      const pos = `${level}-${index}`;\n      if (item && item.props.children && item.type) {\n        loop(item.props.children, pos, { node: item, pos });\n      }\n      if (item) {\n        callback(item, index, pos, item.key || pos, getSiblingPosition(index, len, {}), _parent);\n      }\n    });\n  };\n  loop(childs, 0, parent);\n}\n\nexport function flatToHierarchy(arr) {\n  if (!arr.length) {\n    return arr;\n  }\n  const hierarchyNodes = [];\n  const levelObj = {};\n  arr.forEach((item) => {\n    if (!item.pos) {\n      return;\n    }\n    const posLen = item.pos.split('-').length;\n    if (!levelObj[posLen]) {\n      levelObj[posLen] = [];\n    }\n    levelObj[posLen].push(item);\n  });\n  const levelArr = Object.keys(levelObj).sort((a, b) => b - a);\n  // const s = Date.now();\n  // todo: there are performance issues!\n  levelArr.reduce((pre, cur) => {\n    if (cur && cur !== pre) {\n      levelObj[pre].forEach((item) => {\n        let haveParent = false;\n        levelObj[cur].forEach((ii) => {\n          if (isPositionPrefix(ii.pos, item.pos)) {\n            haveParent = true;\n            if (!ii.children) {\n              ii.children = [];\n            }\n            ii.children.push(item);\n          }\n        });\n        if (!haveParent) {\n          hierarchyNodes.push(item);\n        }\n      });\n    }\n    return cur;\n  });\n  // console.log(Date.now() - s);\n  return levelObj[levelArr[levelArr.length - 1]].concat(hierarchyNodes);\n}\n\n\n// arr.length === 628, use time: ~20ms\nexport function filterParentPosition(arr) {\n  const levelObj = {};\n  arr.forEach((item) => {\n    const posLen = item.split('-').length;\n    if (!levelObj[posLen]) {\n      levelObj[posLen] = [];\n    }\n    levelObj[posLen].push(item);\n  });\n  const levelArr = Object.keys(levelObj).sort();\n  for (let i = 0; i < levelArr.length; i++) {\n    if (levelArr[i + 1]) {\n      levelObj[levelArr[i]].forEach(ii => {\n        for (let j = i + 1; j < levelArr.length; j++) {\n          levelObj[levelArr[j]].forEach((_i, index) => {\n            if (isPositionPrefix(ii, _i)) {\n              levelObj[levelArr[j]][index] = null;\n            }\n          });\n          levelObj[levelArr[j]] = levelObj[levelArr[j]].filter(p => p);\n        }\n      });\n    }\n  }\n  let nArr = [];\n  levelArr.forEach(i => {\n    nArr = nArr.concat(levelObj[i]);\n  });\n  return nArr;\n}\n\n// console.log(filterParentPosition(\n// ['0-2', '0-3-3', '0-10', '0-10-0', '0-0-1', '0-0', '0-1-1', '0-1']\n// ));\n\nfunction stripTail(str) {\n  const arr = str.match(/(.+)(-[^-]+)$/);\n  let st = '';\n  if (arr && arr.length === 3) {\n    st = arr[1];\n  }\n  return st;\n}\n\nfunction splitPosition(pos) {\n  return pos.split('-');\n}\n\n// todo: do optimization.\nexport function handleCheckState(obj, checkedPositionArr, checkIt) {\n  // console.log(stripTail('0-101-000'));\n  // let s = Date.now();\n  let objKeys = Object.keys(obj);\n\n  objKeys.forEach((i, index) => {\n    const iArr = splitPosition(i);\n    let saved = false;\n    checkedPositionArr.forEach((_pos) => {\n      const _posArr = splitPosition(_pos);\n      if (iArr.length > _posArr.length && isInclude(_posArr, iArr)) {\n        obj[i].halfChecked = false;\n        obj[i].checked = checkIt;\n        objKeys[index] = null;\n      }\n      if (iArr[0] === _posArr[0] && iArr[1] === _posArr[1]) {\n        saved = true;\n      }\n    });\n    if (!saved) {\n      objKeys[index] = null;\n    }\n  });\n  objKeys = objKeys.filter(i => i); // filter non null;\n\n  for (let pIndex = 0; pIndex < checkedPositionArr.length; pIndex++) {\n    // loop to set ancestral nodes's `checked` or `halfChecked`\n    const loop = (__pos) => {\n      const _posLen = splitPosition(__pos).length;\n      if (_posLen <= 2) { // e.g. '0-0', '0-1'\n        return;\n      }\n      let sibling = 0;\n      let siblingChecked = 0;\n      const parentPosition = stripTail(__pos);\n      objKeys.forEach((i /* , index*/) => {\n        const iArr = splitPosition(i);\n        if (iArr.length === _posLen && isInclude(splitPosition(parentPosition), iArr)) {\n          sibling++;\n          if (obj[i].checked) {\n            siblingChecked++;\n            const _i = checkedPositionArr.indexOf(i);\n            if (_i > -1) {\n              checkedPositionArr.splice(_i, 1);\n              if (_i <= pIndex) {\n                pIndex--;\n              }\n            }\n          } else if (obj[i].halfChecked) {\n            siblingChecked += 0.5;\n          }\n          // objKeys[index] = null;\n        }\n      });\n      // objKeys = objKeys.filter(i => i); // filter non null;\n      const parent = obj[parentPosition];\n      // not check, checked, halfChecked\n      if (siblingChecked === 0) {\n        parent.checked = false;\n        parent.halfChecked = false;\n      } else if (siblingChecked === sibling) {\n        parent.checked = true;\n        parent.halfChecked = false;\n      } else {\n        parent.halfChecked = true;\n        parent.checked = false;\n      }\n      loop(parentPosition);\n    };\n    loop(checkedPositionArr[pIndex], pIndex);\n  }\n  // console.log(Date.now()-s, objKeys.length, checkIt);\n}\n\nfunction getCheck(treeNodesStates, checkedPositions) {\n  const halfCheckedKeys = [];\n  const checkedKeys = [];\n  const checkedNodes = [];\n  Object.keys(treeNodesStates).forEach((item) => {\n    const itemObj = treeNodesStates[item];\n    if (itemObj.checked) {\n      checkedKeys.push(itemObj.key);\n      // checkedNodes.push(getValuePropValue(itemObj.node));\n      checkedNodes.push({ ...itemObj, pos: item });\n    } else if (itemObj.halfChecked) {\n      halfCheckedKeys.push(itemObj.key);\n    }\n  });\n  return {\n    halfCheckedKeys, checkedKeys, checkedNodes, treeNodesStates, checkedPositions,\n  };\n}\n\nexport function getTreeNodesStates(children, values) {\n  const checkedPositions = [];\n  const treeNodesStates = {};\n  loopAllChildren(children, (item, index, pos, keyOrPos, siblingPosition) => {\n    treeNodesStates[pos] = {\n      node: item,\n      key: keyOrPos,\n      checked: false,\n      halfChecked: false,\n      siblingPosition,\n    };\n    if (values.indexOf(getValuePropValue(item)) !== -1) {\n      treeNodesStates[pos].checked = true;\n      checkedPositions.push(pos);\n    }\n  });\n\n  handleCheckState(treeNodesStates, filterParentPosition(checkedPositions.sort()), true);\n\n  return getCheck(treeNodesStates, checkedPositions);\n}\n\n// can add extra prop to every node.\nexport function recursiveCloneChildren(children, cb = ch => ch) {\n  return Array.from(children).map(child => {\n    const newChild = cb(child);\n    if (newChild && newChild.props && newChild.props.children) {\n      return cloneElement(newChild, {}, recursiveCloneChildren(newChild.props.children, cb));\n    }\n    return newChild;\n  });\n}\n\nfunction recursiveGen(children, level = 0) {\n  return Children.map(children, (child, index) => {\n    const pos = `${level}-${index}`;\n    const { title, label, value, children: subChildren, ...rest } = child.props;\n    const o = {\n      ...rest,\n      title,\n      label: label || title,\n      value,\n      key: child.key,\n      _pos: pos,\n    };\n    if (subChildren) {\n      o.children = recursiveGen(subChildren, pos);\n    }\n    return o;\n  });\n}\n\nfunction recursive(children, cb) {\n  children.forEach(item => {\n    cb(item);\n    if (item.children) {\n      recursive(item.children, cb);\n    }\n  });\n}\n\n// Get the tree's checkedNodes (todo: can merge to the `handleCheckState` function)\n// If one node checked, it's all children nodes checked.\n// If sibling nodes all checked, the parent checked.\nexport function filterAllCheckedData(vs, treeNodes) {\n  const vals = [...vs];\n  if (!vals.length) {\n    return vals;\n  }\n\n  const data = recursiveGen(treeNodes);\n  const checkedNodesPositions = [];\n\n  function checkChildren(children) {\n    children.forEach(item => {\n      if (item.__checked) {\n        return;\n      }\n      const ci = vals.indexOf(item.value);\n      const childs = item.children;\n      if (ci > -1) {\n        item.__checked = true;\n        checkedNodesPositions.push({ node: item, pos: item._pos });\n        vals.splice(ci, 1);\n        if (childs) {\n          recursive(childs, child => {\n            child.__checked = true;\n            checkedNodesPositions.push({ node: child, pos: child._pos });\n          });\n        }\n      } else {\n        if (childs) {\n          checkChildren(childs);\n        }\n      }\n    });\n  }\n\n  function checkParent(children, parent = { root: true }) {\n    let siblingChecked = 0;\n    children.forEach(item => {\n      const childs = item.children;\n      if (childs && !item.__checked && !item.__halfChecked) {\n        const p = checkParent(childs, item);\n        if (p.__checked) {\n          siblingChecked++;\n        } else if (p.__halfChecked) {\n          siblingChecked += 0.5;\n        }\n      } else if (item.__checked) {\n        siblingChecked++;\n      } else if (item.__halfChecked) {\n        siblingChecked += 0.5;\n      }\n    });\n    const len = children.length;\n    if (siblingChecked === len) {\n      parent.__checked = true;\n      checkedNodesPositions.push({ node: parent, pos: parent._pos });\n    } else if (siblingChecked < len && siblingChecked > 0) {\n      parent.__halfChecked = true;\n    }\n    if (parent.root) {\n      return children;\n    }\n    return parent;\n  }\n\n  checkChildren(data);\n  checkParent(data);\n\n  checkedNodesPositions.forEach((i, index) => {\n    // clear private metadata\n    delete checkedNodesPositions[index].node.__checked;\n    delete checkedNodesPositions[index].node._pos;\n    // create the same structure of `onCheck`'s return.\n    checkedNodesPositions[index].node.props = {\n      title: checkedNodesPositions[index].node.title,\n      label: checkedNodesPositions[index].node.label || checkedNodesPositions[index].node.title,\n      value: checkedNodesPositions[index].node.value,\n    };\n    if (checkedNodesPositions[index].node.children) {\n      checkedNodesPositions[index].node.props.children = checkedNodesPositions[index].node.children;\n    }\n    delete checkedNodesPositions[index].node.title;\n    delete checkedNodesPositions[index].node.label;\n    delete checkedNodesPositions[index].node.value;\n    delete checkedNodesPositions[index].node.children;\n  });\n  return checkedNodesPositions;\n}\n\nexport function processSimpleTreeData(treeData, format) {\n  function unflatten2(array, parent = { [format.id]: format.rootPId }) {\n    const children = [];\n    for (let i = 0; i < array.length; i++) {\n      array[i] = { ...array[i] }; // copy, can not corrupts original data\n      if (array[i][format.pId] === parent[format.id]) {\n        array[i].key = array[i][format.id];\n        children.push(array[i]);\n        array.splice(i--, 1);\n      }\n    }\n    if (children.length) {\n      parent.children = children;\n      children.forEach(child => unflatten2(array, child));\n    }\n    if (parent[format.id] === format.rootPId) {\n      return children;\n    }\n  }\n\n  return unflatten2(treeData);\n}\n\nexport function saveRef(instance, name) {\n  if (!instance.saveRefs) {\n    instance.saveRefs = {};\n  }\n  if (!instance.saveRefs[name]) {\n    instance.saveRefs[name] = (node) => {\n      instance[name] = node;\n    };\n  }\n  return instance.saveRefs[name];\n}\n"]}