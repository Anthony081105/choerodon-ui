{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/rc-components/tree/NodeList.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Handle virtual list of the TreeNodes.\n */\n\nimport * as React from 'react';\nimport VirtualList from 'rc-virtual-list';\nimport { FlattenNode, Key, DataEntity, DataNode, ScrollTo } from './interface';\nimport MotionTreeNode from './MotionTreeNode';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getTreeNodeProps, getKey } from './utils/treeUtil';\n\nconst HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0,\n};\n\nconst noop = () => {};\n\nexport const MOTION_KEY = `RC_TREE_MOTION_${Math.random()}`;\n\nconst MotionNode: DataNode = {\n  key: MOTION_KEY,\n};\n\nexport const MotionEntity: DataEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode,\n};\n\nconst MotionFlattenData: FlattenNode = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: [],\n};\n\nexport interface NodeListRef {\n  scrollTo: ScrollTo;\n}\n\ninterface NodeListProps {\n  prefixCls: string;\n  style: React.CSSProperties;\n  data: FlattenNode[];\n  motion: any;\n  focusable?: boolean;\n  activeItem: FlattenNode;\n  focused?: boolean;\n  tabIndex: number;\n  checkable?: boolean;\n  selectable?: boolean;\n  disabled?: boolean;\n\n  expandedKeys: Key[];\n  selectedKeys: Key[];\n  checkedKeys: Key[];\n  loadedKeys: Key[];\n  loadingKeys: Key[];\n  halfCheckedKeys: Key[];\n  keyEntities: Record<Key, DataEntity>;\n\n  dragging: boolean;\n  dragOverNodeKey: Key;\n  dropPosition: number;\n\n  // Virtual list\n  height: number;\n  itemHeight: number;\n  virtual?: boolean;\n\n  onKeyDown?: React.KeyboardEventHandler<HTMLDivElement>;\n  onFocus?: React.FocusEventHandler<HTMLDivElement>;\n  onBlur?: React.FocusEventHandler<HTMLDivElement>;\n  onActiveChange: (key: Key) => void;\n}\n\n/**\n * We only need get visible content items to play the animation.\n */\nexport function getMinimumRangeTransitionRange(\n  list: FlattenNode[],\n  height: number,\n  itemHeight: number,\n) {\n  if (!height) {\n    return list;\n  }\n\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\n\nfunction itemKey(item: FlattenNode) {\n  const {\n    data: { key },\n    pos,\n  } = item;\n  return getKey(key, pos);\n}\n\nfunction getAccessibilityPath(item: FlattenNode): string {\n  let path = String(item.data.key);\n  let current = item;\n\n  while (current.parent) {\n    current = current.parent;\n    path = `${current.data.key} > ${path}`;\n  }\n\n  return path;\n}\n\nconst RefNodeList: React.RefForwardingComponent<NodeListRef, NodeListProps> = (\n  props,\n  ref,\n) => {\n  const {\n    prefixCls,\n    data,\n    // eslint-disable-next-line no-unused-vars \n    selectable,\n    // eslint-disable-next-line no-unused-vars  \n    expandedKeys,\n    selectedKeys,\n    checkedKeys,\n    loadedKeys,\n    loadingKeys,\n    halfCheckedKeys,\n    keyEntities,\n    disabled,\n\n    dragging,\n    dragOverNodeKey,\n    dropPosition,\n    motion,\n\n    height,\n    itemHeight,\n    virtual,\n\n    focusable,\n    activeItem,\n    focused,\n    tabIndex,\n\n    onKeyDown,\n    onFocus,\n    onBlur,\n    onActiveChange,\n\n    ...domProps\n  } = props;\n\n  // =============================== Ref ================================\n  const listRef = React.useRef<VirtualList<FlattenNode>>(null);\n  React.useImperativeHandle(ref, () => ({\n    scrollTo: scroll => {\n      listRef.current!.scrollTo(scroll);\n    },\n  }));\n\n  // ============================== Motion ==============================\n  const [disableVirtual, setDisableVirtual] = React.useState(false);\n  const [prevExpandedKeys, setPrevExpandedKeys] = React.useState(expandedKeys);\n  const [prevData, setPrevData] = React.useState(data);\n  const [transitionData, setTransitionData] = React.useState(data);\n  const [transitionRange, setTransitionRange] = React.useState([]);\n  const [motionType, setMotionType] = React.useState<'show' | 'hide' | null>(\n    null,\n  );\n\n  function onMotionEnd() {\n    setPrevData(data);\n    setTransitionData(data);\n    setTransitionRange([]);\n    setMotionType(null);\n    setDisableVirtual(false);\n  }\n\n  // Do animation if expanded keys changed\n  React.useEffect(() => {\n    setPrevExpandedKeys(expandedKeys);\n\n    const diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n\n    if (diffExpanded.key !== null) {\n      if (diffExpanded.add) {\n        const keyIndex = prevData.findIndex(\n          ({ data: { key } }) => key === diffExpanded.key,\n        );\n\n        if (motion) setDisableVirtual(true);\n        const rangeNodes = getMinimumRangeTransitionRange(\n          getExpandRange(prevData, data, diffExpanded.key),\n          height,\n          itemHeight,\n        );\n\n        const newTransitionData: FlattenNode[] = prevData.slice();\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n\n        setTransitionData(newTransitionData);\n        // @ts-ignore\n        setTransitionRange(rangeNodes);\n        setMotionType('show');\n      } else {\n        const keyIndex = data.findIndex(\n          ({ data: { key } }) => key === diffExpanded.key,\n        );\n\n        if (motion) setDisableVirtual(true);\n        const rangeNodes = getMinimumRangeTransitionRange(\n          getExpandRange(data, prevData, diffExpanded.key),\n          height,\n          itemHeight,\n        );\n\n        const newTransitionData: FlattenNode[] = data.slice();\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n\n        setTransitionData(newTransitionData);\n        // @ts-ignore\n        setTransitionRange(rangeNodes);\n        setMotionType('hide');\n      }\n    } else if (prevData !== data) {\n      // If whole data changed, we just refresh the list\n      setPrevData(data);\n      setTransitionData(data);\n    }\n  }, [expandedKeys, data]);\n\n  // We should clean up motion if is changed by dragging\n  React.useEffect(() => {\n    if (!dragging) {\n      onMotionEnd();\n    }\n  }, [dragging]);\n\n  const mergedData = motion ? transitionData : data;\n\n  const treeNodeRequiredProps = {\n    expandedKeys,\n    selectedKeys,\n    loadedKeys,\n    loadingKeys,\n    checkedKeys,\n    halfCheckedKeys,\n    dragOverNodeKey,\n    dropPosition,\n    keyEntities,\n  };\n\n  return (\n    <>\n      {focused && activeItem && (\n        <span style={HIDDEN_STYLE} aria-live=\"assertive\">\n          {getAccessibilityPath(activeItem)}\n        </span>\n      )}\n\n      <div role=\"tree\">\n        <input\n          style={HIDDEN_STYLE}\n          disabled={focusable === false || disabled}\n          tabIndex={focusable !== false ? tabIndex : undefined}\n          onKeyDown={onKeyDown}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          value=\"\"\n          onChange={noop}\n        />\n      </div>\n\n      <VirtualList<FlattenNode>\n        {...domProps}\n        disabled={disableVirtual}\n        data={mergedData}\n        itemKey={itemKey}\n        height={height}\n        fullHeight={false}\n        virtual={virtual}\n        itemHeight={itemHeight}\n        onSkipRender={onMotionEnd}\n        prefixCls={`${prefixCls}-list`}\n        ref={listRef}\n      >\n        {(treeNode: FlattenNode) => {\n          const {\n            pos,\n            data: { key, ...restProps },\n            isStart,\n            isEnd,\n          } = treeNode;\n          const mergedKey = getKey(key, pos);\n          delete restProps.children;\n\n          const treeNodeProps = getTreeNodeProps(\n            mergedKey,\n            treeNodeRequiredProps,\n          );\n          \n          return (\n            <MotionTreeNode\n              {...restProps}\n              {...treeNodeProps}\n              // @ts-ignore\n              active={activeItem && key === activeItem.data.key}\n              pos={pos}\n              data={treeNode.data}\n              isStart={isStart}\n              isEnd={isEnd}\n              motion={motion}\n              motionNodes={key === MOTION_KEY ? transitionRange : null}\n              motionType={motionType}\n              onMotionEnd={onMotionEnd}\n              treeNodeRequiredProps={treeNodeRequiredProps}\n              onMouseMove={() => {\n                // @ts-ignore\n                onActiveChange(null);\n              }}\n            />\n          );\n        }}\n      </VirtualList>\n    </>\n  );\n};\n\nconst NodeList = React.forwardRef(RefNodeList);\nNodeList.displayName = 'NodeList';\n\nexport default NodeList;\n"]}