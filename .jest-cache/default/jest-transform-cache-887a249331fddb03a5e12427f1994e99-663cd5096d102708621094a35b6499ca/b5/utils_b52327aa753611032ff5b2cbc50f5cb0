9afc77ae4e1c51ac248bc57cc5afda8a
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toArray = toArray;
exports.generateKey = generateKey;
exports.getActiveIndex = getActiveIndex;
exports.getActiveKey = getActiveKey;
exports.setTransform = setTransform;
exports.isTransformSupported = isTransformSupported;
exports.setTransition = setTransition;
exports.getTransformPropValue = getTransformPropValue;
exports.isVertical = isVertical;
exports.getTransformByIndex = getTransformByIndex;
exports.getMarginStyle = getMarginStyle;
exports.getStyle = getStyle;
exports.setPxStyle = setPxStyle;
exports.getDataAttr = getDataAttr;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _isNil = _interopRequireDefault(require("lodash/isNil"));

function toArray(children) {
  var c = [];

  _react.Children.forEach(children, function (child) {
    if (child) {
      c.push(child);
    }
  });

  return c;
}

function generateKey(key, index) {
  return String((0, _isNil["default"])(key) ? index : key);
}

function getActiveIndex(children, activeKey) {
  var c = toArray(children);
  return c.findIndex(function (child, index) {
    return generateKey(child.key, index) === activeKey;
  });
}

function getActiveKey(children, index) {
  var c = toArray(children);
  return generateKey(c[index].key, index);
}

function setTransform(style, v) {
  style.transform = v;
  style.webkitTransform = v;
  style.mozTransform = v;
}

function isTransformSupported(style) {
  return 'transform' in style || 'webkitTransform' in style || 'MozTransform' in style;
}

function setTransition(style, v) {
  style.transition = v;
  style.webkitTransition = v;
  style.MozTransition = v;
}

function getTransformPropValue(v) {
  return {
    transform: v,
    WebkitTransform: v,
    MozTransform: v
  };
}

function isVertical(tabBarPosition) {
  return tabBarPosition === 'left' || tabBarPosition === 'right';
}

function getTransformByIndex(index, tabBarPosition) {
  var translate = isVertical(tabBarPosition) ? 'translateY' : 'translateX';
  return "".concat(translate, "(").concat(-index * 100, "%) translateZ(0)");
}

function getMarginStyle(index, tabBarPosition) {
  var marginDirection = isVertical(tabBarPosition) ? 'marginTop' : 'marginLeft';
  return (0, _defineProperty2["default"])({}, marginDirection, "".concat(-index * 100, "%"));
}

function getStyle(el, property) {
  return +getComputedStyle(el).getPropertyValue(property).replace('px', '');
}

function setPxStyle(el, value, vertical) {
  value = vertical ? "0px, ".concat(value, "px, 0px") : "".concat(value, "px, 0px, 0px");
  setTransform(el.style, "translate3d(".concat(value, ")"));
}

function getDataAttr(props) {
  return Object.keys(props).reduce(function (prev, key) {
    if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {
      prev[key] = props[key];
    }

    return prev;
  }, {});
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYnMvdXRpbHMuanN4Il0sIm5hbWVzIjpbImMiLCJDaGlsZHJlbiIsIlN0cmluZyIsInRvQXJyYXkiLCJnZW5lcmF0ZUtleSIsImNoaWxkIiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJXZWJraXRUcmFuc2Zvcm0iLCJNb3pUcmFuc2Zvcm0iLCJ2IiwidGFiQmFyUG9zaXRpb24iLCJ0cmFuc2xhdGUiLCJpc1ZlcnRpY2FsIiwibWFyZ2luRGlyZWN0aW9uIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInZhbHVlIiwidmVydGljYWwiLCJzZXRUcmFuc2Zvcm0iLCJlbCIsImtleSIsInByZXYiLCJwcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxNQUFBLEdBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQTs7QUFDQSxJQUFBLE1BQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxjQUFBLENBQUEsQ0FBQTs7QUFFTyxTQUFBLE9BQUEsQ0FBQSxRQUFBLEVBQTJCO0FBQ2hDLE1BQU1BLENBQUMsR0FBUCxFQUFBOztBQUNBQyxFQUFBQSxNQUFBQSxDQUFBQSxRQUFBQSxDQUFBQSxPQUFBQSxDQUFBQSxRQUFBQSxFQUEyQixVQUFBLEtBQUEsRUFBUztBQUNsQyxRQUFBLEtBQUEsRUFBVztBQUNURCxNQUFBQSxDQUFDLENBQURBLElBQUFBLENBQUFBLEtBQUFBO0FBQ0Q7QUFISEMsR0FBQUE7O0FBS0EsU0FBQSxDQUFBO0FBQ0Q7O0FBRU0sU0FBQSxXQUFBLENBQUEsR0FBQSxFQUFBLEtBQUEsRUFBaUM7QUFDdEMsU0FBT0MsTUFBTSxDQUFDLENBQUEsR0FBQSxNQUFBLENBQUEsU0FBQSxDQUFBLEVBQUEsR0FBQSxJQUFBLEtBQUEsR0FBZCxHQUFhLENBQWI7QUFDRDs7QUFFTSxTQUFBLGNBQUEsQ0FBQSxRQUFBLEVBQUEsU0FBQSxFQUE2QztBQUNsRCxNQUFNRixDQUFDLEdBQUdHLE9BQU8sQ0FBakIsUUFBaUIsQ0FBakI7QUFDQSxT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QVksQ0FBQSxDQUFaQTtBQUNEOztBQUVNLFNBQUEsV0FBQSxDQUFBLEtBQUEsRUFBNEI7QUFDakMsU0FBTyxNQUFNLENBQU4sSUFBQSxDQUFBLEtBQUEsRUFBQSxNQUFBLENBQTBCLFVBQUEsSUFBQSxFQUFBLEdBQUEsRUFBZTtBQUM5QyxRQUFJRSxHQUFHLENBQUhBLE1BQUFBLENBQUFBLENBQUFBLEVBQUFBLENBQUFBLE1BQUFBLE9BQUFBLElBQWdDQSxHQUFHLENBQUhBLE1BQUFBLENBQUFBLENBQUFBLEVBQUFBLENBQUFBLE1BQWhDQSxPQUFBQSxJQUFnRUEsR0FBRyxLQUF2RSxNQUFBLEVBQW9GO0FBQ2xGQyxNQUFBQSxJQUFJLENBQUpBLEdBQUksQ0FBSkEsR0FBWUMsS0FBSyxDQUFqQkQsR0FBaUIsQ0FBakJBO0FBQ0Q7O0FBQ0QsV0FBQSxJQUFBO0FBSkssR0FBQSxFQUFQLEVBQU8sQ0FBUDtBQU1EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hpbGRyZW4gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgaXNOaWwgZnJvbSAnbG9kYXNoL2lzTmlsJztcblxuZXhwb3J0IGZ1bmN0aW9uIHRvQXJyYXkoY2hpbGRyZW4pIHtcbiAgY29uc3QgYyA9IFtdO1xuICBDaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCBjaGlsZCA9PiB7XG4gICAgaWYgKGNoaWxkKSB7XG4gICAgICBjLnB1c2goY2hpbGQpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBjO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVLZXkoa2V5LCBpbmRleCkge1xuICByZXR1cm4gU3RyaW5nKGlzTmlsKGtleSkgPyBpbmRleCA6IGtleSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRBY3RpdmVJbmRleChjaGlsZHJlbiwgYWN0aXZlS2V5KSB7XG4gIGNvbnN0IGMgPSB0b0FycmF5KGNoaWxkcmVuKTtcbiAgcmV0dXJuIGMuZmluZEluZGV4KChjaGlsZCwgaW5kZXgpID0+IGdlbmVyYXRlS2V5KGNoaWxkLmtleSwgaW5kZXgpID09PSBhY3RpdmVLZXkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWN0aXZlS2V5KGNoaWxkcmVuLCBpbmRleCkge1xuICBjb25zdCBjID0gdG9BcnJheShjaGlsZHJlbik7XG4gIHJldHVybiBnZW5lcmF0ZUtleShjW2luZGV4XS5rZXksIGluZGV4KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldFRyYW5zZm9ybShzdHlsZSwgdikge1xuICBzdHlsZS50cmFuc2Zvcm0gPSB2O1xuICBzdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSB2O1xuICBzdHlsZS5tb3pUcmFuc2Zvcm0gPSB2O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNUcmFuc2Zvcm1TdXBwb3J0ZWQoc3R5bGUpIHtcbiAgcmV0dXJuICd0cmFuc2Zvcm0nIGluIHN0eWxlIHx8XG4gICAgJ3dlYmtpdFRyYW5zZm9ybScgaW4gc3R5bGUgfHxcbiAgICAnTW96VHJhbnNmb3JtJyBpbiBzdHlsZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldFRyYW5zaXRpb24oc3R5bGUsIHYpIHtcbiAgc3R5bGUudHJhbnNpdGlvbiA9IHY7XG4gIHN0eWxlLndlYmtpdFRyYW5zaXRpb24gPSB2O1xuICBzdHlsZS5Nb3pUcmFuc2l0aW9uID0gdjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFRyYW5zZm9ybVByb3BWYWx1ZSh2KSB7XG4gIHJldHVybiB7XG4gICAgdHJhbnNmb3JtOiB2LFxuICAgIFdlYmtpdFRyYW5zZm9ybTogdixcbiAgICBNb3pUcmFuc2Zvcm06IHYsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1ZlcnRpY2FsKHRhYkJhclBvc2l0aW9uKSB7XG4gIHJldHVybiB0YWJCYXJQb3NpdGlvbiA9PT0gJ2xlZnQnIHx8IHRhYkJhclBvc2l0aW9uID09PSAncmlnaHQnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHJhbnNmb3JtQnlJbmRleChpbmRleCwgdGFiQmFyUG9zaXRpb24pIHtcbiAgY29uc3QgdHJhbnNsYXRlID0gaXNWZXJ0aWNhbCh0YWJCYXJQb3NpdGlvbikgPyAndHJhbnNsYXRlWScgOiAndHJhbnNsYXRlWCc7XG4gIHJldHVybiBgJHt0cmFuc2xhdGV9KCR7LWluZGV4ICogMTAwfSUpIHRyYW5zbGF0ZVooMClgO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TWFyZ2luU3R5bGUoaW5kZXgsIHRhYkJhclBvc2l0aW9uKSB7XG4gIGNvbnN0IG1hcmdpbkRpcmVjdGlvbiA9IGlzVmVydGljYWwodGFiQmFyUG9zaXRpb24pID8gJ21hcmdpblRvcCcgOiAnbWFyZ2luTGVmdCc7XG4gIHJldHVybiB7XG4gICAgW21hcmdpbkRpcmVjdGlvbl06IGAkey1pbmRleCAqIDEwMH0lYCxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0eWxlKGVsLCBwcm9wZXJ0eSkge1xuICByZXR1cm4gK2dldENvbXB1dGVkU3R5bGUoZWwpLmdldFByb3BlcnR5VmFsdWUocHJvcGVydHkpLnJlcGxhY2UoJ3B4JywgJycpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0UHhTdHlsZShlbCwgdmFsdWUsIHZlcnRpY2FsKSB7XG4gIHZhbHVlID0gdmVydGljYWwgPyBgMHB4LCAke3ZhbHVlfXB4LCAwcHhgIDogYCR7dmFsdWV9cHgsIDBweCwgMHB4YDtcbiAgc2V0VHJhbnNmb3JtKGVsLnN0eWxlLCBgdHJhbnNsYXRlM2QoJHt2YWx1ZX0pYCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREYXRhQXR0cihwcm9wcykge1xuICByZXR1cm4gT2JqZWN0LmtleXMocHJvcHMpLnJlZHVjZSgocHJldiwga2V5KSA9PiB7XG4gICAgaWYgKGtleS5zdWJzdHIoMCwgNSkgPT09ICdhcmlhLScgfHwga2V5LnN1YnN0cigwLCA1KSA9PT0gJ2RhdGEtJyB8fCBrZXkgPT09ICdyb2xlJykge1xuICAgICAgcHJldltrZXldID0gcHJvcHNba2V5XTtcbiAgICB9XG4gICAgcmV0dXJuIHByZXY7XG4gIH0sIHt9KTtcbn1cbiJdfQ==