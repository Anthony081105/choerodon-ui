{"version":3,"sources":["index.test.js"],"names":["describe","BackTop","it","wrapper","scrollToSpy","jest","spyOn","window","mockImplementation","x","y","scrollY","pageYOffset","scrollTo","instance","handleScroll","find","simulate","expect","toBe","mockRestore","onClick","fn","toHaveBeenCalled"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,SAAD,EAAY,YAAM;AACxB,6BAAUC,YAAV;AAEAC,EAAAA,EAAE,CAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,+BAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAClCC,YAAAA,OADkC,GACxB,mBAAM,gCAAC,YAAD;AAAS,cAAA,gBAAgB,EAAE,CAAC;AAA5B,cAAN,CADwB;AAElCC,YAAAA,WAFkC,GAEpBC,IAAI,CAACC,KAAL,CAAWC,MAAX,EAAmB,UAAnB,EAA+BC,kBAA/B,CAAkD,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC9EH,cAAAA,MAAM,CAACI,OAAP,GAAiBD,CAAjB;AACAH,cAAAA,MAAM,CAACK,WAAP,GAAqBF,CAArB;AACD,aAHmB,CAFoB;AAMxCH,YAAAA,MAAM,CAACM,QAAP,CAAgB,CAAhB,EAAmB,GAAnB,EANwC,CAOxC;;AACAV,YAAAA,OAAO,CAACW,QAAR,GAAmBC,YAAnB;AARwC;AAAA,mBASlC,mBATkC;;AAAA;AAUxCZ,YAAAA,OAAO,CAACa,IAAR,CAAa,eAAb,EAA8BC,QAA9B,CAAuC,OAAvC;AAVwC;AAAA,mBAWlC,kBAAM,GAAN,CAXkC;;AAAA;AAYxCC,YAAAA,MAAM,CAACX,MAAM,CAACK,WAAR,CAAN,CAA2BO,IAA3B,CAAgC,CAAhC;AACAf,YAAAA,WAAW,CAACgB,WAAZ;;AAbwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC,GAAF;AAgBAlB,EAAAA,EAAE,CAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,+BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdmB,YAAAA,OADc,GACJhB,IAAI,CAACiB,EAAL,EADI;AAEdnB,YAAAA,OAFc,GAEJ,mBAAM,gCAAC,YAAD;AAAS,cAAA,OAAO,EAAEkB,OAAlB;AAA2B,cAAA,gBAAgB,EAAE,CAAC;AAA9C,cAAN,CAFI;AAGdjB,YAAAA,WAHc,GAGAC,IAAI,CAACC,KAAL,CAAWC,MAAX,EAAmB,UAAnB,EAA+BC,kBAA/B,CAAkD,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC9EH,cAAAA,MAAM,CAACI,OAAP,GAAiBD,CAAjB;AACAH,cAAAA,MAAM,CAACK,WAAP,GAAqBF,CAArB;AACD,aAHmB,CAHA;AAOpBH,YAAAA,MAAM,CAACM,QAAP,CAAgB,CAAhB,EAAmB,GAAnB,EAPoB,CAQpB;;AACAV,YAAAA,OAAO,CAACW,QAAR,GAAmBC,YAAnB;AAToB;AAAA,mBAUd,mBAVc;;AAAA;AAWpBZ,YAAAA,OAAO,CAACa,IAAR,CAAa,eAAb,EAA8BC,QAA9B,CAAuC,OAAvC;AACAC,YAAAA,MAAM,CAACG,OAAD,CAAN,CAAgBE,gBAAhB;AACAnB,YAAAA,WAAW,CAACgB,WAAZ;;AAboB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB,GAAF;AAeD,CAlCO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport { sleep } from '../../../tests/utils';\nimport mountTest from '../../../tests/shared/mountTest';\nimport BackTop from '..';\n\ndescribe('BackTop', () => {\n  mountTest(BackTop);\n\n  it('should scroll to top after click it', async () => {\n    const wrapper = mount(<BackTop visibilityHeight={-1} />);\n    const scrollToSpy = jest.spyOn(window, 'scrollTo').mockImplementation((x, y) => {\n      window.scrollY = y;\n      window.pageYOffset = y;\n    });\n    window.scrollTo(0, 400);\n    // trigger scroll manually\n    wrapper.instance().handleScroll();\n    await sleep();\n    wrapper.find('.c7n-back-top').simulate('click');\n    await sleep(500);\n    expect(window.pageYOffset).toBe(0);\n    scrollToSpy.mockRestore();\n  });\n\n  it('support onClick', async () => {\n    const onClick = jest.fn();\n    const wrapper = mount(<BackTop onClick={onClick} visibilityHeight={-1} />);\n    const scrollToSpy = jest.spyOn(window, 'scrollTo').mockImplementation((x, y) => {\n      window.scrollY = y;\n      window.pageYOffset = y;\n    });\n    window.scrollTo(0, 400);\n    // trigger scroll manually\n    wrapper.instance().handleScroll();\n    await sleep();\n    wrapper.find('.c7n-back-top').simulate('click');\n    expect(onClick).toHaveBeenCalled();\n    scrollToSpy.mockRestore();\n  });\n});\n"]}