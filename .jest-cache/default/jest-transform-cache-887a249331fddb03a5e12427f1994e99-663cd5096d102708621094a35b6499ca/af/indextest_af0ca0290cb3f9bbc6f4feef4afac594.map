{"version":3,"sources":["index.test.js"],"names":["describe","AutoComplete","it","wrapper","expect","find","length","toBe","simulate","target","value","dropdownWrapper","instance","getComponent","mockRef","jest","fn","toHaveBeenCalled"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,+CAAD,EAAkD,YAAM;AAC9D,6BAAUC,YAAV;AAEAC,EAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAM;AAC1D,QAAMC,OAAO,GAAG,mBACd,gCAAC,YAAD;AAAc,MAAA,UAAU,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB;AAA1B,OACE,iDADF,CADc,CAAhB;AAMAC,IAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,UAAb,EAAyBC,MAA1B,CAAN,CAAwCC,IAAxC,CAA6C,CAA7C;AACAJ,IAAAA,OAAO,CAACE,IAAR,CAAa,UAAb,EAAyBG,QAAzB,CAAkC,QAAlC,EAA4C;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAV,KAA5C;AACA,QAAMC,eAAe,GAAG,mBACtBR,OAAO,CACJE,IADH,CACQ,SADR,EAEGO,QAFH,GAGGC,YAHH,EADsB,CAAxB,CAT0D,CAgB1D;;AACAT,IAAAA,MAAM,CAACO,eAAe,CAACN,IAAhB,CAAqB,UAArB,EAAiCC,MAAlC,CAAN,CAAgDC,IAAhD,CAAqD,CAArD;AACD,GAlBC,CAAF;AAoBAL,EAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAM;AAChC,QAAMY,OAAO,GAAGC,IAAI,CAACC,EAAL,EAAhB;AACA,uBACE,gCAAC,YAAD;AAAc,MAAA,UAAU,EAAE;AAA1B,OACE;AAAO,MAAA,GAAG,EAAEF;AAAZ,MADF,CADF;AAKAV,IAAAA,MAAM,CAACU,OAAD,CAAN,CAAgBG,gBAAhB;AACD,GARC,CAAF;AASD,CAhCO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport AutoComplete from '..';\nimport focusTest from '../../../tests/shared/focusTest';\n\ndescribe('AutoComplete with Custom Input Element Render', () => {\n  focusTest(AutoComplete);\n\n  it('AutoComplete with custom Input render perfectly', () => {\n    const wrapper = mount(\n      <AutoComplete dataSource={['12345', '23456', '34567']}>\n        <textarea />\n      </AutoComplete>,\n    );\n\n    expect(wrapper.find('textarea').length).toBe(1);\n    wrapper.find('textarea').simulate('change', { target: { value: '123' } });\n    const dropdownWrapper = mount(\n      wrapper\n        .find('Trigger')\n        .instance()\n        .getComponent(),\n    );\n\n    // should not filter data source defaultly\n    expect(dropdownWrapper.find('MenuItem').length).toBe(3);\n  });\n\n  it('child.ref should work', () => {\n    const mockRef = jest.fn();\n    mount(\n      <AutoComplete dataSource={[]}>\n        <input ref={mockRef} />\n      </AutoComplete>,\n    );\n    expect(mockRef).toHaveBeenCalled();\n  });\n});\n"]}