90fb783b548f8691399e3114630d038b
"use strict";

/* istanbul ignore next */
function cov_2rkzdusbca() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/breadcrumb/placements.tsx";
  var hash = "b9fa4428311d0429c03078abc3494df5082afd6b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/breadcrumb/placements.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 49
        }
      },
      "2": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "4": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "5": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 50,
          column: 32
        }
      },
      "6": {
        start: {
          line: 51,
          column: 15
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "7": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 52,
          column: 30
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b9fa4428311d0429c03078abc3494df5082afd6b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2rkzdusbca = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2rkzdusbca();
cov_2rkzdusbca().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2rkzdusbca().s[1]++;
exports["default"] = exports.placements = void 0;
var autoAdjustOverflow =
/* istanbul ignore next */
(cov_2rkzdusbca().s[2]++, {
  adjustX: 1,
  adjustY: 1
});
var targetOffset =
/* istanbul ignore next */
(cov_2rkzdusbca().s[3]++, [0, 0]);
var placements =
/* istanbul ignore next */
(cov_2rkzdusbca().s[4]++, {
  topLeft: {
    points: ['bl', 'tl'],
    overflow: autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  topCenter: {
    points: ['bc', 'tc'],
    overflow: autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  topRight: {
    points: ['br', 'tr'],
    overflow: autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  bottomLeft: {
    points: ['tl', 'bl'],
    overflow: autoAdjustOverflow,
    offset: [0, 0],
    targetOffset: targetOffset
  },
  bottomCenter: {
    points: ['tc', 'bc'],
    overflow: autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  bottomRight: {
    points: ['tr', 'br'],
    overflow: autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: targetOffset
  }
});

/* istanbul ignore next */
cov_2rkzdusbca().s[5]++;
exports.placements = placements;

var _default =
/* istanbul ignore next */
(cov_2rkzdusbca().s[6]++, placements);

/* istanbul ignore next */
cov_2rkzdusbca().s[7]++;
exports["default"] = _default;