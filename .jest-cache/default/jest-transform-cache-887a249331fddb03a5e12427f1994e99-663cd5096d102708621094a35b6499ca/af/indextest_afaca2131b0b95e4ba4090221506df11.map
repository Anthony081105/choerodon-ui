{"version":3,"sources":["index.test.js"],"names":["setupByMount","wrapper","describe","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","Switch","it","expect","find","length","toBe","at","prop","simulate","keyCode"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,OAAO,GAAG,mBAAM,gCAAC,sBAAD,OAAN,CAAhB;AACA,SAAO;AACLA,IAAAA,OAAO,EAAPA;AADK,GAAP;AAGD,CALD;;AAMAC,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3BC,EAAAA,UAAU,CAAC,YAAM;AACfC,IAAAA,IAAI,CAACC,aAAL;AACD,GAFS,CAAV;AAIAC,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,IAAI,CAACG,aAAL;AACD,GAFQ,CAAT;AAGA,6BAAUC,YAAV;AACAC,EAAAA,EAAE,CAAC,yBAAD,EAA4B,YAAM;AAAA,wBACdT,YAAY,EADE;AAAA,QAC1BC,OAD0B,iBAC1BA,OAD0B;;AAElCS,IAAAA,MAAM,CAACT,OAAO,CAACU,IAAR,CAAa,QAAb,EAAuBC,MAAxB,CAAN,CAAsCC,IAAtC,CAA2C,CAA3C;AACD,GAHC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,mCAAD,EAAsC,YAAM;AAC5C,QAAMR,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAQ,MAAA,cAAc;AAAtB,MAAN,CAAhB;AACAS,IAAAA,MAAM,CACJT,OAAO,CACJU,IADH,CACQ,OADR,EAEGG,EAFH,CAEM,CAFN,EAGGC,IAHH,CAGQ,SAHR,CADI,CAAN,CAKEF,IALF,CAKO,IALP;AAMAZ,IAAAA,OAAO,CAACU,IAAR,CAAa,OAAb,EAAsBK,QAAtB,CAA+B,SAA/B,EAA0C;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA1C;AACAhB,IAAAA,OAAO,CAACU,IAAR,CAAa,OAAb,EAAsBK,QAAtB,CAA+B,SAA/B,EAA0C;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA1C;AACAP,IAAAA,MAAM,CACJT,OAAO,CACJU,IADH,CACQ,OADR,EAEGG,EAFH,CAEM,CAFN,EAGGC,IAHH,CAGQ,SAHR,CADI,CAAN,CAKEF,IALF,CAKO,KALP;AAMD,GAhBC,CAAF;AAiBD,CA9BO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport SwitchTest from './SwitchTest';\nimport Switch from '..';\nimport focusTest from '../../../tests/shared/focusTest';\n\nconst setupByMount = () => {\n  const wrapper = mount(<SwitchTest />);\n  return {\n    wrapper,\n  };\n};\ndescribe('Switch-pro', () => {\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n  focusTest(Switch);\n  it('should have five Switch', () => {\n    const { wrapper } = setupByMount();\n    expect(wrapper.find('Switch').length).toBe(5);\n  });\n  it('should change when key enter down', () => {\n    const wrapper = mount(<Switch defaultChecked />);\n    expect(\n      wrapper\n        .find('input')\n        .at(0)\n        .prop('checked'),\n    ).toBe(true);\n    wrapper.find('input').simulate('keyDown', { keyCode: 39 });\n    wrapper.find('input').simulate('keyDown', { keyCode: 37 });\n    expect(\n      wrapper\n        .find('input')\n        .at(0)\n        .prop('checked'),\n    ).toBe(false);\n  });\n});\n"]}