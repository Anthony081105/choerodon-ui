{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/ripple/RippleChild.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAQA;;AACA;;IAMqB,W;;;;;AAArB,yBAAA;AAAA;;AAAA;;;AAYE,UAAA,eAAA,GAAkB,UAAC,KAAD,EAA2B,IAA3B,EAA0C;AAAA,UAClD,SADkD,GACpC,MAAK,KAD+B,CAClD,SADkD;AAAA,yBAE9B,KAAK,CAAC,KAFwB;AAAA,UAElD,QAFkD,gBAElD,QAFkD;AAAA,UAExC,KAFwC,gBAExC,KAFwC;AAG1D,UAAM,cAAc,GAAQ;AAC1B,QAAA,SAAS,YAAK,SAAL;AADiB,OAA5B;;AAGA,UAAI,IAAJ,EAAU;AAAA,YACA,CADA,GACwB,IADxB,CACA,CADA;AAAA,YACG,CADH,GACwB,IADxB,CACG,CADH;AAAA,YACM,KADN,GACwB,IADxB,CACM,KADN;AAAA,YACa,MADb,GACwB,IADxB,CACa,MADb;AAER,YAAM,QAAQ,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,GAAG,CAAjB,EAAoB,CAApB,CAAjB;AACA,YAAM,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,MAAM,GAAG,CAAlB,EAAqB,CAArB,CAAlB;AACA,YAAM,GAAG,GAAG,IAAI,CAAC,IAAL,CAAU,QAAQ,GAAG,QAAX,GAAsB,SAAS,GAAG,SAA5C,CAAZ;AACA,cAAK,kBAAL,GAA0B;AACxB,UAAA,KAAK,EAAE,GAAG,GAAG,GADW;AAExB,UAAA,MAAM,EAAE,GAAG,GAAG,GAFU;AAGxB,UAAA,IAAI,EAAE,CAAC,GAAG,GAHc;AAIxB,UAAA,GAAG,EAAE,CAAC,GAAG;AAJe,SAA1B;AAMD;;AACD,UAAM,QAAQ,GAAQ;AACpB,QAAA,QAAQ,EAAE,CACR,QADQ,EAER,kBAAA,aAAA,CAAC,mBAAD,EAAQ;AACN,UAAA,GAAG,EAAC,QADE;AAEN,UAAA,SAAS,EAAC,KAFJ;AAGN,UAAA,cAAc,EAAE,cAHV;AAIN,UAAA,cAAc,EAAE,IAAI,GAAG,iBAAH,GAAuB,MAJrC;AAKN,UAAA,UAAU,EAAC;AALL,SAAR,EAOG,MAAK,kBAAL,IACC,kBAAA,aAAA,CAAA,KAAA,EAAA;AACE,UAAA,MAAM,EAAE,CAAC,IADX;AAEE,UAAA,SAAS,EAAE,SAFb;AAGE,UAAA,GAAG,EAAC,QAHN;AAIE,UAAA,KAAK,EAAE,MAAK;AAJd,SAAA,CARJ,CAFQ,CADU;AAoBpB,QAAA,KAAK,EAAE,MAAK,YAAL,IAAqB;AApBR,OAAtB;;AAsBA,UAAI,IAAI,IAAI,IAAI,CAAC,QAAL,KAAkB,QAA9B,EAAwC;AACtC,QAAA,QAAQ,CAAC,KAAT,sCAAsB,KAAtB;AAA6B,UAAA,QAAQ,EAAE;AAAvC;AACA,cAAK,YAAL,GAAoB,QAAQ,CAAC,KAA7B;AACD;;AACD,aAAO,yBAAkB,KAAlB,EAAyB,QAAzB,CAAP;AACD,KA7CD;;AA+CA,UAAA,MAAA,GAAS,UAAC,KAAD,EAAqB;AAC5B,UAAI,2BAAoB,KAApB,CAAJ,EAAgC;AAC9B,eAAO,kBAAA,aAAA,CAAC,qBAAD,EAAU;AAAC,UAAA,WAAW,EAAE;AAAd,SAAV,EAAgC,MAAK,eAArC,CAAP;AACD;;AACD,aAAO,KAAP;AACD,KALD;;AA3DF;AAiEC;;;;6BA1DO;AAAA,UACI,QADJ,GACiB,KAAK,KADtB,CACI,QADJ;AAEJ,aAAO,KAAK,MAAL,CAAY,gBAAS,IAAT,CAAc,QAAd,CAAZ,CAAP;AACD;;;EAVsC,oB;;;AAChC,WAAA,CAAA,WAAA,GAAc,aAAd","sourcesContent":["import React, {\n  Children,\n  cloneElement,\n  isValidElement,\n  PureComponent,\n  ReactNode,\n  ReactElement,\n} from 'react';\nimport Animate from '../animate';\nimport MouseDown, { Size } from './MouseDown';\n\nexport interface RippleChildProps {\n  prefixCls?: string;\n}\n\nexport default class RippleChild extends PureComponent<RippleChildProps> {\n  static displayName = 'RippleChild';\n\n  currentCircleStyle: any;\n\n  currentStyle: any;\n\n  render() {\n    const { children } = this.props;\n    return this.ripple(Children.only(children));\n  }\n\n  handleMouseDown = (child: ReactElement<any>, size?: Size) => {\n    const { prefixCls } = this.props;\n    const { children, style } = child.props;\n    const componentProps: any = {\n      className: `${prefixCls}-wrapper`,\n    };\n    if (size) {\n      const { x, y, width, height } = size;\n      const maxWidth = Math.max(width - x, x);\n      const maxHeight = Math.max(height - y, y);\n      const max = Math.sqrt(maxWidth * maxWidth + maxHeight * maxHeight);\n      this.currentCircleStyle = {\n        width: max + max,\n        height: max + max,\n        left: x - max,\n        top: y - max,\n      };\n    }\n    const newProps: any = {\n      children: [\n        children,\n        <Animate\n          key=\"ripple\"\n          component=\"div\"\n          componentProps={componentProps}\n          transitionName={size ? 'zoom-small-slow' : 'fade'}\n          hiddenProp=\"hidden\"\n        >\n          {this.currentCircleStyle && (\n            <div\n              hidden={!size}\n              className={prefixCls}\n              key=\"circle\"\n              style={this.currentCircleStyle}\n            />\n          )}\n        </Animate>,\n      ],\n      style: this.currentStyle || style,\n    };\n    if (size && size.position === 'static') {\n      newProps.style = { ...style, position: 'relative' };\n      this.currentStyle = newProps.style;\n    }\n    return cloneElement<any>(child, newProps);\n  };\n\n  ripple = (child: ReactNode) => {\n    if (isValidElement<any>(child)) {\n      return <MouseDown rippleChild={child}>{this.handleMouseDown}</MouseDown>;\n    }\n    return child;\n  };\n}\n"]}