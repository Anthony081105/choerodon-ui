479b27d109f41be2c072e80a6260896c
"use strict";

/* istanbul ignore next */
function cov_2psrotkss0() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/rules/rangeOverflow.tsx";
  var hash = "79db7b424482436d9766677b9c30c67b19f5a6e9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/rules/rangeOverflow.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 35
        }
      },
      "3": {
        start: {
          line: 10,
          column: 14
        },
        end: {
          line: 10,
          column: 31
        }
      },
      "4": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 60
        }
      },
      "5": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 69
        }
      },
      "6": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 78
        }
      },
      "7": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "8": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 97
        }
      },
      "9": {
        start: {
          line: 22,
          column: 13
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "10": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "11": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "12": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 7
        }
      },
      "13": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 75
        }
      },
      "14": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 31,
          column: 73
        }
      },
      "15": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 21
        }
      },
      "16": {
        start: {
          line: 36,
          column: 14
        },
        end: {
          line: 36,
          column: 25
        }
      },
      "17": {
        start: {
          line: 37,
          column: 15
        },
        end: {
          line: 37,
          column: 27
        }
      },
      "18": {
        start: {
          line: 38,
          column: 34
        },
        end: {
          line: 38,
          column: 65
        }
      },
      "19": {
        start: {
          line: 39,
          column: 14
        },
        end: {
          line: 39,
          column: 25
        }
      },
      "20": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 55,
          column: 3
        }
      },
      "21": {
        start: {
          line: 42,
          column: 27
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "22": {
        start: {
          line: 46,
          column: 19
        },
        end: {
          line: 46,
          column: 34
        }
      },
      "23": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 67
        }
      },
      "24": {
        start: {
          line: 48,
          column: 28
        },
        end: {
          line: 48,
          column: 140
        }
      },
      "25": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 54,
          column: 7
        }
      },
      "26": {
        start: {
          line: 57,
          column: 2
        },
        end: {
          line: 57,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "isOverflow",
        decl: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 36
          }
        },
        loc: {
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 55
          },
          end: {
            line: 26,
            column: 56
          }
        },
        loc: {
          start: {
            line: 26,
            column: 71
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "2": {
        name: "rangeOverflow",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 22
          }
        },
        loc: {
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 34
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        }, {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 13
          },
          end: {
            line: 27,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 13
          },
          end: {
            line: 27,
            column: 44
          }
        }, {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 27,
            column: 74
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 41
          }
        }, {
          start: {
            line: 31,
            column: 45
          },
          end: {
            line: 31,
            column: 72
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 2
          },
          end: {
            line: 55,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 2
          },
          end: {
            line: 55,
            column: 3
          }
        }, {
          start: {
            line: 41,
            column: 2
          },
          end: {
            line: 55,
            column: 3
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 6
          },
          end: {
            line: 41,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 6
          },
          end: {
            line: 41,
            column: 34
          }
        }, {
          start: {
            line: 41,
            column: 38
          },
          end: {
            line: 41,
            column: 67
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 11
          },
          end: {
            line: 43,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 40
          },
          end: {
            line: 43,
            column: 58
          }
        }, {
          start: {
            line: 43,
            column: 61
          },
          end: {
            line: 43,
            column: 64
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 63
          },
          end: {
            line: 48,
            column: 116
          }
        }, {
          start: {
            line: 48,
            column: 119
          },
          end: {
            line: 48,
            column: 140
          }
        }],
        line: 48
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "79db7b424482436d9766677b9c30c67b19f5a6e9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2psrotkss0 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2psrotkss0();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2psrotkss0().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_2psrotkss0().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2psrotkss0().s[2]++;
exports["default"] = rangeOverflow;

var _moment =
/* istanbul ignore next */
(cov_2psrotkss0().s[3]++, require("moment"));

var _isNil =
/* istanbul ignore next */
(cov_2psrotkss0().s[4]++, _interopRequireDefault(require("lodash/isNil")));

var _isEmpty =
/* istanbul ignore next */
(cov_2psrotkss0().s[5]++, _interopRequireDefault(require("../../_util/isEmpty")));

var _ValidationResult =
/* istanbul ignore next */
(cov_2psrotkss0().s[6]++, _interopRequireDefault(require("../ValidationResult")));

var _localeContext =
/* istanbul ignore next */
(cov_2psrotkss0().s[7]++, require("../../locale-context"));

var _formatReactTemplate =
/* istanbul ignore next */
(cov_2psrotkss0().s[8]++, _interopRequireDefault(require("../../formatter/formatReactTemplate")));

var _utils =
/* istanbul ignore next */
(cov_2psrotkss0().s[9]++, require("../../field/utils"));

/* istanbul ignore next */
cov_2psrotkss0().s[10]++;

var isOverflow = function isOverflow(value, max, range) {
  /* istanbul ignore next */
  cov_2psrotkss0().f[0]++;
  cov_2psrotkss0().s[11]++;

  if (range) {
    /* istanbul ignore next */
    cov_2psrotkss0().b[0][0]++;
    cov_2psrotkss0().s[12]++;
    return (0, _utils.toRangeValue)(value, range).some(function (item) {
      /* istanbul ignore next */
      cov_2psrotkss0().f[1]++;
      cov_2psrotkss0().s[13]++;
      return (
        /* istanbul ignore next */
        (cov_2psrotkss0().b[1][0]++, !(0, _isEmpty["default"])(item)) &&
        /* istanbul ignore next */
        (cov_2psrotkss0().b[1][1]++, Number(item) > Number(max))
      );
    });
  } else
  /* istanbul ignore next */
  {
    cov_2psrotkss0().b[0][1]++;
  }

  cov_2psrotkss0().s[14]++;
  return (
    /* istanbul ignore next */
    (cov_2psrotkss0().b[2][0]++, !(0, _isEmpty["default"])(value)) &&
    /* istanbul ignore next */
    (cov_2psrotkss0().b[2][1]++, Number(value) > Number(max))
  );
};

function rangeOverflow(value, props) {
  /* istanbul ignore next */
  cov_2psrotkss0().f[2]++;
  var max =
  /* istanbul ignore next */
  (cov_2psrotkss0().s[15]++, props.max),
      label =
  /* istanbul ignore next */
  (cov_2psrotkss0().s[16]++, props.label),
      format =
  /* istanbul ignore next */
  (cov_2psrotkss0().s[17]++, props.format),
      defaultValidationMessages =
  /* istanbul ignore next */
  (cov_2psrotkss0().s[18]++, props.defaultValidationMessages),
      range =
  /* istanbul ignore next */
  (cov_2psrotkss0().s[19]++, props.range);

  /* istanbul ignore next */
  cov_2psrotkss0().s[20]++;

  if (
  /* istanbul ignore next */
  (cov_2psrotkss0().b[4][0]++, !(0, _isNil["default"])(max)) &&
  /* istanbul ignore next */
  (cov_2psrotkss0().b[4][1]++, isOverflow(value, max, range))) {
    /* istanbul ignore next */
    cov_2psrotkss0().b[3][0]++;
    var injectionOptions =
    /* istanbul ignore next */
    (cov_2psrotkss0().s[21]++, {
      max: (0, _moment.isMoment)(max) ?
      /* istanbul ignore next */
      (cov_2psrotkss0().b[5][0]++, max.format(format)) :
      /* istanbul ignore next */
      (cov_2psrotkss0().b[5][1]++, max),
      label: label
    });
    var ruleName =
    /* istanbul ignore next */
    (cov_2psrotkss0().s[22]++, 'rangeOverflow');

    var _defaultValidationMes =
    /* istanbul ignore next */
    (cov_2psrotkss0().s[23]++, defaultValidationMessages[ruleName]),
        validationMessage =
    /* istanbul ignore next */
    (cov_2psrotkss0().s[24]++, _defaultValidationMes === void 0 ?
    /* istanbul ignore next */
    (cov_2psrotkss0().b[6][0]++, (0, _localeContext.$l)('Validator', 'range_overflow')) :
    /* istanbul ignore next */
    (cov_2psrotkss0().b[6][1]++, _defaultValidationMes));

    /* istanbul ignore next */
    cov_2psrotkss0().s[25]++;
    return new _ValidationResult["default"]({
      validationMessage: (0, _formatReactTemplate["default"])(validationMessage, injectionOptions),
      injectionOptions: injectionOptions,
      value: value,
      ruleName: ruleName
    });
  } else
  /* istanbul ignore next */
  {
    cov_2psrotkss0().b[3][1]++;
  }

  cov_2psrotkss0().s[26]++;
  return true;
}