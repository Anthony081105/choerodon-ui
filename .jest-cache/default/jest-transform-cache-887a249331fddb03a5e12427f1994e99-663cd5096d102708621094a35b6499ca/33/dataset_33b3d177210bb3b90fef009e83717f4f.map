{"version":3,"sources":["dataset.js"],"names":["dsMutationsT","rows","total","success","dsQueriesT","userid","name","code_description","code_code","code_select","codeMultiple_description","codeMultiple_code","sex","account","multiple","enable","frozen","date","startDate","endDate","other","dsLanguagesT","zh_CN","en_GB","en_US","ja_JP","dsValidateT","dsMutationsR","dsQueriesR","dsLanguagesR","dsValidateR","dsMutationsD","Mock","mock","dsQueriesD","dsLanguagesD","dsValidateD","window","dsTempleList","rule","data"],"mappings":";;;;;;;;;;AAAA;;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAKA,IAAMC,UAAU,GAAG;AACjB,cAAY,CACV;AACEC,IAAAA,MAAM,EAAE,SADV;AAEE,kBAAc,EAFhB;AAGEC,IAAAA,IAAI,EAAE,UAHR;AAIEC,IAAAA,gBAAgB,EAAE,MAJpB;AAKEC,IAAAA,SAAS,EAAE,oBALb;AAMEC,IAAAA,WAAW,EAAE,oBANf;AAOEC,IAAAA,wBAAwB,EAAE,iBAP5B;AAQEC,IAAAA,iBAAiB,EAAE,CAAC,YAAD,EAAe,YAAf,CARrB;AASEC,IAAAA,GAAG,EAAE,MATP;AAUE,uBAAmB,CAAC,MAAD,CAVrB;AAWEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE;AADH,KAXX;AAcEC,IAAAA,MAAM,EAAE,YAdV;AAeEC,IAAAA,MAAM,EAAE,MAfV;AAgBEC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAhBR;AAoBEC,IAAAA,KAAK,EAAE;AACL,iBAAW,CACT;AACEf,QAAAA,MAAM,EAAE,SADV;AAEE,sBAAc,EAFhB;AAGEC,QAAAA,IAAI,EAAE,UAHR;AAIEM,QAAAA,GAAG,EAAE,MAJP;AAKE,qBAAa,CACX;AACEP,UAAAA,MAAM,EAAE,SADV;AAEE,wBAAc,EAFhB;AAGEC,UAAAA,IAAI,EAAE,UAHR;AAIEM,UAAAA,GAAG,EAAE;AAJP,SADW;AALf,OADS;AADN;AApBT,GADU,CADK;AA0CjBV,EAAAA,KAAK,EAAE,IA1CU;AA2CjBC,EAAAA,OAAO,EAAE;AA3CQ,CAAnB;AA8CA,IAAMkB,YAAY,GAAG;AACnBpB,EAAAA,IAAI,EAAE,CACJ;AACEK,IAAAA,IAAI,EAAE;AACJgB,MAAAA,KAAK,EAAE,UADH;AAEJC,MAAAA,KAAK,EAAE,SAFH;AAGJC,MAAAA,KAAK,EAAE,SAHH;AAIJC,MAAAA,KAAK,EAAE;AAJH,KADR;AAOE,kBAAc;AACZH,MAAAA,KAAK,EAAE,UADK;AAEZC,MAAAA,KAAK,EAAE,SAFK;AAGZC,MAAAA,KAAK,EAAE,SAHK;AAIZC,MAAAA,KAAK,EAAE;AAJK;AAPhB,GADI,CADa;AAiBnBvB,EAAAA,KAAK,EAAE,CAjBY;AAkBnBC,EAAAA,OAAO,EAAE;AAlBU,CAArB;AAoBA,IAAMuB,WAAW,GAAG,CAAC,IAAD,CAApB;AAEA,IAAMC,YAAY,GAAG,4BAArB;AACA,IAAMC,UAAU,GAAG,0BAAnB;AACA,IAAMC,YAAY,GAAG,4BAArB;AACA,IAAMC,WAAW,GAAG,2BAApB;;AACA,IAAMC,YAAY,GAAGC,mBAAKC,IAAL,CAAUjC,YAAV,CAArB;;AACA,IAAMkC,UAAU,GAAGF,mBAAKC,IAAL,CAAU7B,UAAV,CAAnB;;AACA,IAAM+B,YAAY,GAAGH,mBAAKC,IAAL,CAAUZ,YAAV,CAArB;;AACA,IAAMe,WAAW,GAAGJ,mBAAKC,IAAL,CAAUP,WAAV,CAApB;;AAEe,oBAAW;AACxB,MAAI,OAAOW,MAAP,KAAkB,WAAtB,EAAmC;AACjCL,uBAAKC,IAAL,CAAUN,YAAV,EAAwB3B,YAAxB;;AAEAgC,uBAAKC,IAAL,CAAUL,UAAV,EAAsBxB,UAAtB;;AAEA4B,uBAAKC,IAAL,CAAUJ,YAAV,EAAwBR,YAAxB;;AAEAW,uBAAKC,IAAL,CAAUH,WAAV,EAAuBJ,WAAvB;AACD;AACF;;AAEM,IAAMY,YAAY,GAAG,CAC1B;AAAEC,EAAAA,IAAI,EAAEZ,YAAR;AAAsBa,EAAAA,IAAI,EAAET;AAA5B,CAD0B,EAE1B;AAAEQ,EAAAA,IAAI,EAAEX,UAAR;AAAoBY,EAAAA,IAAI,EAAEN;AAA1B,CAF0B,EAG1B;AAAEK,EAAAA,IAAI,EAAEV,YAAR;AAAsBW,EAAAA,IAAI,EAAEL;AAA5B,CAH0B,EAI1B;AAAEI,EAAAA,IAAI,EAAET,WAAR;AAAqBU,EAAAA,IAAI,EAAEJ;AAA3B,CAJ0B,CAArB","sourcesContent":["import Mock from 'mockjs';\n\nconst dsMutationsT = {\n  rows: [],\n  total: 1000,\n  success: '@boolean()',\n};\nconst dsQueriesT = {\n  'rows|200': [\n    {\n      userid: '@guid()',\n      'age|18-100': 34,\n      name: '@cname()',\n      code_description: '员工状态',\n      code_code: 'HR.EMPLOYEE_STATUS',\n      code_select: 'HR.EMPLOYEE_GENDER',\n      codeMultiple_description: '@last(),@last()',\n      codeMultiple_code: [/1[0-9]{10}/, /1[0-9]{10}/],\n      sex: /[MF]/,\n      'sexMultiple|1-2': [/[MF]/],\n      account: {\n        multiple: /M|F|M,F|F,M/,\n      },\n      enable: '@boolean()',\n      frozen: /[NY]/,\n      date: {\n        startDate: null,\n        endDate: null,\n      },\n      other: {\n        'enemy|3': [\n          {\n            userid: '@guid()',\n            'age|18-100': 34,\n            name: '@cname()',\n            sex: /[MF]/,\n            'friends|3': [\n              {\n                userid: '@guid()',\n                'age|18-100': 34,\n                name: '@cname()',\n                sex: /[MF]/,\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ],\n  total: 1000,\n  success: true,\n};\n\nconst dsLanguagesT = {\n  rows: [\n    {\n      name: {\n        zh_CN: '@cname()',\n        en_GB: '@name()',\n        en_US: '@name()',\n        ja_JP: '桥本@clast()',\n      },\n      'first-name': {\n        zh_CN: '@cname()',\n        en_GB: '@name()',\n        en_US: '@name()',\n        ja_JP: '本田@clast()',\n      },\n    },\n  ],\n  total: 1,\n  success: true,\n};\nconst dsValidateT = [true];\n\nconst dsMutationsR = /\\/dataset\\/user\\/mutations/;\nconst dsQueriesR = /\\/dataset\\/user\\/queries/;\nconst dsLanguagesR = /\\/dataset\\/user\\/languages/;\nconst dsValidateR = /\\/dataset\\/user\\/validate/;\nconst dsMutationsD = Mock.mock(dsMutationsT);\nconst dsQueriesD = Mock.mock(dsQueriesT);\nconst dsLanguagesD = Mock.mock(dsLanguagesT);\nconst dsValidateD = Mock.mock(dsValidateT);\n\nexport default function() {\n  if (typeof window !== 'undefined') {\n    Mock.mock(dsMutationsR, dsMutationsT);\n\n    Mock.mock(dsQueriesR, dsQueriesT);\n\n    Mock.mock(dsLanguagesR, dsLanguagesT);\n\n    Mock.mock(dsValidateR, dsValidateT);\n  }\n}\n\nexport const dsTempleList = [\n  { rule: dsMutationsR, data: dsMutationsD },\n  { rule: dsQueriesR, data: dsQueriesD },\n  { rule: dsLanguagesR, data: dsLanguagesD },\n  { rule: dsValidateR, data: dsValidateD },\n];\n"]}