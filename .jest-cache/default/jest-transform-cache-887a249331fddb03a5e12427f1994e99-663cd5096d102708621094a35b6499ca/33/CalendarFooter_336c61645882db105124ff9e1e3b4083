a860d1b0d5f296e0c5b6108191ef6260
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _createReactClass = _interopRequireDefault(require("create-react-class"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _mapSelf = _interopRequireDefault(require("../../util/Children/mapSelf"));

var _classnames = _interopRequireDefault(require("classnames"));

var _TodayButton = _interopRequireDefault(require("../calendar/TodayButton"));

var _OkButton = _interopRequireDefault(require("../calendar/OkButton"));

var _TimePickerButton = _interopRequireDefault(require("../calendar/TimePickerButton"));

var CalendarFooter = (0, _createReactClass["default"])({
  displayName: "CalendarFooter",
  propTypes: {
    prefixCls: _propTypes["default"].string,
    showDateInput: _propTypes["default"].bool,
    disabledTime: _propTypes["default"].any,
    timePicker: _propTypes["default"].element,
    selectedValue: _propTypes["default"].any,
    showOk: _propTypes["default"].bool,
    onSelect: _propTypes["default"].func,
    value: _propTypes["default"].object,
    renderFooter: _propTypes["default"].func,
    defaultValue: _propTypes["default"].object
  },
  onSelect: function onSelect(value) {
    this.props.onSelect(value);
  },
  getRootDOMNode: function getRootDOMNode() {
    return _reactDom["default"].findDOMNode(this);
  },
  render: function render() {
    var props = this.props;
    var value = props.value,
        prefixCls = props.prefixCls,
        showOk = props.showOk,
        timePicker = props.timePicker,
        renderFooter = props.renderFooter;
    var footerEl = null;
    var extraFooter = renderFooter();

    if (props.showToday || timePicker || extraFooter) {
      var _cx;

      var nowEl;

      if (props.showToday) {
        nowEl = _react["default"].createElement(_TodayButton["default"], (0, _extends2["default"])({}, props, {
          value: value
        }));
      }

      var okBtn;

      if (showOk === true || showOk !== false && !!props.timePicker) {
        okBtn = _react["default"].createElement(_OkButton["default"], props);
      }

      var timePickerBtn;

      if (!!props.timePicker) {
        timePickerBtn = _react["default"].createElement(_TimePickerButton["default"], props);
      }

      var footerBtn;

      if (nowEl || timePickerBtn || okBtn) {
        footerBtn = _react["default"].createElement("span", {
          className: "".concat(prefixCls, "-footer-btn")
        }, (0, _mapSelf["default"])([nowEl, timePickerBtn, okBtn]));
      }

      var cls = (0, _classnames["default"])((_cx = {}, (0, _defineProperty2["default"])(_cx, "".concat(prefixCls, "-footer"), true), (0, _defineProperty2["default"])(_cx, "".concat(prefixCls, "-footer-show-ok"), okBtn), _cx));
      footerEl = _react["default"].createElement("div", {
        className: cls
      }, extraFooter, footerBtn);
    }

    return footerEl;
  }
});
var _default = CalendarFooter;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhbGVuZGFyRm9vdGVyLmpzeCJdLCJuYW1lcyI6WyJDYWxlbmRhckZvb3RlciIsInByb3BUeXBlcyIsInByZWZpeENscyIsIlByb3BUeXBlcyIsInN0cmluZyIsInNob3dEYXRlSW5wdXQiLCJib29sIiwiZGlzYWJsZWRUaW1lIiwiYW55IiwidGltZVBpY2tlciIsImVsZW1lbnQiLCJzZWxlY3RlZFZhbHVlIiwic2hvd09rIiwib25TZWxlY3QiLCJmdW5jIiwidmFsdWUiLCJvYmplY3QiLCJyZW5kZXJGb290ZXIiLCJkZWZhdWx0VmFsdWUiLCJwcm9wcyIsImdldFJvb3RET01Ob2RlIiwiUmVhY3RET00iLCJmaW5kRE9NTm9kZSIsInJlbmRlciIsImZvb3RlckVsIiwiZXh0cmFGb290ZXIiLCJzaG93VG9kYXkiLCJub3dFbCIsIm9rQnRuIiwidGltZVBpY2tlckJ0biIsImZvb3RlckJ0biIsImNscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLElBQU1BLGNBQWMsR0FBRyxrQ0FBaUI7QUFBQTtBQUN0Q0MsRUFBQUEsU0FBUyxFQUFFO0FBQ1RDLElBQUFBLFNBQVMsRUFBRUMsc0JBQVVDLE1BRFo7QUFFVEMsSUFBQUEsYUFBYSxFQUFFRixzQkFBVUcsSUFGaEI7QUFHVEMsSUFBQUEsWUFBWSxFQUFFSixzQkFBVUssR0FIZjtBQUlUQyxJQUFBQSxVQUFVLEVBQUVOLHNCQUFVTyxPQUpiO0FBS1RDLElBQUFBLGFBQWEsRUFBRVIsc0JBQVVLLEdBTGhCO0FBTVRJLElBQUFBLE1BQU0sRUFBRVQsc0JBQVVHLElBTlQ7QUFPVE8sSUFBQUEsUUFBUSxFQUFFVixzQkFBVVcsSUFQWDtBQVFUQyxJQUFBQSxLQUFLLEVBQUVaLHNCQUFVYSxNQVJSO0FBU1RDLElBQUFBLFlBQVksRUFBRWQsc0JBQVVXLElBVGY7QUFVVEksSUFBQUEsWUFBWSxFQUFFZixzQkFBVWE7QUFWZixHQUQyQjtBQWN0Q0gsRUFBQUEsUUFkc0Msb0JBYzdCRSxLQWQ2QixFQWN0QjtBQUNkLFNBQUtJLEtBQUwsQ0FBV04sUUFBWCxDQUFvQkUsS0FBcEI7QUFDRCxHQWhCcUM7QUFrQnRDSyxFQUFBQSxjQWxCc0MsNEJBa0JyQjtBQUNmLFdBQU9DLHFCQUFTQyxXQUFULENBQXFCLElBQXJCLENBQVA7QUFDRCxHQXBCcUM7QUFzQnRDQyxFQUFBQSxNQXRCc0Msb0JBc0I3QjtBQUNQLFFBQU1KLEtBQUssR0FBRyxLQUFLQSxLQUFuQjtBQURPLFFBRUNKLEtBRkQsR0FFd0RJLEtBRnhELENBRUNKLEtBRkQ7QUFBQSxRQUVRYixTQUZSLEdBRXdEaUIsS0FGeEQsQ0FFUWpCLFNBRlI7QUFBQSxRQUVtQlUsTUFGbkIsR0FFd0RPLEtBRnhELENBRW1CUCxNQUZuQjtBQUFBLFFBRTJCSCxVQUYzQixHQUV3RFUsS0FGeEQsQ0FFMkJWLFVBRjNCO0FBQUEsUUFFdUNRLFlBRnZDLEdBRXdERSxLQUZ4RCxDQUV1Q0YsWUFGdkM7QUFHUCxRQUFJTyxRQUFRLEdBQUcsSUFBZjtBQUNBLFFBQU1DLFdBQVcsR0FBR1IsWUFBWSxFQUFoQzs7QUFDQSxRQUFJRSxLQUFLLENBQUNPLFNBQU4sSUFBbUJqQixVQUFuQixJQUFpQ2dCLFdBQXJDLEVBQWtEO0FBQUE7O0FBQ2hELFVBQUlFLEtBQUo7O0FBQ0EsVUFBSVIsS0FBSyxDQUFDTyxTQUFWLEVBQXFCO0FBQ25CQyxRQUFBQSxLQUFLLEdBQUcsZ0NBQUMsdUJBQUQsZ0NBQWlCUixLQUFqQjtBQUF3QixVQUFBLEtBQUssRUFBRUo7QUFBL0IsV0FBUjtBQUNEOztBQUNELFVBQUlhLEtBQUo7O0FBQ0EsVUFBSWhCLE1BQU0sS0FBSyxJQUFYLElBQW1CQSxNQUFNLEtBQUssS0FBWCxJQUFvQixDQUFDLENBQUNPLEtBQUssQ0FBQ1YsVUFBbkQsRUFBK0Q7QUFDN0RtQixRQUFBQSxLQUFLLEdBQUcsZ0NBQUMsb0JBQUQsRUFBY1QsS0FBZCxDQUFSO0FBQ0Q7O0FBQ0QsVUFBSVUsYUFBSjs7QUFDQSxVQUFJLENBQUMsQ0FBQ1YsS0FBSyxDQUFDVixVQUFaLEVBQXdCO0FBQ3RCb0IsUUFBQUEsYUFBYSxHQUFHLGdDQUFDLDRCQUFELEVBQXNCVixLQUF0QixDQUFoQjtBQUNEOztBQUVELFVBQUlXLFNBQUo7O0FBQ0EsVUFBSUgsS0FBSyxJQUFJRSxhQUFULElBQTBCRCxLQUE5QixFQUFxQztBQUNuQ0UsUUFBQUEsU0FBUyxHQUFJO0FBQU0sVUFBQSxTQUFTLFlBQUs1QixTQUFMO0FBQWYsV0FDVix5QkFBVyxDQUFDeUIsS0FBRCxFQUFRRSxhQUFSLEVBQXVCRCxLQUF2QixDQUFYLENBRFUsQ0FBYjtBQUdEOztBQUNELFVBQU1HLEdBQUcsR0FBRyx1RkFDTjdCLFNBRE0sY0FDZSxJQURmLG1EQUVOQSxTQUZNLHNCQUV1QjBCLEtBRnZCLFFBQVo7QUFJQUosTUFBQUEsUUFBUSxHQUNOO0FBQUssUUFBQSxTQUFTLEVBQUVPO0FBQWhCLFNBQ0dOLFdBREgsRUFFR0ssU0FGSCxDQURGO0FBS0Q7O0FBQ0QsV0FBT04sUUFBUDtBQUNEO0FBMURxQyxDQUFqQixDQUF2QjtlQTZEZXhCLGMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgY3JlYXRlUmVhY3RDbGFzcyBmcm9tICdjcmVhdGUtcmVhY3QtY2xhc3MnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB0b0ZyYWdtZW50IGZyb20gJy4uLy4uL3V0aWwvQ2hpbGRyZW4vbWFwU2VsZic7XG5pbXBvcnQgY3ggZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgVG9kYXlCdXR0b24gZnJvbSAnLi4vY2FsZW5kYXIvVG9kYXlCdXR0b24nO1xuaW1wb3J0IE9rQnV0dG9uIGZyb20gJy4uL2NhbGVuZGFyL09rQnV0dG9uJztcbmltcG9ydCBUaW1lUGlja2VyQnV0dG9uIGZyb20gJy4uL2NhbGVuZGFyL1RpbWVQaWNrZXJCdXR0b24nO1xuXG5jb25zdCBDYWxlbmRhckZvb3RlciA9IGNyZWF0ZVJlYWN0Q2xhc3Moe1xuICBwcm9wVHlwZXM6IHtcbiAgICBwcmVmaXhDbHM6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc2hvd0RhdGVJbnB1dDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZGlzYWJsZWRUaW1lOiBQcm9wVHlwZXMuYW55LFxuICAgIHRpbWVQaWNrZXI6IFByb3BUeXBlcy5lbGVtZW50LFxuICAgIHNlbGVjdGVkVmFsdWU6IFByb3BUeXBlcy5hbnksXG4gICAgc2hvd09rOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBvblNlbGVjdDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgdmFsdWU6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcmVuZGVyRm9vdGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBkZWZhdWx0VmFsdWU6IFByb3BUeXBlcy5vYmplY3QsXG4gIH0sXG5cbiAgb25TZWxlY3QodmFsdWUpIHtcbiAgICB0aGlzLnByb3BzLm9uU2VsZWN0KHZhbHVlKTtcbiAgfSxcblxuICBnZXRSb290RE9NTm9kZSgpIHtcbiAgICByZXR1cm4gUmVhY3RET00uZmluZERPTU5vZGUodGhpcyk7XG4gIH0sXG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHByb3BzID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IHZhbHVlLCBwcmVmaXhDbHMsIHNob3dPaywgdGltZVBpY2tlciwgcmVuZGVyRm9vdGVyIH0gPSBwcm9wcztcbiAgICBsZXQgZm9vdGVyRWwgPSBudWxsO1xuICAgIGNvbnN0IGV4dHJhRm9vdGVyID0gcmVuZGVyRm9vdGVyKCk7XG4gICAgaWYgKHByb3BzLnNob3dUb2RheSB8fCB0aW1lUGlja2VyIHx8IGV4dHJhRm9vdGVyKSB7XG4gICAgICBsZXQgbm93RWw7XG4gICAgICBpZiAocHJvcHMuc2hvd1RvZGF5KSB7XG4gICAgICAgIG5vd0VsID0gPFRvZGF5QnV0dG9uIHsuLi5wcm9wc30gdmFsdWU9e3ZhbHVlfSAvPjtcbiAgICAgIH1cbiAgICAgIGxldCBva0J0bjtcbiAgICAgIGlmIChzaG93T2sgPT09IHRydWUgfHwgc2hvd09rICE9PSBmYWxzZSAmJiAhIXByb3BzLnRpbWVQaWNrZXIpIHtcbiAgICAgICAgb2tCdG4gPSA8T2tCdXR0b24gey4uLnByb3BzfSAvPjtcbiAgICAgIH1cbiAgICAgIGxldCB0aW1lUGlja2VyQnRuO1xuICAgICAgaWYgKCEhcHJvcHMudGltZVBpY2tlcikge1xuICAgICAgICB0aW1lUGlja2VyQnRuID0gPFRpbWVQaWNrZXJCdXR0b24gey4uLnByb3BzfSAvPjtcbiAgICAgIH1cblxuICAgICAgbGV0IGZvb3RlckJ0bjtcbiAgICAgIGlmIChub3dFbCB8fCB0aW1lUGlja2VyQnRuIHx8IG9rQnRuKSB7XG4gICAgICAgIGZvb3RlckJ0biA9ICg8c3BhbiBjbGFzc05hbWU9e2Ake3ByZWZpeENsc30tZm9vdGVyLWJ0bmB9PlxuICAgICAgICAgIHt0b0ZyYWdtZW50KFtub3dFbCwgdGltZVBpY2tlckJ0biwgb2tCdG5dKX1cbiAgICAgICAgPC9zcGFuPik7XG4gICAgICB9XG4gICAgICBjb25zdCBjbHMgPSBjeCh7XG4gICAgICAgIFtgJHtwcmVmaXhDbHN9LWZvb3RlcmBdOiB0cnVlLFxuICAgICAgICBbYCR7cHJlZml4Q2xzfS1mb290ZXItc2hvdy1va2BdOiBva0J0bixcbiAgICAgIH0pO1xuICAgICAgZm9vdGVyRWwgPSAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbHN9PlxuICAgICAgICAgIHtleHRyYUZvb3Rlcn1cbiAgICAgICAgICB7Zm9vdGVyQnRufVxuICAgICAgICA8L2Rpdj4pO1xuICAgIH1cbiAgICByZXR1cm4gZm9vdGVyRWw7XG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FsZW5kYXJGb290ZXI7XG4iXX0=