558282c94dfc7ab472610c26dffe6ea6
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _enhancer = _interopRequireDefault(require("./enhancer"));

var _types = require("./types");

var Line =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(Line, _Component);

  function Line() {
    (0, _classCallCheck2["default"])(this, Line);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Line).apply(this, arguments));
  }

  (0, _createClass2["default"])(Line, [{
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          className = _this$props.className,
          percent = _this$props.percent,
          prefixCls = _this$props.prefixCls,
          strokeColor = _this$props.strokeColor,
          strokeLinecap = _this$props.strokeLinecap,
          strokeWidth = _this$props.strokeWidth,
          style = _this$props.style,
          trailColor = _this$props.trailColor,
          trailWidth = _this$props.trailWidth,
          restProps = (0, _objectWithoutProperties2["default"])(_this$props, ["className", "percent", "prefixCls", "strokeColor", "strokeLinecap", "strokeWidth", "style", "trailColor", "trailWidth"]);
      delete restProps.gapPosition;
      var pathStyle = {
        strokeDasharray: '100px, 100px',
        strokeDashoffset: "".concat(100 - percent, "px"),
        transition: 'stroke-dashoffset 0.3s ease 0s, stroke 0.3s linear'
      };
      var center = strokeWidth / 2;
      var right = 100 - strokeWidth / 2;
      var pathString = "M ".concat(strokeLinecap === 'round' ? center : 0, ",").concat(center, "\n           L ").concat(strokeLinecap === 'round' ? right : 100, ",").concat(center);
      var viewBoxString = "0 0 100 ".concat(strokeWidth);
      return _react["default"].createElement("svg", (0, _extends2["default"])({
        className: "".concat(prefixCls, "-line ").concat(className),
        viewBox: viewBoxString,
        preserveAspectRatio: "none",
        style: style
      }, restProps), _react["default"].createElement("path", {
        className: "".concat(prefixCls, "-line-trail"),
        d: pathString,
        strokeLinecap: strokeLinecap,
        stroke: trailColor,
        strokeWidth: trailWidth || strokeWidth,
        fillOpacity: "0"
      }), _react["default"].createElement("path", {
        className: "".concat(prefixCls, "-line-path"),
        d: pathString,
        strokeLinecap: strokeLinecap,
        stroke: strokeColor,
        strokeWidth: strokeWidth,
        fillOpacity: "0",
        ref: function ref(path) {
          _this.path = path;
        },
        style: pathStyle
      }));
    }
  }]);
  return Line;
}(_react.Component);

(0, _defineProperty2["default"])(Line, "propTypes", _types.propTypes);
(0, _defineProperty2["default"])(Line, "defaultProps", _types.defaultProps);

var _default = (0, _enhancer["default"])(Line);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpbmUuanN4Il0sIm5hbWVzIjpbIkxpbmUiLCJwcm9wcyIsImNsYXNzTmFtZSIsInBlcmNlbnQiLCJwcmVmaXhDbHMiLCJzdHJva2VDb2xvciIsInN0cm9rZUxpbmVjYXAiLCJzdHJva2VXaWR0aCIsInN0eWxlIiwidHJhaWxDb2xvciIsInRyYWlsV2lkdGgiLCJyZXN0UHJvcHMiLCJnYXBQb3NpdGlvbiIsInBhdGhTdHlsZSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJ0cmFuc2l0aW9uIiwiY2VudGVyIiwicmlnaHQiLCJwYXRoU3RyaW5nIiwidmlld0JveFN0cmluZyIsInBhdGgiLCJDb21wb25lbnQiLCJwcm9wVHlwZXMiLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztJQUVNQSxJOzs7Ozs7Ozs7Ozs7NkJBS0s7QUFBQTs7QUFBQSx3QkFZSCxLQUFLQyxLQVpGO0FBQUEsVUFFTEMsU0FGSyxlQUVMQSxTQUZLO0FBQUEsVUFHTEMsT0FISyxlQUdMQSxPQUhLO0FBQUEsVUFJTEMsU0FKSyxlQUlMQSxTQUpLO0FBQUEsVUFLTEMsV0FMSyxlQUtMQSxXQUxLO0FBQUEsVUFNTEMsYUFOSyxlQU1MQSxhQU5LO0FBQUEsVUFPTEMsV0FQSyxlQU9MQSxXQVBLO0FBQUEsVUFRTEMsS0FSSyxlQVFMQSxLQVJLO0FBQUEsVUFTTEMsVUFUSyxlQVNMQSxVQVRLO0FBQUEsVUFVTEMsVUFWSyxlQVVMQSxVQVZLO0FBQUEsVUFXRkMsU0FYRTtBQWNQLGFBQU9BLFNBQVMsQ0FBQ0MsV0FBakI7QUFFQSxVQUFNQyxTQUFTLEdBQUc7QUFDaEJDLFFBQUFBLGVBQWUsRUFBRSxjQUREO0FBRWhCQyxRQUFBQSxnQkFBZ0IsWUFBSyxNQUFNWixPQUFYLE9BRkE7QUFHaEJhLFFBQUFBLFVBQVUsRUFBRTtBQUhJLE9BQWxCO0FBTUEsVUFBTUMsTUFBTSxHQUFHVixXQUFXLEdBQUcsQ0FBN0I7QUFDQSxVQUFNVyxLQUFLLEdBQUcsTUFBTVgsV0FBVyxHQUFHLENBQWxDO0FBQ0EsVUFBTVksVUFBVSxlQUFRYixhQUFhLEtBQUssT0FBbEIsR0FBNEJXLE1BQTVCLEdBQXFDLENBQTdDLGNBQWtEQSxNQUFsRCw0QkFDTFgsYUFBYSxLQUFLLE9BQWxCLEdBQTRCWSxLQUE1QixHQUFvQyxHQUQvQixjQUNzQ0QsTUFEdEMsQ0FBaEI7QUFFQSxVQUFNRyxhQUFhLHFCQUFjYixXQUFkLENBQW5CO0FBRUEsYUFDRTtBQUNFLFFBQUEsU0FBUyxZQUFLSCxTQUFMLG1CQUF1QkYsU0FBdkIsQ0FEWDtBQUVFLFFBQUEsT0FBTyxFQUFFa0IsYUFGWDtBQUdFLFFBQUEsbUJBQW1CLEVBQUMsTUFIdEI7QUFJRSxRQUFBLEtBQUssRUFBRVo7QUFKVCxTQUtNRyxTQUxOLEdBT0U7QUFDRSxRQUFBLFNBQVMsWUFBS1AsU0FBTCxnQkFEWDtBQUVFLFFBQUEsQ0FBQyxFQUFFZSxVQUZMO0FBR0UsUUFBQSxhQUFhLEVBQUViLGFBSGpCO0FBSUUsUUFBQSxNQUFNLEVBQUVHLFVBSlY7QUFLRSxRQUFBLFdBQVcsRUFBRUMsVUFBVSxJQUFJSCxXQUw3QjtBQU1FLFFBQUEsV0FBVyxFQUFDO0FBTmQsUUFQRixFQWVFO0FBQ0UsUUFBQSxTQUFTLFlBQUtILFNBQUwsZUFEWDtBQUVFLFFBQUEsQ0FBQyxFQUFFZSxVQUZMO0FBR0UsUUFBQSxhQUFhLEVBQUViLGFBSGpCO0FBSUUsUUFBQSxNQUFNLEVBQUVELFdBSlY7QUFLRSxRQUFBLFdBQVcsRUFBRUUsV0FMZjtBQU1FLFFBQUEsV0FBVyxFQUFDLEdBTmQ7QUFPRSxRQUFBLEdBQUcsRUFBRSxhQUFBYyxJQUFJLEVBQUk7QUFDWCxVQUFBLEtBQUksQ0FBQ0EsSUFBTCxHQUFZQSxJQUFaO0FBQ0QsU0FUSDtBQVVFLFFBQUEsS0FBSyxFQUFFUjtBQVZULFFBZkYsQ0FERjtBQThCRDs7O0VBL0RnQlMsZ0I7O2lDQUFidEIsSSxlQUNldUIsZ0I7aUNBRGZ2QixJLGtCQUdrQndCLG1COztlQStEVCwwQkFBU3hCLElBQVQsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgZW5oYW5jZXIgZnJvbSAnLi9lbmhhbmNlcic7XG5pbXBvcnQgeyBkZWZhdWx0UHJvcHMsIHByb3BUeXBlcyB9IGZyb20gJy4vdHlwZXMnO1xuXG5jbGFzcyBMaW5lIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHByb3BUeXBlcztcblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjbGFzc05hbWUsXG4gICAgICBwZXJjZW50LFxuICAgICAgcHJlZml4Q2xzLFxuICAgICAgc3Ryb2tlQ29sb3IsXG4gICAgICBzdHJva2VMaW5lY2FwLFxuICAgICAgc3Ryb2tlV2lkdGgsXG4gICAgICBzdHlsZSxcbiAgICAgIHRyYWlsQ29sb3IsXG4gICAgICB0cmFpbFdpZHRoLFxuICAgICAgLi4ucmVzdFByb3BzXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBkZWxldGUgcmVzdFByb3BzLmdhcFBvc2l0aW9uO1xuXG4gICAgY29uc3QgcGF0aFN0eWxlID0ge1xuICAgICAgc3Ryb2tlRGFzaGFycmF5OiAnMTAwcHgsIDEwMHB4JyxcbiAgICAgIHN0cm9rZURhc2hvZmZzZXQ6IGAkezEwMCAtIHBlcmNlbnR9cHhgLFxuICAgICAgdHJhbnNpdGlvbjogJ3N0cm9rZS1kYXNob2Zmc2V0IDAuM3MgZWFzZSAwcywgc3Ryb2tlIDAuM3MgbGluZWFyJyxcbiAgICB9O1xuXG4gICAgY29uc3QgY2VudGVyID0gc3Ryb2tlV2lkdGggLyAyO1xuICAgIGNvbnN0IHJpZ2h0ID0gMTAwIC0gc3Ryb2tlV2lkdGggLyAyO1xuICAgIGNvbnN0IHBhdGhTdHJpbmcgPSBgTSAke3N0cm9rZUxpbmVjYXAgPT09ICdyb3VuZCcgPyBjZW50ZXIgOiAwfSwke2NlbnRlcn1cbiAgICAgICAgICAgTCAke3N0cm9rZUxpbmVjYXAgPT09ICdyb3VuZCcgPyByaWdodCA6IDEwMH0sJHtjZW50ZXJ9YDtcbiAgICBjb25zdCB2aWV3Qm94U3RyaW5nID0gYDAgMCAxMDAgJHtzdHJva2VXaWR0aH1gO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxzdmdcbiAgICAgICAgY2xhc3NOYW1lPXtgJHtwcmVmaXhDbHN9LWxpbmUgJHtjbGFzc05hbWV9YH1cbiAgICAgICAgdmlld0JveD17dmlld0JveFN0cmluZ31cbiAgICAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz1cIm5vbmVcIlxuICAgICAgICBzdHlsZT17c3R5bGV9XG4gICAgICAgIHsuLi5yZXN0UHJvcHN9XG4gICAgICA+XG4gICAgICAgIDxwYXRoXG4gICAgICAgICAgY2xhc3NOYW1lPXtgJHtwcmVmaXhDbHN9LWxpbmUtdHJhaWxgfVxuICAgICAgICAgIGQ9e3BhdGhTdHJpbmd9XG4gICAgICAgICAgc3Ryb2tlTGluZWNhcD17c3Ryb2tlTGluZWNhcH1cbiAgICAgICAgICBzdHJva2U9e3RyYWlsQ29sb3J9XG4gICAgICAgICAgc3Ryb2tlV2lkdGg9e3RyYWlsV2lkdGggfHwgc3Ryb2tlV2lkdGh9XG4gICAgICAgICAgZmlsbE9wYWNpdHk9XCIwXCJcbiAgICAgICAgLz5cbiAgICAgICAgPHBhdGhcbiAgICAgICAgICBjbGFzc05hbWU9e2Ake3ByZWZpeENsc30tbGluZS1wYXRoYH1cbiAgICAgICAgICBkPXtwYXRoU3RyaW5nfVxuICAgICAgICAgIHN0cm9rZUxpbmVjYXA9e3N0cm9rZUxpbmVjYXB9XG4gICAgICAgICAgc3Ryb2tlPXtzdHJva2VDb2xvcn1cbiAgICAgICAgICBzdHJva2VXaWR0aD17c3Ryb2tlV2lkdGh9XG4gICAgICAgICAgZmlsbE9wYWNpdHk9XCIwXCJcbiAgICAgICAgICByZWY9e3BhdGggPT4ge1xuICAgICAgICAgICAgdGhpcy5wYXRoID0gcGF0aDtcbiAgICAgICAgICB9fVxuICAgICAgICAgIHN0eWxlPXtwYXRoU3R5bGV9XG4gICAgICAgIC8+XG4gICAgICA8L3N2Zz5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGVuaGFuY2VyKExpbmUpO1xuIl19