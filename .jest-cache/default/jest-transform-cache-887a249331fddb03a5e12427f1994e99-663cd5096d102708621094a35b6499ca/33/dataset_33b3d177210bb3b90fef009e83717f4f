8e07b956d919e1ae99412e546556f232
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;
exports.dsTempleList = void 0;

var _mockjs = _interopRequireDefault(require("mockjs"));

var dsMutationsT = {
  rows: [],
  total: 1000,
  success: '@boolean()'
};
var dsQueriesT = {
  'rows|200': [{
    userid: '@guid()',
    'age|18-100': 34,
    name: '@cname()',
    code_description: '员工状态',
    code_code: 'HR.EMPLOYEE_STATUS',
    code_select: 'HR.EMPLOYEE_GENDER',
    codeMultiple_description: '@last(),@last()',
    codeMultiple_code: [/1[0-9]{10}/, /1[0-9]{10}/],
    sex: /[MF]/,
    'sexMultiple|1-2': [/[MF]/],
    account: {
      multiple: /M|F|M,F|F,M/
    },
    enable: '@boolean()',
    frozen: /[NY]/,
    date: {
      startDate: null,
      endDate: null
    },
    other: {
      'enemy|3': [{
        userid: '@guid()',
        'age|18-100': 34,
        name: '@cname()',
        sex: /[MF]/,
        'friends|3': [{
          userid: '@guid()',
          'age|18-100': 34,
          name: '@cname()',
          sex: /[MF]/
        }]
      }]
    }
  }],
  total: 1000,
  success: true
};
var dsLanguagesT = {
  rows: [{
    name: {
      zh_CN: '@cname()',
      en_GB: '@name()',
      en_US: '@name()',
      ja_JP: '桥本@clast()'
    },
    'first-name': {
      zh_CN: '@cname()',
      en_GB: '@name()',
      en_US: '@name()',
      ja_JP: '本田@clast()'
    }
  }],
  total: 1,
  success: true
};
var dsValidateT = [true];
var dsMutationsR = /\/dataset\/user\/mutations/;
var dsQueriesR = /\/dataset\/user\/queries/;
var dsLanguagesR = /\/dataset\/user\/languages/;
var dsValidateR = /\/dataset\/user\/validate/;

var dsMutationsD = _mockjs["default"].mock(dsMutationsT);

var dsQueriesD = _mockjs["default"].mock(dsQueriesT);

var dsLanguagesD = _mockjs["default"].mock(dsLanguagesT);

var dsValidateD = _mockjs["default"].mock(dsValidateT);

function _default() {
  if (typeof window !== 'undefined') {
    _mockjs["default"].mock(dsMutationsR, dsMutationsT);

    _mockjs["default"].mock(dsQueriesR, dsQueriesT);

    _mockjs["default"].mock(dsLanguagesR, dsLanguagesT);

    _mockjs["default"].mock(dsValidateR, dsValidateT);
  }
}

var dsTempleList = [{
  rule: dsMutationsR,
  data: dsMutationsD
}, {
  rule: dsQueriesR,
  data: dsQueriesD
}, {
  rule: dsLanguagesR,
  data: dsLanguagesD
}, {
  rule: dsValidateR,
  data: dsValidateD
}];
exports.dsTempleList = dsTempleList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFzZXQuanMiXSwibmFtZXMiOlsiZHNNdXRhdGlvbnNUIiwicm93cyIsInRvdGFsIiwic3VjY2VzcyIsImRzUXVlcmllc1QiLCJ1c2VyaWQiLCJuYW1lIiwiY29kZV9kZXNjcmlwdGlvbiIsImNvZGVfY29kZSIsImNvZGVfc2VsZWN0IiwiY29kZU11bHRpcGxlX2Rlc2NyaXB0aW9uIiwiY29kZU11bHRpcGxlX2NvZGUiLCJzZXgiLCJhY2NvdW50IiwibXVsdGlwbGUiLCJlbmFibGUiLCJmcm96ZW4iLCJkYXRlIiwic3RhcnREYXRlIiwiZW5kRGF0ZSIsIm90aGVyIiwiZHNMYW5ndWFnZXNUIiwiemhfQ04iLCJlbl9HQiIsImVuX1VTIiwiamFfSlAiLCJkc1ZhbGlkYXRlVCIsImRzTXV0YXRpb25zUiIsImRzUXVlcmllc1IiLCJkc0xhbmd1YWdlc1IiLCJkc1ZhbGlkYXRlUiIsImRzTXV0YXRpb25zRCIsIk1vY2siLCJtb2NrIiwiZHNRdWVyaWVzRCIsImRzTGFuZ3VhZ2VzRCIsImRzVmFsaWRhdGVEIiwid2luZG93IiwiZHNUZW1wbGVMaXN0IiwicnVsZSIsImRhdGEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxZQUFZLEdBQUc7QUFDbkJDLEVBQUFBLElBQUksRUFBRSxFQURhO0FBRW5CQyxFQUFBQSxLQUFLLEVBQUUsSUFGWTtBQUduQkMsRUFBQUEsT0FBTyxFQUFFO0FBSFUsQ0FBckI7QUFLQSxJQUFNQyxVQUFVLEdBQUc7QUFDakIsY0FBWSxDQUNWO0FBQ0VDLElBQUFBLE1BQU0sRUFBRSxTQURWO0FBRUUsa0JBQWMsRUFGaEI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFLFVBSFI7QUFJRUMsSUFBQUEsZ0JBQWdCLEVBQUUsTUFKcEI7QUFLRUMsSUFBQUEsU0FBUyxFQUFFLG9CQUxiO0FBTUVDLElBQUFBLFdBQVcsRUFBRSxvQkFOZjtBQU9FQyxJQUFBQSx3QkFBd0IsRUFBRSxpQkFQNUI7QUFRRUMsSUFBQUEsaUJBQWlC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QSxJQUFJLEVBQUVWLFlBQVI7QUFBc0JXLEVBQUFBLElBQUksRUFBRUw7QUFBNUIsQ0FIMEIsRUFJMUI7QUFBRUksRUFBQUEsSUFBSSxFQUFFVCxXQUFSO0FBQXFCVSxFQUFBQSxJQUFJLEVBQUVKO0FBQTNCLENBSjBCLENBQXJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1vY2sgZnJvbSAnbW9ja2pzJztcblxuY29uc3QgZHNNdXRhdGlvbnNUID0ge1xuICByb3dzOiBbXSxcbiAgdG90YWw6IDEwMDAsXG4gIHN1Y2Nlc3M6ICdAYm9vbGVhbigpJyxcbn07XG5jb25zdCBkc1F1ZXJpZXNUID0ge1xuICAncm93c3wyMDAnOiBbXG4gICAge1xuICAgICAgdXNlcmlkOiAnQGd1aWQoKScsXG4gICAgICAnYWdlfDE4LTEwMCc6IDM0LFxuICAgICAgbmFtZTogJ0BjbmFtZSgpJyxcbiAgICAgIGNvZGVfZGVzY3JpcHRpb246ICflkZjlt6XnirbmgIEnLFxuICAgICAgY29kZV9jb2RlOiAnSFIuRU1QTE9ZRUVfU1RBVFVTJyxcbiAgICAgIGNvZGVfc2VsZWN0OiAnSFIuRU1QTE9ZRUVfR0VOREVSJyxcbiAgICAgIGNvZGVNdWx0aXBsZV9kZXNjcmlwdGlvbjogJ0BsYXN0KCksQGxhc3QoKScsXG4gICAgICBjb2RlTXVsdGlwbGVfY29kZTogWy8xWzAtOV17MTB9LywgLzFbMC05XXsxMH0vXSxcbiAgICAgIHNleDogL1tNRl0vLFxuICAgICAgJ3NleE11bHRpcGxlfDEtMic6IFsvW01GXS9dLFxuICAgICAgYWNjb3VudDoge1xuICAgICAgICBtdWx0aXBsZTogL018RnxNLEZ8RixNLyxcbiAgICAgIH0sXG4gICAgICBlbmFibGU6ICdAYm9vbGVhbigpJyxcbiAgICAgIGZyb3plbjogL1tOWV0vLFxuICAgICAgZGF0ZToge1xuICAgICAgICBzdGFydERhdGU6IG51bGwsXG4gICAgICAgIGVuZERhdGU6IG51bGwsXG4gICAgICB9LFxuICAgICAgb3RoZXI6IHtcbiAgICAgICAgJ2VuZW15fDMnOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgdXNlcmlkOiAnQGd1aWQoKScsXG4gICAgICAgICAgICAnYWdlfDE4LTEwMCc6IDM0LFxuICAgICAgICAgICAgbmFtZTogJ0BjbmFtZSgpJyxcbiAgICAgICAgICAgIHNleDogL1tNRl0vLFxuICAgICAgICAgICAgJ2ZyaWVuZHN8Myc6IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHVzZXJpZDogJ0BndWlkKCknLFxuICAgICAgICAgICAgICAgICdhZ2V8MTgtMTAwJzogMzQsXG4gICAgICAgICAgICAgICAgbmFtZTogJ0BjbmFtZSgpJyxcbiAgICAgICAgICAgICAgICBzZXg6IC9bTUZdLyxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgIH0sXG4gICAgfSxcbiAgXSxcbiAgdG90YWw6IDEwMDAsXG4gIHN1Y2Nlc3M6IHRydWUsXG59O1xuXG5jb25zdCBkc0xhbmd1YWdlc1QgPSB7XG4gIHJvd3M6IFtcbiAgICB7XG4gICAgICBuYW1lOiB7XG4gICAgICAgIHpoX0NOOiAnQGNuYW1lKCknLFxuICAgICAgICBlbl9HQjogJ0BuYW1lKCknLFxuICAgICAgICBlbl9VUzogJ0BuYW1lKCknLFxuICAgICAgICBqYV9KUDogJ+ahpeacrEBjbGFzdCgpJyxcbiAgICAgIH0sXG4gICAgICAnZmlyc3QtbmFtZSc6IHtcbiAgICAgICAgemhfQ046ICdAY25hbWUoKScsXG4gICAgICAgIGVuX0dCOiAnQG5hbWUoKScsXG4gICAgICAgIGVuX1VTOiAnQG5hbWUoKScsXG4gICAgICAgIGphX0pQOiAn5pys55SwQGNsYXN0KCknLFxuICAgICAgfSxcbiAgICB9LFxuICBdLFxuICB0b3RhbDogMSxcbiAgc3VjY2VzczogdHJ1ZSxcbn07XG5jb25zdCBkc1ZhbGlkYXRlVCA9IFt0cnVlXTtcblxuY29uc3QgZHNNdXRhdGlvbnNSID0gL1xcL2RhdGFzZXRcXC91c2VyXFwvbXV0YXRpb25zLztcbmNvbnN0IGRzUXVlcmllc1IgPSAvXFwvZGF0YXNldFxcL3VzZXJcXC9xdWVyaWVzLztcbmNvbnN0IGRzTGFuZ3VhZ2VzUiA9IC9cXC9kYXRhc2V0XFwvdXNlclxcL2xhbmd1YWdlcy87XG5jb25zdCBkc1ZhbGlkYXRlUiA9IC9cXC9kYXRhc2V0XFwvdXNlclxcL3ZhbGlkYXRlLztcbmNvbnN0IGRzTXV0YXRpb25zRCA9IE1vY2subW9jayhkc011dGF0aW9uc1QpO1xuY29uc3QgZHNRdWVyaWVzRCA9IE1vY2subW9jayhkc1F1ZXJpZXNUKTtcbmNvbnN0IGRzTGFuZ3VhZ2VzRCA9IE1vY2subW9jayhkc0xhbmd1YWdlc1QpO1xuY29uc3QgZHNWYWxpZGF0ZUQgPSBNb2NrLm1vY2soZHNWYWxpZGF0ZVQpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgTW9jay5tb2NrKGRzTXV0YXRpb25zUiwgZHNNdXRhdGlvbnNUKTtcblxuICAgIE1vY2subW9jayhkc1F1ZXJpZXNSLCBkc1F1ZXJpZXNUKTtcblxuICAgIE1vY2subW9jayhkc0xhbmd1YWdlc1IsIGRzTGFuZ3VhZ2VzVCk7XG5cbiAgICBNb2NrLm1vY2soZHNWYWxpZGF0ZVIsIGRzVmFsaWRhdGVUKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZHNUZW1wbGVMaXN0ID0gW1xuICB7IHJ1bGU6IGRzTXV0YXRpb25zUiwgZGF0YTogZHNNdXRhdGlvbnNEIH0sXG4gIHsgcnVsZTogZHNRdWVyaWVzUiwgZGF0YTogZHNRdWVyaWVzRCB9LFxuICB7IHJ1bGU6IGRzTGFuZ3VhZ2VzUiwgZGF0YTogZHNMYW5ndWFnZXNEIH0sXG4gIHsgcnVsZTogZHNWYWxpZGF0ZVIsIGRhdGE6IGRzVmFsaWRhdGVEIH0sXG5dO1xuIl19