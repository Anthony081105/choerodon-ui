{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/table/ColumnFilter.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '../button/Button';\nimport { ColumnProps } from './interface';\nimport SelectTrigger from '../rc-components/select/SelectTrigger';\nimport { Item as MenuItem } from '../rc-components/menu';\nimport { UNSELECTABLE_ATTRIBUTE, UNSELECTABLE_STYLE } from '../rc-components/select/util';\nimport { getColumnKey } from './util';\nimport { Size } from '../_util/enum';\nimport { getPrefixCls } from '../configure';\n\nexport interface ColumnFilterProps<T> {\n  prefixCls?: string;\n  columns?: ColumnProps<T>[];\n  onColumnFilterChange?: (item?: any) => void;\n  getPopupContainer?: (triggerNode?: Element) => HTMLElement;\n}\n\nexport interface ColumnFilterState {\n  open: boolean;\n}\n\nexport default class ColumnFilter<T> extends Component<ColumnFilterProps<T>, ColumnFilterState> {\n  static displayName = 'ColumnFilter';\n\n  state = {\n    open: false,\n  };\n\n  render() {\n    const { prefixCls, getPopupContainer } = this.props;\n    const { open } = this.state;\n    return (\n      <div className={`${prefixCls}-columns-chooser`}>\n        <SelectTrigger\n          prefixCls={getPrefixCls('select')}\n          showAction={['click']}\n          options={this.getOptions()}\n          value={this.getVisibleColumns()}\n          getPopupContainer={getPopupContainer}\n          multiple\n          onDropdownVisibleChange={this.onDropdownVisibleChange}\n          onMenuSelect={this.onMenuSelect}\n          onMenuDeselect={this.onMenuDeselect}\n          visible={open}\n          popupPlacement=\"bottomRight\"\n          dropdownMatchSelectWidth={false}\n          dropdownStyle={{ minWidth: 187 }}\n        >\n          <Button shape=\"circle\" icon=\"view_column\" size={Size.small} />\n        </SelectTrigger>\n      </div>\n    );\n  }\n\n  onMenuSelect = (item: any) => {\n    item.item.props.value.hidden = false;\n    this.fireChange(item);\n  };\n\n  onMenuDeselect = (item: any) => {\n    item.item.props.value.hidden = true;\n    this.fireChange(item);\n  };\n\n  onDropdownVisibleChange = (open: boolean) => {\n    const { state } = this;\n    if (state.open !== open) {\n      this.setState({\n        open,\n      });\n    }\n  };\n\n  fireChange(item?: any) {\n    const { onColumnFilterChange } = this.props;\n    if (onColumnFilterChange) {\n      onColumnFilterChange(item);\n    }\n  }\n\n  getOptions() {\n    const { columns } = this.props;\n    const options: any = [];\n    (columns || []).forEach((column, i) => {\n      const { title, notDisplay, disableClick } = column;\n      if (title && !notDisplay) {\n        options.push(\n          <MenuItem\n            disabled={disableClick}\n            style={UNSELECTABLE_STYLE}\n            attribute={UNSELECTABLE_ATTRIBUTE}\n            value={column}\n            key={getColumnKey(column, i)}\n          >\n            {title}\n          </MenuItem>,\n        );\n      }\n    });\n    return options;\n  }\n\n  getVisibleColumns() {\n    const { columns } = this.props;\n    return (columns || []).filter(column => !column.hidden);\n  }\n}\n"]}