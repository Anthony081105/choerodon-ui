0af4b3c7e4b871a7ccc3cf84e2c93324
"use strict";

/* istanbul ignore next */
function cov_1wk7okdx6m() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/createContext.ts";
  var hash = "4e37d8db957389da98f700b7cb3b2b614e9891c9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/utils/createContext.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 86
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 35
        }
      },
      "3": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 53
        }
      },
      "4": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "5": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 86
        }
      },
      "6": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 18,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "createContext",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 22
          }
        },
        loc: {
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 43
          },
          end: {
            line: 17,
            column: 76
          }
        }, {
          start: {
            line: 17,
            column: 79
          },
          end: {
            line: 17,
            column: 86
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4e37d8db957389da98f700b7cb3b2b614e9891c9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1wk7okdx6m = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1wk7okdx6m();

var _interopRequireWildcard =
/* istanbul ignore next */
(cov_1wk7okdx6m().s[0]++, require("@babel/runtime/helpers/interopRequireWildcard"));

/* istanbul ignore next */
cov_1wk7okdx6m().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1wk7okdx6m().s[2]++;
exports["default"] = createContext;
var React =
/* istanbul ignore next */
(cov_1wk7okdx6m().s[3]++, _interopRequireWildcard(require("react")));

function createContext(defaultValue) {
  /* istanbul ignore next */
  cov_1wk7okdx6m().f[0]++;
  var context =
  /* istanbul ignore next */
  (cov_1wk7okdx6m().s[4]++, {
    Provider: React.Fragment,
    Consumer: React.Fragment
  });
  var ReactContext =
  /* istanbul ignore next */
  (cov_1wk7okdx6m().s[5]++, React.createContext ?
  /* istanbul ignore next */
  (cov_1wk7okdx6m().b[0][0]++, React.createContext(defaultValue)) :
  /* istanbul ignore next */
  (cov_1wk7okdx6m().b[0][1]++, context));

  /* istanbul ignore next */
  cov_1wk7okdx6m().s[6]++;
  return ReactContext;
}