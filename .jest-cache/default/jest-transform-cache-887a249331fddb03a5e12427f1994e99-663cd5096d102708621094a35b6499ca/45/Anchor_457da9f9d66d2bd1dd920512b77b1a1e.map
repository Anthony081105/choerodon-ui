{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/anchor/Anchor.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, CSSProperties, MouseEvent, ReactNode } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport addEventListener from '../_util/addEventListener';\nimport Affix from '../affix';\nimport AnchorLink from './AnchorLink';\nimport { getPrefixCls } from '../configure';\nimport scrollTo from '../_util/scrollTo';\nimport getScroll from '../_util/getScroll';\n\nfunction getDefaultContainer() {\n  return window;\n}\n\nfunction getOffsetTop(element: HTMLElement, container: AnchorContainer): number {\n  if (!element) {\n    return 0;\n  }\n\n  if (!element.getClientRects().length) {\n    return 0;\n  }\n\n  const rect = element.getBoundingClientRect();\n\n  if (rect.width || rect.height) {\n    if (container === window && element.ownerDocument) {\n      container = element.ownerDocument.documentElement;\n      return rect.top - container.clientTop;\n    }\n    return rect.top - (container as HTMLElement).getBoundingClientRect().top;\n  }\n\n  return rect.top;\n}\n\nconst sharpMatcherRegx = /#([^#]+)$/;\n\ntype Section = {\n  link: string;\n  top: number;\n};\n\nexport type AnchorContainer = HTMLElement | Window;\n\nexport interface AnchorProps {\n  prefixCls?: string;\n  className?: string;\n  style?: CSSProperties;\n  children?: ReactNode;\n  offsetTop?: number;\n  bounds?: number;\n  affix?: boolean;\n  showInkInFixed?: boolean;\n  getContainer?: () => AnchorContainer;\n  /** Return customize highlight anchor */\n  getCurrentAnchor?: () => string;\n  onClick?: (e: MouseEvent<HTMLElement>, link: { title: ReactNode; href: string }) => void;\n  targetOffset?: number;\n}\n\nexport interface AnchorState {\n  activeLink: null | string;\n}\n\nexport interface AnchorDefaultProps extends AnchorProps {\n  prefixCls: string;\n  affix: boolean;\n  showInkInFixed: boolean;\n  getContainer: () => AnchorContainer;\n}\n\nexport interface C7NAnchor {\n  registerLink: (link: string) => void;\n  unregisterLink: (link: string) => void;\n  activeLink: string | null;\n  scrollTo: (link: string) => void;\n  onClick?: (\n    e: React.MouseEvent<HTMLElement>,\n    link: { title: React.ReactNode; href: string },\n  ) => void;\n}\n\nexport default class Anchor extends Component<AnchorProps, AnchorState> {\n  static displayName = 'Anchor';\n\n  static Link: typeof AnchorLink;\n\n  static defaultProps = {\n    affix: true,\n    showInkInFixed: false,\n    getContainer: getDefaultContainer,\n  };\n\n  static childContextTypes = {\n    c7nAnchor: PropTypes.object,\n  };\n\n  state = {\n    activeLink: null,\n  };\n\n  private inkNode: HTMLSpanElement;\n\n  // scroll scope's container\n  private scrollContainer: HTMLElement | Window;\n\n  private links: string[] = [];\n\n  private scrollEvent: any;\n\n  private animating: boolean;\n\n  getChildContext() {\n    const { onClick } = this.props;\n    const { activeLink } = this.state;\n    const c7nAnchor: C7NAnchor = {\n      registerLink: (link: string) => {\n        if (!this.links.includes(link)) {\n          this.links.push(link);\n        }\n      },\n      unregisterLink: (link: string) => {\n        const index = this.links.indexOf(link);\n        if (index !== -1) {\n          this.links.splice(index, 1);\n        }\n      },\n      activeLink,\n      scrollTo: this.handleScrollTo,\n      onClick,\n    };\n    return { c7nAnchor };\n  }\n\n  componentDidMount() {\n    const { getContainer } = this.props as AnchorDefaultProps;\n    this.scrollContainer = getContainer();\n    this.scrollEvent = addEventListener(this.scrollContainer, 'scroll', this.handleScroll);\n    this.handleScroll();\n  }\n\n  componentDidUpdate() {\n    if (this.scrollEvent) {\n      const { getContainer } = this.props as AnchorDefaultProps;\n      const currentContainer = getContainer();\n      if (this.scrollContainer !== currentContainer) {\n        this.scrollContainer = currentContainer;\n        this.scrollEvent.remove();\n        this.scrollEvent = addEventListener(this.scrollContainer, 'scroll', this.handleScroll);\n        this.handleScroll();\n      }\n    }\n    this.updateInk();\n  }\n\n  componentWillUnmount() {\n    if (this.scrollEvent) {\n      this.scrollEvent.remove();\n    }\n  }\n\n  getCurrentAnchor(offsetTop = 0, bounds = 5): string {\n    const { getCurrentAnchor } = this.props;\n\n    if (typeof getCurrentAnchor === 'function') {\n      return getCurrentAnchor();\n    }\n\n    const activeLink = '';\n    if (typeof document === 'undefined') {\n      return activeLink;\n    }\n\n    const linkSections: Array<Section> = [];\n    const { getContainer } = this.props as AnchorDefaultProps;\n    const container = getContainer();\n    this.links.forEach(link => {\n      const sharpLinkMatch = sharpMatcherRegx.exec(link.toString());\n      if (!sharpLinkMatch) {\n        return;\n      }\n      const target = document.getElementById(sharpLinkMatch[1]);\n      if (target) {\n        const top = getOffsetTop(target, container);\n        if (top < offsetTop + bounds) {\n          linkSections.push({\n            link,\n            top,\n          });\n        }\n      }\n    });\n\n    if (linkSections.length) {\n      const maxSection = linkSections.reduce((prev, curr) => (curr.top > prev.top ? curr : prev));\n      return maxSection.link;\n    }\n    return '';\n  }\n\n  handleScrollTo = (link: string) => {\n    const { offsetTop, getContainer, targetOffset } = this.props as AnchorDefaultProps;\n\n    this.setState({ activeLink: link });\n    const container = getContainer();\n    const scrollTop = getScroll(container, true);\n    const sharpLinkMatch = sharpMatcherRegx.exec(link);\n    if (!sharpLinkMatch) {\n      return;\n    }\n    const targetElement = document.getElementById(sharpLinkMatch[1]);\n    if (!targetElement) {\n      return;\n    }\n\n    const eleOffsetTop = getOffsetTop(targetElement, container);\n    let y = scrollTop + eleOffsetTop;\n    y -= targetOffset !== undefined ? targetOffset : offsetTop || 0;\n    this.animating = true;\n\n    scrollTo(y, {\n      callback: () => {\n        this.animating = false;\n      },\n      getContainer,\n    });\n  };\n\n  saveInkNode = (node: HTMLSpanElement) => {\n    this.inkNode = node;\n  };\n\n  handleScroll = () => {\n    if (this.animating) {\n      return;\n    }\n    const { activeLink } = this.state;\n    const { offsetTop, bounds, targetOffset } = this.props;\n    const currentActiveLink = this.getCurrentAnchor(\n      targetOffset !== undefined ? targetOffset : offsetTop || 0,\n      bounds,\n    );\n    if (activeLink !== currentActiveLink) {\n      this.setState({\n        activeLink: currentActiveLink,\n      });\n    }\n  };\n\n  updateInk = () => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const prefixCls = this.getPrefixCls();\n    const linkNode = (findDOMNode(this as any) as HTMLElement).getElementsByClassName(\n      `${prefixCls}-link-title-active`,\n    )[0];\n    if (linkNode) {\n      this.inkNode.style.top = `${(linkNode as any).offsetTop + linkNode.clientHeight / 2 - 4.5}px`;\n    }\n  };\n\n  getPrefixCls() {\n    const { prefixCls } = this.props;\n    return getPrefixCls('anchor', prefixCls);\n  }\n\n  render() {\n    const {\n      className = '',\n      style,\n      offsetTop,\n      affix,\n      showInkInFixed,\n      children,\n      getContainer,\n    } = this.props;\n    const { activeLink } = this.state;\n    const prefixCls = this.getPrefixCls();\n    const inkClass = classNames(`${prefixCls}-ink-ball`, {\n      visible: activeLink,\n    });\n\n    const wrapperClass = classNames(className, `${prefixCls}-wrapper`);\n\n    const anchorClass = classNames(prefixCls, {\n      fixed: !affix && !showInkInFixed,\n    });\n\n    const wrapperStyle = {\n      maxHeight: offsetTop ? `calc(100vh - ${offsetTop}px)` : '100vh',\n      ...style,\n    };\n\n    const anchorContent = (\n      <div className={wrapperClass} style={wrapperStyle}>\n        <div className={anchorClass}>\n          <div className={`${prefixCls}-ink`}>\n            <span className={inkClass} ref={this.saveInkNode} />\n          </div>\n          {children}\n        </div>\n      </div>\n    );\n\n    return !affix ? (\n      anchorContent\n    ) : (\n      <Affix offsetTop={offsetTop} target={getContainer}>\n        {anchorContent}\n      </Affix>\n    );\n  }\n}\n"]}