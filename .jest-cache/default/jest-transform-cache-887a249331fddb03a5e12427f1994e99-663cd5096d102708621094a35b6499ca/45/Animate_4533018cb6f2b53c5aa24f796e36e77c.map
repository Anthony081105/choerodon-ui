{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/animate/Animate.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  cloneElement,\n  Component,\n  createElement,\n  isValidElement,\n  Key,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport noop from 'lodash/noop';\nimport {\n  findChildInChildrenByKey,\n  findShownChildInChildrenByKey,\n  isSameChildren,\n  mergeChildren,\n  toArrayChildren,\n} from './ChildrenUtils';\nimport AnimateChild, { AnimateChildProps } from './AnimateChild';\nimport animUtil from './util';\n\nconst defaultKey = `animate_${Date.now()}`;\n\nfunction getChildrenFromProps(props): ReactNode {\n  const { children } = props;\n  if (isValidElement(children)) {\n    if (!children.key) {\n      return cloneElement(children, {\n        key: defaultKey,\n      } as any);\n    }\n  }\n  return children;\n}\n\nexport interface AnimateProps {\n  className?: string;\n  component?: any;\n  componentProps?: object;\n  animation?: object;\n  transitionName?: string | object;\n  transitionEnter?: boolean;\n  transitionAppear?: boolean;\n  exclusive?: boolean;\n  transitionLeave?: boolean;\n  onEnd?: (key: Key | null, flag: boolean, childRef: AnimateChild) => void;\n  onEnter?: (key: Key | null, childRef: AnimateChild) => void;\n  onLeave?: (key: Key | null, childRef: AnimateChild) => void;\n  onAppear?: (key: Key | null, childRef: AnimateChild) => void;\n  hiddenProp?: string;\n}\n\nexport interface AnimateState {\n  children: ReactElement<any>[];\n}\n\nexport default class Animate extends Component<AnimateProps> {\n  static displayName = 'Animate';\n\n  static propTypes = {\n    component: PropTypes.any,\n    componentProps: PropTypes.object,\n    animation: PropTypes.object,\n    transitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    transitionEnter: PropTypes.bool,\n    transitionAppear: PropTypes.bool,\n    exclusive: PropTypes.bool,\n    transitionLeave: PropTypes.bool,\n    onEnd: PropTypes.func,\n    onEnter: PropTypes.func,\n    onLeave: PropTypes.func,\n    onAppear: PropTypes.func,\n    hiddenProp: PropTypes.string,\n  };\n\n  static defaultProps = {\n    animation: {},\n    component: 'span',\n    componentProps: {},\n    transitionEnter: true,\n    transitionLeave: true,\n    transitionAppear: false,\n  };\n\n  currentlyAnimatingKeys = {};\n\n  keysToEnter: Key[] = [];\n\n  keysToLeave: Key[] = [];\n\n  state: AnimateState = {\n    children: toArrayChildren(getChildrenFromProps(this.props)),\n  };\n\n  childrenRefs = {};\n\n  nextProps?: object;\n\n  componentDidMount() {\n    const { hiddenProp } = this.props;\n    let { children } = this.state;\n    if (hiddenProp) {\n      children = children.filter(child => !child.props[hiddenProp]);\n    }\n    children.forEach(child => {\n      if (child && child.key) {\n        this.performAppear(child.key);\n      }\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.nextProps = nextProps;\n    const nextChildren = toArrayChildren(getChildrenFromProps(nextProps));\n    const { exclusive, hiddenProp } = this.props;\n    const { children } = this.state;\n    const currentlyAnimatingKeys = this.currentlyAnimatingKeys;\n    if (exclusive) {\n      Object.keys(currentlyAnimatingKeys).forEach(key => this.stop(key));\n    }\n    const currentChildren = exclusive\n      ? toArrayChildren(getChildrenFromProps(this.props))\n      : children;\n    let newChildren: ReactElement<any>[] = [];\n    if (hiddenProp) {\n      nextChildren.forEach(nextChild => {\n        if (nextChild) {\n          let newChild;\n          const currentChild = findChildInChildrenByKey(currentChildren, nextChild.key);\n          if (nextChild.props[hiddenProp] && currentChild && !currentChild.props[hiddenProp]) {\n            newChild = cloneElement(nextChild, { [hiddenProp]: false });\n          } else {\n            newChild = nextChild;\n          }\n          if (newChild) {\n            newChildren.push(newChild);\n          }\n        }\n      });\n      newChildren = mergeChildren(currentChildren, newChildren);\n    } else {\n      newChildren = mergeChildren(currentChildren, nextChildren);\n    }\n\n    this.setState({\n      children: newChildren,\n    });\n\n    nextChildren.forEach(child => {\n      const key = child && child.key;\n      if (key) {\n        if (child && currentlyAnimatingKeys[key]) {\n          return;\n        }\n        const hasPrev = child && findChildInChildrenByKey(currentChildren, key);\n        if (hiddenProp) {\n          const showInNext = !child.props[hiddenProp];\n          if (hasPrev) {\n            const showInNow = findShownChildInChildrenByKey(currentChildren, key, hiddenProp);\n            if (!showInNow && showInNext) {\n              this.keysToEnter.push(key);\n            }\n          } else if (showInNext) {\n            this.keysToEnter.push(key);\n          }\n        } else if (!hasPrev) {\n          this.keysToEnter.push(key);\n        }\n      }\n    });\n\n    currentChildren.forEach(child => {\n      const key = child && child.key;\n      if (key) {\n        if (child && currentlyAnimatingKeys[key]) {\n          return;\n        }\n        const hasNext = child && findChildInChildrenByKey(nextChildren, key);\n        if (hiddenProp) {\n          const showInNow = !child.props[hiddenProp];\n          if (hasNext) {\n            const showInNext = findShownChildInChildrenByKey(nextChildren, key, hiddenProp);\n            if (!showInNext && showInNow) {\n              this.keysToLeave.push(key);\n            }\n          } else if (showInNow) {\n            this.keysToLeave.push(key);\n          }\n        } else if (!hasNext) {\n          this.keysToLeave.push(key);\n        }\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    const keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(this.performEnter);\n    const keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(this.performLeave);\n  }\n\n  isValidChildByKey(currentChildren, key): boolean {\n    const { hiddenProp } = this.props;\n    if (hiddenProp) {\n      return !!findShownChildInChildrenByKey(currentChildren, key, hiddenProp);\n    }\n    return !!findChildInChildrenByKey(currentChildren, key);\n  }\n\n  stop(key) {\n    delete this.currentlyAnimatingKeys[key];\n    const component = this.childrenRefs[key];\n    if (component) {\n      component.stop();\n    }\n  }\n\n  render() {\n    const { props } = this;\n    this.nextProps = props;\n    const {\n      animation,\n      transitionName,\n      transitionEnter,\n      transitionAppear,\n      transitionLeave,\n      component: Cmp,\n      componentProps,\n      ...otherProps\n    } = props;\n    const { children: stateChildren } = this.state;\n    let children: ReactElement<any>[] = [];\n    if (stateChildren) {\n      children = stateChildren.map(child => {\n        if (child === null || child === undefined) {\n          return child;\n        }\n        if (!child.key) {\n          throw new Error('must set key for animate children');\n        }\n        return createElement(\n          AnimateChild,\n          {\n            key: child.key,\n            ref: node => {\n              if (child.key) {\n                this.childrenRefs[child.key] = node;\n              }\n            },\n            animation,\n            transitionName,\n            transitionEnter,\n            transitionAppear,\n            transitionLeave,\n          } as AnimateChildProps,\n          child,\n        );\n      });\n    }\n    if (Cmp) {\n      const passedProps = omit(otherProps, [\n        'exclusive',\n        'onEnd',\n        'onEnter',\n        'onLeave',\n        'onAppear',\n        'hiddenProp',\n      ]);\n      return createElement(\n        Cmp,\n        {\n          ...passedProps,\n          ...componentProps,\n        },\n        children,\n      );\n    }\n    return children[0] || null;\n  }\n\n  performEnter = (key: Key) => {\n    const childRef = this.childrenRefs[key];\n    if (childRef) {\n      this.currentlyAnimatingKeys[key] = true;\n      childRef.componentWillEnter(this.handleDoneAdding.bind(this, key, 'enter'));\n    }\n  };\n\n  performAppear = (key: Key) => {\n    const childRef = this.childrenRefs[key];\n    if (childRef) {\n      this.currentlyAnimatingKeys[key] = true;\n      childRef.componentWillAppear(this.handleDoneAdding.bind(this, key, 'appear'));\n    }\n  };\n\n  handleDoneAdding = (key: Key, type, childRef) => {\n    const { props } = this;\n    const { exclusive, onAppear = noop, onEnd = noop, onEnter = noop } = props;\n    delete this.currentlyAnimatingKeys[key];\n    if (exclusive && props !== this.nextProps) {\n      return;\n    }\n    if (!this.isValidChildByKey(toArrayChildren(getChildrenFromProps(props)), key)) {\n      this.performLeave(key);\n    } else if (type === 'appear') {\n      if (animUtil.allowAppearCallback(props)) {\n        onAppear(key, childRef);\n        onEnd(key, true, childRef);\n      }\n    } else if (animUtil.allowEnterCallback(props)) {\n      onEnter(key, childRef);\n      onEnd(key, true, childRef);\n    }\n  };\n\n  performLeave = (key: Key) => {\n    const childRef = this.childrenRefs[key];\n    if (childRef) {\n      this.currentlyAnimatingKeys[key] = true;\n      childRef.componentWillLeave(this.handleDoneLeaving.bind(this, key));\n    }\n  };\n\n  handleDoneLeaving = (key: Key, childRef) => {\n    const {\n      props,\n      state: { children },\n    } = this;\n    const { exclusive, onEnd = noop, onLeave = noop, hiddenProp } = props;\n    delete this.currentlyAnimatingKeys[key];\n    if (exclusive && props !== this.nextProps) {\n      return;\n    }\n    const currentChildren = toArrayChildren(getChildrenFromProps(props));\n    if (this.isValidChildByKey(currentChildren, key)) {\n      this.performEnter(key);\n    } else {\n      const end = () => {\n        if (animUtil.allowLeaveCallback(props)) {\n          onLeave(key, childRef);\n          onEnd(key, false, childRef);\n        }\n      };\n      if (!isSameChildren(children, currentChildren, hiddenProp)) {\n        this.setState(\n          {\n            children: currentChildren,\n          },\n          end,\n        );\n      } else {\n        end();\n      }\n    }\n  };\n}\n"]}