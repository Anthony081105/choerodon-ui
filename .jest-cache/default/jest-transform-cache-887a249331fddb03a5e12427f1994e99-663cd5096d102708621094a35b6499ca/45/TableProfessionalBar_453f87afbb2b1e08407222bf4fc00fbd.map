{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/query-bar/TableProfessionalBar.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, ReactElement, ReactNode } from 'react';\nimport { observer } from 'mobx-react';\nimport { action, observable } from 'mobx';\nimport { getProPrefixCls } from 'choerodon-ui/lib/configure';\nimport Icon from 'choerodon-ui/lib/icon';\nimport Field from '../../data-set/Field';\nimport DataSet from '../../data-set';\nimport Button from '../../button';\nimport TableContext from '../TableContext';\nimport { ElementProps } from '../../core/ViewComponent';\nimport { ButtonColor, FuncType } from '../../button/enum';\nimport { ButtonProps } from '../../button/Button';\nimport Form from '../../form';\nimport { FormProps } from '../../form/Form';\nimport { $l } from '../../locale-context';\nimport autobind from '../../_util/autobind';\nimport TableButtons from './TableButtons';\nimport { LabelLayout } from '../../form/enum';\n\nexport interface TableProfessionalBarProps extends ElementProps {\n  dataSet: DataSet;\n  queryDataSet?: DataSet;\n  queryFields: ReactElement<any>[];\n  queryFieldsLimit?: number;\n  buttons: ReactElement<ButtonProps>[];\n  queryBarProps?: FormProps;\n}\n\n@observer\nexport default class TableProfessionalBar extends Component<TableProfessionalBarProps> {\n  static contextType = TableContext;\n\n  static defaultProps = {\n    prefixCls: getProPrefixCls('table'),\n    queryFieldsLimit: 3,\n  };\n\n  @observable moreFields: Field[];\n\n  @autobind\n  handleFieldEnter() {\n    this.handleQuery();\n  }\n\n  @autobind\n  async handleQuery() {\n    const { dataSet, queryDataSet } = this.props;\n    if (await queryDataSet?.validate()) {\n      dataSet.query();\n    }\n  }\n\n  @action\n  openMore = (fields: Field[]) => {\n    if (this.moreFields && this.moreFields.length) {\n      this.moreFields = [];\n    } else {\n      this.moreFields = fields;\n    }\n    return this.moreFields;\n  };\n\n  getResetButton() {\n    return (\n      <Button funcType={FuncType.raised} onClick={this.handleQueryReset}>\n        {$l('Table', 'reset_button')}\n      </Button>\n    );\n  }\n\n  getMoreFieldsButton(fields) {\n    if (fields.length) {\n      return (\n        <Button\n          funcType={FuncType.raised}\n          onClick={() => this.openMore(fields)}\n        >\n          {$l('Table', 'more')}\n          {this.moreFields && this.moreFields.length ? <Icon type='expand_less' /> : <Icon type='expand_more' />}\n        </Button>\n      );\n    }\n  }\n\n  getQueryBar(): ReactNode {\n    const { prefixCls, queryFieldsLimit, queryFields, queryDataSet, queryBarProps } = this.props;\n    if (queryDataSet && queryFields.length) {\n      const currentFields = (\n        <Form\n          useColon={false}\n          dataSet={queryDataSet}\n          columns={queryFieldsLimit}\n          labelLayout={LabelLayout.horizontal}\n          {...queryBarProps}\n        >\n          {queryFields.slice(0, queryFieldsLimit)}\n          {this.moreFields}\n        </Form>\n      );\n\n      const moreFields = queryFields.slice(queryFieldsLimit);\n      const moreFieldsButton: ReactElement | undefined = this.getMoreFieldsButton(moreFields);\n\n      return (\n        <div key=\"query_bar\" className={`${prefixCls}-professional-query-bar`}>\n          {currentFields}\n          <span className={`${prefixCls}-professional-query-bar-button`}>\n            {moreFieldsButton}\n            {this.getResetButton()}\n            <Button color={ButtonColor.primary} onClick={this.handleQuery}>\n              {$l('Table', 'query_button')}\n            </Button>\n          </span>\n        </div>\n      );\n    }\n  }\n\n\n  @autobind\n  handleQueryReset() {\n    const { queryDataSet } = this.props;\n    if (queryDataSet) {\n      const { current } = queryDataSet;\n      if (current) {\n        current.reset();\n      }\n      this.handleQuery();\n    }\n  }\n\n  render() {\n    const { prefixCls, buttons } = this.props;\n    const queryBar = this.getQueryBar();\n    const tableButtons = buttons.length ? (\n      <div key=\"professional_toolbar\" className={`${prefixCls}-professional-toolbar`}>\n        <TableButtons key=\"toolbar\" prefixCls={prefixCls} buttons={buttons} />\n      </div>\n    ) : null;\n\n    return [queryBar, tableButtons];\n  }\n}\n"]}