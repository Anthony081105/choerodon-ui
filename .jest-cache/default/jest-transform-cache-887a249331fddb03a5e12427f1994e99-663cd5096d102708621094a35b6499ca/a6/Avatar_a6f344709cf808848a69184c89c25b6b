456b26f4e4522538ea4bc3e49850a1d8
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var _omit = _interopRequireDefault(require("lodash/omit"));

var _classnames = _interopRequireDefault(require("classnames"));

var _configure = require("../configure");

var _Element = _interopRequireDefault(require("./Element")); // eslint-disable-next-line react/prefer-stateless-function


var SkeletonAvatar =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(SkeletonAvatar, _React$Component);

  function SkeletonAvatar() {
    var _this;

    (0, _classCallCheck2["default"])(this, SkeletonAvatar);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(SkeletonAvatar).apply(this, arguments));

    _this.renderSkeletonAvatar = function () {
      var _this$props = _this.props,
          customizePrefixCls = _this$props.prefixCls,
          className = _this$props.className,
          active = _this$props.active;
      var prefixCls = (0, _configure.getPrefixCls)('skeleton', customizePrefixCls);
      var otherProps = (0, _omit["default"])(_this.props, ['prefixCls']);
      var cls = (0, _classnames["default"])(prefixCls, className, "".concat(prefixCls, "-element"), (0, _defineProperty2["default"])({}, "".concat(prefixCls, "-active"), active));
      return React.createElement("div", {
        className: cls
      }, React.createElement(_Element["default"], (0, _extends2["default"])({
        prefixCls: "".concat(prefixCls, "-avatar")
      }, otherProps)));
    };

    return _this;
  }

  (0, _createClass2["default"])(SkeletonAvatar, [{
    key: "render",
    value: function render() {
      return React.createElement(React.Fragment, null, this.renderSkeletonAvatar());
    }
  }]);
  return SkeletonAvatar;
}(React.Component);

SkeletonAvatar.defaultProps = {
  size: 'default',
  shape: 'circle'
};
var _default = SkeletonAvatar;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNrZWxldG9uL0F2YXRhci5qcyJdLCJuYW1lcyI6WyJTa2VsZXRvbkF2YXRhciIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY3VzdG9taXplUHJlZml4Q2xzIiwiY2xhc3NOYW1lIiwiYWN0aXZlIiwicHJlZml4Q2xzIiwib3RoZXJQcm9wcyIsImNscyIsIkVsZW1lbnQiLCJzaXplIiwic2hhcGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLEtBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLEtBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFdBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFVBQUEsR0FBQSxPQUFBLENBQUEsY0FBQSxDQUFBOztBQUNBLElBQUEsUUFBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBLEMsQ0FDQTs7O0lBQ01BLGM7Ozs7O0FBQ0YsV0FBQSxjQUFBLEdBQWM7QUFBQSxRQUFBLEtBQUE7O0FBQUEsS0FBQSxHQUFBLGdCQUFBLENBQUEsU0FBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLGNBQUE7QUFDVixJQUFBLEtBQUEsR0FBQSxDQUFBLEdBQUEsMkJBQUEsQ0FBQSxTQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxHQUFBLGdCQUFBLENBQUEsU0FBQSxDQUFBLEVBQUEsY0FBQSxFQUFBLEtBQUEsQ0FBQSxJQUFBLEVBQUEsU0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxLQUFBLENBQUEsb0JBQUEsR0FBNEIsWUFBTTtBQUFBLFVBQUEsV0FBQSxHQUMrQixLQUFBLENBRC9CLEtBQUE7QUFBQSxVQUNYRyxrQkFEVyxHQUFBLFdBQUEsQ0FBQSxTQUFBO0FBQUEsVUFDU0MsU0FEVCxHQUFBLFdBQUEsQ0FBQSxTQUFBO0FBQUEsVUFDb0JDLE1BRHBCLEdBQUEsV0FBQSxDQUFBLE1BQUE7QUFFOUIsVUFBTUMsU0FBUyxHQUFHLENBQUEsR0FBQSxVQUFBLENBQUEsWUFBQSxFQUFBLFVBQUEsRUFBbEIsa0JBQWtCLENBQWxCO0FBQ0EsVUFBTUMsVUFBVSxHQUFHLENBQUEsR0FBQSxLQUFBLENBQUEsU0FBQSxDQUFBLEVBQUssS0FBQSxDQUFMLEtBQUEsRUFBaUIsQ0FBcEMsV0FBb0MsQ0FBakIsQ0FBbkI7QUFDQSxVQUFNQyxHQUFHLEdBQUcsQ0FBQSxHQUFBLFdBQUEsQ0FBQSxTQUFBLENBQUEsRUFBQSxTQUFBLEVBQUEsU0FBQSxFQUFBLEdBQUEsTUFBQSxDQUFBLFNBQUEsRUFBQSxVQUFBLENBQUEsRUFBQSxDQUFBLEdBQUEsZ0JBQUEsQ0FBQSxTQUFBLENBQUEsRUFBQSxFQUFBLEVBQUEsR0FBQSxNQUFBLENBQUEsU0FBQSxFQUFBLFNBQUEsQ0FBQSxFQUFaLE1BQVksQ0FBQSxDQUFaO0FBR0EsYUFBUSxLQUFLLENBQUwsYUFBQSxDQUFBLEtBQUEsRUFBMkI7QUFBRUosUUFBQUEsU0FBUyxFQUFFSTtBQUFiLE9BQTNCLEVBQ0pQLEtBQUssQ0FBTEEsYUFBQUEsQ0FBb0JRLFFBQUFBLENBQXBCUixTQUFvQlEsQ0FBcEJSLEVBQTZCLENBQUEsR0FBQSxTQUFBLENBQUEsU0FBQSxDQUFBLEVBQWM7QUFBRUssUUFBQUEsU0FBUyxFQUFBLEdBQUEsTUFBQSxDQUFBLFNBQUEsRUFBQSxTQUFBO0FBQVgsT0FBZCxFQURqQyxVQUNpQyxDQUE3QkwsQ0FESSxDQUFSO0FBUEosS0FBQTs7QUFGVSxXQUFBLEtBQUE7QUFZYjs7Ozs2QkFDUTtBQUNMLGFBQU9BLEtBQUssQ0FBTEEsYUFBQUEsQ0FBb0JBLEtBQUssQ0FBekJBLFFBQUFBLEVBQUFBLElBQUFBLEVBQTBDLEtBQWpELG9CQUFpRCxFQUExQ0EsQ0FBUDtBQUNIOzs7RUFoQndCQSxLQUFLLENBQUNDLFM7O0FBa0JuQ0YsY0FBYyxDQUFkQSxZQUFBQSxHQUE4QjtBQUMxQlUsRUFBQUEsSUFBSSxFQURzQixTQUFBO0FBRTFCQyxFQUFBQSxLQUFLLEVBQUU7QUFGbUIsQ0FBOUJYO2VBSWVBLGMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgb21pdCBmcm9tICdsb2Rhc2gvb21pdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IGdldFByZWZpeENscyB9IGZyb20gJy4uL2NvbmZpZ3VyZSc7XG5pbXBvcnQgRWxlbWVudCBmcm9tICcuL0VsZW1lbnQnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3ByZWZlci1zdGF0ZWxlc3MtZnVuY3Rpb25cbmNsYXNzIFNrZWxldG9uQXZhdGFyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5yZW5kZXJTa2VsZXRvbkF2YXRhciA9ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgcHJlZml4Q2xzOiBjdXN0b21pemVQcmVmaXhDbHMsIGNsYXNzTmFtZSwgYWN0aXZlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICAgICAgY29uc3QgcHJlZml4Q2xzID0gZ2V0UHJlZml4Q2xzKCdza2VsZXRvbicsIGN1c3RvbWl6ZVByZWZpeENscyk7XG4gICAgICAgICAgICBjb25zdCBvdGhlclByb3BzID0gb21pdCh0aGlzLnByb3BzLCBbJ3ByZWZpeENscyddKTtcbiAgICAgICAgICAgIGNvbnN0IGNscyA9IGNsYXNzTmFtZXMocHJlZml4Q2xzLCBjbGFzc05hbWUsIGAke3ByZWZpeENsc30tZWxlbWVudGAsIHtcbiAgICAgICAgICAgICAgICBbYCR7cHJlZml4Q2xzfS1hY3RpdmVgXTogYWN0aXZlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IGNscyB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRWxlbWVudCwgT2JqZWN0LmFzc2lnbih7IHByZWZpeENsczogYCR7cHJlZml4Q2xzfS1hdmF0YXJgIH0sIG90aGVyUHJvcHMpKSkpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCB0aGlzLnJlbmRlclNrZWxldG9uQXZhdGFyKCkpO1xuICAgIH1cbn1cblNrZWxldG9uQXZhdGFyLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBzaXplOiAnZGVmYXVsdCcsXG4gICAgc2hhcGU6ICdjaXJjbGUnLFxufTtcbmV4cG9ydCBkZWZhdWx0IFNrZWxldG9uQXZhdGFyO1xuIl19