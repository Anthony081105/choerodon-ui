4f86590615dd38cce2044271819d2777
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = (0, _getPrototypeOf2["default"])(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0, _possibleConstructorReturn2["default"])(this, result);
  };
}

var Notice =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(Notice, _Component);

  var _super = _createSuper(Notice);

  function Notice() {
    var _this;

    (0, _classCallCheck2["default"])(this, Notice);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "close", function () {
      _this.clearCloseTimer();

      _this.props.onClose();
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "startCloseTimer", function () {
      if (_this.props.duration) {
        _this.closeTimer = setTimeout(function () {
          _this.close();
        }, _this.props.duration * 1000);
      }
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "clearCloseTimer", function () {
      if (_this.closeTimer) {
        clearTimeout(_this.closeTimer);
        _this.closeTimer = null;
      }
    });
    return _this;
  }

  (0, _createClass2["default"])(Notice, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.startCloseTimer();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.clearCloseTimer();
    }
  }, {
    key: "render",
    value: function render() {
      var _className;

      var props = this.props;
      var componentClass = "".concat(props.prefixCls, "-notice");
      var className = (_className = {}, (0, _defineProperty2["default"])(_className, "".concat(componentClass), 1), (0, _defineProperty2["default"])(_className, "".concat(componentClass, "-closable"), props.closable), (0, _defineProperty2["default"])(_className, props.className, !!props.className), _className);
      return _react["default"].createElement("div", {
        className: (0, _classnames["default"])(className),
        style: props.style,
        onMouseEnter: this.clearCloseTimer,
        onMouseLeave: this.startCloseTimer
      }, _react["default"].createElement("div", {
        className: "".concat(componentClass, "-content")
      }, props.children), props.closable ? _react["default"].createElement("a", {
        tabIndex: "0",
        onClick: this.close,
        className: "".concat(componentClass, "-close")
      }, props.closeIcon || _react["default"].createElement("span", {
        className: "".concat(componentClass, "-close-x")
      })) : null);
    }
  }]);
  return Notice;
}(_react.Component);

exports["default"] = Notice;
(0, _defineProperty2["default"])(Notice, "propTypes", {
  duration: _propTypes["default"].number,
  onClose: _propTypes["default"].func,
  children: _propTypes["default"].any,
  closeIcon: _propTypes["default"].node
});
(0, _defineProperty2["default"])(Notice, "defaultProps", {
  onEnd: function onEnd() {},
  onClose: function onClose() {},
  duration: 1.5,
  style: {
    right: '50%'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi9Ob3RpY2UuanN4Il0sIm5hbWVzIjpbIk5vdGljZSIsIkNvbXBvbmVudCIsImR1cmF0aW9uIiwiUHJvcFR5cGVzIiwib25DbG9zZSIsImNoaWxkcmVuIiwiY2xvc2VJY29uIiwibm9kZSIsIm9uRW5kIiwic3R5bGUiLCJyaWdodCIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJwcm9wcyIsImNvbXBvbmVudENsYXNzIiwiY2xhc3NOYW1lIiwic3RhcnRDbG9zZVRpbWVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxNQUFBLEdBQUEsdUJBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxXQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsWUFBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxVQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsWUFBQSxDQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFcUJBLE07Ozs7Ozs7Ozs7Ozs7Ozs7OzhGQXlCWCxZQUFNO0FBQ1osTUFBQSxLQUFBLENBQUEsZUFBQTs7QUFDQSxNQUFBLEtBQUEsQ0FBQSxLQUFBLENBQUEsT0FBQTs7d0dBR2dCLFlBQU07QUFDdEIsVUFBSSxLQUFBLENBQUEsS0FBQSxDQUFKLFFBQUEsRUFBeUI7QUFDdkIsUUFBQSxLQUFBLENBQUEsVUFBQSxHQUFrQlcsVUFBVSxDQUFDLFlBQU07QUFDakMsVUFBQSxLQUFBLENBQUEsS0FBQTtBQUQwQixTQUFBLEVBRXpCLEtBQUEsQ0FBQSxLQUFBLENBQUEsUUFBQSxHQUZILElBQTRCLENBQTVCO0FBR0Q7O3dHQUdlLFlBQU07QUFDdEIsVUFBSSxLQUFBLENBQUosVUFBQSxFQUFxQjtBQUNuQkMsUUFBQUEsWUFBWSxDQUFDLEtBQUEsQ0FBYkEsVUFBWSxDQUFaQTtBQUNBLFFBQUEsS0FBQSxDQUFBLFVBQUEsR0FBQSxJ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ICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5vdGljZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgZHVyYXRpb246IFByb3BUeXBlcy5udW1iZXIsXG4gICAgb25DbG9zZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5hbnksXG4gICAgY2xvc2VJY29uOiBQcm9wVHlwZXMubm9kZSxcbiAgfTtcblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIG9uRW5kKCkge30sXG4gICAgb25DbG9zZSgpIHt9LFxuICAgIGR1cmF0aW9uOiAxLjUsXG4gICAgc3R5bGU6IHtcbiAgICAgIHJpZ2h0OiAnNTAlJyxcbiAgICB9LFxuICB9O1xuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuc3RhcnRDbG9zZVRpbWVyKCk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLmNsZWFyQ2xvc2VUaW1lcigpO1xuICB9XG5cbiAgY2xvc2UgPSAoKSA9PiB7XG4gICAgdGhpcy5jbGVhckNsb3NlVGltZXIoKTtcbiAgICB0aGlzLnByb3BzLm9uQ2xvc2UoKTtcbiAgfTtcblxuICBzdGFydENsb3NlVGltZXIgPSAoKSA9PiB7XG4gICAgaWYgKHRoaXMucHJvcHMuZHVyYXRpb24pIHtcbiAgICAgIHRoaXMuY2xvc2VUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9LCB0aGlzLnByb3BzLmR1cmF0aW9uICogMTAwMCk7XG4gICAgfVxuICB9O1xuXG4gIGNsZWFyQ2xvc2VUaW1lciA9ICgpID0+IHtcbiAgICBpZiAodGhpcy5jbG9zZVRpbWVyKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5jbG9zZVRpbWVyKTtcbiAgICAgIHRoaXMuY2xvc2VUaW1lciA9IG51bGw7XG4gICAgfVxuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBwcm9wcyA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgY29tcG9uZW50Q2xhc3MgPSBgJHtwcm9wcy5wcmVmaXhDbHN9LW5vdGljZWA7XG4gICAgY29uc3QgY2xhc3NOYW1lID0ge1xuICAgICAgW2Ake2NvbXBvbmVudENsYXNzfWBdOiAxLFxuICAgICAgW2Ake2NvbXBvbmVudENsYXNzfS1jbG9zYWJsZWBdOiBwcm9wcy5jbG9zYWJsZSxcbiAgICAgIFtwcm9wcy5jbGFzc05hbWVdOiAhIXByb3BzLmNsYXNzTmFtZSxcbiAgICB9O1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhjbGFzc05hbWUpfVxuICAgICAgICBzdHlsZT17cHJvcHMuc3R5bGV9XG4gICAgICAgIG9uTW91c2VFbnRlcj17dGhpcy5jbGVhckNsb3NlVGltZXJ9XG4gICAgICAgIG9uTW91c2VMZWF2ZT17dGhpcy5zdGFydENsb3NlVGltZXJ9XG4gICAgICA+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgJHtjb21wb25lbnRDbGFzc30tY29udGVudGB9Pntwcm9wcy5jaGlsZHJlbn08L2Rpdj5cbiAgICAgICAge3Byb3BzLmNsb3NhYmxlID8gKFxuICAgICAgICAgIDxhIHRhYkluZGV4PVwiMFwiIG9uQ2xpY2s9e3RoaXMuY2xvc2V9IGNsYXNzTmFtZT17YCR7Y29tcG9uZW50Q2xhc3N9LWNsb3NlYH0+XG4gICAgICAgICAgICB7cHJvcHMuY2xvc2VJY29uIHx8IDxzcGFuIGNsYXNzTmFtZT17YCR7Y29tcG9uZW50Q2xhc3N9LWNsb3NlLXhgfT48L3NwYW4+fVxuICAgICAgICAgIDwvYT5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iXX0=