90400ac42665c8782ac50b786e9996ea
"use strict";

/* istanbul ignore next */
function cov_yil56290w() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/rich-text/utils.tsx";
  var hash = "982528d2c763d3e0544d261a7131ee0bfa40aa2e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/rich-text/utils.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 32
        }
      },
      "3": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 36
        }
      },
      "4": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "5": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "6": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 21
        }
      },
      "8": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "10": {
        start: {
          line: 23,
          column: 13
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "11": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "12": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 220
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 23
        }
      },
      "14": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 32,
          column: 20
        }
      },
      "15": {
        start: {
          line: 41,
          column: 14
        },
        end: {
          line: 41,
          column: 37
        }
      },
      "16": {
        start: {
          line: 42,
          column: 18
        },
        end: {
          line: 42,
          column: 58
        }
      },
      "17": {
        start: {
          line: 43,
          column: 13
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "18": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "19": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 29
        }
      },
      "20": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 49,
          column: 14
        }
      },
      "21": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 82
        }
      },
      "22": {
        start: {
          line: 60,
          column: 13
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "23": {
        start: {
          line: 61,
          column: 14
        },
        end: {
          line: 61,
          column: 78
        }
      },
      "24": {
        start: {
          line: 62,
          column: 15
        },
        end: {
          line: 62,
          column: 27
        }
      },
      "25": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 66,
          column: 3
        }
      },
      "26": {
        start: {
          line: 64,
          column: 15
        },
        end: {
          line: 64,
          column: 16
        }
      },
      "27": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 67
        }
      },
      "28": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "29": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 14
        }
      },
      "30": {
        start: {
          line: 81,
          column: 14
        },
        end: {
          line: 81,
          column: 17
        }
      },
      "31": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 272
        }
      },
      "32": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 86,
          column: 3
        }
      },
      "33": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 58
        }
      },
      "34": {
        start: {
          line: 88,
          column: 2
        },
        end: {
          line: 91,
          column: 3
        }
      },
      "35": {
        start: {
          line: 88,
          column: 15
        },
        end: {
          line: 88,
          column: 16
        }
      },
      "36": {
        start: {
          line: 89,
          column: 14
        },
        end: {
          line: 89,
          column: 58
        }
      },
      "37": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 20
        }
      },
      "38": {
        start: {
          line: 93,
          column: 2
        },
        end: {
          line: 93,
          column: 13
        }
      }
    },
    fnMap: {
      "0": {
        name: "text2Delta",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 19
          }
        },
        loc: {
          start: {
            line: 13,
            column: 33
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "delta2Html",
        decl: {
          start: {
            line: 40,
            column: 9
          },
          end: {
            line: 40,
            column: 19
          }
        },
        loc: {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 40
      },
      "2": {
        name: "randomString",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 21
          }
        },
        loc: {
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 58
      },
      "3": {
        name: "randomWord",
        decl: {
          start: {
            line: 79,
            column: 9
          },
          end: {
            line: 79,
            column: 19
          }
        },
        loc: {
          start: {
            line: 79,
            column: 42
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 79
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 16,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 16,
            column: 3
          }
        }, {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 16,
            column: 3
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        }, {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 19
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        }, {
          start: {
            line: 45,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 65
          },
          end: {
            line: 59,
            column: 77
          }
        }, {
          start: {
            line: 59,
            column: 80
          },
          end: {
            line: 59,
            column: 82
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 32
          }
        }, {
          start: {
            line: 59,
            column: 36
          },
          end: {
            line: 59,
            column: 62
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 84,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        }, {
          start: {
            line: 84,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        }],
        line: 84
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "982528d2c763d3e0544d261a7131ee0bfa40aa2e"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_yil56290w = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_yil56290w();
cov_yil56290w().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_yil56290w().s[1]++;
exports.text2Delta = text2Delta;

/* istanbul ignore next */
cov_yil56290w().s[2]++;
exports.delta2Html = delta2Html;

/* istanbul ignore next */
cov_yil56290w().s[3]++;
exports.randomString = randomString;

/* istanbul ignore next */
cov_yil56290w().s[4]++;
exports.randomWord = randomWord;
var QuillDeltaToHtmlConverter =
/* istanbul ignore next */
(cov_yil56290w().s[5]++, require('quill-delta-to-html'));

function text2Delta(description) {
  /* istanbul ignore next */
  cov_yil56290w().f[0]++;
  cov_yil56290w().s[6]++;

  if (!description) {
    /* istanbul ignore next */
    cov_yil56290w().b[0][0]++;
    cov_yil56290w().s[7]++;
    return undefined;
  } else
  /* istanbul ignore next */
  {
    cov_yil56290w().b[0][1]++;
  } // eslint-disable-next-line no-restricted-globals


  cov_yil56290w().s[8]++;

  if (!isNaN(description)) {
    /* istanbul ignore next */
    cov_yil56290w().b[1][0]++;
    cov_yil56290w().s[9]++;
    return String(description);
  } else
  /* istanbul ignore next */
  {
    cov_yil56290w().b[1][1]++;
  }

  var temp =
  /* istanbul ignore next */
  (cov_yil56290w().s[10]++, description);

  /* istanbul ignore next */
  cov_yil56290w().s[11]++;

  try {
    /* istanbul ignore next */
    cov_yil56290w().s[12]++;
    temp = JSON.parse(description.replace(/\\n/g, '\\n').replace(/\\'/g, '\\\'').replace(/\\"/g, '\\"').replace(/\\&/g, '\\&').replace(/\\r/g, '\\r').replace(/\\t/g, '\\t').replace(/\\b/g, '\\b').replace(/\\f/g, '\\f'));
  } catch (error) {
    /* istanbul ignore next */
    cov_yil56290w().s[13]++;
    temp = description;
  } // return temp;


  /* istanbul ignore next */
  cov_yil56290w().s[14]++;
  return (
    /* istanbul ignore next */
    (cov_yil56290w().b[2][0]++, temp) ||
    /* istanbul ignore next */
    (cov_yil56290w().b[2][1]++, '')
  );
}
/**
 * 将quill特有的文本结构转为html
 * @param {*} description
 */


function delta2Html(description) {
  /* istanbul ignore next */
  cov_yil56290w().f[1]++;
  var delta =
  /* istanbul ignore next */
  (cov_yil56290w().s[15]++, text2Delta(description));
  var converter =
  /* istanbul ignore next */
  (cov_yil56290w().s[16]++, new QuillDeltaToHtmlConverter(delta, {}));
  var text =
  /* istanbul ignore next */
  (cov_yil56290w().s[17]++, converter.convert());

  /* istanbul ignore next */
  cov_yil56290w().s[18]++;

  if (text.substring(0, 3) === '<p>') {
    /* istanbul ignore next */
    cov_yil56290w().b[3][0]++;
    cov_yil56290w().s[19]++;
    return text.substring(3);
  } else
  /* istanbul ignore next */
  {
    cov_yil56290w().b[3][1]++;
  }

  cov_yil56290w().s[20]++;
  return text;
}
/**
 * 生成指定长度的随机字符串
 * @param len 字符串长度
 * @returns {string}
 */


function randomString() {
  /* istanbul ignore next */
  cov_yil56290w().f[2]++;
  var len =
  /* istanbul ignore next */
  (cov_yil56290w().s[21]++,
  /* istanbul ignore next */
  (cov_yil56290w().b[5][0]++, arguments.length > 0) &&
  /* istanbul ignore next */
  (cov_yil56290w().b[5][1]++, arguments[0] !== undefined) ?
  /* istanbul ignore next */
  (cov_yil56290w().b[4][0]++, arguments[0]) :
  /* istanbul ignore next */
  (cov_yil56290w().b[4][1]++, 32));
  var code =
  /* istanbul ignore next */
  (cov_yil56290w().s[22]++, '');
  var chars =
  /* istanbul ignore next */
  (cov_yil56290w().s[23]++, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789');
  var maxPos =
  /* istanbul ignore next */
  (cov_yil56290w().s[24]++, chars.length);

  /* istanbul ignore next */
  cov_yil56290w().s[25]++;

  for (var i =
  /* istanbul ignore next */
  (cov_yil56290w().s[26]++, 0); i < len; i += 1) {
    /* istanbul ignore next */
    cov_yil56290w().s[27]++;
    code += chars.charAt(Math.floor(Math.random() * (maxPos + 1)));
  }

  /* istanbul ignore next */
  cov_yil56290w().s[28]++;
  return code;
}
/**
 * randomWord 产生任意长度随机字母数字组合
 * @param randomFlag 是否任意长度 min-任意长度最小位[固定位数] max-任意长度最大位
 * @param min
 * @param max
 * @returns {string}
 */


function randomWord(randomFlag, min, max) {
  /* istanbul ignore next */
  cov_yil56290w().f[3]++;
  var str =
  /* istanbul ignore next */
  (cov_yil56290w().s[29]++, '');
  var range =
  /* istanbul ignore next */
  (cov_yil56290w().s[30]++, min);
  var arr =
  /* istanbul ignore next */
  (cov_yil56290w().s[31]++, ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']); // 随机产生

  /* istanbul ignore next */
  cov_yil56290w().s[32]++;

  if (randomFlag) {
    /* istanbul ignore next */
    cov_yil56290w().b[6][0]++;
    cov_yil56290w().s[33]++;
    range = Math.round(Math.random() * (max - min)) + min;
  } else
  /* istanbul ignore next */
  {
    cov_yil56290w().b[6][1]++;
  }

  cov_yil56290w().s[34]++;

  for (var i =
  /* istanbul ignore next */
  (cov_yil56290w().s[35]++, 0); i < range; i += 1) {
    var pos =
    /* istanbul ignore next */
    (cov_yil56290w().s[36]++, Math.round(Math.random() * (arr.length - 1)));

    /* istanbul ignore next */
    cov_yil56290w().s[37]++;
    str += arr[pos];
  }

  /* istanbul ignore next */
  cov_yil56290w().s[38]++;
  return str;
}