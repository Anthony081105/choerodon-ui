{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/rich-text/utils.tsx"],"names":[],"mappings":"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","sourcesContent":["const QuillDeltaToHtmlConverter = require('quill-delta-to-html');\n\nexport function text2Delta(description) {\n  if (!description) {\n    return undefined;\n  }\n  // eslint-disable-next-line no-restricted-globals\n  if (!isNaN(description)) {\n    return String(description);\n  }\n  let temp = description;\n  try {\n    temp = JSON.parse(description.replace(/\\\\n/g, '\\\\n')\n      .replace(/\\\\'/g, '\\\\\\'')\n      .replace(/\\\\\"/g, '\\\\\"')\n      .replace(/\\\\&/g, '\\\\&')\n      .replace(/\\\\r/g, '\\\\r')\n      .replace(/\\\\t/g, '\\\\t')\n      .replace(/\\\\b/g, '\\\\b')\n      .replace(/\\\\f/g, '\\\\f'));\n  } catch (error) {\n    temp = description;\n  }\n  // return temp;\n  return temp || '';\n}\n\n/**\n * 将quill特有的文本结构转为html\n * @param {*} description\n */\nexport function delta2Html(description) {\n  const delta = text2Delta(description);\n  const converter = new QuillDeltaToHtmlConverter(delta, {});\n  const text = converter.convert();\n  if (text.substring(0, 3) === '<p>') {\n    return text.substring(3);\n  }\n  return text;\n}\n\n/**\n * 生成指定长度的随机字符串\n * @param len 字符串长度\n * @returns {string}\n */\nexport function randomString(len = 32) {\n  let code = '';\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const maxPos = chars.length;\n  for (let i = 0; i < len; i += 1) {\n    code += chars.charAt(Math.floor(Math.random() * (maxPos + 1)));\n  }\n  return code;\n}\n\n/**\n * randomWord 产生任意长度随机字母数字组合\n * @param randomFlag 是否任意长度 min-任意长度最小位[固定位数] max-任意长度最大位\n * @param min\n * @param max\n * @returns {string}\n */\nexport function randomWord(randomFlag, min, max) {\n  let str = '';\n  let range = min;\n  const arr = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\n  // 随机产生\n  if (randomFlag) {\n    range = Math.round(Math.random() * (max - min)) + min;\n  }\n  for (let i = 0; i < range; i += 1) {\n    const pos = Math.round(Math.random() * (arr.length - 1));\n    str += arr[pos];\n  }\n  return str;\n}\n"]}