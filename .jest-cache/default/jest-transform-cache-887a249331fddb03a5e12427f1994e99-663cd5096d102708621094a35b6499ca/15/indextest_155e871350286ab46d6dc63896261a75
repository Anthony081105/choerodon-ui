95bd3aaa3b4bef33fe29d3d476d0350d
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _ = _interopRequireDefault(require(".."));

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = (0, _getPrototypeOf2["default"])(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0, _possibleConstructorReturn2["default"])(this, result);
  };
}

describe('Form', function () {
  it('hideRequiredMark', function () {
    var wrapper = (0, _enzyme.shallow)(_react["default"].createElement(_["default"], {
      hideRequiredMark: true
    }));
    expect(wrapper.hasClass('c7n-form-hide-required-mark')).toBe(true);
  });
  describe('wrappedComponentRef', function () {
    it('warns on functional component', function () {
      if (process.env.REACT === '15') {
        return;
      }

      var spy = jest.spyOn(console, 'error').mockImplementation(function () {});

      var TestForm = function TestForm() {
        return _react["default"].createElement(_["default"], null);
      };

      var Wrapped = _["default"].create()(TestForm);

      (0, _enzyme.mount)(_react["default"].createElement(Wrapped, {
        wrappedComponentRef: function wrappedComponentRef() {}
      }));
      expect(spy).toHaveBeenCalled();
      spy.mockReset();
      spy.mockRestore();
    });
    it('get component ref', function () {
      // eslint-disable-next-line
      var TestForm =
      /*#__PURE__*/
      function (_React$Component) {
        (0, _inherits2["default"])(TestForm, _React$Component);

        var _super = _createSuper(TestForm);

        function TestForm() {
          (0, _classCallCheck2["default"])(this, TestForm);
          return _super.apply(this, arguments);
        }

        (0, _createClass2["default"])(TestForm, [{
          key: "render",
          value: function render() {
            return _react["default"].createElement(_["default"], null);
          }
        }]);
        return TestForm;
      }(_react["default"].Component);

      var Wrapped = _["default"].create()(TestForm);

      var form;
      (0, _enzyme.mount)(_react["default"].createElement(Wrapped, {
        wrappedComponentRef: function wrappedComponentRef(node) {
          return form = node;
        }
      }));
      expect(form).toBeInstanceOf(TestForm);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpdCIsIndyYXBwZXIiLCJleHBlY3QiLCJoYXNDbGFzcyIsInRvQmUiLCJwcm9jZXNzIiwiZW52IiwiUkVBQ1QiLCJzcHkiLCJqZXN0Iiwic3B5T24iLCJjb25zb2xlIiwibW9ja0ltcGxlbWVudGF0aW9uIiwiVGVzdEZvcm0iLCJXcmFwcGVkIiwiRm9ybSIsImNyZWF0ZSIsInRvSGF2ZUJlZW5DYWxsZWQiLCJtb2NrUmVzZXQiLCJtb2NrUmVzdG9yZSIsIlJlYWN0IiwiQ29tcG9uZW50IiwiZm9ybSIsIm5vZGUiLCJ0b0JlSW5zdGFuY2VPZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBQSxRQUFRLENBQUMsTUFBRCxFQUFTLFlBQU07QUFDckJDLEVBQUFBLEVBQUUsQ0FBQyxrQkFBRCxFQUFxQixZQUFNO0FBQzNCLFFBQU1DLE9BQU8sR0FBRyxxQkFBUSxnQ0FBQyxZQUFEO0FBQU0sTUFBQSxnQkFBZ0I7QUFBdEIsTUFBUixDQUFoQjtBQUNBQyxJQUFBQSxNQUFNLENBQUNELE9BQU8sQ0FBQ0UsUUFBUixDQUFpQiw2QkFBakIsQ0FBRCxDQUFOLENBQXdEQyxJQUF4RCxDQUE2RCxJQUE3RDtBQUNELEdBSEMsQ0FBRjtBQUtBTCxFQUFBQSxRQUFRLENBQUMscUJBQUQsRUFBd0IsWUFBTTtBQUNwQ0MsSUFBQUEsRUFBRSxDQUFDLCtCQUFELEVBQWtDLFlBQU07QUFDeEMsVUFBSUssT0FBTyxDQUFDQyxHQUFSLENBQVlDLEtBQVosS0FBc0IsSUFBMUIsRUFBZ0M7QUFDOUI7QUFDRDs7QUFDRCxVQUFNQyxHQUFHLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXQyxPQUFYLEVBQW9CLE9BQXBCLEVBQTZCQyxrQkFBN0IsQ0FBZ0QsWUFBTSxDQUFFLENBQXhELENBQVo7O0FBQ0EsVUFBTUMsUUFBUSxHQUFHLFNBQVhBLFFBQVc7QUFBQSxlQUFNLGdDQUFDLFlBQUQsT0FBTjtBQUFBLE9BQWpCOztBQUNBLFVBQU1DLE9BQU8sR0FBR0MsYUFBS0MsTUFBTCxHQUFjSCxRQUFkLENBQWhCOztBQUNBLHlCQUFNLGdDQUFDLE9BQUQ7QUFBUyxRQUFBLG1CQUFtQixFQUFFLCtCQUFNLENBQUU7QUFBdEMsUUFBTjtBQUNBWCxNQUFBQSxNQUFNLENBQUNNLEdBQUQsQ0FBTixDQUFZUyxnQkFBWjtBQUNBVCxNQUFBQSxHQUFHLENBQUNVLFNBQUo7QUFDQVYsTUFBQUEsR0FBRyxDQUFDVyxXQUFKO0FBQ0QsS0FYQyxDQUFGO0FBYUFuQixJQUFBQSxFQUFFLENBQUMsbUJBQUQsRUFBc0IsWUFBTTtBQUM1QjtBQUQ0QixVQUV0QmEsUUFGc0I7QUFBQTtBQUFBO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLG1DQUdqQjtBQUNQLG1CQUFPLGdDQUFDLFlBQUQsT0FBUDtBQUNEO0FBTHlCO0FBQUE7QUFBQSxRQUVMTyxrQkFBTUMsU0FGRDs7QUFPNUIsVUFBTVAsT0FBTyxHQUFHQyxhQUFLQyxNQUFMLEdBQWNILFFBQWQsQ0FBaEI7O0FBQ0EsVUFBSVMsSUFBSjtBQUNBLHlCQUFNLGdDQUFDLE9BQUQ7QUFBUyxRQUFBLG1CQUFtQixFQUFFLDZCQUFBQyxJQUFJO0FBQUEsaUJBQUtELElBQUksR0FBR0MsSUFBWjtBQUFBO0FBQWxDLFFBQU47QUFDQXJCLE1BQUFBLE1BQU0sQ0FBQ29CLElBQUQsQ0FBTixDQUFhRSxjQUFiLENBQTRCWCxRQUE1QjtBQUNELEtBWEMsQ0FBRjtBQVlELEdBMUJPLENBQVI7QUEyQkQsQ0FqQ08sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBzaGFsbG93LCBtb3VudCB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgRm9ybSBmcm9tICcuLic7XG5cbmRlc2NyaWJlKCdGb3JtJywgKCkgPT4ge1xuICBpdCgnaGlkZVJlcXVpcmVkTWFyaycsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gc2hhbGxvdyg8Rm9ybSBoaWRlUmVxdWlyZWRNYXJrIC8+KTtcbiAgICBleHBlY3Qod3JhcHBlci5oYXNDbGFzcygnYzduLWZvcm0taGlkZS1yZXF1aXJlZC1tYXJrJykpLnRvQmUodHJ1ZSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCd3cmFwcGVkQ29tcG9uZW50UmVmJywgKCkgPT4ge1xuICAgIGl0KCd3YXJucyBvbiBmdW5jdGlvbmFsIGNvbXBvbmVudCcsICgpID0+IHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5SRUFDVCA9PT0gJzE1Jykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBzcHkgPSBqZXN0LnNweU9uKGNvbnNvbGUsICdlcnJvcicpLm1vY2tJbXBsZW1lbnRhdGlvbigoKSA9PiB7fSk7XG4gICAgICBjb25zdCBUZXN0Rm9ybSA9ICgpID0+IDxGb3JtIC8+O1xuICAgICAgY29uc3QgV3JhcHBlZCA9IEZvcm0uY3JlYXRlKCkoVGVzdEZvcm0pO1xuICAgICAgbW91bnQoPFdyYXBwZWQgd3JhcHBlZENvbXBvbmVudFJlZj17KCkgPT4ge319IC8+KTtcbiAgICAgIGV4cGVjdChzcHkpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgICAgIHNweS5tb2NrUmVzZXQoKTtcbiAgICAgIHNweS5tb2NrUmVzdG9yZSgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ2dldCBjb21wb25lbnQgcmVmJywgKCkgPT4ge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICBjbGFzcyBUZXN0Rm9ybSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgICAgIHJlbmRlcigpIHtcbiAgICAgICAgICByZXR1cm4gPEZvcm0gLz47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNvbnN0IFdyYXBwZWQgPSBGb3JtLmNyZWF0ZSgpKFRlc3RGb3JtKTtcbiAgICAgIGxldCBmb3JtO1xuICAgICAgbW91bnQoPFdyYXBwZWQgd3JhcHBlZENvbXBvbmVudFJlZj17bm9kZSA9PiAoZm9ybSA9IG5vZGUpfSAvPik7XG4gICAgICBleHBlY3QoZm9ybSkudG9CZUluc3RhbmNlT2YoVGVzdEZvcm0pO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19