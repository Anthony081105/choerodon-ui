{"version":3,"sources":["tabs/TabContent.jsx"],"names":["TabContent","displayName","propTypes","animated","PropTypes","animatedWithMargin","prefixCls","children","activeKey","style","tabBarPosition","string","getDefaultProps","getTabPanes","props","newChildren","Children","key","child","active","destroyInactiveTabPane","rootPrefixCls","render","classes","activeIndex","animatedStyle","display"],"mappings":"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","sourcesContent":["import React, { Children, cloneElement } from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { generateKey, getActiveIndex, getMarginStyle, getTransformByIndex, getTransformPropValue } from './utils';\n\nconst TabContent = createReactClass({\n  displayName: 'TabContent',\n  propTypes: {\n    animated: PropTypes.bool,\n    animatedWithMargin: PropTypes.bool,\n    prefixCls: PropTypes.string,\n    children: PropTypes.any,\n    activeKey: PropTypes.string,\n    style: PropTypes.any,\n    tabBarPosition: PropTypes.string,\n  },\n  getDefaultProps() {\n    return {\n      animated: true,\n    };\n  },\n  getTabPanes() {\n    const props = this.props;\n    const activeKey = props.activeKey;\n    const children = props.children;\n    const newChildren = [];\n\n    Children.forEach(children, (child, index) => {\n      if (!child) {\n        return;\n      }\n      const key = generateKey(child.key, index);\n      const active = activeKey === key;\n      newChildren.push(cloneElement(child, {\n        key,\n        active,\n        destroyInactiveTabPane: props.destroyInactiveTabPane,\n        rootPrefixCls: props.prefixCls,\n      }));\n    });\n\n    return newChildren;\n  },\n  render() {\n    const { props } = this;\n    const {\n      prefixCls, children, activeKey,\n      tabBarPosition, animated, animatedWithMargin,\n    } = props;\n    let { style } = props;\n    const classes = classnames({\n      [`${prefixCls}-content`]: true,\n      [animated ? `${prefixCls}-content-animated` : `${prefixCls}-content-no-animated`]: true,\n    });\n    if (animated) {\n      const activeIndex = getActiveIndex(children, activeKey);\n      if (activeIndex !== -1) {\n        const animatedStyle = animatedWithMargin ? getMarginStyle(activeIndex, tabBarPosition) : getTransformPropValue(getTransformByIndex(activeIndex, tabBarPosition));\n        style = {\n          ...style,\n          ...animatedStyle,\n        };\n      } else {\n        style = {\n          ...style,\n          display: 'none',\n        };\n      }\n    }\n    return (\n      <div\n        className={classes}\n        style={style}\n      >\n        {this.getTabPanes()}\n      </div>\n    );\n  },\n});\n\nexport default TabContent;\n"]}