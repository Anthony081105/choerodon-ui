{"version":3,"sources":["DOMWrap.jsx"],"names":["canUseDOM","window","document","createElement","MENUITEM_OVERFLOWED_CLASSNAME","require","DOMWrap","lastVisibleIndex","undefined","prefixCls","props","ul","ReactDOM","findDOMNode","slice","call","children","filter","node","className","split","indexOf","keyPrefix","overflowedItems","renderPlaceholder","overflowedIndicator","level","mode","theme","propStyle","style","copy","throwAway","title","eventKey","rest","key","length","display","visibility","position","popupClassName","menuAllProps","forEach","k","ulChildrenNodes","lastOverflowedIndicatorPlaceholder","menuItemNodes","getMenuItemNodes","c","menuItemSizes","map","overflowedIndicatorWidth","originalTotalWidth","reduce","acc","cur","handleResize","width","currentSumWidth","liWidth","setState","setChildrenWidthAndResize","menuUl","resizeObserver","ResizeObserver","entries","concat","el","observe","MutationObserver","mutationObserver","disconnect","attributes","childList","subTree","state","childNode","index","item","overflowed","getOverflowedSubMenuItem","ret","push","hiddenClassName","hidden","Tag","tag","renderChildren","Component","PropTypes","string","oneOf","number","bool","object"],"mappings":"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","sourcesContent":["import React, { cloneElement, Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport SubMenu from './SubMenu';\nimport { getWidth, menuAllProps, setStyle } from './util';\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nconst MENUITEM_OVERFLOWED_CLASSNAME = 'menuitem-overflowed';\n\n// Fix ssr\nif (canUseDOM) {\n  require('mutationobserver-shim');\n}\n\nexport default class DOMWrap extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    mode: PropTypes.oneOf(['horizontal', 'vertical', 'vertical-left', 'vertical-right', 'inline']),\n    prefixCls: PropTypes.string,\n    level: PropTypes.number,\n    theme: PropTypes.string,\n    overflowedIndicator: PropTypes.node,\n    hidden: PropTypes.bool,\n    hiddenClassName: PropTypes.string,\n    tag: PropTypes.string,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    tag: 'div',\n    className: '',\n  };\n\n  state = {\n    lastVisibleIndex: undefined,\n  };\n\n  componentDidMount() {\n    this.setChildrenWidthAndResize();\n    if (this.props.level === 1 && this.props.mode === 'horizontal') {\n      const menuUl = ReactDOM.findDOMNode(this);\n      if (!menuUl) {\n        return;\n      }\n      this.resizeObserver = new ResizeObserver(entries => {\n        entries.forEach(this.setChildrenWidthAndResize);\n      });\n\n      [].slice\n        .call(menuUl.children)\n        .concat(menuUl)\n        .forEach(el => {\n          this.resizeObserver.observe(el);\n        });\n\n      if (typeof MutationObserver !== 'undefined') {\n        this.mutationObserver = new MutationObserver(() => {\n          this.resizeObserver.disconnect();\n          [].slice\n            .call(menuUl.children)\n            .concat(menuUl)\n            .forEach(el => {\n              this.resizeObserver.observe(el);\n            });\n          this.setChildrenWidthAndResize();\n        });\n        this.mutationObserver.observe(menuUl, {\n          attributes: false,\n          childList: true,\n          subTree: false,\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n    if (this.mutationObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  // get all valid menuItem nodes\n  getMenuItemNodes = () => {\n    const { prefixCls } = this.props;\n    const ul = ReactDOM.findDOMNode(this);\n    if (!ul) {\n      return [];\n    }\n\n    // filter out all overflowed indicator placeholder\n    return [].slice.call(ul.children).filter(node => {\n      return node.className.split(' ').indexOf(`${prefixCls}-overflowed-submenu`) < 0;\n    });\n  };\n\n  getOverflowedSubMenuItem = (keyPrefix, overflowedItems, renderPlaceholder) => {\n    const { overflowedIndicator, level, mode, prefixCls, theme, style: propStyle } = this.props;\n    if (level !== 1 || mode !== 'horizontal') {\n      return null;\n    }\n    // put all the overflowed item inside a submenu\n    // with a title of overflow indicator ('...')\n    const copy = this.props.children[0];\n    const { children: throwAway, title, eventKey, ...rest } = copy.props;\n\n    let style = { ...propStyle };\n    let key = `${keyPrefix}-overflowed-indicator`;\n\n    if (overflowedItems.length === 0 && renderPlaceholder !== true) {\n      style = {\n        ...style,\n        display: 'none',\n      };\n    } else if (renderPlaceholder) {\n      style = {\n        ...style,\n        visibility: 'hidden',\n        // prevent from taking normal dom space\n        position: 'absolute',\n      };\n      key = `${key}-placeholder`;\n    }\n\n    const popupClassName = theme ? `${prefixCls}-${theme}` : '';\n    const props = {};\n    menuAllProps.forEach(k => {\n      if (rest[k] !== undefined) {\n        props[k] = rest[k];\n      }\n    });\n\n    return (\n      <SubMenu\n        title={overflowedIndicator}\n        className={`${prefixCls}-overflowed-submenu`}\n        popupClassName={popupClassName}\n        {...props}\n        key={key}\n        eventKey={`${keyPrefix}-overflowed-indicator`}\n        disabled={false}\n        style={style}\n      >\n        {overflowedItems}\n      </SubMenu>\n    );\n  };\n\n  // memorize rendered menuSize\n  setChildrenWidthAndResize = () => {\n    if (this.props.mode !== 'horizontal') {\n      return;\n    }\n    const ul = ReactDOM.findDOMNode(this);\n\n    if (!ul) {\n      return;\n    }\n\n    const ulChildrenNodes = ul.children;\n\n    if (!ulChildrenNodes || ulChildrenNodes.length === 0) {\n      return;\n    }\n\n    const lastOverflowedIndicatorPlaceholder = ul.children[ulChildrenNodes.length - 1];\n\n    // need last overflowed indicator for calculating length;\n    setStyle(lastOverflowedIndicatorPlaceholder, 'display', 'inline-block');\n\n    const menuItemNodes = this.getMenuItemNodes();\n\n    // reset display attribute for all hidden elements caused by overflow to calculate updated width\n    // and then reset to original state after width calculation\n\n    const overflowedItems = menuItemNodes.filter(\n      c => c.className.split(' ').indexOf(MENUITEM_OVERFLOWED_CLASSNAME) >= 0,\n    );\n\n    overflowedItems.forEach(c => {\n      setStyle(c, 'display', 'inline-block');\n    });\n\n    this.menuItemSizes = menuItemNodes.map(c => getWidth(c));\n\n    overflowedItems.forEach(c => {\n      setStyle(c, 'display', 'none');\n    });\n    this.overflowedIndicatorWidth = getWidth(ul.children[ul.children.length - 1]);\n    this.originalTotalWidth = this.menuItemSizes.reduce((acc, cur) => acc + cur, 0);\n    this.handleResize();\n    // prevent the overflowed indicator from taking space;\n    setStyle(lastOverflowedIndicatorPlaceholder, 'display', 'none');\n  };\n\n  resizeObserver = null;\n  mutationObserver = null;\n\n  // original scroll size of the list\n  originalTotalWidth = 0;\n\n  // copy of overflowed items\n  overflowedItems = [];\n\n  // cache item of the original items (so we can track the size and order)\n  menuItemSizes = [];\n\n  handleResize = () => {\n    if (this.props.mode !== 'horizontal') {\n      return;\n    }\n\n    const ul = ReactDOM.findDOMNode(this);\n    if (!ul) {\n      return;\n    }\n    const width = getWidth(ul);\n\n    this.overflowedItems = [];\n    let currentSumWidth = 0;\n\n    // index for last visible child in horizontal mode\n    let lastVisibleIndex = undefined;\n\n    if (this.originalTotalWidth > width) {\n      lastVisibleIndex = -1;\n\n      this.menuItemSizes.forEach(liWidth => {\n        currentSumWidth += liWidth;\n        if (currentSumWidth + this.overflowedIndicatorWidth <= width) {\n          lastVisibleIndex++;\n        }\n      });\n    }\n\n    this.setState({ lastVisibleIndex });\n  };\n\n  renderChildren(children) {\n    // need to take care of overflowed items in horizontal mode\n    const { lastVisibleIndex } = this.state;\n    return (children || []).reduce((acc, childNode, index) => {\n      let item = childNode;\n      if (this.props.mode === 'horizontal') {\n        let overflowed = this.getOverflowedSubMenuItem(childNode.props.eventKey, []);\n        if (\n          lastVisibleIndex !== undefined &&\n          this.props.className.indexOf(`${this.props.prefixCls}-root`) !== -1\n        ) {\n          if (index > lastVisibleIndex) {\n            item = cloneElement(\n              childNode,\n              // 这里修改 eventKey 是为了防止隐藏状态下还会触发 openkeys 事件\n              {\n                style: { display: 'none' },\n                eventKey: `${childNode.props.eventKey}-hidden`,\n                className: `${childNode.className} ${MENUITEM_OVERFLOWED_CLASSNAME}`,\n              },\n            );\n          }\n          if (index === lastVisibleIndex + 1) {\n            this.overflowedItems = children.slice(lastVisibleIndex + 1).map(c => {\n              return cloneElement(\n                c,\n                // children[index].key will become '.$key' in clone by default,\n                // we have to overwrite with the correct key explicitly\n                { key: c.props.eventKey, mode: 'vertical-left' },\n              );\n            });\n\n            overflowed = this.getOverflowedSubMenuItem(\n              childNode.props.eventKey,\n              this.overflowedItems,\n            );\n          }\n        }\n\n        const ret = [...acc, overflowed, item];\n\n        if (index === children.length - 1) {\n          // need a placeholder for calculating overflowed indicator width\n          ret.push(this.getOverflowedSubMenuItem(childNode.props.eventKey, [], true));\n        }\n        return ret;\n      }\n      return [...acc, item];\n    }, []);\n  }\n\n  render() {\n    const {\n      hiddenClassName,\n      hidden,\n      prefixCls,\n      overflowedIndicator,\n      mode,\n      level,\n      tag: Tag,\n      children,\n      theme,\n      ...rest\n    } = this.props;\n\n    if (hidden) {\n      rest.className += ` ${hiddenClassName}`;\n    }\n\n    return <Tag {...rest}>{this.renderChildren(this.props.children)}</Tag>;\n  }\n}\n"]}