{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/query-bar/FilterSelect.tsx"],"names":[],"mappings":"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","sourcesContent":["import Set from 'core-js/library/fn/set';\nimport React, { cloneElement, CSSProperties, ReactElement, ReactNode } from 'react';\nimport omit from 'lodash/omit';\nimport isPlainObject from 'lodash/isPlainObject';\nimport isNil from 'lodash/isNil';\nimport defer from 'lodash/defer';\nimport noop from 'lodash/noop';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport isString from 'lodash/isString';\nimport { observer } from 'mobx-react';\nimport {\n  action,\n  computed,\n  IReactionDisposer,\n  isArrayLike,\n  observable,\n  reaction,\n  runInAction,\n  toJS,\n} from 'mobx';\nimport { pxToRem } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport KeyCode from 'choerodon-ui/lib/_util/KeyCode';\nimport Icon from '../../icon';\nimport Field from '../../data-set/Field';\nimport { TextField, TextFieldProps } from '../../text-field/TextField';\nimport DataSet from '../../data-set/DataSet';\nimport Record from '../../data-set/Record';\nimport autobind from '../../_util/autobind';\nimport { FormFieldProps, RenderProps } from '../../field/FormField';\nimport measureTextWidth from '../../_util/measureTextWidth';\nimport { getEditorByField } from '../utils';\nimport ObserverSelect, { SelectProps } from '../../select/Select';\nimport Option, { OptionProps } from '../../option/Option';\nimport isSameLike from '../../_util/isSameLike';\nimport { DataSetEvents } from '../../data-set/enum';\nimport { processFieldValue } from '../../data-set/utils';\n\nexport interface FilterSelectProps extends TextFieldProps {\n  paramName?: string;\n  optionDataSet: DataSet;\n  queryDataSet?: DataSet;\n  dropdownMenuStyle?: CSSProperties;\n  editable?: boolean;\n  hiddenIfNone?: boolean;\n  filter?: (string) => boolean;\n}\n\n@observer\nexport default class FilterSelect extends TextField<FilterSelectProps> {\n  static defaultProps = {\n    ...TextField.defaultProps,\n    multiple: true,\n    clearButton: true,\n    editable: true,\n    prefix: <Icon type=\"filter_list\" />,\n    dropdownMenuStyle: { minWidth: pxToRem(180) },\n  };\n\n  @observable selectField?: Field;\n\n  @observable filterText?: string;\n\n  queryDataSet?: DataSet;\n\n  reaction: IReactionDisposer;\n\n  @computed\n  get value(): any {\n    const { filter } = this.props;\n    const { value, queryDataSet } = this.observableProps;\n    if (value) {\n      return filter ? value.filter(filter) : value;\n    }\n    const { paramName } = this.props;\n    if (queryDataSet) {\n      const { current } = queryDataSet;\n      if (current) {\n        const result: string[] = [];\n        const keys = queryDataSet.fields.keys();\n        [...new Set(paramName ? [...keys, paramName] : keys)].forEach((key: string) => {\n          if (key && (!filter || filter(key))) {\n            const values = current.get(key);\n            if (isArrayLike(values)) {\n              values.forEach(item => !isNil(item) && result.push(key));\n            } else if (!isNil(values)) {\n              result.push(key);\n            }\n          }\n        });\n        return result;\n      }\n    }\n    return undefined;\n  }\n\n  set value(value: any) {\n    runInAction(() => {\n      this.observableProps.value = value;\n    });\n  }\n\n  private setFilterText = debounce(\n    action((text?: string) => {\n      this.filterText = text;\n    }),\n    500,\n  );\n\n  constructor(props, context) {\n    super(props, context);\n    const { observableProps } = this;\n    this.on(observableProps.queryDataSet);\n    this.reaction = reaction(() => observableProps.queryDataSet, this.on);\n  }\n\n  getObservableProps(props, context: any) {\n    return {\n      ...super.getObservableProps(props, context),\n      optionDataSet: props.optionDataSet,\n      queryDataSet: props.queryDataSet,\n    };\n  }\n\n  @autobind\n  on(ds?: DataSet) {\n    this.off();\n    if (ds) {\n      ds.addEventListener(DataSetEvents.update, this.handleDataSetUpdate);\n      ds.addEventListener(DataSetEvents.reset, this.handleDataSetReset);\n    }\n    this.queryDataSet = ds;\n  }\n\n  off() {\n    const { queryDataSet } = this;\n    if (queryDataSet) {\n      queryDataSet.removeEventListener(DataSetEvents.update, this.handleDataSetUpdate);\n      queryDataSet.removeEventListener(DataSetEvents.reset, this.handleDataSetReset);\n    }\n  }\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    this.setFilterText.cancel();\n    this.off();\n    this.reaction();\n  }\n\n  doQuery = throttle(() => {\n    const { optionDataSet } = this.observableProps;\n    optionDataSet.query();\n  }, 500);\n\n  @action\n  setText(text) {\n    super.setText(text);\n    this.setFilterText(text);\n  }\n\n  getPlaceholders(): string[] {\n    if (!this.selectField) {\n      return super.getPlaceholders();\n    }\n    return [];\n  }\n\n  getOtherProps() {\n    return omit(super.getOtherProps(), [\n      'paramName',\n      'optionDataSet',\n      'queryDataSet',\n      'dropdownMenuStyle',\n      'hiddenIfNone',\n      'editable',\n      'filter',\n    ]);\n  }\n\n  @autobind\n  getRootDomNode() {\n    return this.element;\n  }\n\n  @autobind\n  defaultRenderer({ value, repeat = 0 }: RenderProps) {\n    const { paramName } = this.props;\n    const { queryDataSet } = this.observableProps;\n    if (queryDataSet) {\n      const { current } = queryDataSet;\n      if (current) {\n        let fieldValue = current.get(value);\n        if (value === paramName) {\n          return fieldValue;\n        }\n        const field = queryDataSet.getField(value);\n        if (field) {\n          if (field.get('multiple')) {\n            fieldValue = (fieldValue || [])[repeat];\n          }\n          if (field.get('bind')) return;\n          return `${this.getFieldLabel(field)}: ${processFieldValue(\n            isPlainObject(fieldValue) ? fieldValue : super.processValue(fieldValue),\n            field,\n            this.lang,\n          )}`;\n        }\n        return value;\n      }\n    }\n  }\n\n  getQueryRecord(): Record | undefined {\n    const { queryDataSet } = this.observableProps;\n    if (queryDataSet) {\n      return queryDataSet.current;\n    }\n  }\n\n  getQueryField(fieldName): Field | undefined {\n    const { queryDataSet } = this.observableProps;\n    if (queryDataSet) {\n      return queryDataSet.getField(fieldName);\n    }\n  }\n\n  addQueryParams(value) {\n    const { paramName } = this.props;\n    if (paramName) {\n      this.setQueryValue(paramName!, value);\n    }\n  }\n\n  afterRemoveValue(value, repeat: number) {\n    const values = this.getQueryValues(value);\n    if (repeat === -1) {\n      values.pop();\n    } else {\n      values.splice(repeat, 1);\n    }\n    const multiple = this.getQueryFieldMultiple(value);\n    this.setQueryValue(value, multiple ? values : values[0]);\n  }\n\n  getQueryFieldMultiple(value) {\n    const { paramName } = this.props;\n    if (paramName !== value) {\n      const field = this.getQueryField(value);\n      if (field && field.get('multiple')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  @autobind\n  handleDataSetReset() {\n    this.setValue(undefined);\n  }\n\n  @autobind\n  @action\n  handleDataSetUpdate({ name, value }) {\n    const values = this.getValues();\n    if (isArrayLike(value)) {\n      const { length } = value;\n      if (length) {\n        let repeat = 0;\n        const filtered = values.filter(item => {\n          if (item === name) {\n            repeat += 1;\n            if (repeat > length) {\n              return false;\n            }\n          }\n          return true;\n        });\n        for (let i = 0, n = length - repeat; i < n; i += 1) {\n          filtered.push(name);\n        }\n        this.setValue(filtered);\n      } else {\n        this.setValue(values.filter(item => item === name));\n      }\n    } else if (isNil(value)) {\n      this.setValue(values.filter(item => item !== name));\n    } else {\n      if (values.indexOf(name) === -1) {\n        values.push(name);\n      }\n      this.setValue(values);\n    }\n    this.doQuery();\n  }\n\n  @autobind\n  handleBlur(e) {\n    super.handleBlur(e);\n    this.setSelectField(undefined);\n  }\n\n  isEditorReadOnly(): boolean {\n    const { paramName, editable } = this.props;\n    return (this.getQueryValues(paramName).length > 0 && !this.selectField) || !editable;\n  }\n\n  @autobind\n  handleFieldChange(value) {\n    const { selectField } = this;\n    if (selectField) {\n      const { name } = selectField;\n      this.setQueryValue(name, value);\n    } else if (isString(value)) {\n      this.addQueryParams(value);\n      if (this.isFocused) {\n        this.element.expand();\n      }\n    } else {\n      this.setSelectField(value);\n    }\n  }\n\n  @autobind\n  handleInput(e) {\n    this.setText(e.target.value);\n  }\n\n  @autobind\n  handleFieldEnterDown() {\n    defer(() => this.focus());\n  }\n\n  @autobind\n  handleKeyDown(e) {\n    if (this.selectField) {\n      if (e.keyCode === KeyCode.BACKSPACE && !this.text) {\n        this.setSelectField(undefined);\n      }\n    } else {\n      super.handleKeyDown(e);\n    }\n  }\n\n  @autobind\n  handleEnterDown() {}\n\n  @action\n  setSelectField(value) {\n    this.selectField = value;\n    this.setFilterText(undefined);\n  }\n\n  getQueryValues(fieldName) {\n    const current = this.getQueryRecord();\n    if (current) {\n      return [].concat(toJS(current.get(fieldName)) || []);\n    }\n    return [];\n  }\n\n  syncValueOnBlur() {}\n\n  @action\n  setQueryValue(fieldName: string, value: any) {\n    const current = this.getQueryRecord();\n    if (current) {\n      current.set(fieldName, value);\n    }\n    this.setSelectField(undefined);\n  }\n\n  getFieldLabel(field: Field): ReactNode {\n    return field.get('label') || field.name;\n  }\n\n  multipleFieldExistsValue(field: Field, current?: Record): boolean {\n    if (field.get('multiple')) {\n      const { options } = field;\n      if (options && current) {\n        const values = current.get(field.name);\n        const valueField = field.get('valueField');\n        return options.some(r => !values.some(value => isSameLike(r.get(valueField), value)));\n      }\n    }\n    return false;\n  }\n\n  getInputFilterOptions(filterText: string): ReactElement<OptionProps>[] {\n    const {\n      optionDataSet,\n      optionDataSet: { fields },\n    } = this.observableProps;\n    const values: Set<string> = new Set<string>();\n    optionDataSet.forEach(record => {\n      [...fields.keys()].forEach(key => {\n        const value = record.get(key);\n        if (isString(value) && value.toLowerCase().indexOf(filterText.toLowerCase()) !== -1) {\n          values.add(value);\n        }\n      });\n    });\n    return [...values].map(value => (\n      <Option key={value} value={value}>\n        {value}\n      </Option>\n    ));\n  }\n\n  getFieldSelectOptions(): ReactElement<OptionProps>[] {\n    const { paramName } = this.props;\n    const { queryDataSet } = this.observableProps;\n    const data: ReactElement<OptionProps>[] = [];\n    if (queryDataSet) {\n      [...queryDataSet.fields.entries()].forEach(([key, field]) => {\n        if (\n          key !== paramName &&\n          (this.getValues().indexOf(key) === -1 ||\n            this.multipleFieldExistsValue(field, this.getQueryRecord())) &&\n          !field.get('bind')\n        ) {\n          data.push(\n            <Option key={key} value={field}>\n              {this.getFieldLabel(field)}\n            </Option>,\n          );\n        }\n      });\n    }\n    return data;\n  }\n\n  getFieldEditor(props, selectField: Field): ReactElement<FormFieldProps> {\n    const editor: ReactElement<FormFieldProps> = getEditorByField(selectField);\n    const editorProps: FormFieldProps = {\n      ...props,\n      key: 'value',\n      record: this.getQueryRecord(),\n      name: selectField.name,\n      autoFocus: true,\n      onInput: this.handleInput,\n      onEnterDown: this.handleFieldEnterDown,\n      renderer: noop,\n    };\n\n    if (editor.type === (ObserverSelect as any)) {\n      (editorProps as SelectProps).dropdownMenuStyle = this.props.dropdownMenuStyle;\n      (editorProps as SelectProps).dropdownMatchSelectWidth = false;\n    }\n    return cloneElement<FormFieldProps>(editor, editorProps);\n  }\n\n  getFieldSelect(props): ReactElement<SelectProps> {\n    const {\n      filterText,\n      props: { dropdownMenuStyle },\n    } = this;\n    const editable = !this.isEditorReadOnly();\n    const options =\n      editable && filterText\n        ? this.getInputFilterOptions(filterText)\n        : this.getFieldSelectOptions();\n    return (\n      <ObserverSelect\n        {...props}\n        key=\"key\"\n        combo={editable}\n        searchable={editable}\n        value={null}\n        onInput={this.handleInput}\n        onEnterDown={this.handleFieldEnterDown}\n        autoFocus={this.isFocused}\n        dropdownMenuStyle={dropdownMenuStyle}\n        dropdownMatchSelectWidth={false}\n      >\n        {options}\n      </ObserverSelect>\n    );\n  }\n\n  @action\n  clear() {\n    const record = this.getQueryRecord();\n    if (record) {\n      record.clear();\n    }\n  }\n\n  renderWrapper(): ReactNode {\n    const { hiddenIfNone } = this.props;\n    if (this.isEmpty() && hiddenIfNone) {\n      return null;\n    }\n    return super.renderWrapper();\n  }\n\n  renderMultipleEditor(props: FilterSelectProps) {\n    const { text, selectField, prefixCls } = this;\n    const editorProps: FilterSelectProps = {\n      ...omit(props, ['multiple', 'prefixCls']),\n      clearButton: false,\n      prefix: null,\n      suffix: null,\n      elementClassName: `${prefixCls}-inner-editor`,\n      onChange: this.handleFieldChange,\n    };\n    if (text) {\n      editorProps.style = { width: pxToRem(measureTextWidth(text)) };\n    }\n    return (\n      <li key=\"text\">\n        {selectField ? (\n          <span className={`${prefixCls}-select-field`}>{this.getFieldLabel(selectField)}:</span>\n        ) : null}\n        {selectField\n          ? this.getFieldEditor(editorProps, selectField)\n          : this.getFieldSelect(editorProps)}\n      </li>\n    );\n  }\n}\n"]}