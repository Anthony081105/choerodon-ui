{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/image-crop/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef, forwardRef, Ref, ReactElement } from 'react';\nimport Cropper from 'react-easy-crop';\nimport isFunction from 'lodash/isFunction';\nimport { getPrefixCls } from '../configure';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport Modal, { ModalProps } from '../modal';\nimport Slider from '../slider';\nimport { UploadFile, UploadProps } from '../upload/interface';\nimport defaultLocale from '../locale-provider/default';\nimport Button from '../button';\nimport Upload from '../upload';\nimport AvatarUploader from './avatarUpload';\nimport { imageCrop } from '../locale-provider'\n\n// ssr \nif (typeof window !== 'undefined') {\n    // 兼容ie11 remove 方法\n    (function (arr) {\n        arr.forEach(function (item) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (item.hasOwnProperty('remove')) {\n                return;\n            }\n            Object.defineProperty(item, 'remove', {\n                configurable: true,\n                enumerable: true,\n                writable: true,\n                value: function remove() {\n                    if (this.parentNode === null) {\n                        return;\n                    }\n                    this.parentNode.removeChild(this);\n                },\n            });\n        });\n\n        // 兼容IE\n        if (!HTMLCanvasElement.prototype.toBlob) {\n            Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n                value(callback, type, quality) {\n                    const canvas = this;\n                    setTimeout(function () {\n                        const binStr = atob(canvas.toDataURL(type, quality).split(',')[1]);\n                        const len = binStr.length;\n                        const arrArray = new Uint8Array(len);\n                        for (let i = 0; i < len; i++) {\n                            arrArray[i] = binStr.charCodeAt(i);\n                        }\n                        callback(new Blob([arrArray], { type: type || 'image/png' }));\n                    });\n                },\n            });\n        }\n    })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\n}\n\n\n\nconst MIN_ZOOM = 1;\nconst MAX_ZOOM = 3;\nconst ZOOM_STEP = 0.1;\n\ninterface CompoundedComponent\n    extends React.ForwardRefExoticComponent<ImgCropProps> {\n    AvatarUploader: typeof AvatarUploader;\n}\n\nexport interface ImageCropLocale {\n    imageCrop?: string;\n}\n\nconst MIN_RATE = 1;\nconst MAX_RATE = 100;\nconst RATE_STEP = 1;\n\nconst MIN_ROTATE = 0;\nconst MAX_ROTATE = 360;\nconst ROTATE_STEP = 1;\n\nexport const enum shapeCroper {\n    rect = 'rect',\n    round = 'round',\n}\n\nexport declare type Area = {\n    width: number;\n    height: number;\n    x: number;\n    y: number;\n    zoom: number;\n    rotation: number;\n};\n\nexport interface BalanceRate {\n    x: number;\n    y: number;\n}\n\nexport interface EasyCropProps {\n    src?: string,\n    aspect?: number,\n    shape?: shapeCroper,\n    grid?: boolean,\n    hasZoom?: boolean,\n    zoomVal?: number,\n    rotateVal?: number,\n    setZoomVal?: (value: number) => void,\n    setRotateVal?: (rotation: number) => void,\n    onComplete: (croppedAreaPixels: Area) => void,\n    prefixCls?: string,\n}\n\nexport interface ImgCropProps {\n    aspect?: number,\n    shape?: shapeCroper,\n    zoom?: boolean,\n    grid?: boolean,\n    src?: string,\n    aspectControl?: boolean,\n    rotate?: boolean,\n    beforeCrop?: (file: UploadFile, uploadFiles: UploadFile[]) => boolean,\n    modalTitle?: string,\n    modalWidth?: number | string,\n    modalOk?: string,\n    modalCancel?: string,\n    modalProps?: ModalProps,\n    onCancel?: () => void,\n    onOk?: ({ url: string, blob: Blob, area: Area }) => void,\n    modalVisible?: boolean,\n    children?: React.ReactElement<UploadProps> | React.ReactElement<any>,\n    cropContent?: (crop: ReactElement<EasyCropProps>) => React.ReactElement<any>,\n    onCropComplete?: ({ url: string, blob: Blob, area: Area }) => void,\n    prefixCls?: string,\n    serverCrop: boolean,\n}\n\n\nconst EasyCrop = forwardRef<unknown, EasyCropProps>((props, ref: Ref<Cropper>) => {\n    const {\n        src,\n        aspect,\n        shape,\n        grid,\n        hasZoom,\n        zoomVal,\n        rotateVal,\n        setZoomVal,\n        setRotateVal,\n        onComplete,\n        prefixCls,\n    } = props;\n\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n\n    const onCropComplete = useCallback(\n        (_croppedArea, croppedAreaPixels) => {\n            croppedAreaPixels.zoom = zoomVal || 0;\n            croppedAreaPixels.rotate = rotateVal || 0;\n            onComplete(croppedAreaPixels);\n        },\n        [onComplete, zoomVal, rotateVal],\n    );\n\n    return (\n        <Cropper\n            ref={ref}\n            image={src}\n            aspect={aspect}\n            cropShape={shape}\n            showGrid={grid}\n            zoomWithScroll={hasZoom}\n            crop={crop}\n            zoom={zoomVal}\n            rotation={rotateVal}\n            onCropChange={setCrop}\n            onZoomChange={setZoomVal}\n            onRotationChange={setRotateVal}\n            onCropComplete={onCropComplete}\n            classes={{ containerClassName: `${prefixCls}-container`, mediaClassName: `${prefixCls}-media` }}\n        />\n    );\n});\n\n\n// 设置初始化的比例值，值更加贴近100 方便查看与拖拉\nconst balanceRate = (rate: number): BalanceRate => {\n    let x = 100; let y = 100;\n    if (rate > 100) {\n        x = 100;\n        y = 1;\n    } else if (rate < 0.01) {\n        x = 1;\n        y = 0;\n    } else if (rate === 1) {  // 特殊值快速处理\n        x = 50;\n        y = 50;\n    } else if (rate === 0.5) {  // 特殊值快速处理\n        x = 30;\n        y = 60;\n    } else {\n        const residual = {\n            value: 10000,\n            x: 0,\n            y: 0,\n        }\n        while (x > 0 && y > 0) {\n            if (x / y > rate) {\n                x--;\n            } else if (x / y < rate) {\n                y--;\n            } else {\n                residual.x = x;\n                residual.y = y;\n                break;\n            }\n            if (Math.abs(residual.value) > Math.abs(x / y - rate)) {\n                residual.value = Math.abs(x / y - rate)\n                residual.x = x;\n                residual.y = y;\n            }\n        }\n        x = residual.x\n        y = residual.y\n    }\n    return {\n        x,\n        y,\n    }\n}\n\n// 图片转化为canvas\nconst imageToCanvas = (image) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = image.naturalWidth;\n    canvas.height = image.naturalHeight;\n    if (ctx) {\n        ctx.drawImage(image, 0, 0);\n        return canvas\n    }\n    return undefined\n}\n\n\n\n\nconst ImgCrop = forwardRef((props: ImgCropProps, ref) => {\n    const {\n        aspect,\n        shape,\n        grid,\n        zoom,\n        rotate,\n        beforeCrop,\n        modalTitle,\n        modalWidth,\n        modalOk,\n        modalCancel,\n        modalVisible,\n        children,\n        aspectControl,\n        onCancel: onModalCancel,\n        onOk: onModalOk,\n        src: imageSrc,\n        serverCrop,\n        modalProps,\n        cropContent,\n        onCropComplete,\n        prefixCls: customizePrefixCls,\n    } = props;\n\n    const prefixCls = getPrefixCls('image-crop', customizePrefixCls);\n\n    const prefixClsMedia = `${prefixCls}-media`\n\n    const hasZoom = zoom === true;\n    const hasRotate = rotate === true;\n\n    const defaultRateXY = (): BalanceRate => {\n        if (aspect && aspectControl) {\n            return balanceRate(aspect);\n        }\n        return {\n            x: 40,\n            y: 30,\n        }\n    }\n\n    const hasAspectControl = aspectControl === true;\n\n    const modalTextProps = { okText: modalOk, cancelText: modalCancel };\n    Object.keys(modalTextProps).forEach((key) => {\n        if (!modalTextProps[key]) delete modalTextProps[key];\n    });\n    const [src, setSrc] = useState('');\n    const [zoomVal, setZoomVal] = useState(1);\n    const [rotateVal, setRotateVal] = useState(0);\n    const [xRate, setXRate] = useState(defaultRateXY().x);\n    const [yRate, setYRate] = useState(defaultRateXY().y);\n\n    const beforeUploadRef = React.useRef<(file: UploadFile, FileList: UploadFile[]) => boolean | PromiseLike<any | Blob>>(); // 返回上传组件的上传之前的钩子函数\n    const fileRef = React.useRef<UploadFile>(); // 记录文件的参数\n    const resolveRef = useRef<(value?: any | PromiseLike<any>) => void>(); // 返回文件上传的成功数据的方法\n    const rejectRef = useRef<(reason?: any) => void>(); // 返回失败数据的方法\n\n\n    const cropPixelsRef = React.useRef<HTMLImageElement>();\n\n    const imageCropCanvas = (naturalModalImg): HTMLCanvasElement | undefined => {\n        const { naturalWidth, naturalHeight } = naturalModalImg;\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            // create a max canvas to cover the source image after rotated\n            const maxLen = Math.sqrt(naturalWidth ** 2 + naturalHeight ** 2);\n            canvas.width = maxLen;\n            canvas.height = maxLen;\n            // rotate the image\n            if (hasRotate && rotateVal > 0 && rotateVal < 360) {\n                const halfMax = maxLen / 2;\n                ctx.translate(halfMax, halfMax);\n                ctx.rotate((rotateVal * Math.PI) / 180);\n                ctx.translate(-halfMax, -halfMax);\n            }\n            // draw the source image in the center of the max canvas\n            const left = (maxLen - naturalWidth) / 2;\n            const top = (maxLen - naturalHeight) / 2;\n            ctx.drawImage(naturalModalImg, left, top);\n\n            // shrink the max canvas to the crop area size, then align two center points\n            const maxImgData = ctx.getImageData(0, 0, maxLen, maxLen);\n            if (cropPixelsRef && cropPixelsRef.current) {\n                const { width, height, x, y } = cropPixelsRef.current;\n                canvas.width = width;\n                canvas.height = height;\n                // get the new image\n                ctx.putImageData(maxImgData, -left - x, -top - y);\n                return canvas;\n            }\n        }\n    }\n\n    /**\n     * Upload\n     */\n    const renderUpload = useCallback(() => {\n        const upload: React.ReactElement<UploadProps> = Array.isArray(children) ? children[0] : children;\n        if (upload && upload.props && upload.type === Upload) {\n            const { beforeUpload, accept, ...restUploadProps } = upload.props;\n            beforeUploadRef.current = beforeUpload;\n            return {\n                ...upload,\n                props: {\n                    ...restUploadProps,\n                    accept: accept || 'image/*',\n                    beforeUpload: (file: UploadFile, fileList: UploadFile[]) =>\n                        new Promise((resolve, reject) => {\n                            if (beforeCrop && !beforeCrop(file, fileList)) {\n                                reject();\n                                return;\n                            }\n                            fileRef.current = file;\n                            resolveRef.current = resolve;\n                            rejectRef.current = reject;\n                            const reader = new FileReader();\n                            if (reader) {\n                                reader.addEventListener('load', () => {\n                                    if (reader.result && typeof reader.result === 'string') {\n                                        setSrc(reader.result);\n                                    }\n                                });\n                                if (file instanceof Blob) {\n                                    reader.readAsDataURL(file);\n                                }\n                            }\n                        }),\n                },\n            };\n        }\n        if (imageSrc && (typeof window !== 'undefined')) {\n            const newimage = new Image();\n            newimage.src = imageSrc;\n            newimage.crossOrigin = \"anonymous\"\n            newimage.onload = function () {\n                const canvas = imageToCanvas(newimage)\n                if (canvas) {\n                    if (isFunction(onModalOk) && canvas) {\n                        setSrc(canvas.toDataURL())\n                    }\n                }\n            }\n        }\n    }, [beforeCrop, children]);\n\n\n\n\n    /**\n     * EasyCrop\n     */\n    const onComplete = useCallback((croppedAreaPixels) => {\n        cropPixelsRef.current = croppedAreaPixels;\n        if (isFunction(onCropComplete)) {\n            const naturalModalImg: Element | HTMLImageElement | null = document.querySelector(`.${prefixClsMedia}`);\n            const canvas = serverCrop ? imageToCanvas(naturalModalImg) : imageCropCanvas(naturalModalImg)\n            if (canvas) {\n                canvas.toBlob((blob) => {\n                    let area = {}\n                    if (cropPixelsRef.current) {\n                        area = cropPixelsRef.current\n                    }\n                    onCropComplete({ url: canvas.toDataURL(), blob, area })\n                })\n            }\n        }\n    }, [rotateVal, hasRotate]);\n\n    /**\n     * Controls\n     */\n    const isMinZoom = zoomVal === MIN_ZOOM;\n    const isMaxZoom = zoomVal === MAX_ZOOM;\n    const isMinRotate = rotateVal === MIN_ROTATE;\n    const isMaxRotate = rotateVal === MAX_ROTATE;\n\n    const subZoomVal = useCallback(() => {\n        if (!isMinZoom) setZoomVal(zoomVal - ZOOM_STEP);\n    }, [isMinZoom, zoomVal]);\n\n    const addZoomVal = useCallback(() => {\n        if (!isMaxZoom) setZoomVal(zoomVal + ZOOM_STEP);\n    }, [isMaxZoom, zoomVal]);\n\n    const subRotateVal = useCallback(() => {\n        if (!isMinRotate) setRotateVal(rotateVal - ROTATE_STEP);\n    }, [isMinRotate, rotateVal]);\n\n    const addRotateVal = useCallback(() => {\n        if (!isMaxRotate) setRotateVal(rotateVal + ROTATE_STEP);\n    }, [isMaxRotate, rotateVal]);\n\n    /**\n     * Modal\n     */\n    const closeModal = useCallback(() => {\n        setSrc('');\n        setZoomVal(1);\n        setRotateVal(0);\n    }, []);\n\n    const onClose = useCallback(() => {\n        closeModal();\n        if (isFunction(onModalCancel)) {\n            onModalCancel()\n        }\n    }, [])\n\n    const onOk = useCallback(async () => {\n        closeModal();\n        const naturalModalImg: Element | HTMLImageElement | null = document.querySelector(`.${prefixClsMedia}`);\n        if (naturalModalImg) {\n            if (naturalModalImg && naturalModalImg instanceof HTMLImageElement) {\n                const canvas: HTMLCanvasElement | undefined = serverCrop ? imageToCanvas(naturalModalImg) : imageCropCanvas(naturalModalImg)\n                if (fileRef.current && canvas) {\n                    const { type, name, uid } = fileRef.current;\n                    canvas.toBlob(\n                        async (blob) => {\n                            let newFile: Blob | UploadFile | null = blob;\n                            if (newFile) {\n                                // @ts-ignore\n                                newFile.lastModifiedDate = Date.now();\n                                // @ts-ignore\n                                newFile.name = name;\n                                // @ts-ignore\n                                newFile.uid = uid;\n                                // @ts-ignore\n                                newFile.imageCropArea = cropPixelsRef.current;\n                                if (resolveRef && rejectRef && resolveRef.current && rejectRef.current) {\n                                    if (typeof beforeUploadRef.current !== 'function') return resolveRef.current(newFile);\n\n                                  // @ts-ignore\n                                    const res = beforeUploadRef.current(newFile, [newFile]);\n\n                                    if (typeof res !== 'boolean' && !res) {\n                                        console.error('beforeUpload must return a boolean or Promise');\n                                        return;\n                                    }\n                                    if (res === true) return resolveRef.current(newFile);\n                                    if (res === false) return rejectRef.current('not upload');\n                                    if (res && typeof res.then === 'function') {\n                                        try {\n                                            const passedFile = await res;\n                                            const passedFileType = Object.prototype.toString.call(passedFile);\n                                            if (passedFileType === '[object File]' || passedFileType === '[object Blob]') newFile = passedFile;\n                                            resolveRef.current(newFile);\n                                        } catch (err) {\n                                            rejectRef.current(err);\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        type,\n                        0.4,\n                    );\n                }\n                if (isFunction(onModalOk) && canvas) {\n                    canvas.toBlob((blob) => {\n                        let area = {}\n                        if (cropPixelsRef.current) {\n                            area = cropPixelsRef.current\n                        }\n                        onModalOk({ url: canvas.toDataURL(), blob, area })\n                    })\n                }\n            }\n        }\n\n    }, [hasRotate, onClose, rotateVal]);\n\n\n    const RenderCrop = (\n        <EasyCrop\n            ref={ref}\n            src={src}\n            aspect={aspectControl ? (xRate / yRate) : aspect}\n            shape={shape}\n            grid={grid}\n            hasZoom={hasZoom}\n            zoomVal={zoomVal}\n            rotateVal={rotateVal}\n            setZoomVal={setZoomVal}\n            setRotateVal={setRotateVal}\n            onComplete={onComplete}\n            prefixCls={prefixCls}\n        />\n    )\n\n    return (\n        <LocaleReceiver componentName=\"imageCrop\" defaultLocale={defaultLocale.imageCrop}>\n            {(locale: imageCrop) => {\n                return (\n                    <>\n                        {renderUpload()}\n                        {src && modalVisible && (\n                            <Modal\n                                visible={modalVisible}\n                                wrapClassName={`${prefixCls}-modal`}\n                                title={modalTitle || locale  && locale.editImage ? locale.editImage : 'Edit image'} // 当不存在的语言使用英文\n                                width={modalWidth}\n                                destroyOnClose\n                                maskClosable={false}\n                                {...modalProps}\n                                onOk={onOk}\n                                onCancel={onClose}\n                                {...modalTextProps}\n                            >\n                                {cropContent ? cropContent(RenderCrop) : RenderCrop}\n                                {hasZoom && (\n                                    <div className={`${prefixCls}-control zoom`}>\n                                        <Button onClick={subZoomVal} disabled={isMinZoom}>\n                                            －\n                                         </Button>\n                                        <Slider\n                                            min={MIN_ZOOM}\n                                            max={MAX_ZOOM}\n                                            step={ZOOM_STEP}\n                                            value={zoomVal}\n                                            onChange={(sliderValue: number) => (setZoomVal(sliderValue))}\n                                        />\n                                        <Button onClick={addZoomVal} disabled={isMaxZoom}>\n                                            ＋\n                                         </Button>\n                                    </div>\n                                )}\n                                {hasRotate && (\n                                    <div className={`${prefixCls}-control rotate`}>\n                                        <Button onClick={subRotateVal} disabled={isMinRotate}>\n                                            ↺\n                                        </Button>\n                                        <Slider\n                                            min={MIN_ROTATE}\n                                            max={MAX_ROTATE}\n                                            step={ROTATE_STEP}\n                                            value={rotateVal}\n                                            onChange={(sliderValue: number) => (setRotateVal(sliderValue))}\n                                        />\n                                        <Button onClick={addRotateVal} disabled={isMaxRotate}>\n                                            ↻\n                                        </Button>\n                                    </div>\n                                )}\n                                {hasAspectControl && (\n                                    <div className={`${prefixCls}-control yrate`}>\n                                        <Button onClick={subRotateVal} disabled={isMinRotate}>\n                                            y\n                                        </Button>\n                                        <Slider\n                                            min={MIN_RATE}\n                                            max={MAX_RATE}\n                                            step={RATE_STEP}\n                                            value={yRate}\n                                            onChange={(sliderValue: number) => (setYRate(sliderValue))}\n                                        />\n                                        <Button onClick={addRotateVal} disabled={isMaxRotate}>\n                                            100\n                                        </Button>\n                                    </div>\n                                )}\n                                {hasAspectControl && (\n                                    <div className={`${prefixCls}-control xrate`}>\n                                        <Button onClick={subRotateVal} disabled={isMinRotate}>\n                                            x\n                                        </Button>\n                                        <Slider\n                                            min={MIN_RATE}\n                                            max={MAX_RATE}\n                                            step={RATE_STEP}\n                                            value={xRate}\n                                            onChange={(sliderValue: number) => (setXRate(sliderValue))}\n                                        />\n                                        <Button onClick={addRotateVal} disabled={isMaxRotate}>\n                                            100\n                                        </Button>\n                                    </div>\n                                )}\n                            </Modal>\n                        )}\n                    </>\n                )\n            }}\n        </LocaleReceiver>\n    );\n}) as CompoundedComponent\n\n\nImgCrop.defaultProps = {\n    shape: shapeCroper.rect,\n    grid: false,\n    zoom: true,\n    rotate: false,\n    modalWidth: 600,\n    modalVisible: true,\n    serverCrop: false,\n};\n\nImgCrop.AvatarUploader = AvatarUploader\n\nexport default ImgCrop;\n\n"]}