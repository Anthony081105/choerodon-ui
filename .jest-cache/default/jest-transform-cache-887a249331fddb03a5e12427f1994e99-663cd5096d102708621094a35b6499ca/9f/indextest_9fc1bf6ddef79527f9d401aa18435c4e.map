{"version":3,"sources":["index.test.js"],"names":["describe","it","onVisibleChange","jest","fn","wrapper","triggerNode","find","at","simulate","expect","toHaveBeenCalledWith","length","toBe","popconfirm","instance","getPopupDomNode","popup","not","className","toContain","innerHTML","toMatchSnapshot"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3BC,EAAAA,EAAE,CAAC,gCAAD,EAAmC,YAAM;AACzC,QAAMC,eAAe,GAAGC,IAAI,CAACC,EAAL,EAAxB;AAEA,QAAMC,OAAO,GAAG,mBACd,gCAAC,YAAD;AACE,MAAA,KAAK,EAAE;AAAM,QAAA,SAAS,EAAC;AAAhB,0CADT;AAEE,MAAA,MAAM,EAAC,KAFT;AAGE,MAAA,UAAU,EAAC,IAHb;AAIE,MAAA,eAAe,EAAE,CAJnB;AAKE,MAAA,eAAe,EAAE,CALnB;AAME,MAAA,eAAe,EAAEH;AANnB,OAQE,uDARF,CADc,CAAhB;AAaA,QAAMI,WAAW,GAAGD,OAAO,CAACE,IAAR,CAAa,MAAb,EAAqBC,EAArB,CAAwB,CAAxB,CAApB;AACAF,IAAAA,WAAW,CAACG,QAAZ,CAAqB,OAArB;AACAC,IAAAA,MAAM,CAACR,eAAD,CAAN,CAAwBS,oBAAxB,CAA6C,IAA7C;AACAD,IAAAA,MAAM,CAACL,OAAO,CAACE,IAAR,CAAa,kBAAb,EAAiCK,MAAlC,CAAN,CAAgDC,IAAhD,CAAqD,CAArD;AAEAP,IAAAA,WAAW,CAACG,QAAZ,CAAqB,OAArB;AACAC,IAAAA,MAAM,CAACR,eAAD,CAAN,CAAwBS,oBAAxB,CAA6C,KAA7C;AACD,GAvBC,CAAF;AAyBAV,EAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACtD,QAAMa,UAAU,GAAG,mBACjB,gCAAC,YAAD;AAAY,MAAA,KAAK,EAAC;AAAlB,OACE,kEADF,CADiB,CAAnB;AAMAJ,IAAAA,MAAM,CAACI,UAAU,CAACC,QAAX,GAAsBC,eAAtB,EAAD,CAAN,CAAgDH,IAAhD,CAAqD,IAArD;AAEAC,IAAAA,UAAU,CAACP,IAAX,CAAgB,MAAhB,EAAwBE,QAAxB,CAAiC,OAAjC;AAEA,QAAMQ,KAAK,GAAGH,UAAU,CAACC,QAAX,GAAsBC,eAAtB,EAAd;AACAN,IAAAA,MAAM,CAACO,KAAD,CAAN,CAAcC,GAAd,CAAkBL,IAAlB,CAAuB,IAAvB;AACAH,IAAAA,MAAM,CAACO,KAAK,CAACE,SAAP,CAAN,CAAwBC,SAAxB,CAAkC,2BAAlC;AACAV,IAAAA,MAAM,CAACO,KAAK,CAACI,SAAP,CAAN,CAAwBC,eAAxB;AACAZ,IAAAA,MAAM,CAACO,KAAK,CAACI,SAAP,CAAN,CAAwBC,eAAxB;AACD,GAhBC,CAAF;AAiBD,CA3CO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport Popconfirm from '..';\n\ndescribe('Popconfirm', () => {\n  it('should popup Popconfirm dialog', () => {\n    const onVisibleChange = jest.fn();\n\n    const wrapper = mount(\n      <Popconfirm\n        title={<span className=\"popconfirm-test\">Are you sure delete this task?</span>}\n        okText=\"Yes\"\n        cancelText=\"No\"\n        mouseEnterDelay={0}\n        mouseLeaveDelay={0}\n        onVisibleChange={onVisibleChange}\n      >\n        <span>Delete</span>\n      </Popconfirm>,\n    );\n\n    const triggerNode = wrapper.find('span').at(0);\n    triggerNode.simulate('click');\n    expect(onVisibleChange).toHaveBeenCalledWith(true);\n    expect(wrapper.find('.popconfirm-test').length).toBe(1);\n\n    triggerNode.simulate('click');\n    expect(onVisibleChange).toHaveBeenCalledWith(false);\n  });\n\n  it('should show overlay when trigger is clicked', () => {\n    const popconfirm = mount(\n      <Popconfirm title=\"code\">\n        <span>show me your code</span>\n      </Popconfirm>,\n    );\n\n    expect(popconfirm.instance().getPopupDomNode()).toBe(null);\n\n    popconfirm.find('span').simulate('click');\n\n    const popup = popconfirm.instance().getPopupDomNode();\n    expect(popup).not.toBe(null);\n    expect(popup.className).toContain('c7n-popover-placement-top');\n    expect(popup.innerHTML).toMatchSnapshot();\n    expect(popup.innerHTML).toMatchSnapshot();\n  });\n});\n"]}