2f82e2ed33744585ab4a913251123199
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = typeMismatch;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _moment = require("moment");

var _isEmpty = _interopRequireDefault(require("../../_util/isEmpty"));

var _ValidationResult = _interopRequireDefault(require("../ValidationResult"));

var _localeContext = require("../../locale-context");

var _utils = require("../../field/utils");

var _types;

/* eslint-disable */
var emailReg = /^([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x22([^\x0d\x22\x5c\x80-\xff]|\x5c[\x00-\x7f])*\x22)(\x2e([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x22([^\x0d\x22\x5c\x80-\xff]|\x5c[\x00-\x7f])*\x22))*\x40([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x5b([^\x0d\x5b-\x5d\x80-\xff]|\x5c[\x00-\x7f])*\x5d)(\x2e([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x5b([^\x0d\x5b-\x5d\x80-\xff]|\x5c[\x00-\x7f])*\x5d))*$/;
var urlReg = /^(?:(?:https?|HTTPS?|ftp|FTP):\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-zA-Z\u00a1-\uffff0-9]-*)*[a-zA-Z\u00a1-\uffff0-9]+)(?:\.(?:[a-zA-Z\u00a1-\uffff0-9]-*)*[a-zA-Z\u00a1-\uffff0-9]+)*)(?::\d{2,5})?(?:[\/?#]\S*)?$/;
var colorRgbaReg = /^[rR][gG][Bb][Aa]?\((\s*(2[0-4][0-9]|25[0-5]|[01]?[0-9][0-9]?)\s*,){2}\s*(2[0-4][0-9]|25[0-5]|[01]?[0-9][0-9]?)\s*,?\s*(0?\.\d{1,2}|1|0)?\s*\){1}$/;
var colorHexReg = /^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$/;
/* eslint-enable */

var isNotDate = function isNotDate(value, range) {
  if (range) {
    return (0, _utils.toRangeValue)(value, range).some(function (item) {
      return !(0, _isEmpty["default"])(item) && (!(0, _moment.isMoment)(item) || !item.isValid());
    });
  }

  return !(0, _moment.isMoment)(value) || !value.isValid();
};

var types = (_types = {}, (0, _defineProperty2["default"])(_types, "email"
/* email */
, [function (value) {
  return !emailReg.test(value);
}, 'EmailField']), (0, _defineProperty2["default"])(_types, "url"
/* url */
, [function (value) {
  return !urlReg.test(value);
}, 'UrlField']), (0, _defineProperty2["default"])(_types, "color"
/* color */
, [function (value) {
  return !(colorRgbaReg.test(value) || colorHexReg.test(value));
}, 'ColorPicker']), (0, _defineProperty2["default"])(_types, "date"
/* date */
, [isNotDate, 'DatePicker']), (0, _defineProperty2["default"])(_types, "dateTime"
/* dateTime */
, [isNotDate, 'DatePicker']), (0, _defineProperty2["default"])(_types, "week"
/* week */
, [isNotDate, 'DatePicker']), (0, _defineProperty2["default"])(_types, "month"
/* month */
, [isNotDate, 'DatePicker']), (0, _defineProperty2["default"])(_types, "year"
/* year */
, [isNotDate, 'DatePicker']), (0, _defineProperty2["default"])(_types, "time"
/* time */
, [isNotDate, 'DatePicker']), _types);

function typeMismatch(value, props) {
  var type = props.type,
      defaultValidationMessages = props.defaultValidationMessages,
      range = props.range;

  if (!(0, _isEmpty["default"])(value) && type) {
    var validateType = types[type];

    if (validateType) {
      var _validateType = (0, _slicedToArray2["default"])(validateType, 2),
          validate = _validateType[0],
          component = _validateType[1];

      if (validate(value, range)) {
        var ruleName = 'typeMismatch';
        var _defaultValidationMes = defaultValidationMessages[ruleName],
            validationMessage = _defaultValidationMes === void 0 ? (0, _localeContext.$l)(component, 'type_mismatch') : _defaultValidationMes;
        return new _ValidationResult["default"]({
          validationMessage: validationMessage,
          value: value,
          ruleName: ruleName
        });
      }
    }
  }

  return true;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9odWlodWF3ay9Eb2N1bWVudHMvb3B0L2Nob2Vyb2Rvbi11aS9jb21wb25lbnRzLXByby92YWxpZGF0b3IvcnVsZXMvdHlwZU1pc21hdGNoLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBR0E7Ozs7QUFFQTtBQUNBLElBQU0sUUFBUSxHQUFHLGdnQkFBakI7QUFDQSxJQUFNLE1BQU0sR0FBRywwYkFBZjtBQUNBLElBQU0sWUFBWSxHQUFHLG9KQUFyQjtBQUNBLElBQU0sV0FBVyxHQUFHLG9DQUFwQjtBQUNBOztBQUVBLElBQU0sU0FBUyxHQUFHLFNBQVosU0FBWSxDQUFDLEtBQUQsRUFBUSxLQUFSLEVBQWlCO0FBQ2pDLE1BQUksS0FBSixFQUFXO0FBQ1QsV0FBTyx5QkFBYSxLQUFiLEVBQW9CLEtBQXBCLEVBQTJCLElBQTNCLENBQ0wsVUFBQSxJQUFJO0FBQUEsYUFBSSxDQUFDLHlCQUFRLElBQVIsQ0FBRCxLQUFtQixDQUFDLHNCQUFTLElBQVQsQ0FBRCxJQUFtQixDQUFDLElBQUksQ0FBQyxPQUFMLEVBQXZDLENBQUo7QUFBQSxLQURDLENBQVA7QUFHRDs7QUFDRCxTQUFPLENBQUMsc0JBQVMsS0FBVCxDQUFELElBQW9CLENBQUMsS0FBSyxDQUFDLE9BQU4sRUFBNUI7QUFDRCxDQVBEOztBQVNBLElBQU0sS0FBSywwREFHVDtBQUFBO0FBSFMsRUFHVSxDQUFDLFVBQUEsS0FBSztBQUFBLFNBQUksQ0FBQyxRQUFRLENBQUMsSUFBVCxDQUFjLEtBQWQsQ0FBTDtBQUFBLENBQU4sRUFBaUMsWUFBakMsQ0FIViw0Q0FJVDtBQUFBO0FBSlMsRUFJUSxDQUFDLFVBQUEsS0FBSztBQUFBLFNBQUksQ0FBQyxNQUFNLENBQUMsSUFBUCxDQUFZLEtBQVosQ0FBTDtBQUFBLENBQU4sRUFBK0IsVUFBL0IsQ0FKUiw0Q0FLVDtBQUFBO0FBTFMsRUFLVSxDQUNqQixVQUFBLEtBQUs7QUFBQSxTQUFJLEVBQUUsWUFBWSxDQUFDLElBQWIsQ0FBa0IsS0FBbEIsS0FBNEIsV0FBVyxDQUFDLElBQVosQ0FBaUIsS0FBakIsQ0FBOUIsQ0FBSjtBQUFBLENBRFksRUFFakIsYUFGaUIsQ0FMViw0Q0FTVDtBQUFBO0FBVFMsRUFTUyxDQUFDLFNBQUQsRUFBWSxZQUFaLENBVFQsNENBVVQ7QUFBQTtBQVZTLEVBVWEsQ0FBQyxTQUFELEVBQVksWUFBWixDQVZiLDRDQVdUO0FBQUE7QUFYUyxFQVdTLENBQUMsU0FBRCxFQUFZLFlBQVosQ0FYVCw0Q0FZVDtBQUFBO0FBWlMsRUFZVSxDQUFDLFNBQUQsRUFBWSxZQUFaLENBWlYsNENBYVQ7QUFBQTtBQWJTLEVBYVMsQ0FBQyxTQUFELEVBQVksWUFBWixDQWJULDRDQWNUO0FBQUE7QUFkUyxFQWNTLENBQUMsU0FBRCxFQUFZLFlBQVosQ0FkVCxVQUFYOztBQWlCYyxTQUFVLFlBQVYsQ0FBdUIsS0FBdkIsRUFBbUMsS0FBbkMsRUFBd0Q7QUFBQSxNQUM1RCxJQUQ0RCxHQUNqQixLQURpQixDQUM1RCxJQUQ0RDtBQUFBLE1BQ3RELHlCQURzRCxHQUNqQixLQURpQixDQUN0RCx5QkFEc0Q7QUFBQSxNQUMzQixLQUQyQixHQUNqQixLQURpQixDQUMzQixLQUQyQjs7QUFFcEUsTUFBSSxDQUFDLHlCQUFRLEtBQVIsQ0FBRCxJQUFtQixJQUF2QixFQUE2QjtBQUMzQixRQUFNLFlBQVksR0FBRyxLQUFLLENBQUMsSUFBRCxDQUExQjs7QUFDQSxRQUFJLFlBQUosRUFBa0I7QUFBQSwwREFDYyxZQURkO0FBQUEsVUFDVCxRQURTO0FBQUEsVUFDQyxTQUREOztBQUVoQixVQUFJLFFBQVEsQ0FBQyxLQUFELEVBQVEsS0FBUixDQUFaLEVBQTRCO0FBQzFCLFlBQU0sUUFBUSxHQUFHLGNBQWpCO0FBRDBCLG9DQUl0Qix5QkFKc0IsQ0FHdkIsUUFIdUI7QUFBQSxZQUdaLGlCQUhZLHNDQUdRLHVCQUFHLFNBQUgsRUFBYyxlQUFkLENBSFI7QUFLMUIsZUFBTyxJQUFJLDRCQUFKLENBQXFCO0FBQzFCLFVBQUEsaUJBQWlCLEVBQWpCLGlCQUQwQjtBQUUxQixVQUFBLEtBQUssRUFBTCxLQUYwQjtBQUcxQixVQUFBLFFBQVEsRUFBUjtBQUgwQixTQUFyQixDQUFQO0FBS0Q7QUFDRjtBQUNGOztBQUNELFNBQU8sSUFBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNNb21lbnQgfSBmcm9tICdtb21lbnQnO1xuaW1wb3J0IGlzRW1wdHkgZnJvbSAnLi4vLi4vX3V0aWwvaXNFbXB0eSc7XG5pbXBvcnQgVmFsaWRhdGlvblJlc3VsdCBmcm9tICcuLi9WYWxpZGF0aW9uUmVzdWx0JztcbmltcG9ydCB7ICRsIH0gZnJvbSAnLi4vLi4vbG9jYWxlLWNvbnRleHQnO1xuaW1wb3J0IHsgRmllbGRUeXBlIH0gZnJvbSAnLi4vLi4vZGF0YS1zZXQvZW51bSc7XG5pbXBvcnQgeyBtZXRob2RSZXR1cm4sIFZhbGlkYXRvclByb3BzIH0gZnJvbSAnLic7XG5pbXBvcnQgeyB0b1JhbmdlVmFsdWUgfSBmcm9tICcuLi8uLi9maWVsZC91dGlscyc7XG5cbi8qIGVzbGludC1kaXNhYmxlICovXG5jb25zdCBlbWFpbFJlZyA9IC9eKFteXFx4MDAtXFx4MjBcXHgyMlxceDI4XFx4MjlcXHgyY1xceDJlXFx4M2EtXFx4M2NcXHgzZVxceDQwXFx4NWItXFx4NWRcXHg3Zi1cXHhmZl0rfFxceDIyKFteXFx4MGRcXHgyMlxceDVjXFx4ODAtXFx4ZmZdfFxceDVjW1xceDAwLVxceDdmXSkqXFx4MjIpKFxceDJlKFteXFx4MDAtXFx4MjBcXHgyMlxceDI4XFx4MjlcXHgyY1xceDJlXFx4M2EtXFx4M2NcXHgzZVxceDQwXFx4NWItXFx4NWRcXHg3Zi1cXHhmZl0rfFxceDIyKFteXFx4MGRcXHgyMlxceDVjXFx4ODAtXFx4ZmZdfFxceDVjW1xceDAwLVxceDdmXSkqXFx4MjIpKSpcXHg0MChbXlxceDAwLVxceDIwXFx4MjJcXHgyOFxceDI5XFx4MmNcXHgyZVxceDNhLVxceDNjXFx4M2VcXHg0MFxceDViLVxceDVkXFx4N2YtXFx4ZmZdK3xcXHg1YihbXlxceDBkXFx4NWItXFx4NWRcXHg4MC1cXHhmZl18XFx4NWNbXFx4MDAtXFx4N2ZdKSpcXHg1ZCkoXFx4MmUoW15cXHgwMC1cXHgyMFxceDIyXFx4MjhcXHgyOVxceDJjXFx4MmVcXHgzYS1cXHgzY1xceDNlXFx4NDBcXHg1Yi1cXHg1ZFxceDdmLVxceGZmXSt8XFx4NWIoW15cXHgwZFxceDViLVxceDVkXFx4ODAtXFx4ZmZdfFxceDVjW1xceDAwLVxceDdmXSkqXFx4NWQpKSokLztcbmNvbnN0IHVybFJlZyA9IC9eKD86KD86aHR0cHM/fEhUVFBTP3xmdHB8RlRQKTpcXC9cXC8pKD86XFxTKyg/OjpcXFMqKT9AKT8oPzooPyEoPzoxMHwxMjcpKD86XFwuXFxkezEsM30pezN9KSg/ISg/OjE2OVxcLjI1NHwxOTJcXC4xNjgpKD86XFwuXFxkezEsM30pezJ9KSg/ITE3MlxcLig/OjFbNi05XXwyXFxkfDNbMC0xXSkoPzpcXC5cXGR7MSwzfSl7Mn0pKD86WzEtOV1cXGQ/fDFcXGRcXGR8MlswMV1cXGR8MjJbMC0zXSkoPzpcXC4oPzoxP1xcZHsxLDJ9fDJbMC00XVxcZHwyNVswLTVdKSl7Mn0oPzpcXC4oPzpbMS05XVxcZD98MVxcZFxcZHwyWzAtNF1cXGR8MjVbMC00XSkpfCg/Oig/OlthLXpBLVpcXHUwMGExLVxcdWZmZmYwLTldLSopKlthLXpBLVpcXHUwMGExLVxcdWZmZmYwLTldKykoPzpcXC4oPzpbYS16QS1aXFx1MDBhMS1cXHVmZmZmMC05XS0qKSpbYS16QS1aXFx1MDBhMS1cXHVmZmZmMC05XSspKikoPzo6XFxkezIsNX0pPyg/OltcXC8/I11cXFMqKT8kLztcbmNvbnN0IGNvbG9yUmdiYVJlZyA9IC9eW3JSXVtnR11bQmJdW0FhXT9cXCgoXFxzKigyWzAtNF1bMC05XXwyNVswLTVdfFswMV0/WzAtOV1bMC05XT8pXFxzKiwpezJ9XFxzKigyWzAtNF1bMC05XXwyNVswLTVdfFswMV0/WzAtOV1bMC05XT8pXFxzKiw/XFxzKigwP1xcLlxcZHsxLDJ9fDF8MCk/XFxzKlxcKXsxfSQvO1xuY29uc3QgY29sb3JIZXhSZWcgPSAvXiMoWzAtOWEtZkEtRl17Nn18WzAtOWEtZkEtRl17M30pJC87XG4vKiBlc2xpbnQtZW5hYmxlICovXG5cbmNvbnN0IGlzTm90RGF0ZSA9ICh2YWx1ZSwgcmFuZ2UpID0+IHtcbiAgaWYgKHJhbmdlKSB7XG4gICAgcmV0dXJuIHRvUmFuZ2VWYWx1ZSh2YWx1ZSwgcmFuZ2UpLnNvbWUoXG4gICAgICBpdGVtID0+ICFpc0VtcHR5KGl0ZW0pICYmICghaXNNb21lbnQoaXRlbSkgfHwgIWl0ZW0uaXNWYWxpZCgpKSxcbiAgICApO1xuICB9XG4gIHJldHVybiAhaXNNb21lbnQodmFsdWUpIHx8ICF2YWx1ZS5pc1ZhbGlkKCk7XG59O1xuXG5jb25zdCB0eXBlczoge1xuICBba2V5OiBzdHJpbmddOiBbKCh2YWx1ZTogYW55LCByYW5nZT86IGJvb2xlYW4gfCBbc3RyaW5nLCBzdHJpbmddKSA9PiBib29sZWFuKSwgc3RyaW5nXTtcbn0gPSB7XG4gIFtGaWVsZFR5cGUuZW1haWxdOiBbdmFsdWUgPT4gIWVtYWlsUmVnLnRlc3QodmFsdWUpLCAnRW1haWxGaWVsZCddLFxuICBbRmllbGRUeXBlLnVybF06IFt2YWx1ZSA9PiAhdXJsUmVnLnRlc3QodmFsdWUpLCAnVXJsRmllbGQnXSxcbiAgW0ZpZWxkVHlwZS5jb2xvcl06IFtcbiAgICB2YWx1ZSA9PiAhKGNvbG9yUmdiYVJlZy50ZXN0KHZhbHVlKSB8fCBjb2xvckhleFJlZy50ZXN0KHZhbHVlKSksXG4gICAgJ0NvbG9yUGlja2VyJyxcbiAgXSxcbiAgW0ZpZWxkVHlwZS5kYXRlXTogW2lzTm90RGF0ZSwgJ0RhdGVQaWNrZXInXSxcbiAgW0ZpZWxkVHlwZS5kYXRlVGltZV06IFtpc05vdERhdGUsICdEYXRlUGlja2VyJ10sXG4gIFtGaWVsZFR5cGUud2Vla106IFtpc05vdERhdGUsICdEYXRlUGlja2VyJ10sXG4gIFtGaWVsZFR5cGUubW9udGhdOiBbaXNOb3REYXRlLCAnRGF0ZVBpY2tlciddLFxuICBbRmllbGRUeXBlLnllYXJdOiBbaXNOb3REYXRlLCAnRGF0ZVBpY2tlciddLFxuICBbRmllbGRUeXBlLnRpbWVdOiBbaXNOb3REYXRlLCAnRGF0ZVBpY2tlciddLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHlwZU1pc21hdGNoKHZhbHVlOiBhbnksIHByb3BzOiBWYWxpZGF0b3JQcm9wcyk6IG1ldGhvZFJldHVybiB7XG4gIGNvbnN0IHsgdHlwZSwgZGVmYXVsdFZhbGlkYXRpb25NZXNzYWdlcywgcmFuZ2UgfSA9IHByb3BzO1xuICBpZiAoIWlzRW1wdHkodmFsdWUpICYmIHR5cGUpIHtcbiAgICBjb25zdCB2YWxpZGF0ZVR5cGUgPSB0eXBlc1t0eXBlXTtcbiAgICBpZiAodmFsaWRhdGVUeXBlKSB7XG4gICAgICBjb25zdCBbdmFsaWRhdGUsIGNvbXBvbmVudF0gPSB2YWxpZGF0ZVR5cGU7XG4gICAgICBpZiAodmFsaWRhdGUodmFsdWUsIHJhbmdlKSkge1xuICAgICAgICBjb25zdCBydWxlTmFtZSA9ICd0eXBlTWlzbWF0Y2gnO1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgW3J1bGVOYW1lXTogdmFsaWRhdGlvbk1lc3NhZ2UgPSAkbChjb21wb25lbnQsICd0eXBlX21pc21hdGNoJyksXG4gICAgICAgIH0gPSBkZWZhdWx0VmFsaWRhdGlvbk1lc3NhZ2VzO1xuICAgICAgICByZXR1cm4gbmV3IFZhbGlkYXRpb25SZXN1bHQoe1xuICAgICAgICAgIHZhbGlkYXRpb25NZXNzYWdlLFxuICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgIHJ1bGVOYW1lLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG4iXX0=