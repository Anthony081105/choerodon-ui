{"version":3,"sources":["Notification.jsx"],"names":["seed","now","Date","getUuid","Notification","notices","notice","key","setState","previousState","filter","v","length","concat","props","transitionName","animation","prefixCls","noticeNodes","state","map","onClose","remove","bind","closeIcon","content","className","style","getTransitionName","Component","PropTypes","string","oneOfType","object","node","top","left","newNotificationInstance","properties","callback","getContainer","div","document","createElement","root","appendChild","body","called","ref","notification","noticeProps","add","removeNotice","component","destroy","ReactDOM","unmountComponentAtNode","parentNode","removeChild","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAIA,IAAI,GAAG,CAAX;AACA,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;;AAEA,SAASE,OAAT,GAAmB;AACjB,kCAAyBF,GAAzB,cAAgCD,IAAI,EAApC;AACD;;IAEoBI,Y;;;;;;;;;;;;;;;;;8FAoDX;AACNC,MAAAA,OAAO,EAAE;AADH,K;4FAaF,UAAAC,MAAM,EAAI;AACd,UAAMC,GAAG,GAAID,MAAM,CAACC,GAAP,GAAaD,MAAM,CAACC,GAAP,IAAcJ,OAAO,EAA/C;;AACA,YAAKK,QAAL,CAAc,UAAAC,aAAa,EAAI;AAC7B,YAAMJ,OAAO,GAAGI,aAAa,CAACJ,OAA9B;;AACA,YAAI,CAACA,OAAO,CAACK,MAAR,CAAe,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACJ,GAAF,KAAUA,GAAd;AAAA,SAAhB,EAAmCK,MAAxC,EAAgD;AAC9C,iBAAO;AACLP,YAAAA,OAAO,EAAEA,OAAO,CAACQ,MAAR,CAAeP,MAAf;AADJ,WAAP;AAGD;AACF,OAPD;AAQD,K;+FAEQ,UAAAC,GAAG,EAAI;AACd,YAAKC,QAAL,CAAc,UAAAC,aAAa,EAAI;AAC7B,eAAO;AACLJ,UAAAA,OAAO,EAAEI,aAAa,CAACJ,OAAd,CAAsBK,MAAtB,CAA6B,UAAAJ,MAAM;AAAA,mBAAIA,MAAM,CAACC,GAAP,KAAeA,GAAnB;AAAA,WAAnC;AADJ,SAAP;AAGD,OAJD;AAKD,K;;;;;;wCA3BmB;AAClB,UAAMO,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAIC,cAAc,GAAGD,KAAK,CAACC,cAA3B;;AACA,UAAI,CAACA,cAAD,IAAmBD,KAAK,CAACE,SAA7B,EAAwC;AACtCD,QAAAA,cAAc,aAAMD,KAAK,CAACG,SAAZ,cAAyBH,KAAK,CAACE,SAA/B,CAAd;AACD;;AACD,aAAOD,cAAP;AACD;;;6BAsBQ;AAAA;AAAA;;AACP,UAAMD,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMI,WAAW,GAAG,KAAKC,KAAL,CAAWd,OAAX,CAAmBe,GAAnB,CAAuB,UAAAd,MAAM,EAAI;AACnD,YAAMe,OAAO,GAAG,uCAAsB,MAAI,CAACC,MAAL,CAAYC,IAAZ,CAAiB,MAAjB,EAAuBjB,MAAM,CAACC,GAA9B,CAAtB,EAA0DD,MAAM,CAACe,OAAjE,CAAhB;AACA,eACE,gCAAC,kBAAD;AACE,UAAA,SAAS,EAAEP,KAAK,CAACG;AADnB,WAEMX,MAFN;AAGE,UAAA,OAAO,EAAEe,OAHX;AAIE,UAAA,SAAS,EAAEP,KAAK,CAACU;AAJnB,YAMGlB,MAAM,CAACmB,OANV,CADF;AAUD,OAZmB,CAApB;AAaA,UAAMC,SAAS,kEACZZ,KAAK,CAACG,SADM,EACM,CADN,gDAEZH,KAAK,CAACY,SAFM,EAEM,CAAC,CAACZ,KAAK,CAACY,SAFd,cAAf;AAIA,aACE;AAAK,QAAA,SAAS,EAAE,4BAAWA,SAAX,CAAhB;AAAuC,QAAA,KAAK,EAAEZ,KAAK,CAACa;AAApD,SACE,gCAAC,mBAAD;AAAS,QAAA,cAAc,EAAE,KAAKC,iBAAL;AAAzB,SAAoDV,WAApD,CADF,CADF;AAKD;;;EA7GuCW,gB;;;iCAArBzB,Y,eACA;AACjBa,EAAAA,SAAS,EAAEa,sBAAUC,MADJ;AAEjBhB,EAAAA,cAAc,EAAEe,sBAAUC,MAFT;AAGjBf,EAAAA,SAAS,EAAEc,sBAAUE,SAAV,CAAoB,CAACF,sBAAUC,MAAX,EAAmBD,sBAAUG,MAA7B,CAApB,CAHM;AAIjBN,EAAAA,KAAK,EAAEG,sBAAUG,MAJA;AAKjBT,EAAAA,SAAS,EAAEM,sBAAUI;AALJ,C;iCADA9B,Y,kBASG;AACpBa,EAAAA,SAAS,EAAE,iBADS;AAEpBD,EAAAA,SAAS,EAAE,MAFS;AAGpBW,EAAAA,KAAK,EAAE;AACLQ,IAAAA,GAAG,EAAE,EADA;AAELC,IAAAA,IAAI,EAAE;AAFD;AAHa,C;iCATHhC,Y,iBAkBE,SAASiC,uBAAT,CAAiCC,UAAjC,EAA6CC,QAA7C,EAAuD;AAAA,aACvCD,UAAU,IAAI,EADyB;AAAA,MAClEE,YADkE,QAClEA,YADkE;AAAA,MACjD1B,KADiD;;AAE1E,MAAM2B,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;;AACA,MAAIH,YAAJ,EAAkB;AAChB,QAAMI,IAAI,GAAGJ,YAAY,EAAzB;AACAI,IAAAA,IAAI,CAACC,WAAL,CAAiBJ,GAAjB;AACD,GAHD,MAGO;AACLC,IAAAA,QAAQ,CAACI,IAAT,CAAcD,WAAd,CAA0BJ,GAA1B;AACD;;AACD,MAAIM,MAAM,GAAG,KAAb;;AAEA,WAASC,GAAT,CAAaC,YAAb,EAA2B;AACzB,QAAIF,MAAJ,EAAY;AACV;AACD;;AACDA,IAAAA,MAAM,GAAG,IAAT;AACAR,IAAAA,QAAQ,CAAC;AACPjC,MAAAA,MADO,kBACA4C,WADA,EACa;AAClBD,QAAAA,YAAY,CAACE,GAAb,CAAiBD,WAAjB;AACD,OAHM;AAIPE,MAAAA,YAJO,wBAIM7C,GAJN,EAIW;AAChB0C,QAAAA,YAAY,CAAC3B,MAAb,CAAoBf,GAApB;AACD,OANM;AAOP8C,MAAAA,SAAS,EAAEJ,YAPJ;AAQPK,MAAAA,OARO,qBAQG;AACRC,6BAASC,sBAAT,CAAgCf,GAAhC;;AACAA,QAAAA,GAAG,CAACgB,UAAJ,CAAeC,WAAf,CAA2BjB,GAA3B;AACD;AAXM,KAAD,CAAR;AAaD;;AAEDc,uBAASI,MAAT,CAAgB,gCAAC,YAAD,gCAAkB7C,KAAlB;AAAyB,IAAA,GAAG,EAAEkC;AAA9B,KAAhB,EAAuDP,GAAvD;AACD,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport Animate from '../../animate';\nimport createChainedFunction from '../util/createChainedFunction';\nimport classnames from 'classnames';\nimport Notice from './Notice';\n\nlet seed = 0;\nconst now = Date.now();\n\nfunction getUuid() {\n  return `rcNotification_${now}_${seed++}`;\n}\n\nexport default class Notification extends Component {\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    transitionName: PropTypes.string,\n    animation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    style: PropTypes.object,\n    closeIcon: PropTypes.node,\n  };\n\n  static defaultProps = {\n    prefixCls: 'rc-notification',\n    animation: 'fade',\n    style: {\n      top: 65,\n      left: '50%',\n    },\n  };\n\n  static newInstance = function newNotificationInstance(properties, callback) {\n    const { getContainer, ...props } = properties || {};\n    const div = document.createElement('div');\n    if (getContainer) {\n      const root = getContainer();\n      root.appendChild(div);\n    } else {\n      document.body.appendChild(div);\n    }\n    let called = false;\n\n    function ref(notification) {\n      if (called) {\n        return;\n      }\n      called = true;\n      callback({\n        notice(noticeProps) {\n          notification.add(noticeProps);\n        },\n        removeNotice(key) {\n          notification.remove(key);\n        },\n        component: notification,\n        destroy() {\n          ReactDOM.unmountComponentAtNode(div);\n          div.parentNode.removeChild(div);\n        },\n      });\n    }\n\n    ReactDOM.render(<Notification {...props} ref={ref} />, div);\n  };\n\n  state = {\n    notices: [],\n  };\n\n  getTransitionName() {\n    const props = this.props;\n    let transitionName = props.transitionName;\n    if (!transitionName && props.animation) {\n      transitionName = `${props.prefixCls}-${props.animation}`;\n    }\n    return transitionName;\n  }\n\n  add = notice => {\n    const key = (notice.key = notice.key || getUuid());\n    this.setState(previousState => {\n      const notices = previousState.notices;\n      if (!notices.filter(v => v.key === key).length) {\n        return {\n          notices: notices.concat(notice),\n        };\n      }\n    });\n  };\n\n  remove = key => {\n    this.setState(previousState => {\n      return {\n        notices: previousState.notices.filter(notice => notice.key !== key),\n      };\n    });\n  };\n\n  render() {\n    const props = this.props;\n    const noticeNodes = this.state.notices.map(notice => {\n      const onClose = createChainedFunction(this.remove.bind(this, notice.key), notice.onClose);\n      return (\n        <Notice\n          prefixCls={props.prefixCls}\n          {...notice}\n          onClose={onClose}\n          closeIcon={props.closeIcon}\n        >\n          {notice.content}\n        </Notice>\n      );\n    });\n    const className = {\n      [props.prefixCls]: 1,\n      [props.className]: !!props.className,\n    };\n    return (\n      <div className={classnames(className)} style={props.style}>\n        <Animate transitionName={this.getTransitionName()}>{noticeNodes}</Animate>\n      </div>\n    );\n  }\n}\n"]}