{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/TableHeaderCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { cloneElement, Component, CSSProperties, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { action, set, toJS, observable, runInAction } from 'mobx';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport omit from 'lodash/omit';\nimport debounce from 'lodash/debounce';\nimport defaultTo from 'lodash/defaultTo';\nimport isString from 'lodash/isString';\nimport classes from 'component-classes';\nimport {\n  DraggableProvided,\n  DraggableStateSnapshot,\n} from 'react-beautiful-dnd';\nimport { pxToRem } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport { isFunction, isNil } from 'lodash';\nimport { ColumnProps, minColumnWidth } from './Column';\nimport TableContext from './TableContext';\nimport { ElementProps } from '../core/ViewComponent';\nimport Icon from '../icon';\nimport DataSet from '../data-set/DataSet';\nimport EventManager from '../_util/EventManager';\nimport { getAlignByField, getColumnKey, getHeader } from './utils';\nimport { ColumnAlign, ColumnsEditType, DragColumnAlign } from './enum';\nimport { ShowHelp } from '../field/enum';\nimport Tooltip from '../tooltip';\nimport autobind from '../_util/autobind';\nimport { SELECTION_KEY, DRAG_KEY } from './TableStore';\nimport ObserverTextField from '../text-field/TextField';\n\nexport interface TableHeaderCellProps extends ElementProps {\n  dataSet: DataSet;\n  prevColumn?: ColumnProps;\n  column: ColumnProps;\n  resizeColumn?: ColumnProps;\n  rowSpan?: number;\n  colSpan?: number;\n  getHeaderNode: () => HTMLTableSectionElement | null;\n  snapshot: DraggableStateSnapshot,\n  provided: DraggableProvided;\n}\n\n@observer\nexport default class TableHeaderCell extends Component<TableHeaderCellProps, any> {\n  static displayName = 'TableHeaderCell';\n\n  static propTypes = {\n    column: PropTypes.object.isRequired,\n  };\n\n  static contextType = TableContext;\n\n  resizeEvent: EventManager = new EventManager(typeof window !== 'undefined' && document);\n\n  resizeBoundary: number = 0;\n\n  resizePosition?: number;\n\n  resizeColumn?: ColumnProps;\n\n  @observable editing: boolean;\n\n  constructor(props: TableHeaderCellProps) {\n    super(props);\n    runInAction(() => {\n      this.editing = false;\n    });\n  }\n\n  @action\n  setEditing(editing: boolean) {\n    this.editing = editing;\n  }\n\n  @autobind\n  handleClick() {\n    const { column, dataSet } = this.props;\n    const { name } = column;\n    if (name) {\n      dataSet.sort(name);\n    }\n  }\n\n  getNode(column) {\n    const { getHeaderNode } = this.props;\n    const headerDom: Element | null = getHeaderNode();\n    if (headerDom) {\n      return headerDom.querySelector(`[data-index=\"${getColumnKey(column)}\"]`);\n    }\n  }\n\n  setResizeColumn(column) {\n    this.resizeColumn = column;\n    const node = this.getNode(column);\n    if (node) {\n      this.resizeBoundary = node.getBoundingClientRect().left;\n    }\n  }\n\n  @autobind\n  handleLeftResize(e) {\n    const { prevColumn } = this.props;\n    this.setResizeColumn(prevColumn);\n    e.persist();\n    this.setresizeStart(e);\n  }\n\n  @autobind\n  handleRightResize(e) {\n    const { resizeColumn } = this.props;\n    this.setResizeColumn(resizeColumn);\n    e.persist();\n    this.setresizeStart(e);\n  }\n\n  private setresizeStart = debounce(\n    (e) => {\n      this.resizeStart(e);\n    },\n    300,\n  );\n\n  @autobind\n  handleLeftDoubleClick(_e) {\n    if (this.setresizeStart) {\n      this.setresizeStart.cancel();\n      this.resizeDoubleClick();\n    }\n  }\n\n  @autobind\n  handleRightDoubleClick(_e) {\n    if (this.setresizeStart) {\n      this.setresizeStart.cancel();\n      this.resizeDoubleClick();\n    }\n  }\n\n  @autobind\n  @action\n  resizeDoubleClick(): void {\n    const column = this.resizeColumn;\n    const { tableStore: { props: { autoMaxWidth } } } = this.context;\n    if (autoMaxWidth && column && column.innerMaxWidth) {\n      if (column.innerMaxWidth !== column.width) {\n        set(column, 'width', column.innerMaxWidth);\n      } else if (column.minWidth) {\n        set(column, 'width', column.minWidth);\n      }\n    }\n  }\n\n  @action\n  resizeStart(e): void {\n    const { prefixCls } = this.props;\n    const {\n      tableStore: {\n        node: { element },\n      },\n    } = this.context;\n    classes(element).add(`${prefixCls}-resizing`);\n    delete this.resizePosition;\n    this.setSplitLinePosition(e.pageX);\n    this.resizeEvent\n      .addEventListener('mousemove', this.resize)\n      .addEventListener('mouseup', this.resizeEnd);\n  }\n\n  @autobind\n  resize(e): void {\n    const column = this.resizeColumn;\n    const limit = this.resizeBoundary + minColumnWidth(column);\n    let left = e.pageX;\n    if (left < limit) {\n      left = limit;\n    }\n    this.resizePosition = this.setSplitLinePosition(left);\n  }\n\n  @autobind\n  @action\n  resizeEnd(): void {\n    const { prefixCls } = this.props;\n    const {\n      tableStore: {\n        node: { element },\n      },\n    } = this.context;\n    classes(element).remove(`${prefixCls}-resizing`);\n    this.resizeEvent.removeEventListener('mousemove').removeEventListener('mouseup');\n    const column = this.resizeColumn;\n    if (this.resizePosition && column) {\n      const newWidth = Math.max(this.resizePosition - this.resizeBoundary, minColumnWidth(column));\n      if (newWidth !== column.width) {\n        set(column, 'width', newWidth);\n      }\n    }\n  }\n\n  @action\n  setSplitLinePosition(left: number): number | undefined {\n    const {\n      tableStore: {\n        node: { resizeLine },\n      },\n    } = this.context;\n    const { left: rectLeft, width } = resizeLine.offsetParent.getBoundingClientRect();\n    left -= rectLeft;\n    if (left < 0) {\n      left = 0;\n    } else if (left >= width) {\n      left = width - 1;\n    }\n    resizeLine.style.left = pxToRem(left) || null;\n    return left + rectLeft;\n  }\n\n  renderResizer() {\n    const { prevColumn, column, prefixCls } = this.props;\n    const resizerPrefixCls = `${prefixCls}-resizer`;\n    const pre = prevColumn && prevColumn.resizable && (\n      <div\n        key=\"pre\"\n        className={`${resizerPrefixCls} ${resizerPrefixCls}-left`}\n        onDoubleClick={this.handleLeftDoubleClick}\n        onMouseDown={this.handleLeftResize}\n      />\n    );\n    const next = column.resizable && (\n      <div\n        key=\"next\"\n        className={`${resizerPrefixCls} ${resizerPrefixCls}-right`}\n        onDoubleClick={this.handleRightDoubleClick}\n        onMouseDown={this.handleRightResize}\n      />\n    );\n\n    return [pre, next];\n  }\n\n\n  @action\n  onChangeHeader = (value) => {\n    const {\n      tableStore: {\n        props: { columnsOnChange },\n        columns,\n      },\n    } = this.context;\n    const { column } = this.props;\n    set(column, 'header', value);\n    if (columnsOnChange) {\n      columnsOnChange({ column: toJS(column), columns: toJS(columns), type: ColumnsEditType.header });\n    }\n  };\n\n\n  @autobind\n  @action\n  onHeaderBlur() {\n    this.setEditing(false);\n  }\n\n\n  render() {\n    const { column, prefixCls, dataSet, rowSpan, colSpan, provided, snapshot } = this.props;\n    const {\n      tableStore: {\n        rowHeight,\n        columnMaxDeep,\n        columnResizable,\n        dragColumn,\n        dragRow,\n        headersEditable,\n        props: { columnsDragRender = {}, dragColumnAlign },\n      },\n    } = this.context;\n    const { renderIcon } = columnsDragRender;\n    const sortPrefixCls = `${prefixCls}-sort`;\n    const {\n      headerClassName,\n      headerStyle = {},\n      sortable,\n      name,\n      align,\n      help,\n      showHelp,\n      children,\n      command,\n      key,\n    } = column;\n    const classList: string[] = [`${prefixCls}-cell`];\n    const field = dataSet.getField(name);\n    if (headerClassName) {\n      classList.push(headerClassName);\n    }\n\n    let cellStyle: CSSProperties = {\n      textAlign:\n        align ||\n        (command || (children && children.length) ? ColumnAlign.center : getAlignByField(field)),\n      ...headerStyle,\n    };\n\n    const headerNode = getHeader(column, dataSet);\n\n    // 计数有多少个icon\n    let iconQuantity = 0;\n    let helpIcon;\n    let sortableIcon;\n    // 帮助按钮\n    if (showHelp !== ShowHelp.none) {\n      const fieldHelp = defaultTo(field && field.get('help'), help);\n      if (fieldHelp) {\n        helpIcon = (\n          <Tooltip title={fieldHelp} placement=\"bottom\" key=\"help\">\n            <Icon type=\"help_outline\" className={`${prefixCls}-help-icon`} />\n          </Tooltip>\n        );\n        iconQuantity += 24;\n      }\n    }\n    // 排序按钮\n    if (sortable && name) {\n      const sortProps = headersEditable ? { onClick: this.handleClick } : {};\n      iconQuantity += 18;\n      sortableIcon = <Icon key=\"sort\" type=\"arrow_upward\" className={`${sortPrefixCls}-icon`} {...sortProps} />;\n    }\n\n    const headerChildren = (headerChild) => {\n      if (isValidElement(headerChild)) {\n        return cloneElement(headerChild, { key: 'text' });\n      }\n      if (isString(headerChild) || (isNil(headerChild) && headersEditable)) {\n        const widthEdit = iconQuantity\n          ? `calc(100% - ${pxToRem(iconQuantity)})`\n          : headersEditable && !!name ? `100%` : undefined;\n        const spanStyle: CSSProperties = {\n          display: 'inline-block',\n          maxWidth: widthEdit,\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n        };\n        if (headersEditable && !!name) {\n          const editProps = {\n            defaultValue: headerChild,\n            value: headerChild,\n            onChange: this.onChangeHeader,\n            key: 'text',\n            style: { width: widthEdit },\n            className: `${prefixCls}-cell-inner-edit`,\n          };\n          if (dragColumn) {\n            return (\n              <ObserverTextField\n                {...editProps}\n              />\n            );\n          }\n          // 当为null 和 undefined 也可以编辑\n          if (!headerChild) {\n            spanStyle.height = '100%';\n          }\n          return (this.editing ? <ObserverTextField\n            autoFocus\n            onBlur={this.onHeaderBlur}\n            {...editProps}\n          /> : <span onClick={() => {\n            this.setEditing(true);\n          }} style={spanStyle} key=\"text\">{headerChild}</span>);\n        }\n        // 当文字在左边无法查看到icon处理\n        if (cellStyle.textAlign !== ColumnAlign.right && iconQuantity) {\n          return <span key=\"text\" style={spanStyle}>{headerChild}</span>;\n        }\n\n        return (<span key=\"text\">{headerNode}</span>);\n      }\n      return headerChild;\n    };\n\n    const innerProps: any = {\n      className: classNames(`${prefixCls}-cell-inner`, {\n        [`${prefixCls}-cell-editor`]: headersEditable && !key && !dragColumn,\n        [`${prefixCls}-header-edit`]: headersEditable && !key,\n        [`${prefixCls}-cell-editing`]: this.editing,\n      }),\n      children: [\n        headerChildren(headerNode),\n      ],\n    };\n\n    if (rowHeight !== 'auto') {\n      const rowHeightDIV = headersEditable ? pxToRem(rowHeight + 4) : pxToRem(rowHeight);\n      innerProps.style = {\n        height: rowHeightDIV,\n      };\n    }\n    const dragIcon = () => {\n      if (renderIcon && isFunction(renderIcon)) {\n        return renderIcon({\n          column,\n          dataSet,\n          snapshot,\n        });\n      }\n      if (column && column.key === DRAG_KEY) {\n        // 修复数据为空造成的th无法撑开\n        cellStyle.width = pxToRem(column.width);\n        return <Icon type=\"baseline-drag_indicator\" />;\n      }\n      return null;\n    };\n    if (\n      column.key !== SELECTION_KEY\n      && dragRow\n      && (dragColumnAlign === DragColumnAlign.left || dragColumnAlign === DragColumnAlign.right)\n      && columnMaxDeep <= 1\n    ) {\n      innerProps.children.push(dragIcon());\n    }\n\n    if (helpIcon) {\n      if (cellStyle.textAlign === ColumnAlign.right) {\n        innerProps.children.unshift(helpIcon);\n      } else {\n        innerProps.children.push(helpIcon);\n      }\n    }\n\n    if (sortableIcon) {\n      if (field) {\n        const { order } = field;\n        if (order) {\n          classList.push(`${sortPrefixCls}-${order}`);\n        }\n      }\n      if (!headersEditable) {\n        innerProps.onClick = this.handleClick;\n      }\n      if (cellStyle.textAlign === ColumnAlign.right) {\n        innerProps.children.unshift(sortableIcon);\n      } else {\n        innerProps.children.push(sortableIcon);\n      }\n    }\n    if (dragColumn && provided.draggableProps.style) {\n      cellStyle = { ...omit(cellStyle, ['width', 'height']), ...provided.draggableProps.style, cursor: 'move' };\n    }\n    return (\n      <th\n        className={classList.join(' ')}\n        rowSpan={rowSpan}\n        ref={(ref) => {\n          if (ref) {\n            provided.innerRef(ref);\n          }\n        }}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        colSpan={colSpan}\n        data-index={getColumnKey(column)}\n        style={cellStyle}\n      >\n        <div {...innerProps} />\n        {columnResizable && !dragColumn && this.renderResizer()}\n      </th>\n    );\n  }\n\n  componentWillUnmount() {\n    this.resizeEvent.clear();\n    this.setresizeStart.cancel();\n  }\n}\n"]}