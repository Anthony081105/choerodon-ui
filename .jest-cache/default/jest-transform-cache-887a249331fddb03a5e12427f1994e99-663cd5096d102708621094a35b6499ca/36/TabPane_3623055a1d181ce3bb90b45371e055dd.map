{"version":3,"sources":["TabPane.jsx"],"names":["TabPane","displayName","propTypes","className","PropTypes","string","active","bool","style","any","destroyInactiveTabPane","forceRender","placeholder","node","getDefaultProps","render","props","rootPrefixCls","children","restProps","_isActived","prefixCls","cls","isRender"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,OAAO,GAAG,kCAAiB;AAC/BC,EAAAA,WAAW,EAAE,SADkB;AAE/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAEC,sBAAUC,MADZ;AAETC,IAAAA,MAAM,EAAEF,sBAAUG,IAFT;AAGTC,IAAAA,KAAK,EAAEJ,sBAAUK,GAHR;AAITC,IAAAA,sBAAsB,EAAEN,sBAAUG,IAJzB;AAKTI,IAAAA,WAAW,EAAEP,sBAAUG,IALd;AAMTK,IAAAA,WAAW,EAAER,sBAAUS;AANd,GAFoB;AAU/BC,EAAAA,eAV+B,6BAUb;AAChB,WAAO;AAAEF,MAAAA,WAAW,EAAE;AAAf,KAAP;AACD,GAZ8B;AAa/BG,EAAAA,MAb+B,oBAatB;AAAA;;AAAA,sBAWH,KAAKC,KAXF;AAAA,QAELb,SAFK,eAELA,SAFK;AAAA,QAGLO,sBAHK,eAGLA,sBAHK;AAAA,QAILJ,MAJK,eAILA,MAJK;AAAA,QAKLK,WALK,eAKLA,WALK;AAAA,QAMLM,aANK,eAMLA,aANK;AAAA,QAOLT,KAPK,eAOLA,KAPK;AAAA,QAQLU,QARK,eAQLA,QARK;AAAA,QASLN,WATK,eASLA,WATK;AAAA,QAUFO,SAVE;AAYP,SAAKC,UAAL,GAAkB,KAAKA,UAAL,IAAmBd,MAArC;AACA,QAAMe,SAAS,aAAMJ,aAAN,aAAf;AACA,QAAMK,GAAG,GAAG,8FACTD,SADS,EACG,CADH,2DAENA,SAFM,gBAEiB,CAACf,MAFlB,2DAGNe,SAHM,cAGef,MAHf,iDAITH,SAJS,EAIGA,SAJH,gBAAZ;AAMA,QAAMoB,QAAQ,GAAGb,sBAAsB,GAAGJ,MAAH,GAAY,KAAKc,UAAxD;AACA,WACE;AACE,MAAA,KAAK,EAAEZ,KADT;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,qBAAaF,MAAM,GAAG,OAAH,GAAa,MAHlC;AAIE,MAAA,SAAS,EAAEgB;AAJb,OAKM,wBAAYH,SAAZ,CALN,GAOGI,QAAQ,IAAIZ,WAAZ,GAA0BO,QAA1B,GAAqCN,WAPxC,CADF;AAWD;AA7C8B,CAAjB,CAAhB;eAgDeZ,O","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport classnames from 'classnames';\nimport { getDataAttr } from './utils';\n\nconst TabPane = createReactClass({\n  displayName: 'TabPane',\n  propTypes: {\n    className: PropTypes.string,\n    active: PropTypes.bool,\n    style: PropTypes.any,\n    destroyInactiveTabPane: PropTypes.bool,\n    forceRender: PropTypes.bool,\n    placeholder: PropTypes.node,\n  },\n  getDefaultProps() {\n    return { placeholder: null };\n  },\n  render() {\n    const {\n      className,\n      destroyInactiveTabPane,\n      active,\n      forceRender,\n      rootPrefixCls,\n      style,\n      children,\n      placeholder,\n      ...restProps\n    } = this.props;\n    this._isActived = this._isActived || active;\n    const prefixCls = `${rootPrefixCls}-tabpane`;\n    const cls = classnames({\n      [prefixCls]: 1,\n      [`${prefixCls}-inactive`]: !active,\n      [`${prefixCls}-active`]: active,\n      [className]: className,\n    });\n    const isRender = destroyInactiveTabPane ? active : this._isActived;\n    return (\n      <div\n        style={style}\n        role=\"tabpanel\"\n        aria-hidden={active ? 'false' : 'true'}\n        className={cls}\n        {...getDataAttr(restProps)}\n      >\n        {isRender || forceRender ? children : placeholder}\n      </div>\n    );\n  },\n});\n\nexport default TabPane;\n"]}