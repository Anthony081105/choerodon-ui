bcecc038ad47e1974613c81fc5d8de4a
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _createReactClass = _interopRequireDefault(require("create-react-class"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _utils = require("./utils");

var TabContent = (0, _createReactClass["default"])({
  displayName: 'TabContent',
  propTypes: {
    animated: _propTypes["default"].bool,
    animatedWithMargin: _propTypes["default"].bool,
    prefixCls: _propTypes["default"].string,
    children: _propTypes["default"].any,
    activeKey: _propTypes["default"].string,
    style: _propTypes["default"].any,
    tabBarPosition: _propTypes["default"].string
  },
  getDefaultProps: function getDefaultProps() {
    return {
      animated: true
    };
  },
  getTabPanes: function getTabPanes() {
    var props = this.props;
    var activeKey = props.activeKey;
    var children = props.children;
    var newChildren = [];

    _react.Children.forEach(children, function (child, index) {
      if (!child) {
        return;
      }

      var key = (0, _utils.generateKey)(child.key, index);
      var active = activeKey === key;
      newChildren.push((0, _react.cloneElement)(child, {
        key: key,
        active: active,
        destroyInactiveTabPane: props.destroyInactiveTabPane,
        rootPrefixCls: props.prefixCls
      }));
    });

    return newChildren;
  },
  render: function render() {
    var _classnames;

    var props = this.props;
    var prefixCls = props.prefixCls,
        children = props.children,
        activeKey = props.activeKey,
        tabBarPosition = props.tabBarPosition,
        animated = props.animated,
        animatedWithMargin = props.animatedWithMargin;
    var style = props.style;
    var classes = (0, _classnames2["default"])((_classnames = {}, (0, _defineProperty2["default"])(_classnames, "".concat(prefixCls, "-content"), true), (0, _defineProperty2["default"])(_classnames, animated ? "".concat(prefixCls, "-content-animated") : "".concat(prefixCls, "-content-no-animated"), true), _classnames));

    if (animated) {
      var activeIndex = (0, _utils.getActiveIndex)(children, activeKey);

      if (activeIndex !== -1) {
        var animatedStyle = animatedWithMargin ? (0, _utils.getMarginStyle)(activeIndex, tabBarPosition) : (0, _utils.getTransformPropValue)((0, _utils.getTransformByIndex)(activeIndex, tabBarPosition));
        style = (0, _objectSpread2["default"])({}, style, {}, animatedStyle);
      } else {
        style = (0, _objectSpread2["default"])({}, style, {
          display: 'none'
        });
      }
    }

    return _react["default"].createElement("div", {
      className: classes,
      style: style
    }, this.getTabPanes());
  }
});
var _default = TabContent;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYnMvVGFiQ29udGVudC5qc3giXSwibmFtZXMiOlsiVGFiQ29udGVudCIsImRpc3BsYXlOYW1lIiwicHJvcFR5cGVzIiwiYW5pbWF0ZWQiLCJQcm9wVHlwZXMiLCJhbmltYXRlZFdpdGhNYXJnaW4iLCJwcmVmaXhDbHMiLCJjaGlsZHJlbiIsImFjdGl2ZUtleSIsInN0eWxlIiwidGFiQmFyUG9zaXRpb24iLCJzdHJpbmciLCJnZXREZWZhdWx0UHJvcHMiLCJnZXRUYWJQYW5lcyIsInByb3BzIiwibmV3Q2hpbGRyZW4iLCJDaGlsZHJlbiIsImtleSIsImNoaWxkIiwiYWN0aXZlIiwiZGVzdHJveUluYWN0aXZlVGFiUGFuZSIsInJvb3RQcmVmaXhDbHMiLCJyZW5kZXIiLCJjbGFzc2VzIiwiYWN0aXZlSW5kZXgiLCJhbmltYXRlZFN0eWxlIiwiZGlzcGxheSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxNQUFBLEdBQUEsdUJBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxpQkFBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFVBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFlBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLE1BQUEsR0FBQSxPQUFBLENBQUEsU0FBQSxDQUFBOztBQUVBLElBQU1BLFVBQVUsR0FBRyxDQUFBLEdBQUEsaUJBQUEsQ0FBQSxTQUFBLENBQUEsRUFBaUI7QUFDbENDLEVBQUFBLFdBQVcsRUFEdUIsWUFBQTtBQUVsQ0MsRUFBQUEsU0FBUyxFQUFFO0FBQ1RDLElBQUFBLFFBQVEsRUFBRUMsVUFBQUEsQ0FBQUEsU0FBQUEsQ0FBQUEsQ0FERCxJQUFBO0FBRVRDLElBQUFBLGtCQUFrQixFQUFFRCxVQUFBQSxDQUFBQSxT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QUFJQSxRQUFBLFFBQUEsRUFBYztBQUNaLFVBQU1xQixXQUFXLEdBQUcsQ0FBQSxHQUFBLE1BQUEsQ0FBQSxjQUFBLEVBQUEsUUFBQSxFQUFwQixTQUFvQixDQUFwQjs7QUFDQSxVQUFJQSxXQUFXLEtBQUssQ0FBcEIsQ0FBQSxFQUF3QjtBQUN0QixZQUFNQyxhQUFhLEdBQUdwQixrQkFBa0IsR0FBRyxDQUFBLEdBQUEsTUFBQSxDQUFBLGNBQUEsRUFBQSxXQUFBLEVBQUgsY0FBRyxDQUFILEdBQWlELENBQUEsR0FBQSxNQUFBLENBQUEscUJBQUEsRUFBc0IsQ0FBQSxHQUFBLE1BQUEsQ0FBQSxtQkFBQSxFQUFBLFdBQUEsRUFBL0csY0FBK0csQ0FBdEIsQ0FBekY7QUFDQUksUUFBQUEsS0FBSyxHQUFBLENBQUEsR0FBQSxjQUFBLENBQUEsU0FBQSxDQUFBLEVBQUEsRUFBQSxFQUFBLEtBQUEsRUFBQSxFQUFBLEVBQUxBLGFBQUssQ0FBTEE7QUFGRixPQUFBLE1BTU87QUFDTEEsUUFBQUEsS0FBSyxHQUFBLENBQUEsR0FBQSxjQUFBLENBQUEsU0FBQSxDQUFBLEVBQUEsRUFBQSxFQUFBLEtBQUEsRUFBQTtBQUVIaUIsVUFBQUEsT0FBTyxFQUFFO0FBRk4sU0FBQSxDQUFMakI7QUFJRDtBQUNGOztBQUNELFdBQ0UsTUFBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBLGFBQUEsQ0FBQSxLQUFBLEVBQUE7QUFDRSxNQUFBLFNBQVMsRUFEWCxPQUFBO0FBRUUsTUFBQSxLQUFLLEVBQUVBO0FBRlQsS0FBQSxFQUlHLEtBTEwsV0FLSyxFQUpILENBREY7QUFRRDtBQXhFaUMsQ0FBakIsQ0FBbkI7ZUEyRWVULFUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ2hpbGRyZW4sIGNsb25lRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjcmVhdGVSZWFjdENsYXNzIGZyb20gJ2NyZWF0ZS1yZWFjdC1jbGFzcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyBnZW5lcmF0ZUtleSwgZ2V0QWN0aXZlSW5kZXgsIGdldE1hcmdpblN0eWxlLCBnZXRUcmFuc2Zvcm1CeUluZGV4LCBnZXRUcmFuc2Zvcm1Qcm9wVmFsdWUgfSBmcm9tICcuL3V0aWxzJztcblxuY29uc3QgVGFiQ29udGVudCA9IGNyZWF0ZVJlYWN0Q2xhc3Moe1xuICBkaXNwbGF5TmFtZTogJ1RhYkNvbnRlbnQnLFxuICBwcm9wVHlwZXM6IHtcbiAgICBhbmltYXRlZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgYW5pbWF0ZWRXaXRoTWFyZ2luOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBwcmVmaXhDbHM6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5hbnksXG4gICAgYWN0aXZlS2V5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHN0eWxlOiBQcm9wVHlwZXMuYW55LFxuICAgIHRhYkJhclBvc2l0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB9LFxuICBnZXREZWZhdWx0UHJvcHMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFuaW1hdGVkOiB0cnVlLFxuICAgIH07XG4gIH0sXG4gIGdldFRhYlBhbmVzKCkge1xuICAgIGNvbnN0IHByb3BzID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBhY3RpdmVLZXkgPSBwcm9wcy5hY3RpdmVLZXk7XG4gICAgY29uc3QgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbjtcbiAgICBjb25zdCBuZXdDaGlsZHJlbiA9IFtdO1xuXG4gICAgQ2hpbGRyZW4uZm9yRWFjaChjaGlsZHJlbiwgKGNoaWxkLCBpbmRleCkgPT4ge1xuICAgICAgaWYgKCFjaGlsZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBrZXkgPSBnZW5lcmF0ZUtleShjaGlsZC5rZXksIGluZGV4KTtcbiAgICAgIGNvbnN0IGFjdGl2ZSA9IGFjdGl2ZUtleSA9PT0ga2V5O1xuICAgICAgbmV3Q2hpbGRyZW4ucHVzaChjbG9uZUVsZW1lbnQoY2hpbGQsIHtcbiAgICAgICAga2V5LFxuICAgICAgICBhY3RpdmUsXG4gICAgICAgIGRlc3Ryb3lJbmFjdGl2ZVRhYlBhbmU6IHByb3BzLmRlc3Ryb3lJbmFjdGl2ZVRhYlBhbmUsXG4gICAgICAgIHJvb3RQcmVmaXhDbHM6IHByb3BzLnByZWZpeENscyxcbiAgICAgIH0pKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBuZXdDaGlsZHJlbjtcbiAgfSxcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgcHJvcHMgfSA9IHRoaXM7XG4gICAgY29uc3Qge1xuICAgICAgcHJlZml4Q2xzLCBjaGlsZHJlbiwgYWN0aXZlS2V5LFxuICAgICAgdGFiQmFyUG9zaXRpb24sIGFuaW1hdGVkLCBhbmltYXRlZFdpdGhNYXJnaW4sXG4gICAgfSA9IHByb3BzO1xuICAgIGxldCB7IHN0eWxlIH0gPSBwcm9wcztcbiAgICBjb25zdCBjbGFzc2VzID0gY2xhc3NuYW1lcyh7XG4gICAgICBbYCR7cHJlZml4Q2xzfS1jb250ZW50YF06IHRydWUsXG4gICAgICBbYW5pbWF0ZWQgPyBgJHtwcmVmaXhDbHN9LWNvbnRlbnQtYW5pbWF0ZWRgIDogYCR7cHJlZml4Q2xzfS1jb250ZW50LW5vLWFuaW1hdGVkYF06IHRydWUsXG4gICAgfSk7XG4gICAgaWYgKGFuaW1hdGVkKSB7XG4gICAgICBjb25zdCBhY3RpdmVJbmRleCA9IGdldEFjdGl2ZUluZGV4KGNoaWxkcmVuLCBhY3RpdmVLZXkpO1xuICAgICAgaWYgKGFjdGl2ZUluZGV4ICE9PSAtMSkge1xuICAgICAgICBjb25zdCBhbmltYXRlZFN0eWxlID0gYW5pbWF0ZWRXaXRoTWFyZ2luID8gZ2V0TWFyZ2luU3R5bGUoYWN0aXZlSW5kZXgsIHRhYkJhclBvc2l0aW9uKSA6IGdldFRyYW5zZm9ybVByb3BWYWx1ZShnZXRUcmFuc2Zvcm1CeUluZGV4KGFjdGl2ZUluZGV4LCB0YWJCYXJQb3NpdGlvbikpO1xuICAgICAgICBzdHlsZSA9IHtcbiAgICAgICAgICAuLi5zdHlsZSxcbiAgICAgICAgICAuLi5hbmltYXRlZFN0eWxlLFxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3R5bGUgPSB7XG4gICAgICAgICAgLi4uc3R5bGUsXG4gICAgICAgICAgZGlzcGxheTogJ25vbmUnLFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzZXN9XG4gICAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgID5cbiAgICAgICAge3RoaXMuZ2V0VGFiUGFuZXMoKX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgVGFiQ29udGVudDtcbiJdfQ==