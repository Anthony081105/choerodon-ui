{"version":3,"sources":["align/Align.js"],"names":["obj","Align","Component","hidden","onAlign","noop","target","align","source","ref","monitorWindowResize","prevProps","preHidden","preAlign","preTarget","reAlign","lastTarget","currentTarget","isWindow","monitorBufferTime","EventManager","TaskRunner","props","childrenProps","children","newProps","Object","Children","PropTypes","any"],"mappings":"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","sourcesContent":["import { Children, cloneElement, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport noop from 'lodash/noop';\nimport domAlign from 'dom-align';\nimport EventManager from '../_util/EventManager';\nimport TaskRunner from '../_util/TaskRunner';\nfunction isWindow(obj) {\n    return obj != null && obj === obj.window;\n}\nexport default class Align extends Component {\n    forceAlign() {\n        const { hidden, onAlign = noop, target = () => window, align } = this.props;\n        if (!hidden) {\n            const source = findDOMNode(this);\n            const ref = target();\n            onAlign(source, domAlign(source, ref, align), ref);\n        }\n    }\n    componentDidMount() {\n        const { hidden, monitorWindowResize } = this.props;\n        this.forceAlign();\n        if (!hidden && monitorWindowResize) {\n            this.startMonitorWindowResize();\n        }\n    }\n    componentDidUpdate(prevProps) {\n        const { hidden, align, target = () => window, monitorWindowResize } = this.props;\n        const { hidden: preHidden, align: preAlign, target: preTarget } = prevProps;\n        let reAlign = false;\n        if (!hidden) {\n            if (preHidden || preAlign !== align) {\n                reAlign = true;\n            }\n            else {\n                const lastTarget = preTarget();\n                const currentTarget = target();\n                if (isWindow(lastTarget) && isWindow(currentTarget)) {\n                    reAlign = false;\n                }\n                else if (lastTarget !== currentTarget) {\n                    reAlign = true;\n                }\n            }\n        }\n        if (reAlign) {\n            this.forceAlign();\n        }\n        if (monitorWindowResize && !hidden) {\n            this.startMonitorWindowResize();\n        }\n        else {\n            this.stopMonitorWindowResize();\n        }\n    }\n    componentWillUnmount() {\n        this.stopMonitorWindowResize();\n    }\n    startMonitorWindowResize() {\n        const { monitorBufferTime } = this.props;\n        if (!this.resizeHandler) {\n            this.resizeHandler = new EventManager(window);\n            this.bufferMonitor = new TaskRunner();\n            this.resizeHandler.addEventListener('resize', this.bufferMonitor.delay.bind(this.bufferMonitor, monitorBufferTime, this.forceAlign.bind(this)));\n        }\n    }\n    stopMonitorWindowResize() {\n        if (this.resizeHandler) {\n            if (this.bufferMonitor) {\n                this.bufferMonitor.cancel();\n            }\n            this.resizeHandler.clear();\n            this.resizeHandler = null;\n        }\n    }\n    render() {\n        const { props } = this;\n        const { childrenProps, children } = props;\n        if (childrenProps) {\n            const newProps = {};\n            Object.keys(childrenProps).forEach(prop => {\n                if ({}.hasOwnProperty.call(childrenProps, prop)) {\n                    newProps[prop] = props[childrenProps[prop]];\n                }\n            });\n            return cloneElement(Children.only(children), newProps);\n        }\n        return children;\n    }\n}\nAlign.displayName = 'Align';\nAlign.propTypes = {\n    childrenProps: PropTypes.object,\n    align: PropTypes.object.isRequired,\n    target: PropTypes.func,\n    onAlign: PropTypes.func,\n    monitorBufferTime: PropTypes.number,\n    monitorWindowResize: PropTypes.bool,\n    hidden: PropTypes.bool,\n    children: PropTypes.any,\n};\nAlign.defaultProps = {\n    monitorBufferTime: 50,\n    monitorWindowResize: false,\n    hidden: true,\n};\n"]}