{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/TableFooter.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AACA;;AAQA,IAAqB,WAArB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAaQ;AAAA,wBACiC,KAAK,KADtC;AAAA,UACI,SADJ,eACI,SADJ;AAAA,UACe,IADf,eACe,IADf;AAAA,UACqB,OADrB,eACqB,OADrB;AAAA,kCAIA,KAAK,OAJL,CAGF,UAHE;AAAA,UAGY,yBAHZ,yBAGY,yBAHZ;AAAA,UAGuC,SAHvC,yBAGuC,SAHvC;AAAA,UAGkD,SAHlD,yBAGkD,SAHlD;AAKJ,UAAM,GAAG,GAAG,KAAK,WAAL,CAAiB,GAAjB,CAAqB,UAAA,MAAM,EAAG;AACxC,eACE,kBAAA,aAAA,CAAC,2BAAD,EAAgB;AACd,UAAA,GAAG,EAAE,yBAAa,MAAb,CADS;AAEd,UAAA,SAAS,EAAE,SAFG;AAGd,UAAA,OAAO,EAAE,OAHK;AAId,UAAA,MAAM,EAAE;AAJM,SAAhB,CADF;AAQD,OATW,CAAZ;;AAUA,UAAI,SAAS,IAAI,IAAI,KAAA;AAAA;AAArB,QAA2C;AACzC,UAAA,GAAG,CAAC,IAAJ,CACE,kBAAA,aAAA,CAAA,IAAA,EAAA;AAAI,YAAA,GAAG,EAAC,cAAR;AAAuB,YAAA,SAAS,YAAK,SAAL;AAAhC,WAAA,EAAqD,MAArD,CADF;AAKD;;AACD,aACE,kBAAA,aAAA,CAAA,OAAA,EAAA;AAAO,QAAA,SAAS,YAAK,SAAL;AAAhB,OAAA,EACE,kBAAA,aAAA,CAAA,IAAA,EAAA;AACE,QAAA,KAAK,EAAE;AACL,UAAA,MAAM,EACJ,IAAI,IAAI,SAAS,KAAK,MAAtB,GAA+B,4BAAQ,eAAI,yBAAJ,EAA+B,CAA/B,CAAR,CAA/B,GAA4E;AAFzE;AADT,OAAA,EAMG,GANH,CADF,CADF;AAYD;AA/CH;AAAA;AAAA,wBAkDiB;AAAA,UACL,UADK,GACU,KAAK,OADf,CACL,UADK;AAAA,UAEL,IAFK,GAEI,KAAK,KAFT,CAEL,IAFK;;AAGb,UAAI,IAAI,KAAK,OAAb,EAAsB;AACpB,eAAO,UAAU,CAAC,gBAAX,CAA4B,MAA5B,CAAmC;AAAA,cAAG,MAAH,QAAG,MAAH;AAAA,iBAAgB,CAAC,MAAjB;AAAA,SAAnC,CAAP;AACD;;AACD,UAAI,IAAJ,EAAU;AACR,eAAO,UAAU,CAAC,eAAX,CAA2B,MAA3B,CAAkC;AAAA,cAAG,MAAH,SAAG,MAAH;AAAA,iBAAgB,CAAC,MAAjB;AAAA,SAAlC,CAAP;AACD;;AACD,aAAO,UAAU,CAAC,WAAX,CAAuB,MAAvB,CAA8B;AAAA,YAAG,MAAH,SAAG,MAAH;AAAA,eAAgB,CAAC,MAAjB;AAAA,OAA9B,CAAP;AACD;AA5DH;AAAA;AAAA,EAAyC,gBAAzC,CAAA;;AACS,WAAA,CAAA,WAAA,GAAc,aAAd;AAEA,WAAA,CAAA,SAAA,GAAY;AACjB,EAAA,SAAS,EAAE,sBAAU,MADJ;AAEjB,EAAA,IAAI,EAAE,sBAAU,SAAV,CAAoB,CACxB,sBAAU,IADc,EAExB,sBAAU,KAAV,CAAgB,CAAA;AAAA;AAAA,IAAA;AAAA;AAAA,GAAhB,CAFwB,CAApB;AAFW,CAAZ;AAQA,WAAA,CAAA,WAAA,GAAc,wBAAd;AAuCP,uBAAA,CADC,cACD,CAAA,E,qBAAA,E,aAAA,EAUC,IAVD;AAlDmB,WAAW,GAAA,uBAAA,CAD/B,mBAC+B,CAAA,EAAX,WAAW,CAAX;eAAA,W","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { computed, get } from 'mobx';\nimport { pxToRem } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport { ColumnProps } from './Column';\nimport { ElementProps } from '../core/ViewComponent';\nimport TableContext from './TableContext';\nimport { ColumnLock } from './enum';\nimport DataSet from '../data-set/DataSet';\nimport TableFooterCell from './TableFooterCell';\nimport { getColumnKey } from './utils';\n\nexport interface TableFooterProps extends ElementProps {\n  dataSet: DataSet;\n  lock?: ColumnLock | boolean;\n}\n\n@observer\nexport default class TableFooter extends Component<TableFooterProps, any> {\n  static displayName = 'TableFooter';\n\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    lock: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf([ColumnLock.right, ColumnLock.left]),\n    ]),\n  };\n\n  static contextType = TableContext;\n\n  render() {\n    const { prefixCls, lock, dataSet } = this.props;\n    const {\n      tableStore: { lockColumnsFootRowsHeight, overflowY, rowHeight },\n    } = this.context;\n    const tds = this.leafColumns.map(column => {\n      return (\n        <TableFooterCell\n          key={getColumnKey(column)}\n          prefixCls={prefixCls}\n          dataSet={dataSet}\n          column={column}\n        />\n      );\n    });\n    if (overflowY && lock !== ColumnLock.left) {\n      tds.push(\n        <th key=\"fixed-column\" className={`${prefixCls}-cell`}>\n          &nbsp;\n        </th>,\n      );\n    }\n    return (\n      <tfoot className={`${prefixCls}-tfoot`}>\n        <tr\n          style={{\n            height:\n              lock && rowHeight === 'auto' ? pxToRem(get(lockColumnsFootRowsHeight, 0)) : undefined,\n          }}\n        >\n          {tds}\n        </tr>\n      </tfoot>\n    );\n  }\n\n  @computed\n  get leafColumns(): ColumnProps[] {\n    const { tableStore } = this.context;\n    const { lock } = this.props;\n    if (lock === 'right') {\n      return tableStore.rightLeafColumns.filter(({ hidden }) => !hidden);\n    }\n    if (lock) {\n      return tableStore.leftLeafColumns.filter(({ hidden }) => !hidden);\n    }\n    return tableStore.leafColumns.filter(({ hidden }) => !hidden);\n  }\n}\n"]}