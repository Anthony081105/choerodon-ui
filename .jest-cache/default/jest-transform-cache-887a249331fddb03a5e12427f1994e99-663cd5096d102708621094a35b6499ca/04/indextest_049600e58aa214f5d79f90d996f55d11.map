{"version":3,"sources":["index.test.js"],"names":["IconPicker","IconItem","IconPickerTest","describe","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","it","wrapper","expect","toMatchSnapshot","props","value","toEqual","pageSize","find","simulate","runAllTimers","update","keyCode","at","prop","toBe","setProps","readOnly","instance","renderIconCategories","name","customFontName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport IconPicker from '..';\nimport IconItem from '../IconItem';\nimport IconPickerTest from './IconPicker';\nimport mountTest from '../../../tests/shared/mountTest';\nimport focusTest from '../../../tests/shared/focusTest';\nimport TriggerPopTest from '../../../tests/shared/triggerPopTest';\nimport { simulateCode } from './utils';\n\nmountTest(IconPicker);\nmountTest(IconItem);\nmountTest(IconPickerTest);\nfocusTest(IconPicker);\nTriggerPopTest(IconPicker);\n\ndescribe('Icon-Picker-pro', () => {\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  it('renders IconPicker correctly', () => {\n    const wrapper = mount(<IconPicker />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  it('should show {value} when the property value is existed', () => {\n    const wrapper = mount(<IconPicker value=\"add\" />);\n    expect(wrapper.props().value).toEqual('add');\n    expect(wrapper.props().pageSize).toEqual(100);\n  });\n\n  it('the selected click render correctly', () => {\n    const wrapper = mount(<IconPicker />);\n    wrapper.find('input').simulate('click');\n    jest.runAllTimers();\n    wrapper.find('.c7n-pro-icon-picker-item-selected > div').simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  it('the keydown event should render correctly', () => {\n    const wrapper = mount(<IconPicker />);\n    wrapper.find('input').simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n    simulateCode(wrapper, 39);\n    simulateCode(wrapper, 37);\n    simulateCode(wrapper, 40);\n    simulateCode(wrapper, 38);\n    simulateCode(wrapper, 35);\n    simulateCode(wrapper, 36);\n    simulateCode(wrapper, 33);\n    simulateCode(wrapper, 34);\n    simulateCode(wrapper, 13);\n    simulateCode(wrapper, 10);\n    wrapper.update();\n    expect(wrapper).toMatchSnapshot();\n  });\n  it('the keydown event should render keyCode {space} correctly', () => {\n    const wrapper = mount(<IconPicker />);\n    wrapper.find('input').simulate('keydown', { keyCode: 32 });\n    jest.runAllTimers();\n    wrapper.update();\n    expect(wrapper).toMatchSnapshot();\n  });\n  it('the keydown event should render keyCode { esc, tab } correctly', () => {\n    const wrapper = mount(<IconPicker />);\n    wrapper.find('input').simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n    simulateCode(wrapper, 9);\n    wrapper.update();\n    wrapper.find('input').simulate('click');\n    jest.runAllTimers();\n    simulateCode(wrapper, 27);\n    wrapper.update();\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  it('input should nothing when click firstly  ', () => {\n    const wrapper = mount(<IconPicker />);\n    wrapper.find('.c7n-pro-icon-picker-wrapper').simulate('click');\n    jest.runAllTimers();\n    expect(\n      wrapper\n        .find('input')\n        .at(0)\n        .prop('value'),\n    ).toBe('');\n  });\n  it('input should render readOnly correctly', () => {\n    const wrapper = mount(<IconPicker />);\n    expect(wrapper.prop('readOnly')).toBe(false);\n    wrapper.setProps({ readOnly: true });\n    wrapper.update();\n    expect(wrapper.prop('readOnly')).toBe(true);\n    expect(wrapper.instance().renderIconCategories()).toMatchSnapshot();\n  });\n\n  it('should renders dataset correctly', () => {\n    const wrapper = mount(<IconPickerTest />);\n    expect(wrapper).toMatchSnapshot();\n    expect(wrapper.find('IconPicker').props().name).toEqual('icon');\n    expect(\n      wrapper\n        .find('input')\n        .at(0)\n        .prop('value'),\n    ).toBe('cancel');\n  });\n\n  it('should has custom font name ' , () => {\n    const wrapper = mount(<IconPicker icons={['clubs']} customFontName=\"c7ntest1\" onChange={() => {}} />);\n    wrapper.find('input').simulate('click');\n    jest.runAllTimers();\n    wrapper.update();\n    simulateCode(wrapper, 9);\n    wrapper.update();\n    wrapper.find('input').simulate('click');\n    jest.runAllTimers();\n    simulateCode(wrapper, 27);\n    wrapper.update();\n    expect(wrapper.find('IconPicker').props().customFontName).toEqual('c7ntest1');\n  })\n});\n"]}