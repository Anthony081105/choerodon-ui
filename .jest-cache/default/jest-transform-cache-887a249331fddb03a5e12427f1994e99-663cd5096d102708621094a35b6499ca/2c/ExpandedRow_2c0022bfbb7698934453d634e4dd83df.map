{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/ExpandedRow.tsx"],"names":[],"mappings":";;;;;;;;;AACA;;AAoBA,IAAM,WAAW,GAAwC,SAAnD,WAAmD,CAAA,KAAK,EAAG;AAAA,MACvD,UADuD,GACA,KADA,CACvD,UADuD;AAAA,wBACA,KADA,CAC3C,QAD2C;AAAA,MAC3C,QAD2C,gCAChC,IADgC;AAAA,MAC1B,OAD0B,GACA,KADA,CAC1B,OAD0B;AAAA,MACjB,MADiB,GACA,KADA,CACjB,MADiB;AAAA,MACT,IADS,GACA,KADA,CACT,IADS;;AAG/D,MAAI,4BAAW,QAAX,CAAJ,EAA0B;AACxB,QAAM,KAAK,GAAG,QAAQ,CAAC,OAAD,EAAU,MAAV,EAAkB,UAAlB,EAA8B,IAA9B,CAAtB;;AACA,QAAI,KAAJ,EAAW;AACT,aAAO,KAAP;AACD;AACF;;AACD,SAAO,QAAP;AACD,CAVD;;eAYe,W","sourcesContent":["import { FunctionComponent, ReactNode } from 'react';\nimport isFunction from 'lodash/isFunction';\nimport { ColumnProps } from './Column';\nimport Record from '../data-set/Record';\nimport { ColumnLock } from './enum';\n\nexport interface ExpandedRowProps {\n  isExpanded?: boolean;\n  columns: ColumnProps[];\n  record: Record;\n  lock?: ColumnLock | boolean;\n  children?:\n    | ReactNode\n    | ((\n        columns: ColumnProps[],\n        record: Record,\n        isExpanded?: boolean,\n        lock?: ColumnLock | boolean,\n      ) => ReactNode);\n}\n\nconst ExpandedRow: FunctionComponent<ExpandedRowProps> = props => {\n  const { isExpanded, children = null, columns, record, lock } = props;\n\n  if (isFunction(children)) {\n    const child = children(columns, record, isExpanded, lock);\n    if (child) {\n      return child;\n    }\n  }\n  return children;\n};\n\nexport default ExpandedRow;\n"]}