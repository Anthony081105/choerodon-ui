{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/stores/LovCodeStore.tsx"],"names":[],"mappings":"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","sourcesContent":["import isNil from 'lodash/isNil';\nimport { action, observable, ObservableMap, runInAction } from 'mobx';\nimport { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { getConfig } from 'choerodon-ui/lib/configure';\nimport warning from 'choerodon-ui/lib/_util/warning';\nimport DataSet, { DataSetProps } from '../data-set/DataSet';\nimport axios from '../axios';\nimport Field, { FieldProps } from '../data-set/Field';\nimport { FieldType } from '../data-set/enum';\nimport { LovFieldType } from '../lov/enum';\nimport { LovConfig, LovConfigItem } from '../lov/Lov';\nimport { processAxiosConfig } from './utils';\nimport { TransportHookProps } from '../data-set/Transport';\n\nfunction getFieldType(conditionFieldType?: FieldType | LovFieldType): FieldType {\n  switch (conditionFieldType) {\n    case LovFieldType.INT:\n      return FieldType.number;\n    case LovFieldType.TEXT:\n      return FieldType.string;\n    case LovFieldType.DATE:\n      return FieldType.date;\n    case LovFieldType.DATETIME:\n      return FieldType.dateTime;\n    case LovFieldType.POPUP:\n      return FieldType.object;\n    default:\n      return (conditionFieldType as FieldType) || FieldType.string;\n  }\n}\n\nfunction generateConditionField(\n  fields: FieldProps[],\n  {\n    conditionField,\n    conditionFieldType,\n    conditionFieldName,\n    gridFieldName,\n    display,\n    conditionFieldLovCode,\n    conditionFieldSelectCode,\n    conditionFieldSelectUrl,\n    conditionFieldSelectTf,\n    conditionFieldSelectVf,\n    conditionFieldRequired,\n    fieldProps,\n  }: LovConfigItem,\n): void {\n  if (conditionField === 'Y') {\n    const name = conditionFieldName || gridFieldName;\n    const field = {\n      name,\n      type: getFieldType(conditionFieldType),\n      label: display,\n      lovCode: conditionFieldLovCode || undefined,\n      lookupCode: conditionFieldSelectCode || undefined,\n      lookupUrl: conditionFieldSelectUrl || undefined,\n      textField: conditionFieldSelectTf || undefined,\n      valueField: conditionFieldSelectVf || undefined,\n      required: conditionFieldRequired || undefined,\n      ...fieldProps,\n    };\n    fields.push(field);\n    if (conditionFieldType === LovFieldType.POPUP) {\n      const aliasName = `__lov__${name}`;\n      field.name = aliasName;\n      fields.push({\n        name,\n        bind: `${aliasName}.${conditionFieldSelectVf}`,\n      });\n    }\n  }\n}\n\nfunction generateGridField(\n  fields: FieldProps[],\n  { gridField, gridFieldName, display, fieldProps }: LovConfigItem,\n  valueField?: string,\n): void {\n  if (gridField === 'Y') {\n    fields.push({\n      name: gridFieldName,\n      label: display,\n      unique: valueField === gridFieldName,\n      ...fieldProps,\n    });\n  }\n}\n\nexport class LovCodeStore {\n  @observable lovCodes: ObservableMap<string, LovConfig>;\n\n  pendings = {};\n\n  get axios(): AxiosInstance {\n    return getConfig('axios') || axios;\n  }\n\n  constructor() {\n    this.init();\n  }\n\n  @action\n  init() {\n    this.lovCodes = observable.map<string, LovConfig>();\n  }\n\n  getDefineAxiosConfig(code: string, field?: Field): AxiosRequestConfig | undefined {\n    const lovDefineAxiosConfig =\n      (field && field.get('lovDefineAxiosConfig')) || getConfig('lovDefineAxiosConfig');\n    const config = processAxiosConfig(lovDefineAxiosConfig, code);\n    return {\n      ...config,\n      url: config.url || this.getConfigUrl(code, field),\n      method: config.method || 'post',\n    };\n  }\n\n  getConfig(code: string): LovConfig | undefined {\n    return this.lovCodes.get(code);\n  }\n\n  async fetchConfig(code: string, field?: Field): Promise<LovConfig | undefined> {\n    let config = this.getConfig(code);\n    // SSR do not fetch the lookup\n    if (!config && typeof window !== 'undefined') {\n      const axiosConfig = this.getDefineAxiosConfig(code, field);\n      if (axiosConfig) {\n        try {\n          const pending = this.pendings[code] || this.axios(axiosConfig);\n          this.pendings[code] = pending;\n          config = await pending;\n          runInAction(() => {\n            if (config) {\n              this.lovCodes.set(code, config);\n            }\n          });\n        } finally {\n          delete this.pendings[code];\n        }\n      }\n    }\n    return config;\n  }\n\n  // lovCode 作为key 缓存了 ds\n  getLovDataSet(code: string, field?: Field): DataSet | undefined {\n    const config = this.getConfig(code);\n    if (config) {\n      const { lovPageSize, lovItems, parentIdField, idField, valueField, treeFlag } = config;\n      const dataSetProps: DataSetProps = {\n        transport: {\n          read: this.getQueryAxiosConfig(code, field, config),\n        },\n        primaryKey: valueField,\n        cacheSelection: true,\n      };\n      if (!isNil(lovPageSize) && !isNaN(Number(lovPageSize))) {\n        dataSetProps.pageSize = Number(lovPageSize);\n      } else {\n        dataSetProps.paging = false;\n      }\n      if (treeFlag === 'Y' && parentIdField && idField) {\n        dataSetProps.parentField = parentIdField;\n        dataSetProps.idField = idField;\n      }\n\n      if (lovItems && lovItems.length) {\n        const { querys, fields } = lovItems\n          .sort(\n            ({ conditionFieldSequence }, { conditionFieldSequence: conditionFieldSequence2 }) =>\n              conditionFieldSequence - conditionFieldSequence2,\n          )\n          .reduce(\n            (obj, configItem) => {\n              generateConditionField(obj.querys, configItem);\n              generateGridField(obj.fields, configItem, valueField);\n              return obj;\n            },\n            { querys: [] as FieldProps[], fields: [] as FieldProps[] },\n          );\n        if (querys.length) {\n          dataSetProps.queryFields = querys;\n        }\n        if (fields.length) {\n          dataSetProps.fields = fields;\n        }\n      }\n      return new DataSet(dataSetProps);\n    }\n    warning(false, `LOV: code<${code}> is not exists`);\n    return undefined;\n  }\n\n  getConfigUrl(code: string, field?: Field): string {\n    const lovDefineUrl = (field && field.get('lovDefineUrl')) || getConfig('lovDefineUrl');\n    if (typeof lovDefineUrl === 'function') {\n      return lovDefineUrl(code);\n    }\n    return lovDefineUrl as string;\n  }\n\n  getQueryAxiosConfig(code: string, field?: Field, config?: LovConfig) {\n    return (props: TransportHookProps) => {\n      const lovQueryAxiosConfig =\n        (field && field.get('lovQueryAxiosConfig')) || getConfig('lovQueryAxiosConfig');\n      const axiosConfig = processAxiosConfig(lovQueryAxiosConfig, code, config, props);\n      return {\n        ...axiosConfig,\n        url: axiosConfig.url || this.getQueryUrl(code, field, props),\n        method: axiosConfig.method || 'post',\n      };\n    };\n  }\n\n  getQueryUrl(code: string, field: Field | undefined, props: TransportHookProps): string {\n    const config = this.getConfig(code);\n    if (config) {\n      const { customUrl } = config;\n      if (customUrl) {\n        return customUrl;\n      }\n    }\n\n    const lovQueryUrl = (field && field.get('lovQueryUrl')) || getConfig('lovQueryUrl');\n\n    if (typeof lovQueryUrl === 'function') {\n      return lovQueryUrl(code, config, props);\n    }\n    return lovQueryUrl as string;\n  }\n\n  @action\n  clearCache(codes?: string[]) {\n    if (codes) {\n      codes.forEach(code => {\n        this.lovCodes.delete(code);\n      });\n    } else {\n      this.lovCodes.clear();\n    }\n  }\n}\n\nexport default new LovCodeStore();\n"]}