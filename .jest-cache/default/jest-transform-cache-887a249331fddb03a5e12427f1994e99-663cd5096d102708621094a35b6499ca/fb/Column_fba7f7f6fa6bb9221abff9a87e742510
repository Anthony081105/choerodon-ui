db5be9228c10a4cc57c60314d6144b56
"use strict";

/* istanbul ignore next */
function cov_16vqtdyh8g() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/Column.tsx";
  var hash = "8fdd6c9fb1a96f91a15a9d57bb7765c6f0af0639";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/Column.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 40
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "4": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 54
        }
      },
      "5": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 95
        }
      },
      "6": {
        start: {
          line: 14,
          column: 34
        },
        end: {
          line: 14,
          column: 117
        }
      },
      "7": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 95
        }
      },
      "8": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 83
        }
      },
      "9": {
        start: {
          line: 20,
          column: 13
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "10": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "11": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "12": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 25
        }
      },
      "13": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 42
        }
      },
      "14": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 42,
          column: 19
        }
      },
      "15": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 34,
          column: 49
        }
      },
      "16": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 51
        }
      },
      "17": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 126
        }
      },
      "18": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 41,
          column: 16
        }
      },
      "19": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 28
        }
      },
      "20": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 148,
          column: 2
        }
      },
      "21": {
        start: {
          line: 149,
          column: 0
        },
        end: {
          line: 159,
          column: 2
        }
      },
      "22": {
        start: {
          line: 162,
          column: 15
        },
        end: {
          line: 162,
          column: 44
        }
      },
      "23": {
        start: {
          line: 164,
          column: 2
        },
        end: {
          line: 166,
          column: 3
        }
      },
      "24": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "25": {
        start: {
          line: 168,
          column: 14
        },
        end: {
          line: 168,
          column: 42
        }
      },
      "26": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 43
        }
      },
      "27": {
        start: {
          line: 170,
          column: 17
        },
        end: {
          line: 170,
          column: 58
        }
      },
      "28": {
        start: {
          line: 172,
          column: 2
        },
        end: {
          line: 174,
          column: 3
        }
      },
      "29": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 173,
          column: 20
        }
      },
      "30": {
        start: {
          line: 176,
          column: 2
        },
        end: {
          line: 176,
          column: 35
        }
      },
      "31": {
        start: {
          line: 180,
          column: 15
        },
        end: {
          line: 180,
          column: 44
        }
      },
      "32": {
        start: {
          line: 182,
          column: 2
        },
        end: {
          line: 184,
          column: 3
        }
      },
      "33": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 13
        }
      },
      "34": {
        start: {
          line: 186,
          column: 14
        },
        end: {
          line: 186,
          column: 42
        }
      },
      "35": {
        start: {
          line: 188,
          column: 2
        },
        end: {
          line: 196,
          column: 3
        }
      },
      "36": {
        start: {
          line: 189,
          column: 19
        },
        end: {
          line: 189,
          column: 50
        }
      },
      "37": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "38": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 192,
          column: 29
        }
      },
      "39": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 195,
          column: 20
        }
      },
      "40": {
        start: {
          line: 198,
          column: 2
        },
        end: {
          line: 198,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 33,
            column: 0
          },
          end: {
            line: 33,
            column: 1
          }
        },
        loc: {
          start: {
            line: 33,
            column: 22
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 33
      },
      "1": {
        name: "Column",
        decl: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 17
          }
        },
        loc: {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 39,
            column: 3
          }
        },
        line: 36
      },
      "2": {
        name: "minColumnWidth",
        decl: {
          start: {
            line: 161,
            column: 9
          },
          end: {
            line: 161,
            column: 23
          }
        },
        loc: {
          start: {
            line: 161,
            column: 29
          },
          end: {
            line: 177,
            column: 1
          }
        },
        line: 161
      },
      "3": {
        name: "columnWidth",
        decl: {
          start: {
            line: 179,
            column: 9
          },
          end: {
            line: 179,
            column: 20
          }
        },
        loc: {
          start: {
            line: 179,
            column: 26
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 179
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 164,
            column: 2
          },
          end: {
            line: 166,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 2
          },
          end: {
            line: 166,
            column: 3
          }
        }, {
          start: {
            line: 164,
            column: 2
          },
          end: {
            line: 166,
            column: 3
          }
        }],
        line: 164
      },
      "1": {
        loc: {
          start: {
            line: 170,
            column: 17
          },
          end: {
            line: 170,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 37
          },
          end: {
            line: 170,
            column: 52
          }
        }, {
          start: {
            line: 170,
            column: 55
          },
          end: {
            line: 170,
            column: 58
          }
        }],
        line: 170
      },
      "2": {
        loc: {
          start: {
            line: 172,
            column: 2
          },
          end: {
            line: 174,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 2
          },
          end: {
            line: 174,
            column: 3
          }
        }, {
          start: {
            line: 172,
            column: 2
          },
          end: {
            line: 174,
            column: 3
          }
        }],
        line: 172
      },
      "3": {
        loc: {
          start: {
            line: 182,
            column: 2
          },
          end: {
            line: 184,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 2
          },
          end: {
            line: 184,
            column: 3
          }
        }, {
          start: {
            line: 182,
            column: 2
          },
          end: {
            line: 184,
            column: 3
          }
        }],
        line: 182
      },
      "4": {
        loc: {
          start: {
            line: 188,
            column: 2
          },
          end: {
            line: 196,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 2
          },
          end: {
            line: 196,
            column: 3
          }
        }, {
          start: {
            line: 188,
            column: 2
          },
          end: {
            line: 196,
            column: 3
          }
        }],
        line: 188
      },
      "5": {
        loc: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        }, {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        }],
        line: 191
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8fdd6c9fb1a96f91a15a9d57bb7765c6f0af0639"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_16vqtdyh8g = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_16vqtdyh8g();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_16vqtdyh8g().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_16vqtdyh8g().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_16vqtdyh8g().s[2]++;
exports.minColumnWidth = minColumnWidth;

/* istanbul ignore next */
cov_16vqtdyh8g().s[3]++;
exports.columnWidth = columnWidth;

/* istanbul ignore next */
cov_16vqtdyh8g().s[4]++;
exports["default"] = exports.defaultMinWidth = void 0;

var _classCallCheck2 =
/* istanbul ignore next */
(cov_16vqtdyh8g().s[5]++, _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck")));

var _possibleConstructorReturn2 =
/* istanbul ignore next */
(cov_16vqtdyh8g().s[6]++, _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn")));

var _getPrototypeOf2 =
/* istanbul ignore next */
(cov_16vqtdyh8g().s[7]++, _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf")));

var _inherits2 =
/* istanbul ignore next */
(cov_16vqtdyh8g().s[8]++, _interopRequireDefault(require("@babel/runtime/helpers/inherits")));

var _react =
/* istanbul ignore next */
(cov_16vqtdyh8g().s[9]++, require("react"));

var _propTypes =
/* istanbul ignore next */
(cov_16vqtdyh8g().s[10]++, _interopRequireDefault(require("prop-types")));

var _mobx =
/* istanbul ignore next */
(cov_16vqtdyh8g().s[11]++, require("mobx"));

var defaultMinWidth =
/* istanbul ignore next */
(cov_16vqtdyh8g().s[12]++, 100);
/* eslint-disable react/prefer-stateless-function,react/no-unused-prop-types */

/* istanbul ignore next */
cov_16vqtdyh8g().s[13]++;
exports.defaultMinWidth = defaultMinWidth;
var Column =
/* istanbul ignore next */
(
/*#__PURE__*/
cov_16vqtdyh8g().s[14]++, function (_Component) {
  /* istanbul ignore next */
  cov_16vqtdyh8g().f[0]++;
  cov_16vqtdyh8g().s[15]++;
  (0, _inherits2["default"])(Column, _Component);

  function Column() {
    /* istanbul ignore next */
    cov_16vqtdyh8g().f[1]++;
    cov_16vqtdyh8g().s[16]++;
    (0, _classCallCheck2["default"])(this, Column);

    /* istanbul ignore next */
    cov_16vqtdyh8g().s[17]++;
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Column).apply(this, arguments));
  }

  /* istanbul ignore next */
  cov_16vqtdyh8g().s[18]++;
  return Column;
}(_react.Component));

/* istanbul ignore next */
cov_16vqtdyh8g().s[19]++;
exports["default"] = Column;

/* istanbul ignore next */
cov_16vqtdyh8g().s[20]++;
Column.propTypes = {
  /**
   * 列对照的字段名
   */
  name: _propTypes["default"].string,

  /**
   * 列宽
   * 不推荐给所有列设置宽度，而是给某一列不设置宽度达到自动宽度的效果
   */
  width: _propTypes["default"].number,

  /**
   * 最小列宽
   */
  minWidth: _propTypes["default"].number,

  /**
   * 列头
   */
  header: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].element, _propTypes["default"].func]),

  /**
   * 列脚
   */
  footer: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].element, _propTypes["default"].func]),

  /**
   * 单元格渲染回调
   */
  renderer: _propTypes["default"].func,

  /**
   * 编辑器
   */
  editor: _propTypes["default"].oneOfType([_propTypes["default"].element, _propTypes["default"].func, _propTypes["default"].bool]),

  /**
   * 是否锁定
   * 可选值： false | true | 'left' | 'right'
   * @default false
   */
  lock: _propTypes["default"].oneOf(["left"
  /* left */
  , "right"
  /* right */
  , true, false]),

  /**
   * 文字对齐方式
   * 可选值： 'left' | 'center' | 'right'
   */
  align: _propTypes["default"].oneOf(["left"
  /* left */
  , "center"
  /* center */
  , "right"
  /* right */
  ]),

  /**
   * 是否可调整宽度
   * @default true
   */
  resizable: _propTypes["default"].bool,

  /**
   * 是否可排序
   * @default false
   */
  sortable: _propTypes["default"].bool,

  /**
   * 是否可隐藏，设为false时不会出现在列过滤选项中
   * @default true
   */
  hideable: _propTypes["default"].bool,

  /**
   * 是否可排序
   * @default false
   */

  /**
   * 列头提示信息
   */
  help: _propTypes["default"].string,

  /**
   * 显示提示信息的方式
   *
   */
  showHelp: _propTypes["default"].oneOf(["tooltip"
  /* tooltip */
  , "newLine"
  /* newLine */
  , "none"
  /* none */
  ]),
  hidden: _propTypes["default"].bool,
  colSpan: _propTypes["default"].number,
  rowSpan: _propTypes["default"].number,
  children: _propTypes["default"].array
};

/* istanbul ignore next */
cov_16vqtdyh8g().s[21]++;
Column.defaultProps = {
  hidden: false,
  lock: false,
  resizable: true,
  sortable: false,
  hideable: true,
  minWidth: defaultMinWidth,
  showHelp: "tooltip"
  /* tooltip */

};

function minColumnWidth(col) {
  /* istanbul ignore next */
  cov_16vqtdyh8g().f[2]++;
  var hidden =
  /* istanbul ignore next */
  (cov_16vqtdyh8g().s[22]++, (0, _mobx.get)(col, 'hidden'));

  /* istanbul ignore next */
  cov_16vqtdyh8g().s[23]++;

  if (hidden) {
    /* istanbul ignore next */
    cov_16vqtdyh8g().b[0][0]++;
    cov_16vqtdyh8g().s[24]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_16vqtdyh8g().b[0][1]++;
  }

  var width =
  /* istanbul ignore next */
  (cov_16vqtdyh8g().s[25]++, (0, _mobx.get)(col, 'width'));
  var min =
  /* istanbul ignore next */
  (cov_16vqtdyh8g().s[26]++, (0, _mobx.get)(col, 'minWidth'));
  var minWidth =
  /* istanbul ignore next */
  (cov_16vqtdyh8g().s[27]++, min === undefined ?
  /* istanbul ignore next */
  (cov_16vqtdyh8g().b[1][0]++, defaultMinWidth) :
  /* istanbul ignore next */
  (cov_16vqtdyh8g().b[1][1]++, min));

  /* istanbul ignore next */
  cov_16vqtdyh8g().s[28]++;

  if (width === undefined) {
    /* istanbul ignore next */
    cov_16vqtdyh8g().b[2][0]++;
    cov_16vqtdyh8g().s[29]++;
    return minWidth;
  } else
  /* istanbul ignore next */
  {
    cov_16vqtdyh8g().b[2][1]++;
  }

  cov_16vqtdyh8g().s[30]++;
  return Math.min(width, minWidth);
}

function columnWidth(col) {
  /* istanbul ignore next */
  cov_16vqtdyh8g().f[3]++;
  var hidden =
  /* istanbul ignore next */
  (cov_16vqtdyh8g().s[31]++, (0, _mobx.get)(col, 'hidden'));

  /* istanbul ignore next */
  cov_16vqtdyh8g().s[32]++;

  if (hidden) {
    /* istanbul ignore next */
    cov_16vqtdyh8g().b[3][0]++;
    cov_16vqtdyh8g().s[33]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_16vqtdyh8g().b[3][1]++;
  }

  var width =
  /* istanbul ignore next */
  (cov_16vqtdyh8g().s[34]++, (0, _mobx.get)(col, 'width'));

  /* istanbul ignore next */
  cov_16vqtdyh8g().s[35]++;

  if (width === undefined) {
    /* istanbul ignore next */
    cov_16vqtdyh8g().b[4][0]++;
    var minWidth =
    /* istanbul ignore next */
    (cov_16vqtdyh8g().s[36]++, (0, _mobx.get)(col, 'minWidth'));

    /* istanbul ignore next */
    cov_16vqtdyh8g().s[37]++;

    if (minWidth === undefined) {
      /* istanbul ignore next */
      cov_16vqtdyh8g().b[5][0]++;
      cov_16vqtdyh8g().s[38]++;
      return defaultMinWidth;
    } else
    /* istanbul ignore next */
    {
      cov_16vqtdyh8g().b[5][1]++;
    }

    cov_16vqtdyh8g().s[39]++;
    return minWidth;
  } else
  /* istanbul ignore next */
  {
    cov_16vqtdyh8g().b[4][1]++;
  }

  cov_16vqtdyh8g().s[40]++;
  return width;
}