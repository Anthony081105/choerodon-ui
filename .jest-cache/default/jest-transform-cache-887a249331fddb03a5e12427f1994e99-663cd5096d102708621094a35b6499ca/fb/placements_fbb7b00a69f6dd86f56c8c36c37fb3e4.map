{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/tooltip/placements.tsx"],"names":[],"mappings":"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","sourcesContent":["const rcAutoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1,\n};\nconst targetOffset = [0, 0];\nconst OFFSET_UNIT = 10;\n\nexport const rcPlacements = {\n  left: {\n    points: ['cr', 'cl'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [-OFFSET_UNIT, 0],\n    targetOffset,\n  },\n  right: {\n    points: ['cl', 'cr'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [OFFSET_UNIT, 0],\n    targetOffset,\n  },\n  top: {\n    points: ['bc', 'tc'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [0, -OFFSET_UNIT],\n    targetOffset,\n  },\n  bottom: {\n    points: ['tc', 'bc'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [0, OFFSET_UNIT],\n    targetOffset,\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [0, -OFFSET_UNIT],\n    targetOffset,\n  },\n  leftTop: {\n    points: ['tr', 'tl'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [-OFFSET_UNIT, 0],\n    targetOffset,\n  },\n  topRight: {\n    points: ['br', 'tr'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [0, -OFFSET_UNIT],\n    targetOffset,\n  },\n  rightTop: {\n    points: ['tl', 'tr'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [OFFSET_UNIT, 0],\n    targetOffset,\n  },\n  bottomRight: {\n    points: ['tr', 'br'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [0, OFFSET_UNIT],\n    targetOffset,\n  },\n  rightBottom: {\n    points: ['bl', 'br'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [OFFSET_UNIT, 0],\n    targetOffset,\n  },\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [0, OFFSET_UNIT],\n    targetOffset,\n  },\n  leftBottom: {\n    points: ['br', 'bl'],\n    overflow: rcAutoAdjustOverflow,\n    offset: [-OFFSET_UNIT, 0],\n    targetOffset,\n  },\n};\n\nconst autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1,\n};\n\nconst autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0,\n};\n\nexport interface AdjustOverflow {\n  adjustX?: 0 | 1;\n  adjustY?: 0 | 1;\n}\n\nexport interface PlacementsConfig {\n  arrowWidth?: number;\n  horizontalArrowShift?: number;\n  verticalArrowShift?: number;\n  arrowPointAtCenter?: boolean;\n  autoAdjustOverflow?: any;\n}\n\nexport function getOverflowOptions(autoAdjustOverflow: any) {\n  if (typeof autoAdjustOverflow === 'boolean') {\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n  return {\n    ...autoAdjustOverflowDisabled,\n    ...autoAdjustOverflow,\n  };\n}\n\nexport default function getPlacements(config: PlacementsConfig = {}) {\n  const { arrowWidth = 5, horizontalArrowShift = 16, verticalArrowShift = 12, autoAdjustOverflow = true } = config;\n  const placementMap: any = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-4, 0],\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [4, 0],\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -4],\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, 4],\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + arrowWidth), -4],\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-4, -(verticalArrowShift + arrowWidth)],\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + arrowWidth, -4],\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [4, -(verticalArrowShift + arrowWidth)],\n    },\n    bottomRight: {\n      points: ['tr', 'bc'],\n      offset: [horizontalArrowShift + arrowWidth, 4],\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [4, verticalArrowShift + arrowWidth],\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + arrowWidth), 4],\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-4, verticalArrowShift + arrowWidth],\n    },\n  };\n  Object.keys(placementMap).forEach(key => {\n    placementMap[key] = config.arrowPointAtCenter ? {\n      ...placementMap[key],\n      overflow: getOverflowOptions(autoAdjustOverflow),\n      targetOffset,\n    } : {\n      ...rcPlacements[key],\n      overflow: getOverflowOptions(autoAdjustOverflow),\n    };\n  });\n  return placementMap;\n}\n"]}