{"version":3,"sources":["index.test.js"],"names":["locales","enUS","ptBR","ptPT","ruRU","esES","svSE","frBE","deDE","nlNL","caES","csCZ","koKR","etEE","skSK","jaJP","trTR","zhTW","fiFI","plPL","bgBG","enGB","frFR","nlBE","itIT","viVN","thTH","faIR","elGR","nbNO","srRS","slSI","isIS","arEG","ukUA","zhCN","kuIQ","Option","Select","RangePicker","DatePicker","columns","title","dataIndex","filters","text","value","App","width","item","describe","beforeAll","MockDate","set","afterAll","reset","forEach","locale","it","wrapper","expect","render","toMatchSnapshot","ModalDemo","Modal","confirm","React","Component","currentConfirmNode","document","querySelectorAll","length","cancelButtonText","innerHTML","okButtonText","replace","toBe","cancelText","okText","Test","state","setState"],"mappings":";;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AAYA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AApDA;AAsDA,IAAMA,OAAO,GAAG,CACdC,iBADc,EAEdC,iBAFc,EAGdC,iBAHc,EAIdC,iBAJc,EAKdC,iBALc,EAMdC,iBANc,EAOdC,iBAPc,EAQdC,iBARc,EASdC,iBATc,EAUdC,iBAVc,EAWdC,iBAXc,EAYdC,iBAZc,EAadC,iBAbc,EAcdC,iBAdc,EAedC,iBAfc,EAgBdC,iBAhBc,EAiBdC,iBAjBc,EAkBdC,iBAlBc,EAmBdC,iBAnBc,EAoBdC,iBApBc,EAqBdC,iBArBc,EAsBdC,iBAtBc,EAuBdC,iBAvBc,EAwBdC,iBAxBc,EAyBdC,iBAzBc,EA0BdC,iBA1Bc,EA2BdC,iBA3Bc,EA4BdC,iBA5Bc,EA6BdC,iBA7Bc,EA8BdC,iBA9Bc,EA+BdC,iBA/Bc,EAgCdC,iBAhCc,EAiCdC,iBAjCc,EAkCdC,iBAlCc,EAmCdC,iBAnCc,EAoCdC,iBApCc,CAAhB;IAuCQC,M,GAAWC,Q,CAAXD,M;IACAE,W,GAAgBC,Y,CAAhBD,W;AAER,IAAME,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADO;AAHX,CADc,EAWd;AACEJ,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAXc,CAAhB;;AAiBA,IAAMI,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,6CACE,gCAAC,YAAD;AAAY,IAAA,cAAc,EAAE,CAA5B;AAA+B,IAAA,KAAK,EAAE,EAAtC;AAA0C,IAAA,eAAe;AAAzD,IADF,EAEE,gCAAC,QAAD;AAAQ,IAAA,UAAU,MAAlB;AAAmB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAA1B,KACE,gCAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,YADF,EAEE,gCAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,YAFF,CAFF,EAME,gCAAC,YAAD;AAAY,IAAA,IAAI;AAAhB,IANF,EAOE,gCAAC,YAAD;AAAY,IAAA,IAAI,MAAhB;AAAiB,IAAA,gBAAgB,EAAE;AAAnC,IAPF,EAQE,gCAAC,WAAD;AAAa,IAAA,IAAI,MAAjB;AAAkB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT;AAAzB,IARF,EASE,gCAAC,YAAD;AAAY,IAAA,KAAK,EAAC,WAAlB;AAA8B,IAAA,OAAO;AAArC,KACE,8DADF,CATF,EAYE,gCAAC,UAAD;AAAU,IAAA,UAAU,EAAE,EAAtB;AAA0B,IAAA,UAAU,MAApC;AAAqC,IAAA,UAAU,EAAE,EAAjD;AAAqD,IAAA,MAAM,EAAE,gBAAAC,IAAI;AAAA,aAAIA,IAAI,CAACP,KAAT;AAAA;AAAjE,IAZF,EAaE,gCAAC,UAAD;AAAU,IAAA,UAAU,EAAE,KAAtB;AAA6B,IAAA,KAAK,EAAE;AAApC,IAbF,EAcE,gCAAC,OAAD;AAAO,IAAA,UAAU,EAAE,EAAnB;AAAuB,IAAA,OAAO,EAAED;AAAhC,IAdF,EAeE,gCAAC,OAAD;AAAO,IAAA,KAAK,EAAC,cAAb;AAA4B,IAAA,OAAO;AAAnC,KACE,0DADF,CAfF,CADU;AAAA,CAAZ;;AAsBAS,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAChCC,EAAAA,SAAS,CAAC,YAAM;AACdC,yBAASC,GAAT,CAAa,wBAAO,yBAAP,CAAb;AACD,GAFQ,CAAT;AAIAC,EAAAA,QAAQ,CAAC,YAAM;AACbF,yBAASG,KAAT;AACD,GAFO,CAAR;AAIAvD,EAAAA,OAAO,CAACwD,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxBC,IAAAA,EAAE,sCAA+BD,MAAM,CAACA,MAAtC,GAAgD,YAAM;AACtD,UAAME,OAAO,GAAG,mBACd,gCAAC,gBAAD;AAAgB,QAAA,MAAM,EAAEF;AAAxB,SACE,gCAAC,GAAD,OADF,CADc,CAAhB;AAKAG,MAAAA,MAAM,CAACD,OAAO,CAACE,MAAR,EAAD,CAAN,CAAyBC,eAAzB;AACD,KAPC,CAAF;AAQD,GATD;AAWAJ,EAAAA,EAAE,CAAC,mCAAD,EAAsC,YAAM;AAAA,QACtCK,SADsC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,4CAEtB;AAClBC,kBAAMC,OAAN,CAAc;AACZvB,YAAAA,KAAK,EAAE;AADK,WAAd;AAGD;AANyC;AAAA;AAAA,iCAQjC;AACP,iBAAO,IAAP;AACD;AAVyC;AAAA;AAAA,MACpBwB,kBAAMC,SADc;;AAY5CnE,IAAAA,OAAO,CAACwD,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,yBACE,gCAAC,gBAAD;AAAgB,QAAA,MAAM,EAAEA;AAAxB,SACE,gCAAC,SAAD,OADF,CADF;AAKA,UAAMW,kBAAkB,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,EACzBD,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,EAA0CC,MAA1C,GAAmD,CAD1B,CAA3B;AAGA,UAAIC,gBAAgB,GAAGJ,kBAAkB,CAACE,gBAAnB,CACrB,qCADqB,EAErB,CAFqB,EAElBG,SAFL;AAGA,UAAIC,YAAY,GAAGN,kBAAkB,CAACE,gBAAnB,CAAoC,uBAApC,EAA6D,CAA7D,EAAgEG,SAAnF;;AACA,UAAIhB,MAAM,CAACA,MAAP,KAAkB,OAAtB,EAA+B;AAC7Be,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACG,OAAjB,CAAyB,GAAzB,EAA8B,EAA9B,CAAnB;AACAD,QAAAA,YAAY,GAAGA,YAAY,CAACC,OAAb,CAAqB,GAArB,EAA0B,EAA1B,CAAf;AACD;;AACDf,MAAAA,MAAM,CAACY,gBAAD,CAAN,CAAyBI,IAAzB,CAA8BnB,MAAM,CAACO,KAAP,CAAaa,UAA3C;AACAjB,MAAAA,MAAM,CAACc,YAAD,CAAN,CAAqBE,IAArB,CAA0BnB,MAAM,CAACO,KAAP,CAAac,MAAvC;AACD,KAnBD;AAoBD,GAhCC,CAAF;AAkCApB,EAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAM;AAAA,QAC1CqB,IAD0C;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kGAEtC;AACNtB,UAAAA,MAAM,EAAEtB;AADF,SAFsC;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAMrC;AAAA,cACCsB,MADD,GACY,KAAKuB,KADjB,CACCvB,MADD;AAEP,iBACE,gCAAC,gBAAD;AAAgB,YAAA,MAAM,EAAEA;AAAxB,aACE,6CACE,gCAAC,YAAD;AAAY,YAAA,YAAY,EAAE,yBAA1B;AAAoC,YAAA,IAAI;AAAxC,YADF,CADF,CADF;AAOD;AAf6C;AAAA;AAAA,MAC7BS,kBAAMC,SADuB;;AAiBhD,QAAMR,OAAO,GAAG,mBAAM,gCAAC,IAAD,OAAN,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAO,CAACE,MAAR,EAAD,CAAN,CAAyBC,eAAzB;AACAH,IAAAA,OAAO,CAACsB,QAAR,CAAiB;AAAExB,MAAAA,MAAM,EAAEnC;AAAV,KAAjB;AACAsC,IAAAA,MAAM,CAACD,OAAO,CAACE,MAAR,EAAD,CAAN,CAAyBC,eAAzB;AACAH,IAAAA,OAAO,CAACsB,QAAR,CAAiB;AAAExB,MAAAA,MAAM,EAAE;AAAV,KAAjB;AACAG,IAAAA,MAAM,CAACD,OAAO,CAACE,MAAR,EAAD,CAAN,CAAyBC,eAAzB;AACD,GAvBC,CAAF;AAwBD,CA9EO,CAAR","sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport moment from 'moment';\nimport MockDate from 'mockdate';\nimport {\n  LocaleProvider,\n  Pagination,\n  DatePicker,\n  TimePicker,\n  Calendar,\n  Popconfirm,\n  Table,\n  Modal,\n  Select,\n  Transfer,\n} from '../..';\nimport enGB from '../en_GB';\nimport frFR from '../fr_FR';\nimport nlBE from '../nl_BE';\nimport itIT from '../it_IT';\nimport enUS from '../en_US';\nimport ptBR from '../pt_BR';\nimport ptPT from '../pt_PT';\nimport ruRU from '../ru_RU';\nimport esES from '../es_ES';\nimport svSE from '../sv_SE';\nimport frBE from '../fr_BE';\nimport deDE from '../de_DE';\nimport nlNL from '../nl_NL';\nimport caES from '../ca_ES';\nimport csCZ from '../cs_CZ';\nimport koKR from '../ko_KR';\nimport etEE from '../et_EE';\nimport skSK from '../sk_SK';\nimport jaJP from '../ja_JP';\nimport trTR from '../tr_TR';\nimport zhTW from '../zh_TW';\nimport fiFI from '../fi_FI';\nimport plPL from '../pl_PL';\nimport bgBG from '../bg_BG';\nimport viVN from '../vi_VN';\nimport thTH from '../th_TH';\nimport faIR from '../fa_IR';\nimport elGR from '../el_GR';\nimport nbNO from '../nb_NO';\nimport srRS from '../sr_RS';\nimport slSI from '../sl_SI';\nimport isIS from '../is_IS';\nimport arEG from '../ar_EG';\nimport ukUA from '../uk_UA';\nimport zhCN from '../zh_CN';\nimport kuIQ from '../ku_IQ';\n\nconst locales = [\n  enUS,\n  ptBR,\n  ptPT,\n  ruRU,\n  esES,\n  svSE,\n  frBE,\n  deDE,\n  nlNL,\n  caES,\n  csCZ,\n  koKR,\n  etEE,\n  skSK,\n  jaJP,\n  trTR,\n  zhTW,\n  fiFI,\n  plPL,\n  bgBG,\n  enGB,\n  frFR,\n  nlBE,\n  itIT,\n  viVN,\n  thTH,\n  faIR,\n  elGR,\n  nbNO,\n  srRS,\n  slSI,\n  isIS,\n  arEG,\n  ukUA,\n  zhCN,\n  kuIQ,\n];\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    filters: [\n      {\n        text: 'filter1',\n        value: 'filter1',\n      },\n    ],\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n  },\n];\n\nconst App = () => (\n  <div>\n    <Pagination defaultCurrent={1} total={50} showSizeChanger />\n    <Select showSearch style={{ width: 200 }}>\n      <Option value=\"jack\">jack</Option>\n      <Option value=\"lucy\">lucy</Option>\n    </Select>\n    <DatePicker open />\n    <TimePicker open defaultOpenValue={moment()} />\n    <RangePicker open style={{ width: 200 }} />\n    <Popconfirm title=\"Question?\" visible>\n      <a>Click to confirm</a>\n    </Popconfirm>\n    <Transfer dataSource={[]} showSearch targetKeys={[]} render={item => item.title} />\n    <Calendar fullscreen={false} value={moment()} />\n    <Table dataSource={[]} columns={columns} />\n    <Modal title=\"Locale Modal\" visible>\n      <p>Locale Modal</p>\n    </Modal>\n  </div>\n);\n\ndescribe('Locale Provider', () => {\n  beforeAll(() => {\n    MockDate.set(moment('2017-09-18T03:30:07.795'));\n  });\n\n  afterAll(() => {\n    MockDate.reset();\n  });\n\n  locales.forEach(locale => {\n    it(`should display the text as ${locale.locale}`, () => {\n      const wrapper = mount(\n        <LocaleProvider locale={locale}>\n          <App />\n        </LocaleProvider>,\n      );\n      expect(wrapper.render()).toMatchSnapshot();\n    });\n  });\n\n  it('should change locale of Modal.xxx', () => {\n    class ModalDemo extends React.Component {\n      componentDidMount() {\n        Modal.confirm({\n          title: 'Hello World!',\n        });\n      }\n\n      render() {\n        return null;\n      }\n    }\n    locales.forEach(locale => {\n      mount(\n        <LocaleProvider locale={locale}>\n          <ModalDemo />\n        </LocaleProvider>,\n      );\n      const currentConfirmNode = document.querySelectorAll('.c7n-confirm')[\n        document.querySelectorAll('.c7n-confirm').length - 1\n      ];\n      let cancelButtonText = currentConfirmNode.querySelectorAll(\n        '.c7n-btn:not(.c7n-btn-primary) span',\n      )[0].innerHTML;\n      let okButtonText = currentConfirmNode.querySelectorAll('.c7n-btn-primary span')[0].innerHTML;\n      if (locale.locale === 'zh-cn') {\n        cancelButtonText = cancelButtonText.replace(' ', '');\n        okButtonText = okButtonText.replace(' ', '');\n      }\n      expect(cancelButtonText).toBe(locale.Modal.cancelText);\n      expect(okButtonText).toBe(locale.Modal.okText);\n    });\n  });\n\n  it('set moment locale when locale changes', () => {\n    class Test extends React.Component {\n      state = {\n        locale: zhCN,\n      };\n\n      render() {\n        const { locale } = this.state;\n        return (\n          <LocaleProvider locale={locale}>\n            <div>\n              <DatePicker defaultValue={moment()} open />\n            </div>\n          </LocaleProvider>\n        );\n      }\n    }\n    const wrapper = mount(<Test />);\n    expect(wrapper.render()).toMatchSnapshot();\n    wrapper.setState({ locale: frFR });\n    expect(wrapper.render()).toMatchSnapshot();\n    wrapper.setState({ locale: null });\n    expect(wrapper.render()).toMatchSnapshot();\n  });\n});\n"]}