{"version":3,"sources":["DropdownMenu.jsx"],"names":["DropdownMenu","itemComponent","firstActiveItem","props","scrollIntoViewOpts","onlyScrollIfNeeded","value","length","firstActiveValue","alignWithTop","menuRef","locale","prefixCls","checkAll","selectAll","selectNone","lastInputValue","inputValue","scrollActiveItemToView","lastVisible","visible","nextProps","prevProps","menuItems","defaultActiveFirstOption","multiple","onMenuSelect","backfillValue","menuProps","onDeselect","onMenuDeselect","onSelect","onClick","selectedKeys","activeKeyProps","clonedMenuItems","activeKey","foundFirst","clone","item","indexOf","key","ref","map","type","isMenuItemGroup","children","lastValue","dropdownMenuStyle","filter","placeholder","onFilterChange","filterValue","onKeyDown","onChange","footer","preventDefaultEvent","renderMenu","filterInput","renderFilterInput","onMouseDown","selectOpt","defaultLocale","Select","renderCheckLabel","overflow","onPopupScroll","onPopupFocus","getFooter","Component","PropTypes","bool","any","object","func","onMenuDeSelect","string","oneOfType","node","displayName"],"mappings":"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","sourcesContent":["import React, { cloneElement, Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport toArray from '../util/Children/toArray';\nimport Menu from '../menu';\nimport scrollIntoView from 'dom-scroll-into-view';\nimport { getSelectKeys, preventDefaultEvent, saveRef } from './util';\nimport FilterInput from './FilterInput';\nimport LocaleReceiver from '../../locale-provider/LocaleReceiver';\nimport defaultLocale from '../../locale-provider/default';\n\nexport default class DropdownMenu extends Component {\n  static propTypes = {\n    defaultActiveFirstOption: PropTypes.bool,\n    value: PropTypes.any,\n    dropdownMenuStyle: PropTypes.object,\n    multiple: PropTypes.bool,\n    onPopupFocus: PropTypes.func,\n    onPopupScroll: PropTypes.func,\n    onMenuDeSelect: PropTypes.func,\n    onMenuSelect: PropTypes.func,\n    onMouseDown: PropTypes.func,\n    prefixCls: PropTypes.string,\n    menuItems: PropTypes.any,\n    inputValue: PropTypes.string,\n    visible: PropTypes.bool,\n    filter: PropTypes.bool,\n    checkAll: PropTypes.func,\n    footer: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    onKeyDown: PropTypes.func,\n  };\n\n  static defaultProps = {\n    footer: null,\n  };\n\n  componentWillMount() {\n    this.lastInputValue = this.props.inputValue;\n  }\n\n  componentDidMount() {\n    this.scrollActiveItemToView();\n    this.lastVisible = this.props.visible;\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (!nextProps.visible) {\n      this.lastVisible = false;\n    }\n    // freeze when hide\n    return nextProps.visible;\n  }\n\n  componentDidUpdate(prevProps) {\n    const props = this.props;\n    if (!prevProps.visible && props.visible) {\n      this.scrollActiveItemToView();\n    }\n    this.lastVisible = props.visible;\n    this.lastInputValue = props.inputValue;\n  }\n\n  scrollActiveItemToView = () => {\n    // scroll into view\n    const itemComponent = findDOMNode(this.firstActiveItem);\n    const props = this.props;\n\n    if (itemComponent) {\n      const scrollIntoViewOpts = {\n        onlyScrollIfNeeded: true,\n      };\n      if (\n        (!props.value || props.value.length === 0) &&\n        props.firstActiveValue\n      ) {\n        scrollIntoViewOpts.alignWithTop = true;\n      }\n\n      scrollIntoView(\n        itemComponent,\n        findDOMNode(this.menuRef),\n        scrollIntoViewOpts,\n      );\n    }\n  };\n\n  renderMenu() {\n    const props = this.props;\n    const {\n      menuItems,\n      value,\n      defaultActiveFirstOption,\n      prefixCls,\n      multiple,\n      onMenuSelect,\n      inputValue,\n      firstActiveValue,\n      backfillValue,\n    } = props;\n\n    if (menuItems && menuItems.length) {\n      const menuProps = {};\n      if (multiple) {\n        menuProps.onDeselect = props.onMenuDeselect;\n        menuProps.onSelect = onMenuSelect;\n      } else {\n        menuProps.onClick = onMenuSelect;\n      }\n\n      const selectedKeys = getSelectKeys(menuItems, value);\n      const activeKeyProps = {};\n\n      let clonedMenuItems = menuItems;\n      if (selectedKeys.length || firstActiveValue) {\n        if (props.visible && !this.lastVisible) {\n          activeKeyProps.activeKey = selectedKeys[0] || firstActiveValue;\n        }\n        let foundFirst = false;\n        // set firstActiveItem via cloning menus\n        // for scroll into view\n        const clone = item => {\n          if (\n            (!foundFirst && selectedKeys.indexOf(item.key) !== -1) ||\n            (!foundFirst &&\n              !selectedKeys.length &&\n              firstActiveValue.indexOf(item.key) !== -1)\n          ) {\n            foundFirst = true;\n            return cloneElement(item, {\n              ref: ref => {\n                this.firstActiveItem = ref;\n              },\n            });\n          }\n          return item;\n        };\n\n        clonedMenuItems = menuItems.map(item => {\n          if (item.type.isMenuItemGroup) {\n            const children = toArray(item.props.children).map(clone);\n            return cloneElement(item, {}, children);\n          }\n          return clone(item);\n        });\n      }\n\n      // clear activeKey when inputValue change\n      const lastValue = value && value[value.length - 1];\n      if (inputValue !== this.lastInputValue && (!lastValue || lastValue !== backfillValue)) {\n        activeKeyProps.activeKey = '';\n      }\n\n      return (\n        <Menu\n          ref={saveRef(this, 'menuRef')}\n          style={this.props.dropdownMenuStyle}\n          defaultActiveFirst={defaultActiveFirstOption}\n          {...activeKeyProps}\n          multiple={multiple}\n          {...menuProps}\n          selectedKeys={selectedKeys}\n          prefixCls={`${prefixCls}-menu`}\n        >\n          {clonedMenuItems}\n        </Menu>\n      );\n    }\n    return null;\n  }\n\n  renderFilterInput() {\n    const { prefixCls, filter, placeholder, onFilterChange, filterValue, onKeyDown } = this.props;\n    const props = {\n      filterValue,\n      prefixCls,\n      placeholder,\n      onChange: onFilterChange,\n      onKeyDown: onKeyDown,\n    };\n    return filter ? <FilterInput {...props} ref={saveRef(this, 'filterRef')} /> : null;\n  }\n\n  getFooter() {\n    const { prefixCls, footer } = this.props;\n    return footer ? (\n      <div className={`${prefixCls}-footer`} onMouseDown={preventDefaultEvent}>\n        {footer}\n      </div>) : null;\n  }\n\n  renderCheckLabel = (locale) => {\n    const { prefixCls, checkAll } = this.props;\n    return (\n      <div className={`${prefixCls}-select-all-none`}>\n        <span name=\"check-all\" onClick={checkAll}>{locale.selectAll}</span>\n        <span name=\"check-none\" onClick={checkAll}>{locale.selectNone}</span>\n      </div>\n    );\n  };\n\n  render() {\n    const renderMenu = this.renderMenu();\n    const filterInput = this.renderFilterInput();\n    const { multiple, menuItems, checkAll, onMouseDown } = this.props;\n\n    let selectOpt = null;\n    if (checkAll && multiple && menuItems.length && menuItems[0].key !== 'NOT_FOUND') {\n      selectOpt = (\n        <LocaleReceiver\n          componentName=\"Select\"\n          defaultLocale={defaultLocale.Select}\n        >\n          {this.renderCheckLabel}\n        </LocaleReceiver>\n      );\n    }\n    return (\n      <div onMouseDown={onMouseDown}>\n        {filterInput}\n        {selectOpt}\n        <div\n          style={{ overflow: 'auto' }}\n          onScroll={this.props.onPopupScroll}\n          onFocus={this.props.onPopupFocus}\n        >\n          {renderMenu}\n        </div>\n        {this.getFooter()}\n      </div>\n    );\n  }\n}\n\nDropdownMenu.displayName = 'DropdownMenu';\n"]}