{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/_util/openAnimation.tsx"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,SAAS,OAAT,CAAiB,IAAjB,EAAoC,IAApC,EAAmD,IAAnD,EAAmE;AACjE,MAAI,MAAJ;AACA,MAAI,uBAAJ;AACA,SAAO,8BAAa,IAAb,EAAmB,qBAAnB,EAA0C;AAC/C,IAAA,KAD+C,mBAC1C;AACH,UAAI,CAAC,IAAL,EAAW;AACT,QAAA,IAAI,CAAC,KAAL,CAAW,MAAX,aAAuB,IAAI,CAAC,YAA5B;AACA,QAAA,IAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,GAArB;AACD,OAHD,MAGO;AACL,QAAA,MAAM,GAAG,IAAI,CAAC,YAAd;AACA,QAAA,IAAI,CAAC,KAAL,CAAW,MAAX,GAAoB,KAApB;AACA,QAAA,IAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,GAArB;AACD;AACF,KAV8C;AAW/C,IAAA,MAX+C,oBAWzC;AACJ,UAAI,uBAAJ,EAA6B;AAC3B,wBAAI,MAAJ,CAAW,uBAAX;AACD;;AACD,MAAA,uBAAuB,GAAG,qBAAI,YAAK;AACjC,QAAA,IAAI,CAAC,KAAL,CAAW,MAAX,aAAuB,IAAI,GAAG,MAAH,GAAY,CAAvC;AACA,QAAA,IAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,IAAI,GAAG,GAAH,GAAS,GAAlC;AACD,OAHyB,CAA1B;AAID,KAnB8C;AAoB/C,IAAA,GApB+C,iBAoB5C;AACD,UAAI,uBAAJ,EAA6B;AAC3B,wBAAI,MAAJ,CAAW,uBAAX;AACD;;AACD,MAAA,IAAI,CAAC,KAAL,CAAW,MAAX,GAAoB,EAApB;AACA,MAAA,IAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,EAArB;AACA,MAAA,IAAI;AACL;AA3B8C,GAA1C,CAAP;AA6BD;;AAED,IAAM,SAAS,GAAG;AAChB,EAAA,KADgB,iBACV,IADU,EACS,IADT,EACyB;AACvC,WAAO,OAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAd;AACD,GAHe;AAIhB,EAAA,KAJgB,iBAIV,IAJU,EAIS,IAJT,EAIyB;AACvC,WAAO,OAAO,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,CAAd;AACD,GANe;AAOhB,EAAA,MAPgB,kBAOT,IAPS,EAOU,IAPV,EAO0B;AACxC,WAAO,OAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAd;AACD;AATe,CAAlB;eAYe,S","sourcesContent":["import cssAnimation from 'css-animation';\nimport raf from 'raf';\n\nfunction animate(node: HTMLElement, show: boolean, done: () => void) {\n  let height: number;\n  let requestAnimationFrameId: number;\n  return cssAnimation(node, 'c7n-motion-collapse', {\n    start() {\n      if (!show) {\n        node.style.height = `${node.offsetHeight}px`;\n        node.style.opacity = '1';\n      } else {\n        height = node.offsetHeight;\n        node.style.height = '0px';\n        node.style.opacity = '0';\n      }\n    },\n    active() {\n      if (requestAnimationFrameId) {\n        raf.cancel(requestAnimationFrameId);\n      }\n      requestAnimationFrameId = raf(() => {\n        node.style.height = `${show ? height : 0}px`;\n        node.style.opacity = show ? '1' : '0';\n      });\n    },\n    end() {\n      if (requestAnimationFrameId) {\n        raf.cancel(requestAnimationFrameId);\n      }\n      node.style.height = '';\n      node.style.opacity = '';\n      done();\n    },\n  });\n}\n\nconst animation = {\n  enter(node: HTMLElement, done: () => void) {\n    return animate(node, true, done);\n  },\n  leave(node: HTMLElement, done: () => void) {\n    return animate(node, false, done);\n  },\n  appear(node: HTMLElement, done: () => void) {\n    return animate(node, true, done);\n  },\n};\n\nexport default animation;\n"]}