{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/mention/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, CSSProperties, FocusEvent, FocusEventHandler } from 'react';\nimport classNames from 'classnames';\nimport shallowequal from 'lodash/isEqual';\nimport Icon from '../icon';\nimport RcMention, {\n  getMentions,\n  Nav,\n  toEditorState,\n  toString,\n} from '../rc-components/editor-mention';\nimport { getPrefixCls } from '../configure';\n\nexport type MentionPlacement = 'top' | 'bottom';\n\nexport interface MentionProps {\n  prefixCls?: string;\n  suggestionStyle?: CSSProperties;\n  suggestions?: Array<any>;\n  onSearchChange?: Function;\n  onChange?: Function;\n  notFoundContent?: any;\n  loading?: Boolean;\n  style?: CSSProperties;\n  defaultValue?: any;\n  value?: any;\n  className?: string;\n  multiLines?: Boolean;\n  prefix?: string;\n  placeholder?: string;\n  getSuggestionContainer?: (triggerNode: Element) => HTMLElement;\n  onFocus?: FocusEventHandler<HTMLElement>;\n  onBlur?: FocusEventHandler<HTMLElement>;\n  readOnly?: boolean;\n  disabled?: boolean;\n  placement?: MentionPlacement;\n}\n\nexport interface MentionState {\n  suggestions?: Array<any>;\n  focus?: Boolean;\n}\n\nexport default class Mention extends Component<MentionProps, MentionState> {\n  static displayName = 'Mention';\n\n  static getMentions = getMentions;\n\n  static defaultProps = {\n    notFoundContent: '无匹配结果，轻敲空格完成输入',\n    loading: false,\n    multiLines: false,\n    placement: 'bottom',\n  };\n\n  static Nav = Nav;\n\n  static toString = toString;\n\n  static toContentState = toEditorState;\n\n  private mentionEle: any;\n\n  constructor(props: MentionProps) {\n    super(props);\n    this.state = {\n      suggestions: props.suggestions,\n      focus: false,\n    };\n  }\n\n  componentWillReceiveProps(nextProps: MentionProps) {\n    const { suggestions } = nextProps;\n    const { props } = this;\n    if (!shallowequal(suggestions, props.suggestions)) {\n      this.setState({\n        suggestions,\n      });\n    }\n  }\n\n  onSearchChange = (value: string, prefix: string) => {\n    const { onSearchChange } = this.props;\n    if (onSearchChange) {\n      return onSearchChange(value, prefix);\n    }\n    return this.defaultSearchChange(value);\n  };\n\n  defaultSearchChange(value: String): void {\n    const searchValue = value.toLowerCase();\n    const { suggestions } = this.props;\n    const filteredSuggestions = (suggestions || []).filter(suggestion => {\n      if (suggestion.type && suggestion.type === Nav) {\n        return suggestion.props.value\n          ? suggestion.props.value.toLowerCase().indexOf(searchValue) !== -1\n          : true;\n      }\n      return suggestion.toLowerCase().indexOf(searchValue) !== -1;\n    });\n    this.setState({\n      suggestions: filteredSuggestions,\n    });\n  }\n\n  onFocus = (ev: FocusEvent<HTMLElement>) => {\n    this.setState({\n      focus: true,\n    });\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(ev);\n    }\n  };\n\n  onBlur = (ev: FocusEvent<HTMLElement>) => {\n    this.setState({\n      focus: false,\n    });\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(ev);\n    }\n  };\n\n  focus = () => {\n    this.mentionEle._editor.focusEditor();\n  };\n\n  mentionRef = (ele: any) => {\n    this.mentionEle = ele;\n  };\n\n  render() {\n    const {\n      className = '',\n      prefixCls: customizePrefixCls,\n      loading,\n      placement,\n      notFoundContent,\n      onChange,\n    } = this.props;\n    const prefixCls = getPrefixCls('mention', customizePrefixCls);\n    const { suggestions, focus } = this.state;\n    const cls = classNames(className, {\n      [`${prefixCls}-active`]: focus,\n      [`${prefixCls}-placement-top`]: placement === 'top',\n    });\n\n    const notFound = loading ? <Icon type=\"loading\" /> : notFoundContent;\n\n    return (\n      <RcMention\n        {...this.props}\n        prefixCls={prefixCls}\n        className={cls}\n        ref={this.mentionRef}\n        onSearchChange={this.onSearchChange}\n        onChange={onChange}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        suggestions={suggestions}\n        notFoundContent={notFound}\n      />\n    );\n  }\n}\n"]}