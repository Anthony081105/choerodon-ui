286f4bdb45ef7ba972a9831068739cfb
"use strict";

/* istanbul ignore next */
function cov_1tfxrfc9o6() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/transfer/operation.tsx";
  var hash = "f7a0daff1d41a171d07e918f06cc17d0ca5387cd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/transfer/operation.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 10,
          column: 13
        },
        end: {
          line: 10,
          column: 53
        }
      },
      "4": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 58
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 58
        }
      },
      "6": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "7": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "8": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 86
        }
      },
      "9": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "10": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 89
        }
      },
      "11": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 48
        }
      },
      "12": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 81
        }
      },
      "13": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 50
        }
      },
      "14": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 84
        }
      },
      "15": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 35
        }
      },
      "16": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 37
        }
      },
      "17": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "18": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 46,
          column: 22
        }
      },
      "19": {
        start: {
          line: 49,
          column: 15
        },
        end: {
          line: 49,
          column: 24
        }
      },
      "20": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 50,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "Operation",
        decl: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 34
          }
        },
        loc: {
          start: {
            line: 16,
            column: 42
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 18,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 66
          }
        }, {
          start: {
            line: 18,
            column: 69
          },
          end: {
            line: 18,
            column: 86
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 52
          },
          end: {
            line: 20,
            column: 68
          }
        }, {
          start: {
            line: 20,
            column: 71
          },
          end: {
            line: 20,
            column: 89
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 22,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 56
          },
          end: {
            line: 22,
            column: 58
          }
        }, {
          start: {
            line: 22,
            column: 61
          },
          end: {
            line: 22,
            column: 81
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 58
          },
          end: {
            line: 24,
            column: 60
          }
        }, {
          start: {
            line: 24,
            column: 63
          },
          end: {
            line: 24,
            column: 84
          }
        }],
        line: 24
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f7a0daff1d41a171d07e918f06cc17d0ca5387cd"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1tfxrfc9o6 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1tfxrfc9o6();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1tfxrfc9o6().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1tfxrfc9o6().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1tfxrfc9o6().s[2]++;
exports["default"] = void 0;

var _react =
/* istanbul ignore next */
(cov_1tfxrfc9o6().s[3]++, _interopRequireDefault(require("react")));

var _noop =
/* istanbul ignore next */
(cov_1tfxrfc9o6().s[4]++, _interopRequireDefault(require("lodash/noop")));

var _button =
/* istanbul ignore next */
(cov_1tfxrfc9o6().s[5]++, _interopRequireDefault(require("../button")));

/* istanbul ignore next */
cov_1tfxrfc9o6().s[6]++;

var Operation = function Operation(props) {
  /* istanbul ignore next */
  cov_1tfxrfc9o6().f[0]++;

  var _props$moveToLeft =
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().s[7]++, props.moveToLeft),
      moveToLeft =
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().s[8]++, _props$moveToLeft === void 0 ?
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().b[0][0]++, _noop["default"]) :
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().b[0][1]++, _props$moveToLeft)),
      _props$moveToRight =
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().s[9]++, props.moveToRight),
      moveToRight =
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().s[10]++, _props$moveToRight === void 0 ?
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().b[1][0]++, _noop["default"]) :
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().b[1][1]++, _props$moveToRight)),
      _props$leftArrowText =
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().s[11]++, props.leftArrowText),
      leftArrowText =
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().s[12]++, _props$leftArrowText === void 0 ?
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().b[2][0]++, '') :
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().b[2][1]++, _props$leftArrowText)),
      _props$rightArrowText =
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().s[13]++, props.rightArrowText),
      rightArrowText =
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().s[14]++, _props$rightArrowText === void 0 ?
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().b[3][0]++, '') :
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().b[3][1]++, _props$rightArrowText)),
      leftActive =
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().s[15]++, props.leftActive),
      rightActive =
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().s[16]++, props.rightActive),
      className =
  /* istanbul ignore next */
  (cov_1tfxrfc9o6().s[17]++, props.className);

  /* istanbul ignore next */
  cov_1tfxrfc9o6().s[18]++;
  return _react["default"].createElement("div", {
    className: className
  }, _react["default"].createElement(_button["default"], {
    type: "primary",
    size: "small"
    /* small */
    ,
    disabled: !leftActive,
    onClick: moveToLeft,
    icon: "keyboard_arrow_left"
  }, leftArrowText), _react["default"].createElement(_button["default"], {
    type: "primary",
    size: "small"
    /* small */
    ,
    disabled: !rightActive,
    onClick: moveToRight,
    icon: "keyboard_arrow_right"
  }, rightArrowText));
};

var _default =
/* istanbul ignore next */
(cov_1tfxrfc9o6().s[19]++, Operation);

/* istanbul ignore next */
cov_1tfxrfc9o6().s[20]++;
exports["default"] = _default;