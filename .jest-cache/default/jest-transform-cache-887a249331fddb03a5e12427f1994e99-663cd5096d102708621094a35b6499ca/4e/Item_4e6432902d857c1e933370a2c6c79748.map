{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/list/Item.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Children, Component, CSSProperties, ReactElement, ReactNode, SFC } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Col } from '../grid';\nimport { ColumnType, ListGridType } from './index';\nimport { getPrefixCls } from '../configure';\n\nexport interface ListItemProps {\n  className?: string;\n  children?: ReactNode;\n  prefixCls?: string;\n  style?: CSSProperties;\n  extra?: ReactNode;\n  actions?: Array<ReactNode>;\n  grid?: ListGridType;\n}\n\nexport interface ListItemMetaProps {\n  avatar?: ReactNode;\n  className?: string;\n  children?: ReactNode;\n  description?: ReactNode;\n  prefixCls?: string;\n  style?: CSSProperties;\n  title?: ReactNode;\n}\n\nexport const Meta: SFC<ListItemMetaProps> = props => {\n  const { prefixCls: customizePrefixCls, className, avatar, title, description, ...others } = props;\n  const prefixCls = getPrefixCls('list', customizePrefixCls);\n\n  const classString = classNames(`${prefixCls}-item-meta`, className);\n\n  const content = (\n    <div className={`${prefixCls}-item-meta-content`}>\n      {title && <h4 className={`${prefixCls}-item-meta-title`}>{title}</h4>}\n      {description && <div className={`${prefixCls}-item-meta-description`}>{description}</div>}\n    </div>\n  );\n\n  return (\n    <div {...others} className={classString}>\n      {avatar && <div className={`${prefixCls}-item-meta-avatar`}>{avatar}</div>}\n      {(title || description) && content}\n    </div>\n  );\n};\n\nMeta.displayName = 'ListMeta';\n\nfunction getGrid(grid: ListGridType, t: ColumnType) {\n  return grid[t] && Math.floor(24 / grid[t]!);\n}\n\nconst GridColumns = ['', 1, 2, 3, 4, 6, 8, 12, 24];\n\nexport default class Item extends Component<ListItemProps, any> {\n  static displayName = 'ListItem';\n\n  static Meta: typeof Meta = Meta;\n\n  static propTypes = {\n    column: PropTypes.oneOf(GridColumns),\n    xs: PropTypes.oneOf(GridColumns),\n    sm: PropTypes.oneOf(GridColumns),\n    md: PropTypes.oneOf(GridColumns),\n    lg: PropTypes.oneOf(GridColumns),\n    xl: PropTypes.oneOf(GridColumns),\n    xxl: PropTypes.oneOf(GridColumns),\n  };\n\n  static contextTypes = {\n    grid: PropTypes.any,\n  };\n\n  render() {\n    const { grid } = this.context;\n    const {\n      prefixCls: customizePrefixCls,\n      children,\n      actions,\n      extra,\n      className,\n      ...others\n    } = this.props;\n    const prefixCls = getPrefixCls('list', customizePrefixCls);\n    const classString = classNames(`${prefixCls}-item`, className);\n\n    const metaContent: ReactElement<any>[] = [];\n    const otherContent: ReactElement<any>[] = [];\n\n    Children.forEach(children, (element: ReactElement<any>) => {\n      if (element && element.type && element.type === Meta) {\n        metaContent.push(element);\n      } else {\n        otherContent.push(element);\n      }\n    });\n\n    const contentClassString = classNames(`${prefixCls}-item-content`, {\n      [`${prefixCls}-item-content-single`]: metaContent.length < 1,\n    });\n    const content =\n      otherContent.length > 0 ? <div className={contentClassString}>{otherContent}</div> : null;\n\n    let actionsContent;\n    if (actions && actions.length > 0) {\n      const actionsContentItem = (action: ReactNode, i: number) => (\n        <li key={`${prefixCls}-item-action-${i}`}>\n          {action}\n          {i !== actions.length - 1 && <em className={`${prefixCls}-item-action-split`} />}\n        </li>\n      );\n      actionsContent = (\n        <ul className={`${prefixCls}-item-action`}>\n          {actions.map((action, i) => actionsContentItem(action, i))}\n        </ul>\n      );\n    }\n\n    const extraContent = (\n      <div className={`${prefixCls}-item-extra-wrap`}>\n        <div className={`${prefixCls}-item-main`}>\n          {metaContent}\n          {content}\n          {actionsContent}\n        </div>\n        <div className={`${prefixCls}-item-extra`}>{extra}</div>\n      </div>\n    );\n\n    const mainContent = grid ? (\n      <Col\n        span={getGrid(grid, 'column')}\n        xs={getGrid(grid, 'xs')}\n        sm={getGrid(grid, 'sm')}\n        md={getGrid(grid, 'md')}\n        lg={getGrid(grid, 'lg')}\n        xl={getGrid(grid, 'xl')}\n        xxl={getGrid(grid, 'xxl')}\n      >\n        <div {...others} className={classString}>\n          {extra && extraContent}\n          {!extra && metaContent}\n          {!extra && content}\n          {!extra && actionsContent}\n        </div>\n      </Col>\n    ) : (\n      <div {...others} className={classString}>\n        {extra && extraContent}\n        {!extra && metaContent}\n        {!extra && content}\n        {!extra && actionsContent}\n      </div>\n    );\n\n    return mainContent;\n  }\n}\n"]}