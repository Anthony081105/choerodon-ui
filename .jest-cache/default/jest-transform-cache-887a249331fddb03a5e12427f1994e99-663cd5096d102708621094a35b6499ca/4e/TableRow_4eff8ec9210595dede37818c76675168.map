{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/TableRow.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {\n  cloneElement,\n  Component,\n  CSSProperties,\n  HTMLProps,\n  isValidElement,\n  Key,\n  ReactNode,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { action, computed, get, remove, set } from 'mobx';\nimport classNames from 'classnames';\nimport { pxToRem } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport measureScrollbar from 'choerodon-ui/lib/_util/measureScrollbar';\nimport { ColumnProps } from './Column';\nimport TableCell from './TableCell';\nimport Record from '../data-set/Record';\nimport { ElementProps } from '../core/ViewComponent';\nimport TableContext from './TableContext';\nimport ExpandIcon from './ExpandIcon';\nimport { ColumnLock, SelectionMode } from './enum';\nimport { getColumnKey, isDisabledRow, isSelectedRow } from './utils';\nimport { EXPAND_KEY } from './TableStore';\nimport { ExpandedRowProps } from './ExpandedRow';\nimport autobind from '../_util/autobind';\n\nexport interface TableRowProps extends ElementProps {\n  lock?: ColumnLock | boolean;\n  columns: ColumnProps[];\n  record: Record;\n  indentSize: number;\n  index: number;\n}\n\n@observer\nexport default class TableRow extends Component<TableRowProps, any> {\n  static displayName = 'TableRow';\n\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    lock: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf([ColumnLock.right, ColumnLock.left]),\n    ]),\n    columns: PropTypes.array.isRequired,\n    record: PropTypes.instanceOf(Record).isRequired,\n    indentSize: PropTypes.number.isRequired,\n  };\n\n  static contextType = TableContext;\n\n  rowKey: Key;\n\n  rowExternalProps: any = {};\n\n  childrenRendered: boolean = false;\n\n  node: HTMLTableRowElement | null;\n\n  @computed\n  get expandable(): boolean {\n    const {\n      tableStore: {\n        isTree,\n        props: { expandedRowRenderer },\n      },\n    } = this.context;\n    const { record } = this.props;\n    return !!expandedRowRenderer || (isTree && !!record.children);\n  }\n\n  @computed\n  get isExpanded(): boolean {\n    const { tableStore } = this.context;\n    const { record } = this.props;\n    return tableStore.isRowExpanded(record);\n  }\n\n  set isExpanded(expanded: boolean) {\n    const { tableStore } = this.context;\n    const { record } = this.props;\n    tableStore.setRowExpanded(record, expanded);\n  }\n\n  @computed\n  get isHover(): boolean {\n    const { tableStore } = this.context;\n    const { record } = this.props;\n    return tableStore.isRowHover(record);\n  }\n\n  set isHover(hover: boolean) {\n    const { tableStore } = this.context;\n    if (tableStore.highLightRow) {\n      const { record } = this.props;\n      tableStore.setRowHover(record, hover);\n    }\n  }\n\n  @autobind\n  @action\n  private saveRef(node: HTMLTableRowElement | null) {\n    if (node) {\n      this.node = node;\n      const { lock, record } = this.props;\n      const {\n        tableStore: { rowHeight, lockColumnsBodyRowsHeight },\n      } = this.context;\n      if (rowHeight === 'auto' && !lock) {\n        set(lockColumnsBodyRowsHeight, (this.rowKey = record.key), node.offsetHeight);\n      }\n    }\n  }\n\n  @autobind\n  handleMouseEnter() {\n    this.isHover = true;\n  }\n\n  @autobind\n  handleMouseLeave() {\n    this.isHover = false;\n  }\n\n  @autobind\n  handleSelectionByClick(e) {\n    this.handleSelection();\n    this.handleClick(e);\n  }\n\n  @autobind\n  handleSelectionByMouseDown(e) {\n    this.handleSelection();\n    const { onMouseDown } = this.rowExternalProps;\n    if (typeof onMouseDown === 'function') {\n      onMouseDown(e);\n    }\n  }\n\n  @autobind\n  handleSelectionByDblClick(e) {\n    this.handleSelection();\n    const { onDoubleClick } = this.rowExternalProps;\n    if (typeof onDoubleClick === 'function') {\n      onDoubleClick(e);\n    }\n  }\n\n  @autobind\n  handleExpandChange() {\n    if (this.expandable) {\n      this.isExpanded = !this.isExpanded;\n    }\n  }\n\n  @autobind\n  handleClickCapture(e) {\n    const {\n      record,\n      record: { dataSet },\n    } = this.props;\n    if (dataSet && !isDisabledRow(record)) {\n      dataSet.current = record;\n    }\n    const { onClickCapture } = this.rowExternalProps;\n    if (typeof onClickCapture === 'function') {\n      onClickCapture(e);\n    }\n  }\n\n  @autobind\n  handleClick(e) {\n    const { onClick } = this.rowExternalProps;\n    if (typeof onClick === 'function') {\n      onClick(e);\n    }\n  }\n\n  @autobind\n  getCell(column: ColumnProps, index: number): ReactNode {\n    const { prefixCls, record, indentSize, lock } = this.props;\n    const {\n      tableStore: { leafColumns, rightLeafColumns },\n    } = this.context;\n    const columnIndex =\n      lock === 'right' ? index + leafColumns.length - rightLeafColumns.length : index;\n    return (\n      <TableCell\n        key={getColumnKey(column)}\n        prefixCls={prefixCls}\n        column={column}\n        record={record}\n        indentSize={indentSize}\n      >\n        {this.hasExpandIcon(columnIndex) && this.renderExpandIcon()}\n      </TableCell>\n    );\n  }\n\n  focusRow(row: HTMLTableRowElement | null) {\n    if (row) {\n      const {\n        tableStore: { node, overflowY, currentEditorName },\n      } = this.context;\n      const { lock, record } = this.props;\n      if (!lock && !currentEditorName) {\n        const { element } = node;\n        if (\n          element &&\n          element.contains(document.activeElement) &&\n          Array.from<HTMLTableRowElement>(\n            element.querySelectorAll(`tr[data-index=\"${record.id}\"]`),\n          ).every(tr => !tr.contains(document.activeElement))\n        ) {\n          row.focus();\n        }\n      }\n      if (overflowY) {\n        const { offsetParent } = row;\n        if (offsetParent) {\n          const tableBodyWrap = offsetParent.parentNode as HTMLDivElement;\n          if (tableBodyWrap) {\n            const { offsetTop, offsetHeight } = row;\n            const { scrollTop, offsetHeight: height } = tableBodyWrap;\n            const bottomSide = offsetTop + offsetHeight - height + measureScrollbar();\n            let st = scrollTop;\n            if (st < bottomSide) {\n              st = bottomSide;\n            }\n            if (st > offsetTop) {\n              st = offsetTop + 1;\n            }\n            if (st !== scrollTop) {\n              tableBodyWrap.scrollTop = st;\n              node.handleBodyScrollTop({\n                target: tableBodyWrap,\n                currentTarget: tableBodyWrap,\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    const { record } = this.props;\n    if (record.isCurrent) {\n      this.focusRow(this.node);\n    }\n  }\n\n  componentDidUpdate() {\n    const { record } = this.props;\n    if (record.isCurrent) {\n      this.focusRow(this.node);\n    }\n  }\n\n  @action\n  componentWillUnmount() {\n    const { record } = this.props;\n    const { tableStore } = this.context;\n    tableStore.setRowExpanded(record, false);\n    remove(tableStore.lockColumnsBodyRowsHeight, this.rowKey);\n  }\n\n  handleSelection() {\n    const { record } = this.props;\n    const { dataSet } = record;\n    if (dataSet) {\n      dataSet[record.isSelected ? 'unSelect' : 'select'](record);\n    }\n  }\n\n  hasExpandIcon(columnIndex) {\n    const { tableStore } = this.context;\n    const {\n      props: { expandRowByClick, expandedRowRenderer },\n      expandIconColumnIndex,\n      isTree,\n    } = tableStore;\n    return (\n      !expandRowByClick && (expandedRowRenderer || isTree) && columnIndex === expandIconColumnIndex\n    );\n  }\n\n  renderExpandIcon() {\n    const { prefixCls, record } = this.props;\n    const {\n      tableStore: { expandIcon },\n    } = this.context;\n    const { isExpanded: expanded, expandable, handleExpandChange } = this;\n    if (typeof expandIcon === 'function') {\n      return expandIcon({\n        prefixCls,\n        expanded,\n        expandable,\n        needIndentSpaced: !expandable,\n        record,\n        onExpand: handleExpandChange,\n      });\n    }\n    return (\n      <ExpandIcon\n        prefixCls={prefixCls}\n        expandable={expandable}\n        onChange={handleExpandChange}\n        expanded={expanded}\n      />\n    );\n  }\n\n  renderExpandRow(): ReactNode[] {\n    const {\n      isExpanded,\n      props: { children, columns, record, prefixCls, index },\n    } = this;\n    const { tableStore } = this.context;\n    const {\n      props: { expandedRowRenderer, onRow },\n      expandIconAsCell,\n      overflowX,\n    } = tableStore;\n    const expandRows: ReactNode[] = [];\n    if (isExpanded || this.childrenRendered) {\n      this.childrenRendered = true;\n      if (expandedRowRenderer) {\n        const rowExternalProps =\n          typeof onRow === 'function'\n            ? onRow({\n              dataSet: record.dataSet!,\n              record,\n              expandedRow: true,\n              index,\n            })\n            : {};\n        const classString = classNames(`${prefixCls}-expanded-row`, rowExternalProps.className);\n        const rowProps: HTMLProps<HTMLTableRowElement> & { style: CSSProperties; } = {\n          key: `${record.key}-expanded-row`,\n          className: classString,\n          style: { ...rowExternalProps.style },\n        };\n\n        if (overflowX || !record.isCurrent) {\n          rowProps.onMouseEnter = this.handleMouseEnter;\n          rowProps.onMouseLeave = this.handleMouseLeave;\n        }\n\n        if (!isExpanded) {\n          rowProps.style.display = 'none';\n        }\n        expandRows.push(\n          <tr {...rowExternalProps} {...rowProps}>\n            {expandIconAsCell && <td key={EXPAND_KEY} />}\n            <td\n              key={`${EXPAND_KEY}-rest`}\n              className={`${prefixCls}-cell`}\n              colSpan={columns.length - (expandIconAsCell ? 1 : 0)}\n            >\n              <div className={`${prefixCls}-cell-inner`}>\n                {expandedRowRenderer({ dataSet: record.dataSet!, record })}\n              </div>\n            </td>\n          </tr>,\n        );\n      }\n      if (isValidElement<ExpandedRowProps>(children)) {\n        expandRows.push(cloneElement(children, { isExpanded, key: `${record.key}-expanded-rows` }));\n      }\n    }\n    return expandRows;\n  }\n\n  render() {\n    const { prefixCls, columns, record, lock, hidden, index } = this.props;\n    const {\n      tableStore: {\n        rowHeight,\n        lockColumnsBodyRowsHeight,\n        overflowX,\n        highLightRow,\n        selectedHighLightRow,\n        mouseBatchChooseIdList,\n        mouseBatchChooseState,\n        props: { onRow, rowRenderer, selectionMode },\n      },\n    } = this.context;\n    const { dataSet, isCurrent, key, id } = record;\n    const rowExternalProps = {\n      ...(typeof rowRenderer === 'function' ? rowRenderer(record, index) : {}),\n      ...(typeof onRow === 'function'\n        ? onRow({\n          dataSet: dataSet!,\n          record,\n          expandedRow: false,\n          index,\n        })\n        : {}),\n    };\n    this.rowExternalProps = rowExternalProps;\n    const disabled = isDisabledRow(record);\n    const selected = isSelectedRow(record);\n    const rowPrefixCls = `${prefixCls}-row`;\n    const classString = classNames(\n      rowPrefixCls,\n      {\n        [`${rowPrefixCls}-current`]: highLightRow && isCurrent,\n        [`${rowPrefixCls}-hover`]: highLightRow && this.isHover,\n        [`${rowPrefixCls}-highlight`]: highLightRow,\n        [`${rowPrefixCls}-selected`]: selectedHighLightRow && selected,\n        [`${rowPrefixCls}-disabled`]: disabled,\n        [`${rowPrefixCls}-mouse-batch-choose`]: mouseBatchChooseState && (mouseBatchChooseIdList || []).includes(id),\n      },\n      rowExternalProps.className,\n    );\n    const rowProps: HTMLProps<HTMLTableRowElement> & {\n      style: CSSProperties;\n      'data-index': number;\n    } = {\n      ref: this.saveRef,\n      className: classString,\n      style: { ...rowExternalProps.style },\n      onClick: this.handleClick,\n      onClickCapture: this.handleClickCapture,\n      tabIndex: -1,\n      disabled,\n      'data-index': id,\n    };\n    if (overflowX) {\n      rowProps.onMouseEnter = this.handleMouseEnter;\n      rowProps.onMouseLeave = this.handleMouseLeave;\n    }\n    if (hidden) {\n      rowProps.style.display = 'none';\n    }\n    if (lock) {\n      if (rowHeight === 'auto') {\n        rowProps.style.height = pxToRem(get(lockColumnsBodyRowsHeight, key) as number);\n      }\n    }\n    if (selectionMode === SelectionMode.click) {\n      rowProps.onClick = this.handleSelectionByClick;\n    } else if (selectionMode === SelectionMode.dblclick) {\n      rowProps.onDoubleClick = this.handleSelectionByDblClick;\n    } else if (selectionMode === SelectionMode.mousedown) {\n      rowProps.onMouseDown = this.handleSelectionByMouseDown;\n    }\n    return [\n      <tr key={key} {...rowExternalProps} {...rowProps}>\n        {columns.map(this.getCell)}\n      </tr>,\n      ...this.renderExpandRow(),\n    ];\n  }\n}\n"]}