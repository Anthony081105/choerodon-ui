{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/rc-components/tree/contextTypes.ts"],"names":[],"mappings":";;;;;;;;;AAIA;;AAJA;;;;AA6CA;AACO,IAAM,WAAW,GAA2C,KAAK,CAAC,aAAN,CAAoB,IAApB,CAA5D","sourcesContent":["/**\n * Webpack has bug for import loop, which is not the same behavior as ES module.\n * When util.js imports the TreeNode for tree generate will cause treeContextTypes be empty.\n */\nimport * as React from 'react';\nimport { IconType, Key, DataEntity, EventDataNode, NodeInstance } from './interface';\n\ntype NodeMouseEventHandler = (e: React.MouseEvent<HTMLDivElement>, node: EventDataNode) => void;\ntype NodeDragEventHandler = (e: React.MouseEvent<HTMLDivElement>, node: NodeInstance) => void;\n\nexport interface TreeContextProps {\n  prefixCls: string;\n  selectable: boolean;\n  showIcon: boolean;\n  icon: IconType;\n  switcherIcon: IconType;\n  draggable: boolean;\n  checkable: boolean | React.ReactNode;\n  checkStrictly: boolean;\n  disabled: boolean;\n  keyEntities: Record<Key, DataEntity>;\n\n  loadData: (treeNode: EventDataNode) => Promise<void>;\n  filterTreeNode: (treeNode: EventDataNode) => boolean;\n\n  onNodeClick: NodeMouseEventHandler;\n  onNodeDoubleClick: NodeMouseEventHandler;\n  onNodeExpand: NodeMouseEventHandler;\n  onNodeSelect: NodeMouseEventHandler;\n  onNodeCheck: (\n    e: React.MouseEvent<HTMLDivElement>,\n    treeNode: EventDataNode,\n    checked: boolean,\n  ) => void;\n  onNodeLoad: (treeNode: EventDataNode) => void;\n  onNodeMouseEnter: NodeMouseEventHandler;\n  onNodeMouseLeave: NodeMouseEventHandler;\n  onNodeContextMenu: NodeMouseEventHandler;\n  onNodeDragStart: NodeDragEventHandler;\n  onNodeDragEnter: NodeDragEventHandler;\n  onNodeDragOver: NodeDragEventHandler;\n  onNodeDragLeave: NodeDragEventHandler;\n  onNodeDragEnd: NodeDragEventHandler;\n  onNodeDrop: NodeDragEventHandler;\n}\n// @ts-ignore\nexport const TreeContext: React.Context<TreeContextProps | null> = React.createContext(null);\n"]}