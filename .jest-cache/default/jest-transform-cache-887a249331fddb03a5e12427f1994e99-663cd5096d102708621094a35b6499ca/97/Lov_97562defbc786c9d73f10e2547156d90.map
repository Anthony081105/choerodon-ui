{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/lov/Lov.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport omit from 'lodash/omit';\nimport isEqual from 'lodash/isEqual';\nimport isString from 'lodash/isString';\nimport { action, computed, observable, toJS } from 'mobx';\nimport { pxToRem } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport KeyCode from 'choerodon-ui/lib/_util/KeyCode';\nimport { Size } from 'choerodon-ui/lib/_util/enum';\nimport Icon from '../icon';\nimport { open } from '../modal-container/ModalContainer';\nimport LovView from './LovView';\nimport { ModalProps } from '../modal/Modal';\nimport DataSet from '../data-set/DataSet';\nimport Record from '../data-set/Record';\nimport lovStore from '../stores/LovCodeStore';\nimport autobind from '../_util/autobind';\nimport { stopEvent } from '../_util/EventManager';\nimport { SearchMatcher, Select, SelectProps } from '../select/Select';\nimport { ColumnAlign, TableQueryBarType } from '../table/enum';\nimport { FieldType } from '../data-set/enum';\nimport { LovFieldType, ViewMode } from './enum';\nimport Button, { ButtonProps } from '../button/Button';\nimport { ButtonColor, FuncType } from '../button/enum';\nimport { $l } from '../locale-context';\nimport { getLovPara } from '../stores/utils';\nimport { TableQueryBarHook } from '../table/Table';\nimport { FieldProps } from '../data-set/Field';\n\nexport type LovConfigItem = {\n  display?: string;\n  conditionField?: string;\n  conditionFieldLovCode?: string;\n  conditionFieldType?: FieldType | LovFieldType;\n  conditionFieldName?: string;\n  conditionFieldSelectCode?: string;\n  conditionFieldSelectUrl?: string;\n  conditionFieldSelectTf?: string;\n  conditionFieldSelectVf?: string;\n  conditionFieldSequence: number;\n  conditionFieldRequired?: boolean;\n  gridField?: string;\n  gridFieldName?: string;\n  gridFieldWidth?: number;\n  gridFieldAlign?: ColumnAlign;\n  gridFieldSequence: number;\n  fieldProps?: FieldProps;\n};\n\nexport type LovConfig = {\n  title?: string;\n  width?: number;\n  height?: number;\n  customUrl?: string;\n  lovPageSize?: string;\n  lovItems: LovConfigItem[] | null;\n  treeFlag?: 'Y' | 'N';\n  parentIdField?: string;\n  idField?: string;\n  textField?: string;\n  valueField?: string;\n  placeholder?: string;\n  editableFlag?: 'Y' | 'N';\n  queryColumns?: number;\n  queryBar?: TableQueryBarType | TableQueryBarHook;\n};\n\nexport interface LovProps extends SelectProps, ButtonProps {\n  modalProps?: ModalProps;\n  noCache?: boolean;\n  mode?: ViewMode;\n}\n\n@observer\nexport default class Lov extends Select<LovProps> {\n  static displayName = 'Lov';\n\n  static propTypes = {\n    ...Select.propTypes,\n    ...Button.propTypes,\n    modalProps: PropTypes.object,\n    noCache: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    ...Select.defaultProps,\n    clearButton: true,\n    checkValueOnOptionsChange: false,\n  };\n\n  modal;\n\n  @observable filterText?: string;\n\n  @computed\n  get searchMatcher(): SearchMatcher {\n    const { searchMatcher } = this.observableProps;\n    if (isString(searchMatcher)) {\n      return searchMatcher;\n    }\n    return this.textField;\n  }\n\n  @computed\n  get searchable(): boolean {\n    const config = this.getConfig();\n    if (config) {\n      return config.editableFlag === 'Y';\n    }\n    return !!this.props.searchable;\n  }\n\n  @computed\n  get lovCode(): string | undefined {\n    const { field } = this;\n    if (field) {\n      return field.get('lovCode');\n    }\n    return undefined;\n  }\n\n  @computed\n  get popup(): boolean {\n    return !this.filterText || this.modal ? false : this.statePopup;\n  }\n\n  @computed\n  get options(): DataSet {\n    const { field, lovCode } = this;\n    if (field) {\n      const { options } = field;\n      if (options) {\n        return options;\n      }\n    }\n    if (lovCode) {\n      const lovDataSet = lovStore.getLovDataSet(lovCode, field);\n      if (lovDataSet) {\n        return lovDataSet;\n      }\n    }\n    return new DataSet();\n  }\n\n  private openModal = action(() => {\n    const config = this.getConfig();\n    const { options, multiple, primitive, valueField } = this;\n    const { modalProps } = this.props;\n    const noCache = this.getProp('noCache');\n    if (!this.modal && config && options) {\n      const { width, title } = config;\n      options.unSelectAll();\n      options.clearCachedSelected();\n      if (multiple) {\n        options.setCachedSelected(\n          this.getValues().map(value => {\n            const selected = new Record(primitive ? { [valueField]: value } : toJS(value), options);\n            selected.isSelected = true;\n            return selected;\n          }),\n        );\n      }\n      this.modal = open({\n        title,\n        children: (\n          <LovView\n            dataSet={options}\n            config={config}\n            onDoubleClick={this.handleLovViewSelect}\n            onEnterDown={this.handleLovViewSelect}\n            multiple={this.multiple}\n            values={this.getValues()}\n          />\n        ),\n        onClose: this.handleLovViewClose,\n        onOk: this.handleLovViewOk,\n        destroyOnClose: true,\n        closable: true,\n        ...modalProps,\n        style: {\n          width: pxToRem(width),\n          minHeight: pxToRem(Math.min(350, window.innerHeight)),\n          ...(modalProps && modalProps.style),\n        },\n      } as ModalProps & { children });\n      if (this.resetOptions(noCache)) {\n        options.query();\n      } else if (multiple) {\n        options.releaseCachedSelected();\n      }\n    }\n  });\n\n  @action\n  searchRemote(text) {\n    if (this.filterText !== text) {\n      const { options, searchMatcher } = this;\n      this.filterText = text;\n      if (text && isString(searchMatcher)) {\n        this.resetOptions(true);\n        options.setQueryParameter(searchMatcher, text);\n        options.query();\n      }\n    }\n  }\n\n  handleLovViewSelect = () => {\n    this.modal.close();\n    this.handleLovViewOk();\n  };\n\n  handleLovViewClose = async () => {\n    delete this.modal;\n    this.focus();\n  };\n\n  handleLovViewOk = async () => {\n    const { options, multiple } = this;\n    const result: Record[] = [];\n    const records = multiple ? options.selected : result.concat(options.current || []);\n    const values = records.map(record => this.processRecordToObject(record));\n    this.setValue(multiple ? values : values[0] || this.emptyValue);\n  };\n\n  resetOptions(noCache: boolean = false): boolean {\n    const { field, record, options } = this;\n    const { queryDataSet } = options;\n    let dirty = noCache;\n    if (queryDataSet && noCache) {\n      const { current } = queryDataSet;\n      if (current && current.dirty) {\n        dirty = true;\n        current.reset();\n      }\n    }\n    if (field) {\n      const lovPara = getLovPara(field, record);\n      if (!isEqual(lovPara, options.queryParameter)) {\n        options.queryParameter = lovPara;\n        return true;\n      }\n      options.first();\n      if (!options.length) {\n        return true;\n      }\n    }\n    return dirty;\n  }\n\n  @autobind\n  handleKeyDown(e) {\n    if (!this.popup && e.keyCode === KeyCode.DOWN) {\n      stopEvent(e);\n      this.openModal();\n    }\n    super.handleKeyDown(e);\n  }\n\n  @autobind\n  handleBlur(e) {\n    if (this.modal) {\n      e.preventDefault();\n    }\n    super.handleBlur(e);\n  }\n\n  syncValueOnBlur(value) {\n    const { mode } = this.props;\n    if (mode !== ViewMode.button) {\n      super.syncValueOnBlur(value);\n    }\n  }\n\n  getConfig() {\n    const { lovCode } = this;\n    if (lovCode) {\n      return lovStore.getConfig(lovCode);\n    }\n  }\n\n  getPlaceholders(): string[] {\n    const placeholder = super.getPlaceholders();\n    if (placeholder.length) {\n      return placeholder;\n    }\n    const config = this.getConfig();\n    if (config) {\n      const { placeholder: holder } = config;\n      const holders: string[] = [];\n      return holder ? holders.concat(holder) : holders;\n    }\n    return [];\n  }\n\n  getOtherProps() {\n    return omit(super.getOtherProps(), ['modalProps', 'noCache']);\n  }\n\n  getButtonProps() {\n    const { className, type } = this.props;\n    const props: ButtonProps = {\n      ...Button.defaultProps,\n      ...omit(this.getOtherProps(), ['name']),\n      className,\n      type,\n    };\n    if (!this.isValid) {\n      props.color = ButtonColor.red;\n    }\n\n    return props;\n  }\n\n  getSuffix(): ReactNode {\n    const { suffix } = this.props;\n    return this.wrapperSuffix(suffix || <Icon type=\"search\" />, {\n      onClick: this.isDisabled() || this.isReadOnly() ? undefined : this.openModal,\n    });\n  }\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    if (this.modal) {\n      this.modal.close();\n    }\n  }\n\n  select() {\n    const { mode } = this.props;\n    if (mode !== ViewMode.button) {\n      super.select();\n    }\n  }\n\n  renderWrapper(): ReactNode {\n    const { mode, children, clearButton } = this.props;\n    if (mode === ViewMode.button) {\n      const elements = [\n        <Button\n          key=\"lov_button\"\n          {...this.getButtonProps()}\n          disabled={this.isDisabled()}\n          onClick={this.openModal}\n        >\n          {children || this.getTextNode() || this.getPlaceholders()[0] || $l('Lov', 'choose')}\n        </Button>,\n      ];\n      if (clearButton) {\n        elements.push(\n          <Button\n            key=\"lov_clear_button\"\n            size={Size.small}\n            funcType={FuncType.flat}\n            icon=\"close\"\n            onClick={this.handleClearButtonClick}\n          />,\n        );\n      }\n      return elements;\n    }\n    return super.renderWrapper();\n  }\n}\n"]}