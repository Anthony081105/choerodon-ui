{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/performance-table/HeaderCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ColumnResizeHandler from './ColumnResizeHandler';\nimport { isNullOrUndefined, getUnhandledProps, defaultClassPrefix, prefix } from './utils';\nimport Cell from './Cell';\nimport { HeaderCellProps } from './HeaderCell.d';\n\ninterface HeaderCelltate {\n  columnWidth?: number;\n  width?: number;\n  flexGrow?: number;\n}\n\nclass HeaderCell extends React.PureComponent<HeaderCellProps, HeaderCelltate> {\n  static propTypes = {\n    index: PropTypes.number,\n    sortColumn: PropTypes.string,\n    sortType: PropTypes.oneOf(['desc', 'asc']),\n    sortable: PropTypes.bool,\n    resizable: PropTypes.bool,\n    onColumnResizeStart: PropTypes.func,\n    onColumnResizeEnd: PropTypes.func,\n    onResize: PropTypes.func,\n    onColumnResizeMove: PropTypes.func,\n    onSortColumn: PropTypes.func,\n    flexGrow: PropTypes.number,\n    fixed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right'])]),\n  };\n  static defaultProps = {\n    classPrefix: defaultClassPrefix('performance-table-cell-header'),\n  };\n\n  static getDerivedStateFromProps(nextProps: HeaderCellProps, prevState: HeaderCelltate) {\n    if (nextProps.width !== prevState.width || nextProps.flexGrow !== prevState.flexGrow) {\n      return {\n        width: nextProps.width,\n        flexGrow: nextProps.flexGrow,\n        columnWidth: isNullOrUndefined(nextProps.flexGrow) ? nextProps.width : 0,\n      };\n    }\n\n    return null;\n  }\n\n  constructor(props: HeaderCellProps) {\n    super(props);\n    this.state = {\n      width: props.width,\n      flexGrow: props.flexGrow,\n      columnWidth: isNullOrUndefined(props.flexGrow) ? props.width : 0,\n    };\n  }\n\n  handleColumnResizeStart = () => {\n    const { left, fixed, onColumnResizeStart } = this.props;\n\n    onColumnResizeStart?.(this.state.columnWidth, left, !!fixed);\n  };\n\n  handleColumnResizeEnd = (columnWidth?: number, cursorDelta?: number) => {\n    const { dataKey, index, onColumnResizeEnd, onResize } = this.props;\n    this.setState({ columnWidth });\n    onColumnResizeEnd?.(columnWidth, cursorDelta, dataKey, index);\n    onResize?.(columnWidth, dataKey);\n  };\n\n  handleClick = () => {\n    if (this.props.sortable) {\n      this.props.onSortColumn?.(this.props.dataKey);\n    }\n  };\n\n  // @ts-ignore\n  addPrefix = (name: string) => prefix(this.props.classPrefix)(name);\n\n  renderResizeSpanner() {\n    const { resizable, left, onColumnResizeMove, fixed, headerHeight } = this.props;\n    const { columnWidth } = this.state;\n\n    if (!resizable) {\n      return null;\n    }\n\n    return (\n      <ColumnResizeHandler\n        defaultColumnWidth={columnWidth}\n        key={columnWidth}\n        columnLeft={left}\n        columnFixed={fixed}\n        height={headerHeight ? headerHeight - 1 : undefined}\n        onColumnResizeMove={onColumnResizeMove}\n        onColumnResizeStart={this.handleColumnResizeStart}\n        onColumnResizeEnd={this.handleColumnResizeEnd}\n      />\n    );\n  }\n\n  renderSortColumn(): React.ReactNode {\n    const { sortable, sortColumn, sortType = '', dataKey } = this.props;\n\n    if (sortable) {\n      const iconClasses = classNames(this.addPrefix('icon-sort icon'), {\n        [this.addPrefix(`icon-sort-${sortType}`)]: sortColumn === dataKey,\n      });\n      return (\n        <span className={this.addPrefix('sort-wrapper')}>\n          <i className={iconClasses} />\n        </span>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const {\n      className,\n      width,\n      dataKey,\n      headerHeight,\n      children,\n      left,\n      sortable,\n      classPrefix,\n      ...rest\n    } = this.props;\n\n    const classes = classNames(classPrefix, className, {\n      [this.addPrefix('sortable')]: sortable,\n    });\n    const unhandledProps = getUnhandledProps(HeaderCell, rest);\n\n    return (\n      <div className={classes}>\n        <Cell\n          {...unhandledProps}\n          width={width}\n          dataKey={dataKey}\n          left={left}\n          headerHeight={headerHeight}\n          isHeaderCell={true}\n          onClick={this.handleClick}\n        >\n          {children}\n          {this.renderSortColumn()}\n        </Cell>\n\n        {this.renderResizeSpanner()}\n      </div>\n    );\n  }\n}\n\nexport default HeaderCell;\n"]}