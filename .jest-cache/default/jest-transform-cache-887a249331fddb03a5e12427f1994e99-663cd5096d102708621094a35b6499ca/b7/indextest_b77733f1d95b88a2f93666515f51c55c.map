{"version":3,"sources":["index.test.js"],"names":["props","headers","action","multiple","accept","uploadImmediately","setupByMount","wrapper","describe","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","it","expect","find","prop","toBe","props1","first","simulate","toMatchSnapshot","fileChange","fn","global","URL","createObjectURL","file","File","type","onFileChange","target","files","toHaveBeenCalled","fileList","uid","instance","handleSuccess","undefined","handleProgress","handleError"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport { setup, teardown } from './mock';\nimport Upload from '..';\n\nconst props = {\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n  },\n  action: 'http://upload.com',\n  multiple: true,\n  accept: ['.deb', '.txt', '.pdf', 'image/*'],\n  uploadImmediately: false,\n};\nconst setupByMount = () => {\n  const wrapper = mount(<Upload {...props} />);\n  return {\n    wrapper,\n    props,\n  };\n};\n\ndescribe('Tree-pro', () => {\n  beforeEach(() => {\n    setup();\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    teardown();\n    jest.useRealTimers();\n  });\n\n  it('should have a Tooltip inside  ', () => {\n    const { wrapper } = setupByMount();\n    expect(wrapper.find('Tooltip').prop('title')).toBe('点击上传');\n  });\n\n  it('should have a Tooltip inside', () => {\n    const props1 = {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n      },\n      action: 'http://upload.com/',\n      multiple: true,\n      accept: ['.deb', '.txt', '.pdf', 'image/*'],\n      uploadImmediately: false,\n    };\n    const wrapper = mount(<Upload {...props1} />);\n    wrapper\n      .find('.c7n-pro-btn-icon-only')\n      .first()\n      .simulate('click');\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  it('uplaod the file to the server', () => {\n    const fileChange = jest.fn();\n    global.URL.createObjectURL = jest.fn(() => 'details');\n    const file = new File(['foo'], 'foo.txt', {\n      type: 'text/plain',\n    });\n    const props1 = {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n      },\n      action: 'http://upload.com/',\n      multiple: true,\n      accept: ['.deb', '.txt', '.pdf', 'image/*'],\n      uploadImmediately: true,\n      onFileChange: fileChange,\n    };\n    const wrapper = mount(<Upload {...props1} />);\n    wrapper.find('input').simulate('change', {\n      target: {\n        files: [file],\n      },\n    });\n    expect(fileChange).toHaveBeenCalled();\n  });\n\n  it('return when targetItem is null', () => {\n    const fileList = [{ uid: 'file' }];\n    const wrapper = mount(\n      <Upload type=\"drag\" fileList={fileList}>\n        <button type=\"button\">upload</button>\n      </Upload>,\n    ).instance();\n    expect(wrapper.handleSuccess('', '', { uid: 'fileItem' })).toBe(undefined);\n    expect(wrapper.handleProgress('', { uid: 'fileItem' })).toBe(undefined);\n    expect(wrapper.handleError('', '', '', { uid: 'fileItem' })).toBe(undefined);\n  });\n});\n"]}