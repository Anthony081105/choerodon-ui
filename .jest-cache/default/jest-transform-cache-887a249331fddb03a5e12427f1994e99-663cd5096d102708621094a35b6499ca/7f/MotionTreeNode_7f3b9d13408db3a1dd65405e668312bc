936be838c8cdbec831599603c693670f
"use strict";

/* istanbul ignore next */
function cov_o7jsruqpg() {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/rc-components/tree/MotionTreeNode.tsx";
  var hash = "124464015ae4e230d24e8367803af0af4fd27043";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/rc-components/tree/MotionTreeNode.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 86
        }
      },
      "1": {
        start: {
          line: 5,
          column: 29
        },
        end: {
          line: 5,
          column: 84
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 28
        }
      },
      "4": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 81
        }
      },
      "5": {
        start: {
          line: 14,
          column: 22
        },
        end: {
          line: 14,
          column: 93
        }
      },
      "6": {
        start: {
          line: 16,
          column: 32
        },
        end: {
          line: 16,
          column: 113
        }
      },
      "7": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 53
        }
      },
      "8": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 63
        }
      },
      "9": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 76
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 61
        }
      },
      "11": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 43
        }
      },
      "12": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 45
        }
      },
      "13": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 100,
          column: 1
        }
      },
      "14": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 32
        }
      },
      "15": {
        start: {
          line: 35,
          column: 14
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "16": {
        start: {
          line: 36,
          column: 15
        },
        end: {
          line: 36,
          column: 26
        }
      },
      "17": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 36
        }
      },
      "18": {
        start: {
          line: 38,
          column: 19
        },
        end: {
          line: 38,
          column: 34
        }
      },
      "19": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "20": {
        start: {
          line: 40,
          column: 15
        },
        end: {
          line: 40,
          column: 26
        }
      },
      "21": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 56
        }
      },
      "22": {
        start: {
          line: 42,
          column: 14
        },
        end: {
          line: 42,
          column: 174
        }
      },
      "23": {
        start: {
          line: 44,
          column: 24
        },
        end: {
          line: 44,
          column: 44
        }
      },
      "24": {
        start: {
          line: 45,
          column: 25
        },
        end: {
          line: 45,
          column: 76
        }
      },
      "25": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "26": {
        start: {
          line: 47,
          column: 19
        },
        end: {
          line: 47,
          column: 38
        }
      },
      "27": {
        start: {
          line: 50,
          column: 26
        },
        end: {
          line: 50,
          column: 69
        }
      },
      "28": {
        start: {
          line: 51,
          column: 18
        },
        end: {
          line: 51,
          column: 45
        }
      },
      "29": {
        start: {
          line: 53,
          column: 2
        },
        end: {
          line: 57,
          column: 20
        }
      },
      "30": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "31": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 24
        }
      },
      "32": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 91,
          column: 3
        }
      },
      "33": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 90,
          column: 7
        }
      },
      "34": {
        start: {
          line: 68,
          column: 28
        },
        end: {
          line: 68,
          column: 43
        }
      },
      "35": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 35
        }
      },
      "36": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 89,
          column: 10
        }
      },
      "37": {
        start: {
          line: 75,
          column: 29
        },
        end: {
          line: 75,
          column: 42
        }
      },
      "38": {
        start: {
          line: 76,
          column: 18
        },
        end: {
          line: 76,
          column: 36
        }
      },
      "39": {
        start: {
          line: 77,
          column: 24
        },
        end: {
          line: 77,
          column: 90
        }
      },
      "40": {
        start: {
          line: 78,
          column: 22
        },
        end: {
          line: 78,
          column: 38
        }
      },
      "41": {
        start: {
          line: 79,
          column: 20
        },
        end: {
          line: 79,
          column: 34
        }
      },
      "42": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 34
        }
      },
      "43": {
        start: {
          line: 81,
          column: 28
        },
        end: {
          line: 81,
          column: 87
        }
      },
      "44": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 88,
          column: 12
        }
      },
      "45": {
        start: {
          line: 93,
          column: 2
        },
        end: {
          line: 99,
          column: 6
        }
      },
      "46": {
        start: {
          line: 102,
          column: 0
        },
        end: {
          line: 102,
          column: 46
        }
      },
      "47": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 56
        }
      },
      "48": {
        start: {
          line: 104,
          column: 15
        },
        end: {
          line: 104,
          column: 32
        }
      },
      "49": {
        start: {
          line: 105,
          column: 0
        },
        end: {
          line: 105,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "MotionTreeNode",
        decl: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 44
          }
        },
        loc: {
          start: {
            line: 33,
            column: 56
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 33
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 53,
            column: 18
          },
          end: {
            line: 53,
            column: 19
          }
        },
        loc: {
          start: {
            line: 53,
            column: 30
          },
          end: {
            line: 57,
            column: 3
          }
        },
        line: 53
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        loc: {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 67
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 74,
            column: 25
          },
          end: {
            line: 74,
            column: 26
          }
        },
        loc: {
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 89,
            column: 7
          }
        },
        line: 74
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 19
          }
        }, {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 44
          }
        }, {
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 54,
            column: 55
          }
        }],
        line: 54
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 91,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 91,
            column: 3
          }
        }, {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 91,
            column: 3
          }
        }],
        line: 59
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "124464015ae4e230d24e8367803af0af4fd27043"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_o7jsruqpg = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_o7jsruqpg();

var _interopRequireWildcard =
/* istanbul ignore next */
(cov_o7jsruqpg().s[0]++, require("@babel/runtime/helpers/interopRequireWildcard"));

var _interopRequireDefault =
/* istanbul ignore next */
(cov_o7jsruqpg().s[1]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_o7jsruqpg().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_o7jsruqpg().s[3]++;
exports["default"] = void 0;

var _extends2 =
/* istanbul ignore next */
(cov_o7jsruqpg().s[4]++, _interopRequireDefault(require("@babel/runtime/helpers/extends")));

var _slicedToArray2 =
/* istanbul ignore next */
(cov_o7jsruqpg().s[5]++, _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")));

var _objectWithoutProperties2 =
/* istanbul ignore next */
(cov_o7jsruqpg().s[6]++, _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties")));

var React =
/* istanbul ignore next */
(cov_o7jsruqpg().s[7]++, _interopRequireWildcard(require("react")));

var _classnames =
/* istanbul ignore next */
(cov_o7jsruqpg().s[8]++, _interopRequireDefault(require("classnames")));

var _CSSMotion =
/* istanbul ignore next */
(cov_o7jsruqpg().s[9]++, _interopRequireDefault(require("rc-animate/lib/CSSMotion")));

var _TreeNode =
/* istanbul ignore next */
(cov_o7jsruqpg().s[10]++, _interopRequireDefault(require("./TreeNode")));

var _treeUtil =
/* istanbul ignore next */
(cov_o7jsruqpg().s[11]++, require("./utils/treeUtil"));

var _contextTypes =
/* istanbul ignore next */
(cov_o7jsruqpg().s[12]++, require("./contextTypes")); // @ts-ignore
// @ts-ignore
// @ts-ignore


/* istanbul ignore next */
cov_o7jsruqpg().s[13]++;

var MotionTreeNode = function MotionTreeNode(_ref, ref) {
  /* istanbul ignore next */
  cov_o7jsruqpg().f[0]++;
  var className =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[14]++, _ref.className),
      style =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[15]++, _ref.style),
      motion =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[16]++, _ref.motion),
      motionNodes =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[17]++, _ref.motionNodes),
      motionType =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[18]++, _ref.motionType),
      onMotionEnd =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[19]++, _ref.onMotionEnd),
      active =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[20]++, _ref.active),
      treeNodeRequiredProps =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[21]++, _ref.treeNodeRequiredProps),
      props =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[22]++, (0, _objectWithoutProperties2["default"])(_ref, ["className", "style", "motion", "motionNodes", "motionType", "onMotionEnd", "active", "treeNodeRequiredProps"]));

  var _React$useState =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[23]++, React.useState(true)),
      _React$useState2 =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[24]++, (0, _slicedToArray2["default"])(_React$useState, 2)),
      visible =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[25]++, _React$useState2[0]),
      setVisible =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[26]++, _React$useState2[1]); // @ts-ignore


  var _React$useContext =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[27]++, React.useContext(_contextTypes.TreeContext)),
      prefixCls =
  /* istanbul ignore next */
  (cov_o7jsruqpg().s[28]++, _React$useContext.prefixCls);

  /* istanbul ignore next */
  cov_o7jsruqpg().s[29]++;
  React.useEffect(function () {
    /* istanbul ignore next */
    cov_o7jsruqpg().f[1]++;
    cov_o7jsruqpg().s[30]++;

    if (
    /* istanbul ignore next */
    (cov_o7jsruqpg().b[1][0]++, motionNodes) &&
    /* istanbul ignore next */
    (cov_o7jsruqpg().b[1][1]++, motionType === 'hide') &&
    /* istanbul ignore next */
    (cov_o7jsruqpg().b[1][2]++, visible)) {
      /* istanbul ignore next */
      cov_o7jsruqpg().b[0][0]++;
      cov_o7jsruqpg().s[31]++;
      setVisible(false);
    } else
    /* istanbul ignore next */
    {
      cov_o7jsruqpg().b[0][1]++;
    }
  }, [motionNodes]);

  /* istanbul ignore next */
  cov_o7jsruqpg().s[32]++;

  if (motionNodes) {
    /* istanbul ignore next */
    cov_o7jsruqpg().b[2][0]++;
    cov_o7jsruqpg().s[33]++;
    return React.createElement(_CSSMotion["default"], (0, _extends2["default"])({
      ref: ref,
      visible: visible
    }, motion, {
      motionAppear: motionType === 'show',
      onAppearEnd: onMotionEnd,
      onLeaveEnd: onMotionEnd
    }), function (_ref2, motionRef) {
      /* istanbul ignore next */
      cov_o7jsruqpg().f[2]++;
      var motionClassName =
      /* istanbul ignore next */
      (cov_o7jsruqpg().s[34]++, _ref2.className),
          motionStyle =
      /* istanbul ignore next */
      (cov_o7jsruqpg().s[35]++, _ref2.style);

      /* istanbul ignore next */
      cov_o7jsruqpg().s[36]++;
      return React.createElement("div", {
        ref: motionRef,
        className: (0, _classnames["default"])("".concat(prefixCls, "-treenode-motion"), motionClassName),
        style: motionStyle
      }, motionNodes.map(function (treeNode) {
        /* istanbul ignore next */
        cov_o7jsruqpg().f[3]++;

        var _treeNode$data =
        /* istanbul ignore next */
        (cov_o7jsruqpg().s[37]++, treeNode.data),
            key =
        /* istanbul ignore next */
        (cov_o7jsruqpg().s[38]++, _treeNode$data.key),
            restProps =
        /* istanbul ignore next */
        (cov_o7jsruqpg().s[39]++, (0, _objectWithoutProperties2["default"])(_treeNode$data, ["key"])),
            isStart =
        /* istanbul ignore next */
        (cov_o7jsruqpg().s[40]++, treeNode.isStart),
            isEnd =
        /* istanbul ignore next */
        (cov_o7jsruqpg().s[41]++, treeNode.isEnd);

        /* istanbul ignore next */
        cov_o7jsruqpg().s[42]++;
        delete restProps.children;
        var treeNodeProps =
        /* istanbul ignore next */
        (cov_o7jsruqpg().s[43]++, (0, _treeUtil.getTreeNodeProps)(key, treeNodeRequiredProps));

        /* istanbul ignore next */
        cov_o7jsruqpg().s[44]++;
        return React.createElement(_TreeNode["default"], (0, _extends2["default"])({}, restProps, treeNodeProps, {
          active: active,
          data: treeNode.data,
          key: key,
          isStart: isStart,
          isEnd: isEnd
        }));
      }));
    });
  } else
  /* istanbul ignore next */
  {
    cov_o7jsruqpg().b[2][1]++;
  }

  cov_o7jsruqpg().s[45]++;
  return React.createElement(_TreeNode["default"], (0, _extends2["default"])({
    domRef: ref,
    className: className,
    style: style
  }, props, {
    active: active
  }));
};

/* istanbul ignore next */
cov_o7jsruqpg().s[46]++;
MotionTreeNode.displayName = 'MotionTreeNode';
var RefMotionTreeNode =
/* istanbul ignore next */
(cov_o7jsruqpg().s[47]++, React.forwardRef(MotionTreeNode));

var _default =
/* istanbul ignore next */
(cov_o7jsruqpg().s[48]++, RefMotionTreeNode);

/* istanbul ignore next */
cov_o7jsruqpg().s[49]++;
exports["default"] = _default;