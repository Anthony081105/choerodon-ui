{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/tree/utils/dictUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import { DataNode } from '../../rc-components/tree/interface';\n\nenum Record {\n  None,\n  Start,\n  End,\n}\n\nfunction traverseNodesKey(\n  treeData: DataNode[],\n  callback: (key: string | number | null, node: DataNode) => boolean,\n) {\n  function processNode(dataNode: DataNode) {\n    const { key, children } = dataNode;\n    if (callback(key, dataNode) !== false) {\n      traverseNodesKey(children || [], callback);\n    }\n  }\n\n  treeData.forEach(processNode);\n}\n\n/** 计算选中范围，只考虑expanded情况以优化性能 */\nexport function calcRangeKeys(\n  treeData: DataNode[],\n  expandedKeys: string[],\n  startKey?: string,\n  endKey?: string,\n): string[] {\n  const keys: string[] = [];\n  let record: Record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key: string) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(treeData, (key: string) => {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return keys;\n}\n\nexport function convertDirectoryKeysToNodes(treeData: DataNode[], keys: string[]) {\n  const restKeys: string[] = [...keys];\n  const nodes: DataNode[] = [];\n  traverseNodesKey(treeData, (key: string, node: DataNode) => {\n    const index = restKeys.indexOf(key);\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}\n"]}