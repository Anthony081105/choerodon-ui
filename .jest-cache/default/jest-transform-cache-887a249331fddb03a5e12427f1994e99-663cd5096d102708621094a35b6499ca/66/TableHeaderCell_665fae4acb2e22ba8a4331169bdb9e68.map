{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/TableHeaderCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { cloneElement, Component, CSSProperties, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { action, set } from 'mobx';\nimport { observer } from 'mobx-react';\nimport omit from 'lodash/omit';\nimport debounce from 'lodash/debounce';\nimport defaultTo from 'lodash/defaultTo';\nimport isString from 'lodash/isString';\nimport classes from 'component-classes';\nimport { pxToRem } from 'choerodon-ui/lib/_util/UnitConvertor';\nimport { ColumnProps, minColumnWidth } from './Column';\nimport TableContext from './TableContext';\nimport { ElementProps } from '../core/ViewComponent';\nimport Icon from '../icon';\nimport DataSet from '../data-set/DataSet';\nimport EventManager from '../_util/EventManager';\nimport { getAlignByField, getColumnKey, getHeader } from './utils';\nimport { ColumnAlign } from './enum';\nimport { ShowHelp } from '../field/enum';\nimport Tooltip from '../tooltip';\nimport autobind from '../_util/autobind';\n\nexport interface TableHeaderCellProps extends ElementProps {\n  dataSet: DataSet;\n  prevColumn?: ColumnProps;\n  column: ColumnProps;\n  resizeColumn?: ColumnProps;\n  rowSpan?: number;\n  colSpan?: number;\n  getHeaderNode: () => HTMLTableSectionElement | null;\n}\n\n@observer\nexport default class TableHeaderCell extends Component<TableHeaderCellProps, any> {\n  static displayName = 'TableHeaderCell';\n\n  static propTypes = {\n    column: PropTypes.object.isRequired,\n  };\n\n  static contextType = TableContext;\n\n  resizeEvent: EventManager = new EventManager(typeof window !== 'undefined' && document);\n\n  resizeBoundary: number = 0;\n\n  resizePosition?: number;\n\n  resizeColumn?: ColumnProps;\n\n  @autobind\n  handleClick() {\n    const { column, dataSet } = this.props;\n    const { name } = column;\n    if (name) {\n      dataSet.sort(name);\n    }\n  }\n\n  getNode(column) {\n    const { getHeaderNode } = this.props;\n    const headerDom: Element | null = getHeaderNode();\n    if (headerDom) {\n      return headerDom.querySelector(`[data-index=\"${getColumnKey(column)}\"]`);\n    }\n  }\n\n  setResizeColumn(column) {\n    this.resizeColumn = column;\n    const node = this.getNode(column);\n    if (node) {\n      this.resizeBoundary = node.getBoundingClientRect().left;\n    }\n  }\n\n  @autobind\n  handleLeftResize(e) {\n    const { prevColumn } = this.props;\n    this.setResizeColumn(prevColumn);\n    e.persist()\n    this.setresizeStart(e);\n  }\n\n  @autobind\n  handleRightResize(e) {\n    const { resizeColumn } = this.props;\n    this.setResizeColumn(resizeColumn);\n    e.persist()\n    this.setresizeStart(e);\n  }\n\n  private setresizeStart = debounce(\n    (e) => {\n      this.resizeStart(e)\n    },\n    300,\n  );\n\n  @autobind\n  handleLeftDoubleClick(_e) {\n    if(this.setresizeStart){\n      this.setresizeStart.cancel()\n      this.resizeDoubleClick()\n    }\n  }\n\n  @autobind\n  handleRightDoubleClick(_e) {\n    if(this.setresizeStart){\n      this.setresizeStart.cancel()\n      this.resizeDoubleClick()\n    }\n  }\n\n  @autobind\n  @action\n  resizeDoubleClick(): void {\n    const column = this.resizeColumn;\n    const {tableStore:{props:{autoMaxWidth}}} = this.context\n    if (autoMaxWidth && column && column.innerMaxWidth) {\n      if (column.innerMaxWidth !== column.width) {\n        set(column, 'width', column.innerMaxWidth);\n      }else if(column.minWidth){\n          set(column, 'width', column.minWidth);\n      }\n    }\n  }\n\n  @action\n  resizeStart(e): void {\n    const { prefixCls } = this.props;\n    const {\n      tableStore: {\n        node: { element },\n      },\n    } = this.context;\n    classes(element).add(`${prefixCls}-resizing`);\n    delete this.resizePosition;\n    this.setSplitLinePosition(e.pageX);\n    this.resizeEvent\n      .addEventListener('mousemove', this.resize)\n      .addEventListener('mouseup', this.resizeEnd);\n  }\n\n  @autobind\n  resize(e): void {\n    const column = this.resizeColumn;\n    const limit = this.resizeBoundary + minColumnWidth(column);\n    let left = e.pageX;\n    if (left < limit) {\n      left = limit;\n    }\n    this.resizePosition = this.setSplitLinePosition(left);\n  }\n\n  @autobind\n  @action\n  resizeEnd(): void {\n    const { prefixCls } = this.props;\n    const {\n      tableStore: {\n        node: { element },\n      },\n    } = this.context;\n    classes(element).remove(`${prefixCls}-resizing`);\n    this.resizeEvent.removeEventListener('mousemove').removeEventListener('mouseup');\n    const column = this.resizeColumn;\n    if (this.resizePosition && column) {\n      const newWidth = Math.max(this.resizePosition - this.resizeBoundary, minColumnWidth(column));\n      if (newWidth !== column.width) {\n        set(column, 'width', newWidth);\n      }\n    }\n  }\n\n  @action\n  setSplitLinePosition(left: number): number | undefined {\n    const {\n      tableStore: {\n        node: { resizeLine },\n      },\n    } = this.context;\n    const { left: rectLeft, width } = resizeLine.offsetParent.getBoundingClientRect();\n    left -= rectLeft;\n    if (left < 0) {\n      left = 0;\n    } else if (left >= width) {\n      left = width - 1;\n    }\n    resizeLine.style.left = pxToRem(left) || null;\n    return left + rectLeft;\n  }\n\n  renderResizer() {\n    const { prevColumn, column, prefixCls } = this.props;\n    const resizerPrefixCls = `${prefixCls}-resizer`;\n    const pre = prevColumn && prevColumn.resizable && (\n      <div\n        key=\"pre\"\n        className={`${resizerPrefixCls} ${resizerPrefixCls}-left`}\n        onDoubleClick={this.handleLeftDoubleClick}\n        onMouseDown={this.handleLeftResize}\n      />\n    );\n    const next = column.resizable && (\n      <div\n        key=\"next\"\n        className={`${resizerPrefixCls} ${resizerPrefixCls}-right`}\n        onDoubleClick={this.handleRightDoubleClick}\n        onMouseDown={this.handleRightResize}\n      />\n    );\n\n    return [pre, next];\n  }\n\n  render() {\n    const { column, prefixCls, dataSet, rowSpan, colSpan } = this.props;\n    const {\n      tableStore: { rowHeight, columnResizable },\n    } = this.context;\n    const sortPrefixCls = `${prefixCls}-sort`;\n    const {\n      headerClassName,\n      headerStyle = {},\n      sortable,\n      name,\n      align,\n      help,\n      showHelp,\n      children,\n      command,\n    } = column;\n    const classList: string[] = [`${prefixCls}-cell`];\n    const field = dataSet.getField(name);\n    if (headerClassName) {\n      classList.push(headerClassName);\n    }\n    const headerNode = getHeader(column, dataSet);\n    const innerProps: any = {\n      className: `${prefixCls}-cell-inner`,\n      children: [\n        isValidElement(headerNode) ? (\n          cloneElement(headerNode, { key: 'text' })\n        ) : isString(headerNode) ? (\n          <span key=\"text\">{headerNode}</span>\n        ) : (\n          headerNode\n        ),\n      ],\n    };\n    const cellStyle: CSSProperties = {\n      textAlign:\n        align ||\n        (command || (children && children.length) ? ColumnAlign.center : getAlignByField(field)),\n      ...headerStyle,\n    };\n    if (rowHeight !== 'auto') {\n      innerProps.style = {\n        height: pxToRem(rowHeight),\n      };\n    }\n    if (showHelp !== ShowHelp.none) {\n      const fieldHelp = defaultTo(field && field.get('help'), help);\n      if (fieldHelp) {\n        const helpIcon = (\n          <Tooltip title={fieldHelp} placement=\"bottom\" key=\"help\">\n            <Icon type=\"help_outline\" className={`${prefixCls}-help-icon`} />\n          </Tooltip>\n        );\n        if (cellStyle.textAlign === ColumnAlign.right) {\n          innerProps.children.unshift(helpIcon);\n        } else {\n          innerProps.children.push(helpIcon);\n        }\n      }\n    }\n    if (sortable && name) {\n      if (field) {\n        const { order } = field;\n        if (order) {\n          classList.push(`${sortPrefixCls}-${order}`);\n        }\n      }\n      innerProps.onClick = this.handleClick;\n      const icon = <Icon key=\"sort\" type=\"arrow_upward\" className={`${sortPrefixCls}-icon`} />;\n      if (cellStyle.textAlign === ColumnAlign.right) {\n        innerProps.children.unshift(icon);\n      } else {\n        innerProps.children.push(icon);\n      }\n    }\n    return (\n      <th\n        className={classList.join(' ')}\n        style={omit(cellStyle, ['width', 'height'])}\n        rowSpan={rowSpan}\n        colSpan={colSpan}\n        data-index={getColumnKey(column)}\n      >\n        <div {...innerProps} />\n        {columnResizable && this.renderResizer()}\n      </th>\n    );\n  }\n\n  componentWillUnmount() {\n    this.resizeEvent.clear();\n    this.setresizeStart.cancel();\n  }\n}\n"]}