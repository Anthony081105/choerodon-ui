fc90dfa62b72731b5c6502005ae76282
"use strict";

/* istanbul ignore next */
var cov_1rgwbwn3yz = function () {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/ripple/index.tsx";
  var hash = "a90e42cc5687c35c069b555c748e889ef9eac1cf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/ripple/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 86
        }
      },
      "1": {
        start: {
          line: 5,
          column: 29
        },
        end: {
          line: 5,
          column: 84
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 28
        }
      },
      "4": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 95
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 89
        }
      },
      "6": {
        start: {
          line: 16,
          column: 34
        },
        end: {
          line: 16,
          column: 117
        }
      },
      "7": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 95
        }
      },
      "8": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 83
        }
      },
      "9": {
        start: {
          line: 22,
          column: 13
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "10": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 67
        }
      },
      "11": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "12": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 64,
          column: 23
        }
      },
      "13": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "14": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "15": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 127
        }
      },
      "16": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 44,
          column: 6
        }
      },
      "17": {
        start: {
          line: 40,
          column: 22
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "18": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 43,
          column: 16
        }
      },
      "19": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 17
        }
      },
      "20": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 62,
          column: 6
        }
      },
      "21": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 52,
          column: 34
        }
      },
      "22": {
        start: {
          line: 53,
          column: 21
        },
        end: {
          line: 53,
          column: 41
        }
      },
      "23": {
        start: {
          line: 54,
          column: 21
        },
        end: {
          line: 54,
          column: 41
        }
      },
      "24": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 58,
          column: 7
        }
      },
      "25": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 24
        }
      },
      "26": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 61
        }
      },
      "27": {
        start: {
          line: 63,
          column: 2
        },
        end: {
          line: 63,
          column: 16
        }
      },
      "28": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 28
        }
      },
      "29": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 67,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 0
          },
          end: {
            line: 30,
            column: 1
          }
        },
        loc: {
          start: {
            line: 30,
            column: 26
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "Ripple",
        decl: {
          start: {
            line: 33,
            column: 11
          },
          end: {
            line: 33,
            column: 17
          }
        },
        loc: {
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 25
          }
        },
        loc: {
          start: {
            line: 39,
            column: 41
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 39
      },
      "3": {
        name: "render",
        decl: {
          start: {
            line: 51,
            column: 20
          },
          end: {
            line: 51,
            column: 26
          }
        },
        loc: {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 51
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        }, {
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        }],
        line: 56
      },
      "1": {
        loc: {
          start: {
            line: 56,
            column: 10
          },
          end: {
            line: 56,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 10
          },
          end: {
            line: 56,
            column: 18
          }
        }, {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 31
          }
        }, {
          start: {
            line: 56,
            column: 35
          },
          end: {
            line: 56,
            column: 71
          }
        }],
        line: 56
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "a90e42cc5687c35c069b555c748e889ef9eac1cf"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard =
/* istanbul ignore next */
(cov_1rgwbwn3yz.s[0]++, require("@babel/runtime/helpers/interopRequireWildcard"));

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1rgwbwn3yz.s[1]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1rgwbwn3yz.s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1rgwbwn3yz.s[3]++;
exports["default"] = void 0;

var _classCallCheck2 =
/* istanbul ignore next */
(cov_1rgwbwn3yz.s[4]++, _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck")));

var _createClass2 =
/* istanbul ignore next */
(cov_1rgwbwn3yz.s[5]++, _interopRequireDefault(require("@babel/runtime/helpers/createClass")));

var _possibleConstructorReturn2 =
/* istanbul ignore next */
(cov_1rgwbwn3yz.s[6]++, _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn")));

var _getPrototypeOf2 =
/* istanbul ignore next */
(cov_1rgwbwn3yz.s[7]++, _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf")));

var _inherits2 =
/* istanbul ignore next */
(cov_1rgwbwn3yz.s[8]++, _interopRequireDefault(require("@babel/runtime/helpers/inherits")));

var _react =
/* istanbul ignore next */
(cov_1rgwbwn3yz.s[9]++, _interopRequireWildcard(require("react")));

var _RippleChild =
/* istanbul ignore next */
(cov_1rgwbwn3yz.s[10]++, _interopRequireDefault(require("./RippleChild")));

var _configure =
/* istanbul ignore next */
(cov_1rgwbwn3yz.s[11]++, require("../configure"));

var Ripple =
/* istanbul ignore next */
(
/*#__PURE__*/
cov_1rgwbwn3yz.s[12]++, function (_PureComponent) {
  /* istanbul ignore next */
  cov_1rgwbwn3yz.f[0]++;
  cov_1rgwbwn3yz.s[13]++;
  (0, _inherits2["default"])(Ripple, _PureComponent);

  function Ripple() {
    /* istanbul ignore next */
    cov_1rgwbwn3yz.f[1]++;

    var _this;

    /* istanbul ignore next */
    cov_1rgwbwn3yz.s[14]++;
    (0, _classCallCheck2["default"])(this, Ripple);

    /* istanbul ignore next */
    cov_1rgwbwn3yz.s[15]++;
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Ripple).apply(this, arguments));

    /* istanbul ignore next */
    cov_1rgwbwn3yz.s[16]++;

    _this.rippleChild = function (child) {
      /* istanbul ignore next */
      cov_1rgwbwn3yz.f[2]++;
      var prefixCls =
      /* istanbul ignore next */
      (cov_1rgwbwn3yz.s[17]++, _this.props.prefixCls);

      /* istanbul ignore next */
      cov_1rgwbwn3yz.s[18]++;
      return _react["default"].createElement(_RippleChild["default"], {
        prefixCls: (0, _configure.getPrefixCls)('ripple', prefixCls)
      }, child);
    };

    /* istanbul ignore next */
    cov_1rgwbwn3yz.s[19]++;
    return _this;
  }

  /* istanbul ignore next */
  cov_1rgwbwn3yz.s[20]++;
  (0, _createClass2["default"])(Ripple, [{
    key: "render",
    value: function render() {
      /* istanbul ignore next */
      cov_1rgwbwn3yz.f[3]++;

      var _this$props =
      /* istanbul ignore next */
      (cov_1rgwbwn3yz.s[21]++, this.props),
          disabled =
      /* istanbul ignore next */
      (cov_1rgwbwn3yz.s[22]++, _this$props.disabled),
          children =
      /* istanbul ignore next */
      (cov_1rgwbwn3yz.s[23]++, _this$props.children);

      /* istanbul ignore next */
      cov_1rgwbwn3yz.s[24]++;

      if (
      /* istanbul ignore next */
      (cov_1rgwbwn3yz.b[1][0]++, disabled) ||
      /* istanbul ignore next */
      (cov_1rgwbwn3yz.b[1][1]++, !children) ||
      /* istanbul ignore next */
      (cov_1rgwbwn3yz.b[1][2]++, !(0, _configure.getConfig)('ripple'))) {
        /* istanbul ignore next */
        cov_1rgwbwn3yz.b[0][0]++;
        cov_1rgwbwn3yz.s[25]++;
        return children;
      } else
      /* istanbul ignore next */
      {
        cov_1rgwbwn3yz.b[0][1]++;
      }

      cov_1rgwbwn3yz.s[26]++;
      return _react.Children.map(children, this.rippleChild);
    }
  }]);

  /* istanbul ignore next */
  cov_1rgwbwn3yz.s[27]++;
  return Ripple;
}(_react.PureComponent));

/* istanbul ignore next */
cov_1rgwbwn3yz.s[28]++;
exports["default"] = Ripple;

/* istanbul ignore next */
cov_1rgwbwn3yz.s[29]++;
Ripple.displayName = 'Ripple';