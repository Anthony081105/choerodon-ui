{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/lov/LovView.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { action } from 'mobx';\nimport KeyCode from 'choerodon-ui/lib/_util/KeyCode';\nimport DataSet from '../data-set/DataSet';\nimport Table, { TableProps } from '../table/Table';\nimport { SelectionMode, TableMode } from '../table/enum';\nimport { DataSetSelection } from '../data-set/enum';\nimport { LovConfig } from './Lov';\nimport { ColumnProps } from '../table/Column';\n\nexport interface LovViewProps {\n  dataSet: DataSet;\n  config: LovConfig;\n  multiple: boolean;\n  values: any[];\n  onDoubleClick: () => void;\n  onEnterDown: () => void;\n}\n\nexport default class LovView extends Component<LovViewProps> {\n  static propTypes = {\n    dataSet: PropTypes.object.isRequired,\n    config: PropTypes.object.isRequired,\n    onDoubleClick: PropTypes.func.isRequired,\n    onEnterDown: PropTypes.func.isRequired,\n  };\n\n  selection: DataSetSelection | false;\n\n  @action\n  componentWillMount() {\n    const {\n      dataSet,\n      dataSet: { selection },\n      multiple,\n    } = this.props;\n    this.selection = selection;\n    dataSet.selection = multiple ? DataSetSelection.multiple : DataSetSelection.single;\n  }\n\n  @action\n  componentWillUnmount() {\n    const { dataSet } = this.props;\n    dataSet.selection = this.selection;\n  }\n\n  getColumns(): ColumnProps[] | undefined {\n    const {\n      config: { lovItems },\n    } = this.props;\n    return lovItems\n      ? lovItems\n          .filter(({ gridField }) => gridField === 'Y')\n          .sort(({ gridFieldSequence: seq1 }, { gridFieldSequence: seq2 }) => seq1 - seq2)\n          .map<ColumnProps>(({ display, gridFieldName, gridFieldWidth, gridFieldAlign }) => ({\n            key: gridFieldName,\n            header: display,\n            name: gridFieldName,\n            width: gridFieldWidth,\n            align: gridFieldAlign,\n          }))\n      : undefined;\n  }\n\n  handleKeyDown = e => {\n    if (e.keyCode === KeyCode.ENTER) {\n      const { onEnterDown } = this.props;\n      onEnterDown();\n    }\n  };\n\n  handleRow = () => {\n    const { onDoubleClick } = this.props;\n    return {\n      onDoubleClick,\n    };\n  };\n\n  render() {\n    const {\n      dataSet,\n      config: { height, treeFlag, queryColumns },\n      multiple,\n    } = this.props;\n    const tableProps: TableProps = {\n      autoFocus: true,\n      mode: treeFlag === 'Y' ? TableMode.tree : TableMode.list,\n      onKeyDown: this.handleKeyDown,\n      dataSet,\n      columns: this.getColumns(),\n      queryFieldsLimit: queryColumns,\n    };\n    if (multiple) {\n      tableProps.selectionMode = SelectionMode.rowbox;\n    } else {\n      tableProps.selectionMode = SelectionMode.none;\n      tableProps.onRow = this.handleRow;\n    }\n    if (height) {\n      tableProps.style = { height };\n    }\n    return <Table {...tableProps} />;\n  }\n}\n"]}