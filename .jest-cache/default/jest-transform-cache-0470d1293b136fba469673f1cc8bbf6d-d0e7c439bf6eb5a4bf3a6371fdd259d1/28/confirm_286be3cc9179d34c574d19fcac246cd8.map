{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/modal/confirm.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport Dialog, { ModalFuncProps } from './Modal';\nimport ActionButton from './ActionButton';\nimport { getConfirmLocale } from './locale';\nimport { getPrefixCls } from '../configure';\n\ninterface ConfirmDialogProps extends ModalFuncProps {\n  afterClose?: () => void;\n  close: (...args: any[]) => void;\n}\n\nconst IS_REACT_16 = !!ReactDOM.createPortal;\n\nconst ConfirmDialog = (props: ConfirmDialogProps) => {\n  const {\n    prefixCls: customizePrefixCls,\n    onCancel,\n    onOk,\n    close,\n    zIndex,\n    width,\n    style,\n    type,\n    className,\n    afterClose,\n    visible,\n    keyboard,\n    okText,\n    cancelText,\n    okCancel = true,\n    iconType,\n    okType,\n    maskClosable = false,\n    title,\n    content,\n  } = props;\n  const propOkType = okType || 'primary';\n  const prefixCls = getPrefixCls('confirm', customizePrefixCls);\n  const propWidth = width || 416;\n  const propStyle = style || {};\n  const runtimeLocale = getConfirmLocale();\n  const propOkText = okText || (okCancel ? runtimeLocale.okText : runtimeLocale.justOkText);\n  const propCancelText = cancelText || runtimeLocale.cancelText;\n  const classString = classNames(prefixCls, `${prefixCls}-${type}`, className);\n  const actionButtonProps: any = {\n    okProps: {\n      text: propOkText,\n      type: propOkType,\n      actionFn: onOk,\n      closeModal: close,\n    },\n  };\n  if (okCancel) {\n    actionButtonProps.cancelProps = {\n      text: propCancelText,\n      actionFn: onCancel,\n      closeModal: close,\n    };\n  }\n\n  function handleCancel() {\n    close({ triggerCancel: true });\n  }\n\n  return (\n    <Dialog\n      className={classString}\n      onCancel={handleCancel}\n      visible={visible}\n      title=\"\"\n      transitionName=\"zoom\"\n      footer=\"\"\n      maskTransitionName=\"fade\"\n      maskClosable={maskClosable}\n      style={propStyle}\n      width={propWidth}\n      zIndex={zIndex}\n      afterClose={afterClose}\n      keyboard={keyboard}\n    >\n      <div className={`${prefixCls}-body-wrapper`}>\n        <div className={`${prefixCls}-body`}>\n          {iconType ? <Icon type={iconType!} /> : null}\n          <span className={`${prefixCls}-title`}>{title}</span>\n          <div className={`${prefixCls}-content`}>{content}</div>\n        </div>\n        <div className={`${prefixCls}-btns`}>\n          <ActionButton {...actionButtonProps} />\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default function confirm(config: ModalFuncProps) {\n  const div = document.createElement('div');\n  document.body.appendChild(div);\n\n  function destroy(...args: any[]) {\n    const unmountResult = ReactDOM.unmountComponentAtNode(div);\n    if (unmountResult && div.parentNode) {\n      div.parentNode.removeChild(div);\n    }\n    const triggerCancel = args && args.length && args.some(param => param && param.triggerCancel);\n    if (config.onCancel && triggerCancel) {\n      config.onCancel(...args);\n    }\n  }\n\n  function render(props: any) {\n    ReactDOM.render(<ConfirmDialog {...props} />, div);\n  }\n\n  function close(...args: any[]) {\n    if (IS_REACT_16) {\n      render({ ...config, close, visible: false, afterClose: destroy.bind(this, ...args) });\n    } else {\n      destroy(...args);\n    }\n  }\n\n  render({ ...config, visible: true, close });\n\n  return {\n    destroy: close,\n  };\n}\n"]}