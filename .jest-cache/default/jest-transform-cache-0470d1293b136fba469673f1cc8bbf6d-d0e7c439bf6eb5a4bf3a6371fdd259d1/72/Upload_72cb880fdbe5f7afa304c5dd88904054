3ed81364d7f7a99905029d9decd6b2e6
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _AjaxUploader = _interopRequireDefault(require("./AjaxUploader"));

var _IframeUploader = _interopRequireDefault(require("./IframeUploader"));

function empty() {}

var Upload =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(Upload, _Component);

  function Upload() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, Upload);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Upload)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      Component: null
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "saveUploader", function (node) {
      _this.uploader = node;
    });
    return _this;
  }

  (0, _createClass2["default"])(Upload, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.supportServerRender) {
        /* eslint react/no-did-mount-set-state:0 */
        this.setState({
          Component: this.getComponent()
        }, this.props.onReady);
      }
    }
  }, {
    key: "getComponent",
    value: function getComponent() {
      return typeof File !== 'undefined' ? _AjaxUploader["default"] : _IframeUploader["default"];
    }
  }, {
    key: "abort",
    value: function abort(file) {
      this.uploader.abort(file);
    }
  }, {
    key: "render",
    value: function render() {
      if (this.props.supportServerRender) {
        var _ComponentUploader = this.state.Component;

        if (_ComponentUploader) {
          return _react["default"].createElement(_ComponentUploader, (0, _extends2["default"])({}, this.props, {
            ref: this.saveUploader
          }));
        }

        return null;
      }

      var ComponentUploader = this.getComponent();
      return _react["default"].createElement(ComponentUploader, (0, _extends2["default"])({}, this.props, {
        ref: this.saveUploader
      }));
    }
  }]);
  return Upload;
}(_react.Component);

(0, _defineProperty2["default"])(Upload, "propTypes", {
  component: _propTypes["default"].string,
  style: _propTypes["default"].object,
  prefixCls: _propTypes["default"].string,
  action: _propTypes["default"].string,
  name: _propTypes["default"].string,
  multipart: _propTypes["default"].bool,
  onError: _propTypes["default"].func,
  onSuccess: _propTypes["default"].func,
  onProgress: _propTypes["default"].func,
  onStart: _propTypes["default"].func,
  data: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  headers: _propTypes["default"].object,
  accept: _propTypes["default"].string,
  multiple: _propTypes["default"].bool,
  disabled: _propTypes["default"].bool,
  beforeUpload: _propTypes["default"].func,
  customRequest: _propTypes["default"].func,
  onReady: _propTypes["default"].func,
  withCredentials: _propTypes["default"].bool,
  supportServerRender: _propTypes["default"].bool
});
(0, _defineProperty2["default"])(Upload, "defaultProps", {
  component: 'span',
  prefixCls: 'rc-upload',
  data: {},
  headers: {},
  name: 'file',
  multipart: false,
  onReady: empty,
  onStart: empty,
  onError: empty,
  onSuccess: empty,
  supportServerRender: false,
  multiple: false,
  beforeUpload: null,
  customRequest: null,
  withCredentials: false
});
var _default = Upload;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVwbG9hZC5qc3giXSwibmFtZXMiOlsiZW1wdHkiLCJVcGxvYWQiLCJDb21wb25lbnQiLCJub2RlIiwidXBsb2FkZXIiLCJwcm9wcyIsInN1cHBvcnRTZXJ2ZXJSZW5kZXIiLCJzZXRTdGF0ZSIsImdldENvbXBvbmVudCIsIm9uUmVhZHkiLCJGaWxlIiwiQWpheFVwbG9hZCIsIklmcmFtZVVwbG9hZCIsImZpbGUiLCJhYm9ydCIsIkNvbXBvbmVudFVwbG9hZGVyIiwic3RhdGUiLCJzYXZlVXBsb2FkZXIiLCJjb21wb25lbnQiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJzdHlsZSIsIm9iamVjdCIsInByZWZpeENscyIsImFjdGlvbiIsIm5hbWUiLCJtdWx0aXBhcnQiLCJib29sIiwib25FcnJvciIsImZ1bmMiLCJvblN1Y2Nlc3MiLCJvblByb2dyZXNzIiwib25TdGFydCIsImRhdGEiLCJvbmVPZlR5cGUiLCJoZWFkZXJzIiwiYWNjZXB0IiwibXVsdGlwbGUiLCJkaXNhYmxlZCIsImJlZm9yZVVwbG9hZCIsImN1c3RvbVJlcXVlc3QiLCJ3aXRoQ3JlZGVudGlhbHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLFNBQVNBLEtBQVQsR0FBaUIsQ0FDaEI7O0lBRUtDLE07Ozs7Ozs7Ozs7Ozs7Ozs7OzhGQTZDSTtBQUNOQyxNQUFBQSxTQUFTLEVBQUU7QUFETCxLO3FHQXFCTyxVQUFDQyxJQUFELEVBQVU7QUFDdkIsWUFBS0MsUUFBTCxHQUFnQkQsSUFBaEI7QUFDRCxLOzs7Ozs7d0NBbkJtQjtBQUNsQixVQUFJLEtBQUtFLEtBQUwsQ0FBV0MsbUJBQWYsRUFBb0M7QUFDbEM7QUFDQSxhQUFLQyxRQUFMLENBQWM7QUFDWkwsVUFBQUEsU0FBUyxFQUFFLEtBQUtNLFlBQUw7QUFEQyxTQUFkLEVBRUcsS0FBS0gsS0FBTCxDQUFXSSxPQUZkO0FBR0Q7QUFDRjs7O21DQUVjO0FBQ2IsYUFB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LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQWpheFVwbG9hZCBmcm9tICcuL0FqYXhVcGxvYWRlcic7XG5pbXBvcnQgSWZyYW1lVXBsb2FkIGZyb20gJy4vSWZyYW1lVXBsb2FkZXInO1xuXG5mdW5jdGlvbiBlbXB0eSgpIHtcbn1cblxuY2xhc3MgVXBsb2FkIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBjb21wb25lbnQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcHJlZml4Q2xzOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGFjdGlvbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIG11bHRpcGFydDogUHJvcFR5cGVzLmJvb2wsXG4gICAgb25FcnJvcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25TdWNjZXNzOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvblByb2dyZXNzOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvblN0YXJ0OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBkYXRhOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICAgIFByb3BUeXBlcy5vYmplY3QsXG4gICAgICBQcm9wVHlwZXMuZnVuYyxcbiAgICBdKSxcbiAgICBoZWFkZXJzOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGFjY2VwdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBtdWx0aXBsZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIGJlZm9yZVVwbG9hZDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgY3VzdG9tUmVxdWVzdDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25SZWFkeTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgd2l0aENyZWRlbnRpYWxzOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdXBwb3J0U2VydmVyUmVuZGVyOiBQcm9wVHlwZXMuYm9vbCxcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgY29tcG9uZW50OiAnc3BhbicsXG4gICAgcHJlZml4Q2xzOiAncmMtdXBsb2FkJyxcbiAgICBkYXRhOiB7fSxcbiAgICBoZWFkZXJzOiB7fSxcbiAgICBuYW1lOiAnZmlsZScsXG4gICAgbXVsdGlwYXJ0OiBmYWxzZSxcbiAgICBvblJlYWR5OiBlbXB0eSxcbiAgICBvblN0YXJ0OiBlbXB0eSxcbiAgICBvbkVycm9yOiBlbXB0eSxcbiAgICBvblN1Y2Nlc3M6IGVtcHR5LFxuICAgIHN1cHBvcnRTZXJ2ZXJSZW5kZXI6IGZhbHNlLFxuICAgIG11bHRpcGxlOiBmYWxzZSxcbiAgICBiZWZvcmVVcGxvYWQ6IG51bGwsXG4gICAgY3VzdG9tUmVxdWVzdDogbnVsbCxcbiAgICB3aXRoQ3JlZGVudGlhbHM6IGZhbHNlLFxuICB9XG5cbiAgc3RhdGUgPSB7XG4gICAgQ29tcG9uZW50OiBudWxsLFxuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuc3VwcG9ydFNlcnZlclJlbmRlcikge1xuICAgICAgLyogZXNsaW50IHJlYWN0L25vLWRpZC1tb3VudC1zZXQtc3RhdGU6MCAqL1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIENvbXBvbmVudDogdGhpcy5nZXRDb21wb25lbnQoKSxcbiAgICAgIH0sIHRoaXMucHJvcHMub25SZWFkeSk7XG4gICAgfVxuICB9XG5cbiAgZ2V0Q29tcG9uZW50KCkge1xuICAgIHJldHVybiB0eXBlb2YgRmlsZSAhPT0gJ3VuZGVmaW5lZCcgPyBBamF4VXBsb2FkIDogSWZyYW1lVXBsb2FkO1xuICB9XG5cbiAgYWJvcnQoZmlsZSkge1xuICAgIHRoaXMudXBsb2FkZXIuYWJvcnQoZmlsZSk7XG4gIH1cblxuICBzYXZlVXBsb2FkZXIgPSAobm9kZSkgPT4ge1xuICAgIHRoaXMudXBsb2FkZXIgPSBub2RlO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGlmICh0aGlzLnByb3BzLnN1cHBvcnRTZXJ2ZXJSZW5kZXIpIHtcbiAgICAgIGNvbnN0IENvbXBvbmVudFVwbG9hZGVyID0gdGhpcy5zdGF0ZS5Db21wb25lbnQ7XG4gICAgICBpZiAoQ29tcG9uZW50VXBsb2FkZXIpIHtcbiAgICAgICAgcmV0dXJuIDxDb21wb25lbnRVcGxvYWRlciB7Li4udGhpcy5wcm9wc30gcmVmPXt0aGlzLnNhdmVVcGxvYWRlcn0gLz47XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgQ29tcG9uZW50VXBsb2FkZXIgPSB0aGlzLmdldENvbXBvbmVudCgpO1xuICAgIHJldHVybiA8Q29tcG9uZW50VXBsb2FkZXIgey4uLnRoaXMucHJvcHN9IHJlZj17dGhpcy5zYXZlVXBsb2FkZXJ9IC8+O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFVwbG9hZDtcbiJdfQ==