{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/date-picker/createPicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, ComponentClass, MouseEvent } from 'react';\nimport moment, { Moment } from 'moment';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport Button from '../button';\nimport Icon from '../icon';\nimport Input from '../input';\nimport warning from '../_util/warning';\nimport interopDefault from '../_util/interopDefault';\nimport MonthCalendar from '../rc-components/calendar/MonthCalendar';\nimport RcDatePicker from '../rc-components/calendar/Picker';\nimport { Size } from '../_util/enum';\nimport { getPrefixCls } from '../configure';\n\nexport interface PickerProps {\n  value?: Moment;\n  prefixCls: string;\n}\n\nexport default function createPicker(TheCalendar: ComponentClass): any {\n  return class CalenderWrapper extends Component<any, any> {\n    static displayName = 'CalenderWrapper';\n\n    static defaultProps = {\n      allowClear: true,\n      showToday: true,\n    };\n\n    private input: any;\n\n    private picker: any;\n\n    constructor(props: any) {\n      super(props);\n      const value = props.value || props.defaultValue;\n      if (value && !interopDefault(moment).isMoment(value)) {\n        throw new Error(\n          'The value/defaultValue of DatePicker or MonthPicker must be a moment object',\n        );\n      }\n      this.state = {\n        value,\n        showDate: value,\n        focused: false,\n      };\n    }\n\n    componentWillReceiveProps(nextProps: PickerProps) {\n      if ('value' in nextProps) {\n        this.setState({\n          value: nextProps.value,\n          showDate: nextProps.value,\n        });\n      }\n    }\n\n    renderFooter = (...args: any[]) => {\n      const { renderExtraFooter } = this.props;\n      const prefixCls = this.getPrefixCls();\n      return renderExtraFooter ? (\n        <div className={`${prefixCls}-footer-extra`}>{renderExtraFooter(...args)}</div>\n      ) : null;\n    };\n\n    clearSelection = (e: MouseEvent<HTMLElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.handleChange(null);\n    };\n\n    onPickerIconClick = (e: MouseEvent<HTMLElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n      const { focused } = this.state;\n      this.picker.setOpen(!focused);\n    };\n\n    handleChange = (value: Moment | null) => {\n      const props = this.props;\n      if (!('value' in props)) {\n        this.setState({\n          value,\n          showDate: value,\n        });\n      }\n      props.onChange(value, (value && value.format(props.format)) || '');\n    };\n\n    handleCalendarChange = (value: Moment) => {\n      this.setState({ showDate: value });\n    };\n\n    handleOpenChange = (status: boolean) => {\n      const { onOpenChange } = this.props;\n      const { focused } = this.state;\n      if (status !== focused) {\n        this.setState({\n          focused: status,\n        });\n      }\n      if (onOpenChange) {\n        onOpenChange(status);\n      }\n    };\n\n    focus() {\n      this.input.focus();\n    }\n\n    blur() {\n      this.input.blur();\n    }\n\n    saveInput = (node: any) => {\n      this.input = node;\n    };\n\n    savePicker = (node: any) => {\n      this.picker = node;\n    };\n\n    getPrefixCls() {\n      const { prefixCls } = this.props;\n      return getPrefixCls('calendar', prefixCls);\n    }\n\n    render() {\n      const { value, showDate, focused } = this.state;\n      const props = omit(this.props, ['onChange']);\n      const { label, disabled, pickerInputClass, locale, localeCode } = props;\n      const prefixCls = this.getPrefixCls();\n      const placeholder = 'placeholder' in props ? props.placeholder : locale.lang.placeholder;\n\n      const disabledTime = props.showTime ? props.disabledTime : null;\n\n      const calendarClassName = classNames({\n        [`${prefixCls}-time`]: props.showTime,\n        [`${prefixCls}-month`]: MonthCalendar === TheCalendar,\n      });\n\n      if (value && localeCode) {\n        value.locale(localeCode);\n      }\n\n      let pickerProps: Object = {};\n      let calendarProps: any = {};\n      if (props.showTime) {\n        calendarProps = {\n          onSelect: this.handleChange,\n        };\n      } else {\n        pickerProps = {\n          onChange: this.handleChange,\n        };\n      }\n      if ('mode' in props) {\n        calendarProps.mode = props.mode;\n      }\n\n      warning(\n        !('onOK' in props),\n        'It should be `DatePicker[onOk]` or `MonthPicker[onOk]`, instead of `onOK`!',\n      );\n      const calendar = (\n        <TheCalendar\n          {...calendarProps}\n          disabledDate={props.disabledDate}\n          disabledTime={disabledTime}\n          locale={locale.lang}\n          timePicker={props.timePicker}\n          defaultValue={props.defaultPickerValue || interopDefault(moment)()}\n          dateInputPlaceholder={placeholder}\n          prefixCls={prefixCls}\n          className={calendarClassName}\n          onOk={props.onOk}\n          dateRender={props.dateRender}\n          format={props.format}\n          showToday={props.showToday}\n          monthCellContentRender={props.monthCellContentRender}\n          renderFooter={this.renderFooter}\n          onPanelChange={props.onPanelChange}\n          onChange={this.handleCalendarChange}\n          value={showDate}\n        />\n      );\n\n      const clearIcon =\n        !props.disabled && props.allowClear && value ? (\n          <Button\n            className={`${prefixCls}-picker-clear`}\n            onClick={this.clearSelection}\n            shape=\"circle\"\n            icon=\"close\"\n            size={Size.small}\n          />\n        ) : null;\n\n      const suffix = (\n        <span className={`${prefixCls}-picker-icon-wrapper`} onClick={this.onPickerIconClick}>\n          {clearIcon}\n          <Icon type=\"date_range\" className={`${prefixCls}-picker-icon`} />\n        </span>\n      );\n\n      const inputProps = {\n        label,\n        disabled,\n        placeholder,\n        suffix,\n        focused,\n      };\n\n      const input = ({ value: inputValue }: { value: Moment | null }) => (\n        <Input\n          {...inputProps}\n          ref={this.saveInput}\n          value={(inputValue && inputValue.format(props.format)) || ''}\n          className={pickerInputClass}\n          readOnly\n        />\n      );\n\n      return (\n        <span\n          id={props.id}\n          className={classNames(props.className, props.pickerClass)}\n          style={props.style}\n          onFocus={props.onFocus}\n          onBlur={props.onBlur}\n        >\n          <RcDatePicker\n            {...props}\n            {...pickerProps}\n            onOpenChange={this.handleOpenChange}\n            calendar={calendar}\n            value={value}\n            prefixCls={`${prefixCls}-picker-container`}\n            style={props.popupStyle}\n            ref={this.savePicker}\n          >\n            {input}\n          </RcDatePicker>\n        </span>\n      );\n    }\n  };\n}\n"]}