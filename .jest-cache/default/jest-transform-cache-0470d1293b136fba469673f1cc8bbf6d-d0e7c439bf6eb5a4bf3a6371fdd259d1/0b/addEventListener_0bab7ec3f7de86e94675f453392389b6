02b18e8f5ffc99db03fb0646f24d3097
"use strict";

/* istanbul ignore next */
var cov_dkrdt4pon = function () {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/_util/addEventListener.tsx";
  var hash = "cb1bccdf4c1be9fc36a84ed86434d1ea478dc702";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/_util/addEventListener.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 42
        }
      },
      "3": {
        start: {
          line: 10,
          column: 27
        },
        end: {
          line: 10,
          column: 84
        }
      },
      "4": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "5": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 18,
          column: 8
        }
      },
      "6": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 50
        }
      },
      "7": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 19,
          column: 75
        }
      }
    },
    fnMap: {
      "0": {
        name: "addEventListenerWrap",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 29
          }
        },
        loc: {
          start: {
            line: 15,
            column: 53
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "run",
        decl: {
          start: {
            line: 16,
            column: 62
          },
          end: {
            line: 16,
            column: 65
          }
        },
        loc: {
          start: {
            line: 16,
            column: 69
          },
          end: {
            line: 18,
            column: 3
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 18,
            column: 8
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 53
          },
          end: {
            line: 18,
            column: 3
          }
        }, {
          start: {
            line: 18,
            column: 6
          },
          end: {
            line: 18,
            column: 8
          }
        }],
        line: 16
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "cb1bccdf4c1be9fc36a84ed86434d1ea478dc702"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_dkrdt4pon.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_dkrdt4pon.s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_dkrdt4pon.s[2]++;
exports["default"] = addEventListenerWrap;

var _addDomEventListener =
/* istanbul ignore next */
(cov_dkrdt4pon.s[3]++, _interopRequireDefault(require("add-dom-event-listener")));

var _reactDom =
/* istanbul ignore next */
(cov_dkrdt4pon.s[4]++, require("react-dom"));
/* eslint-disable camelcase */


function addEventListenerWrap(target, eventType, cb) {
  /* istanbul ignore next */
  cov_dkrdt4pon.f[0]++;
  var callback =
  /* istanbul ignore next */
  (cov_dkrdt4pon.s[5]++, _reactDom.unstable_batchedUpdates ?
  /* istanbul ignore next */
  (cov_dkrdt4pon.b[0][0]++, function run(e) {
    /* istanbul ignore next */
    cov_dkrdt4pon.f[1]++;
    cov_dkrdt4pon.s[6]++;
    (0, _reactDom.unstable_batchedUpdates)(cb, e);
  }) :
  /* istanbul ignore next */
  (cov_dkrdt4pon.b[0][1]++, cb));

  /* istanbul ignore next */
  cov_dkrdt4pon.s[7]++;
  return (0, _addDomEventListener["default"])(target, eventType, callback);
}