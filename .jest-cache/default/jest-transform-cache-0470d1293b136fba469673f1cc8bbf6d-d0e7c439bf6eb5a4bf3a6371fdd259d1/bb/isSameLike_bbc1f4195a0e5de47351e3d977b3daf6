5f0ae976305af03bdde1843fa9b28177
"use strict";

/* istanbul ignore next */
var cov_2p223azvqc = function () {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/_util/isSameLike.tsx";
  var hash = "eff376d43c26a52e10251da4a7f242a8cf742865";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/_util/isSameLike.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "3": {
        start: {
          line: 10,
          column: 14
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "4": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 14,
          column: 77
        }
      }
    },
    fnMap: {
      "0": {
        name: "isSameLike",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 19
          }
        },
        loc: {
          start: {
            line: 12,
            column: 40
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 52
          }
        }, {
          start: {
            line: 14,
            column: 56
          },
          end: {
            line: 14,
            column: 76
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "eff376d43c26a52e10251da4a7f242a8cf742865"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2p223azvqc.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_2p223azvqc.s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2p223azvqc.s[2]++;
exports["default"] = isSameLike;

var _isSame =
/* istanbul ignore next */
(cov_2p223azvqc.s[3]++, _interopRequireDefault(require("./isSame")));

function isSameLike(newValue, oldValue) {
  /* istanbul ignore next */
  cov_2p223azvqc.f[0]++;
  cov_2p223azvqc.s[4]++;

  /* eslint-disable-next-line */
  return (
    /* istanbul ignore next */
    (cov_2p223azvqc.b[0][0]++, (0, _isSame["default"])(newValue, oldValue)) ||
    /* istanbul ignore next */
    (cov_2p223azvqc.b[0][1]++, newValue == oldValue)
  );
}