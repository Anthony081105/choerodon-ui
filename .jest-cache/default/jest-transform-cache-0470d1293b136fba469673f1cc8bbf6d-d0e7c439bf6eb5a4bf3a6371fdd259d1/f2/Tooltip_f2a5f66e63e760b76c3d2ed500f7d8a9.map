{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/tooltip/Tooltip.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Children, Component, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { getProPrefixCls } from 'choerodon-ui/lib/configure';\nimport Trigger, { TriggerProps } from '../trigger/Trigger';\nimport { Action } from '../trigger/enum';\nimport getPlacements, { AdjustOverflow } from './placements';\n\nexport type TooltipPlacement =\n  | 'top'\n  | 'left'\n  | 'right'\n  | 'bottom'\n  | 'topLeft'\n  | 'topRight'\n  | 'bottomLeft'\n  | 'bottomRight'\n  | 'leftTop'\n  | 'leftBottom'\n  | 'rightTop'\n  | 'rightBottom';\n\nexport type TooltipTheme = 'light' | 'dark';\n\nexport type RenderFunction = () => React.ReactNode;\n\nexport interface TooltipProps {\n  prefixCls?: string;\n  suffixCls?: string;\n  overlayClassName?: string;\n  style?: React.CSSProperties;\n  overlayStyle?: React.CSSProperties;\n  placement?: TooltipPlacement;\n  builtinPlacements?: Object;\n  hidden?: boolean;\n  defaultHidden?: boolean;\n  onHiddenChange?: (hidden: boolean) => void;\n  mouseEnterDelay?: number;\n  mouseLeaveDelay?: number;\n  transitionName?: string;\n  trigger?: Action[];\n  openClassName?: string;\n  arrowPointAtCenter?: boolean;\n  autoAdjustOverflow?: boolean | AdjustOverflow;\n  title?: React.ReactNode | RenderFunction;\n  overlay?: React.ReactNode | RenderFunction;\n  theme?: TooltipTheme;\n}\n\nexport default class Tooltip extends Component<TooltipProps, any> {\n  static displayName = 'Tooltip';\n\n  static propTypes = {\n    title: PropTypes.any,\n    arrowPointAtCenter: PropTypes.bool,\n    autoAdjustOverflow: PropTypes.bool,\n    defaultHidden: PropTypes.bool,\n    mouseEnterDelay: PropTypes.number,\n    mouseLeaveDelay: PropTypes.number,\n    placement: PropTypes.oneOf([\n      'top',\n      'topLeft',\n      'topRight',\n      'bottom',\n      'bottomLeft',\n      'bottomRight',\n      'left',\n      'leftTop',\n      'leftBottom',\n      'right',\n      'rightTop',\n      'rightBottom',\n    ]),\n    trigger: PropTypes.arrayOf(\n      PropTypes.oneOf([Action.click, Action.hover, Action.contextMenu, Action.focus]),\n    ),\n    hidden: PropTypes.bool,\n    onHiddenChange: PropTypes.func,\n    suffixCls: PropTypes.string,\n    transitionName: PropTypes.string,\n    theme: PropTypes.oneOf(['light', 'dark']),\n  };\n\n  static defaultProps = {\n    suffixCls: 'tooltip',\n    placement: 'bottom',\n    transitionName: 'zoom-big-fast',\n    mouseEnterDelay: 100,\n    mouseLeaveDelay: 100,\n    arrowPointAtCenter: false,\n    autoAdjustOverflow: true,\n    theme: 'dark',\n    defaultHidden: true,\n    trigger: [Action.hover],\n  };\n\n  get prefixCls(): string {\n    const { suffixCls, prefixCls } = this.props;\n    return getProPrefixCls(suffixCls!, prefixCls);\n  }\n\n  get popupContent() {\n    const { title } = this.props;\n    if (!title) {\n      return null;\n    }\n    const {\n      prefixCls,\n      props: { overlay, theme },\n    } = this;\n\n    let content: any = '';\n    if (typeof overlay === 'function') {\n      content = overlay();\n    } else if (overlay) {\n      content = overlay;\n    } else {\n      content = title || '';\n    }\n\n    const arrowCls = `${prefixCls}-popup-arrow`;\n    const contentCls = `${prefixCls}-popup-inner`;\n\n    return (\n      <div>\n        <div className={`${arrowCls} ${arrowCls}-${theme}`} key=\"arrow\" />\n        <div className={`${contentCls} ${contentCls}-${theme}`} key=\"content\">\n          {content}\n        </div>\n      </div>\n    );\n  }\n\n  get placements() {\n    const { builtinPlacements, arrowPointAtCenter, autoAdjustOverflow } = this.props;\n    return (\n      builtinPlacements ||\n      getPlacements({\n        arrowPointAtCenter,\n        verticalArrowShift: 8,\n        autoAdjustOverflow,\n      })\n    );\n  }\n\n  render() {\n    const {\n      prefixCls,\n      popupContent,\n      props: { children, placement, onHiddenChange, trigger, defaultHidden, hidden, ...restProps },\n    } = this;\n    const child = Children.map(children, node => {\n      if (node && !isValidElement(node)) {\n        return <span key={`text-${node}`}>{node}</span>;\n      }\n      return node;\n    });\n\n    const extraProps: TriggerProps = { ...restProps };\n    if ('hidden' in this.props) {\n      extraProps.popupHidden = hidden;\n    }\n\n    return (\n      <Trigger\n        prefixCls={prefixCls}\n        action={trigger}\n        builtinPlacements={this.placements}\n        popupPlacement={placement}\n        popupContent={popupContent}\n        onPopupHiddenChange={onHiddenChange}\n        defaultPopupHidden={defaultHidden}\n        {...extraProps}\n      >\n        {child}\n      </Trigger>\n    );\n  }\n}\n"]}