f396a561a9da20c3715c7cd1ce003cef
"use strict";

/* istanbul ignore next */
var cov_ip8dgwjrv = function () {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/_util/UnitConvertor.tsx";
  var hash = "f11e3cbc0874488f55708c6429db700be5030643";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/_util/UnitConvertor.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 26
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 20
        }
      },
      "4": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 66
        }
      },
      "5": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 66
        }
      },
      "6": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "8": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 17
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "10": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 15
        }
      },
      "12": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "13": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "14": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 17
        }
      },
      "15": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "16": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "pxToRem",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 16
          }
        },
        loc: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "toPx",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 13
          }
        },
        loc: {
          start: {
            line: 29,
            column: 19
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 29
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 26,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 26,
            column: 3
          }
        }, {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 26,
            column: 3
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 16,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 16,
            column: 23
          }
        }, {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 16,
            column: 39
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        }, {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 6
          },
          end: {
            line: 30,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 6
          },
          end: {
            line: 30,
            column: 23
          }
        }, {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 30,
            column: 39
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 38
          }
        }, {
          start: {
            line: 35,
            column: 42
          },
          end: {
            line: 35,
            column: 56
          }
        }, {
          start: {
            line: 35,
            column: 60
          },
          end: {
            line: 35,
            column: 78
          }
        }],
        line: 35
      },
      "9": {
        loc: {
          start: {
            line: 36,
            column: 32
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 54
          },
          end: {
            line: 36,
            column: 57
          }
        }, {
          start: {
            line: 36,
            column: 60
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "f11e3cbc0874488f55708c6429db700be5030643"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_ip8dgwjrv.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_ip8dgwjrv.s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_ip8dgwjrv.s[2]++;
exports.pxToRem = pxToRem;

/* istanbul ignore next */
cov_ip8dgwjrv.s[3]++;
exports.toPx = toPx;

var _isNumber =
/* istanbul ignore next */
(cov_ip8dgwjrv.s[4]++, _interopRequireDefault(require("lodash/isNumber")));

var _isString =
/* istanbul ignore next */
(cov_ip8dgwjrv.s[5]++, _interopRequireDefault(require("lodash/isString")));

function pxToRem(num) {
  /* istanbul ignore next */
  cov_ip8dgwjrv.f[0]++;
  cov_ip8dgwjrv.s[6]++;

  if (
  /* istanbul ignore next */
  (cov_ip8dgwjrv.b[1][0]++, num !== undefined) &&
  /* istanbul ignore next */
  (cov_ip8dgwjrv.b[1][1]++, num !== null)) {
    /* istanbul ignore next */
    cov_ip8dgwjrv.b[0][0]++;
    cov_ip8dgwjrv.s[7]++;

    if (num === 0) {
      /* istanbul ignore next */
      cov_ip8dgwjrv.b[2][0]++;
      cov_ip8dgwjrv.s[8]++;
      return '0';
    } else
    /* istanbul ignore next */
    {
      cov_ip8dgwjrv.b[2][1]++;
    }

    cov_ip8dgwjrv.s[9]++;

    if ((0, _isNumber["default"])(num)) {
      /* istanbul ignore next */
      cov_ip8dgwjrv.b[3][0]++;
      cov_ip8dgwjrv.s[10]++;
      return "".concat(num / 100, "rem");
    } else
    /* istanbul ignore next */
    {
      cov_ip8dgwjrv.b[3][1]++;
    }

    cov_ip8dgwjrv.s[11]++;
    return num;
  } else
  /* istanbul ignore next */
  {
    cov_ip8dgwjrv.b[0][1]++;
  }
}

function toPx(num) {
  /* istanbul ignore next */
  cov_ip8dgwjrv.f[1]++;
  cov_ip8dgwjrv.s[12]++;

  if (
  /* istanbul ignore next */
  (cov_ip8dgwjrv.b[5][0]++, num !== undefined) &&
  /* istanbul ignore next */
  (cov_ip8dgwjrv.b[5][1]++, num !== null)) {
    /* istanbul ignore next */
    cov_ip8dgwjrv.b[4][0]++;
    cov_ip8dgwjrv.s[13]++;

    if ((0, _isNumber["default"])(num)) {
      /* istanbul ignore next */
      cov_ip8dgwjrv.b[6][0]++;
      cov_ip8dgwjrv.s[14]++;
      return num;
    } else
    /* istanbul ignore next */
    {
      cov_ip8dgwjrv.b[6][1]++;
    }

    cov_ip8dgwjrv.s[15]++;

    if (
    /* istanbul ignore next */
    (cov_ip8dgwjrv.b[8][0]++, (0, _isString["default"])(num)) &&
    /* istanbul ignore next */
    (cov_ip8dgwjrv.b[8][1]++, num !== 'auto') &&
    /* istanbul ignore next */
    (cov_ip8dgwjrv.b[8][2]++, !num.endsWith('%'))) {
      /* istanbul ignore next */
      cov_ip8dgwjrv.b[7][0]++;
      cov_ip8dgwjrv.s[16]++;
      return parseFloat(num) * (num.endsWith('rem') ?
      /* istanbul ignore next */
      (cov_ip8dgwjrv.b[9][0]++, 100) :
      /* istanbul ignore next */
      (cov_ip8dgwjrv.b[9][1]++, 1));
    } else
    /* istanbul ignore next */
    {
      cov_ip8dgwjrv.b[7][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_ip8dgwjrv.b[4][1]++;
  }
}