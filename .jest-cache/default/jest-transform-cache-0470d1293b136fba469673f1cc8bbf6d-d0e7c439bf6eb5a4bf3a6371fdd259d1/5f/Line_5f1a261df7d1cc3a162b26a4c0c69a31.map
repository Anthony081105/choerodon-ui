{"version":3,"sources":["Line.jsx"],"names":["Line","props","className","percent","prefixCls","strokeColor","strokeLinecap","strokeWidth","style","trailColor","trailWidth","restProps","gapPosition","pathStyle","strokeDasharray","strokeDashoffset","transition","center","right","pathString","viewBoxString","path","Component","propTypes","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;IAEMA,I;;;;;;;;;;;;6BAKK;AAAA;;AAAA,wBAYH,KAAKC,KAZF;AAAA,UAELC,SAFK,eAELA,SAFK;AAAA,UAGLC,OAHK,eAGLA,OAHK;AAAA,UAILC,SAJK,eAILA,SAJK;AAAA,UAKLC,WALK,eAKLA,WALK;AAAA,UAMLC,aANK,eAMLA,aANK;AAAA,UAOLC,WAPK,eAOLA,WAPK;AAAA,UAQLC,KARK,eAQLA,KARK;AAAA,UASLC,UATK,eASLA,UATK;AAAA,UAULC,UAVK,eAULA,UAVK;AAAA,UAWFC,SAXE;AAcP,aAAOA,SAAS,CAACC,WAAjB;AAEA,UAAMC,SAAS,GAAG;AAChBC,QAAAA,eAAe,EAAE,cADD;AAEhBC,QAAAA,gBAAgB,YAAK,MAAMZ,OAAX,OAFA;AAGhBa,QAAAA,UAAU,EAAE;AAHI,OAAlB;AAMA,UAAMC,MAAM,GAAGV,WAAW,GAAG,CAA7B;AACA,UAAMW,KAAK,GAAG,MAAMX,WAAW,GAAG,CAAlC;AACA,UAAMY,UAAU,eAAQb,aAAa,KAAK,OAAlB,GAA4BW,MAA5B,GAAqC,CAA7C,cAAkDA,MAAlD,4BACLX,aAAa,KAAK,OAAlB,GAA4BY,KAA5B,GAAoC,GAD/B,cACsCD,MADtC,CAAhB;AAEA,UAAMG,aAAa,qBAAcb,WAAd,CAAnB;AAEA,aACE;AACE,QAAA,SAAS,YAAKH,SAAL,mBAAuBF,SAAvB,CADX;AAEE,QAAA,OAAO,EAAEkB,aAFX;AAGE,QAAA,mBAAmB,EAAC,MAHtB;AAIE,QAAA,KAAK,EAAEZ;AAJT,SAKMG,SALN,GAOE;AACE,QAAA,SAAS,YAAKP,SAAL,gBADX;AAEE,QAAA,CAAC,EAAEe,UAFL;AAGE,QAAA,aAAa,EAAEb,aAHjB;AAIE,QAAA,MAAM,EAAEG,UAJV;AAKE,QAAA,WAAW,EAAEC,UAAU,IAAIH,WAL7B;AAME,QAAA,WAAW,EAAC;AANd,QAPF,EAeE;AACE,QAAA,SAAS,YAAKH,SAAL,eADX;AAEE,QAAA,CAAC,EAAEe,UAFL;AAGE,QAAA,aAAa,EAAEb,aAHjB;AAIE,QAAA,MAAM,EAAED,WAJV;AAKE,QAAA,WAAW,EAAEE,WALf;AAME,QAAA,WAAW,EAAC,GANd;AAOE,QAAA,GAAG,EAAE,aAAAc,IAAI,EAAI;AACX,UAAA,KAAI,CAACA,IAAL,GAAYA,IAAZ;AACD,SATH;AAUE,QAAA,KAAK,EAAER;AAVT,QAfF,CADF;AA8BD;;;EA/DgBS,gB;;iCAAbtB,I,eACeuB,gB;iCADfvB,I,kBAGkBwB,mB;;eA+DT,0BAASxB,IAAT,C","sourcesContent":["import React, { Component } from 'react';\nimport enhancer from './enhancer';\nimport { defaultProps, propTypes } from './types';\n\nclass Line extends Component {\n  static propTypes = propTypes;\n\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      className,\n      percent,\n      prefixCls,\n      strokeColor,\n      strokeLinecap,\n      strokeWidth,\n      style,\n      trailColor,\n      trailWidth,\n      ...restProps\n    } = this.props;\n\n    delete restProps.gapPosition;\n\n    const pathStyle = {\n      strokeDasharray: '100px, 100px',\n      strokeDashoffset: `${100 - percent}px`,\n      transition: 'stroke-dashoffset 0.3s ease 0s, stroke 0.3s linear',\n    };\n\n    const center = strokeWidth / 2;\n    const right = 100 - strokeWidth / 2;\n    const pathString = `M ${strokeLinecap === 'round' ? center : 0},${center}\n           L ${strokeLinecap === 'round' ? right : 100},${center}`;\n    const viewBoxString = `0 0 100 ${strokeWidth}`;\n\n    return (\n      <svg\n        className={`${prefixCls}-line ${className}`}\n        viewBox={viewBoxString}\n        preserveAspectRatio=\"none\"\n        style={style}\n        {...restProps}\n      >\n        <path\n          className={`${prefixCls}-line-trail`}\n          d={pathString}\n          strokeLinecap={strokeLinecap}\n          stroke={trailColor}\n          strokeWidth={trailWidth || strokeWidth}\n          fillOpacity=\"0\"\n        />\n        <path\n          className={`${prefixCls}-line-path`}\n          d={pathString}\n          strokeLinecap={strokeLinecap}\n          stroke={strokeColor}\n          strokeWidth={strokeWidth}\n          fillOpacity=\"0\"\n          ref={path => {\n            this.path = path;\n          }}\n          style={pathStyle}\n        />\n      </svg>\n    );\n  }\n}\n\nexport default enhancer(Line);\n"]}