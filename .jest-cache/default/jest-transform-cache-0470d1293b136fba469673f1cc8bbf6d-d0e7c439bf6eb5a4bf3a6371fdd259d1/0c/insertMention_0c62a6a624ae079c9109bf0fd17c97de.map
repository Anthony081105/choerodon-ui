{"version":3,"sources":["insertMention.jsx"],"names":["insertMention","editorState","mention","data","mode","entityMode","selection","getSelection","contentState","getCurrentContent","createEntity","searchWord","begin","end","replacedContent","Modifier","replaceText","merge","anchorOffset","focusOffset","getLastCreatedEntityKey","InsertSpaceContent","insertText","getSelectionAfter","newEditorState","EditorState","push","forceSelection"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEe,SAASA,aAAT,CAAuBC,WAAvB,EAAoCC,OAApC,EAA6CC,IAA7C,EAAmDC,IAAnD,EAAyD;AACtE,MAAMC,UAAU,GAAGD,IAAI,KAAK,WAAT,GAAuB,WAAvB,GAAqC,SAAxD;AACA,MAAME,SAAS,GAAGL,WAAW,CAACM,YAAZ,EAAlB;AACA,MAAMC,YAAY,GAAGP,WAAW,CAACQ,iBAAZ,EAArB;AAEAD,EAAAA,YAAY,CAACE,YAAb,CAA0B,SAA1B,EAAqCL,UAArC,EAAiDF,IAAI,IAAID,OAAzD;AACA,MAAMS,UAAU,GAAG,+BAAcV,WAAd,EAA2BK,SAA3B,CAAnB;AANsE,MAO9DM,KAP8D,GAO/CD,UAP+C,CAO9DC,KAP8D;AAAA,MAOvDC,GAPuD,GAO/CF,UAP+C,CAOvDE,GAPuD;;AAQtE,MAAMC,eAAe,GAAGC,kBAASC,WAAT,CACtBR,YADsB,EAEtBF,SAAS,CAACW,KAAV,CAAgB;AACdC,IAAAA,YAAY,EAAEN,KADA;AAEdO,IAAAA,WAAW,EAAEN;AAFC,GAAhB,CAFsB,EAMtBX,OANsB,EAOtB,IAPsB,EAQtBM,YAAY,CAACY,uBAAb,EARsB,CAAxB;;AAWA,MAAMC,kBAAkB,GAAGN,kBAASO,UAAT,CACzBR,eADyB,EAEzBA,eAAe,CAACS,iBAAhB,EAFyB,EAGzB,GAHyB,CAA3B;;AAMA,MAAMC,cAAc,GAAGC,qBAAYC,IAAZ,CAAiBzB,WAAjB,EAA8BoB,kBAA9B,EAAkD,gBAAlD,CAAvB;;AACA,SAAOI,qBAAYE,cAAZ,CAA2BH,cAA3B,EAA2CH,kBAAkB,CAACE,iBAAnB,EAA3C,CAAP;AACD","sourcesContent":["import { EditorState, Modifier } from 'draft-js';\nimport getSearchWord from './getSearchWord';\n\nexport default function insertMention(editorState, mention, data, mode) {\n  const entityMode = mode === 'immutable' ? 'IMMUTABLE' : 'MUTABLE';\n  const selection = editorState.getSelection();\n  const contentState = editorState.getCurrentContent();\n\n  contentState.createEntity('mention', entityMode, data || mention);\n  const searchWord = getSearchWord(editorState, selection);\n  const { begin, end } = searchWord;\n  const replacedContent = Modifier.replaceText(\n    contentState,\n    selection.merge({\n      anchorOffset: begin,\n      focusOffset: end,\n    }),\n    mention,\n    null,\n    contentState.getLastCreatedEntityKey()\n  );\n\n  const InsertSpaceContent = Modifier.insertText(\n    replacedContent,\n    replacedContent.getSelectionAfter(),\n    ' ',\n  );\n\n  const newEditorState = EditorState.push(editorState, InsertSpaceContent, 'insert-mention');\n  return EditorState.forceSelection(newEditorState, InsertSpaceContent.getSelectionAfter());\n}\n"]}