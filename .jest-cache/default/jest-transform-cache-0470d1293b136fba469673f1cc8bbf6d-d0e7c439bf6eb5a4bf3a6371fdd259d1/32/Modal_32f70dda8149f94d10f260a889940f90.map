{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/modal/Modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, CSSProperties, MouseEvent, ReactInstance, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../button';\nimport { ButtonFuncType, ButtonType } from '../button/Button';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { getConfirmLocale } from './locale';\nimport Dialog from '../rc-components/dialog';\nimport addEventListener from '../_util/addEventListener';\nimport Sidebar from './Sidebar';\nimport { getPrefixCls } from '../configure';\n\nlet mousePosition: { x: number; y: number } | null;\nlet mousePositionEventBinded: boolean;\n\nexport interface ModalProps {\n  prefixCls?: string;\n  /** 对话框是否可见 */\n  visible?: boolean;\n  /** 确定按钮 loading */\n  confirmLoading?: boolean;\n  /** ok按钮是否禁用 loading */\n  disableOk?: boolean;\n  /** Cancel按钮是否禁用 loading */\n  disableCancel?: boolean;\n  /** 标题 */\n  title?: ReactNode;\n  /** 是否显示右上角的关闭按钮 */\n  closable?: boolean;\n  /** 点击确定回调 */\n  onOk?: (e: MouseEvent<any>) => void;\n  /** 点击模态框右上角叉、取消按钮、Props.maskClosable 值为 true 时的遮罩层或键盘按下 Esc 时的回调 */\n  onCancel?: (e: MouseEvent<any>) => void;\n  afterClose?: () => void;\n  animationEnd?: () => void;\n  /** 宽度 */\n  width?: string | number;\n  /** 底部内容 */\n  footer?: ReactNode;\n  /** 确认按钮文字 */\n  okText?: string;\n  /** 确认按钮类型 */\n  okType?: ButtonType;\n  /** 取消按钮文字 */\n  cancelText?: string;\n  /** 点击蒙层是否允许关闭 */\n  maskClosable?: boolean;\n  destroyOnClose?: boolean;\n  style?: CSSProperties;\n  wrapClassName?: string;\n  maskTransitionName?: string;\n  transitionName?: string;\n  className?: string;\n  getContainer?: (instance: ReactInstance) => HTMLElement;\n  zIndex?: number;\n  bodyStyle?: CSSProperties;\n  maskStyle?: CSSProperties;\n  mask?: boolean;\n  keyboard?: boolean;\n  funcType?: ButtonFuncType;\n  center?: boolean;\n}\n\nexport interface ModalFuncProps {\n  prefixCls?: string;\n  className?: string;\n  visible?: boolean;\n  title?: ReactNode;\n  content?: ReactNode;\n  onOk?: (...args: any[]) => any | PromiseLike<any>;\n  onCancel?: (...args: any[]) => any | PromiseLike<any>;\n  width?: string | number;\n  iconClassName?: string;\n  okText?: string;\n  okType?: ButtonType;\n  cancelText?: string;\n  iconType?: string;\n  maskClosable?: boolean;\n  zIndex?: number;\n  okCancel?: boolean;\n  style?: CSSProperties;\n  type?: string;\n  keyboard?: boolean;\n  transitionName?: string;\n  funcType?: ButtonFuncType;\n  confirmLoading?: boolean;\n  disableOk?: boolean;\n  disableCancel?: boolean;\n  closable?: boolean;\n  footer?: ReactNode;\n}\n\nexport type ModalFunc = (\n  props: ModalFuncProps,\n) => {\n  destroy: () => void;\n};\n\nexport interface ModalLocale {\n  okText: string;\n  cancelText: string;\n  justOkText: string;\n}\n\nexport default class Modal extends Component<ModalProps, {}> {\n  static displayName = 'Modal';\n\n  static info: ModalFunc;\n\n  static success: ModalFunc;\n\n  static error: ModalFunc;\n\n  static warn: ModalFunc;\n\n  static warning: ModalFunc;\n\n  static confirm: ModalFunc;\n\n  static Sidebar: typeof Sidebar;\n\n  static defaultProps = {\n    width: 520,\n    transitionName: 'zoom',\n    maskTransitionName: 'fade',\n    confirmLoading: false,\n    disableOk: false,\n    disableCancel: false,\n    visible: false,\n    okType: 'primary',\n    center: false,\n  };\n\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    onOk: PropTypes.func,\n    onCancel: PropTypes.func,\n    okText: PropTypes.node,\n    cancelText: PropTypes.node,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    confirmLoading: PropTypes.bool,\n    visible: PropTypes.bool,\n    align: PropTypes.object,\n    footer: PropTypes.node,\n    title: PropTypes.node,\n    closable: PropTypes.bool,\n    transitionName: PropTypes.string,\n    funcType: PropTypes.string,\n    center: PropTypes.bool,\n    disableOk: PropTypes.bool,\n    disableCancel: PropTypes.bool,\n    okType: PropTypes.string,\n    maskTransitionName: PropTypes.string,\n  };\n\n  handleCancel = (e: any) => {\n    const { onCancel } = this.props;\n    if (onCancel) {\n      onCancel(e);\n    }\n  };\n\n  handleOk = (e: any) => {\n    const { onOk } = this.props;\n    if (onOk) {\n      onOk(e);\n    }\n  };\n\n  componentDidMount() {\n    if (mousePositionEventBinded) {\n      return;\n    }\n    // 只有点击事件支持从鼠标位置动画展开\n    addEventListener(document.documentElement, 'click', (e: MouseEvent<any>) => {\n      mousePosition = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n      // 100ms 内发生过点击事件，则从点击位置动画展示\n      // 否则直接 zoom 展示\n      // 这样可以兼容非点击方式展开\n      setTimeout(() => (mousePosition = null), 100);\n    });\n    mousePositionEventBinded = true;\n  }\n\n  renderFooter = (locale: ModalLocale) => {\n    const {\n      okText,\n      okType,\n      cancelText,\n      confirmLoading,\n      funcType,\n      disableOk,\n      disableCancel,\n    } = this.props;\n    return (\n      <div>\n        <Button\n          disabled={disableCancel || confirmLoading}\n          onClick={this.handleCancel}\n          funcType={funcType}\n        >\n          {cancelText || locale.cancelText}\n        </Button>\n        <Button\n          type={okType}\n          funcType={funcType}\n          disabled={disableOk}\n          loading={confirmLoading}\n          onClick={this.handleOk}\n        >\n          {okText || locale.okText}\n        </Button>\n      </div>\n    );\n  };\n\n  render() {\n    const { footer, visible, prefixCls: customizePrefixCls } = this.props;\n    const prefixCls = getPrefixCls('modal', customizePrefixCls);\n    const defaultFooter = (\n      <LocaleReceiver componentName=\"Modal\" defaultLocale={getConfirmLocale()}>\n        {this.renderFooter}\n      </LocaleReceiver>\n    );\n    return (\n      <Dialog\n        {...this.props}\n        prefixCls={prefixCls}\n        footer={footer === undefined ? defaultFooter : footer}\n        visible={visible}\n        mousePosition={mousePosition}\n        onClose={this.handleCancel}\n      />\n    );\n  }\n}\n"]}