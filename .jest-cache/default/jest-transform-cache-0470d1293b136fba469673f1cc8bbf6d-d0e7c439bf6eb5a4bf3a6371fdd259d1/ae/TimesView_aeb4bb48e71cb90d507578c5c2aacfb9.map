{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/date-picker/TimesView.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport moment, { Moment, unitOfTime } from 'moment';\nimport classNames from 'classnames';\nimport { action, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport autobind from '../_util/autobind';\nimport { TimeUnit, ViewMode } from './enum';\nimport DaysView, { alwaysValidDate } from './DaysView';\nimport { FieldType } from '../data-set/enum';\nimport { $l } from '../locale-context';\nimport { getDateFormatByFieldType } from '../field/utils';\nimport { stopEvent } from '../_util/EventManager';\n\nconst TimeUnitQueue: unitOfTime.Base[] = [TimeUnit.hour, TimeUnit.minute, TimeUnit.second];\n\n@observer\nexport default class TimesView extends DaysView {\n  static displayName = 'TimesView';\n\n  static type = FieldType.time;\n\n  @observable currentUnit?: unitOfTime.Base;\n\n  @autobind\n  handleDateTimeSelect() {\n    this.changeViewMode(ViewMode.dateTime);\n  }\n\n  handleKeyDownHome(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().set(this.getCurrentUnit(), 0));\n  }\n\n  handleKeyDownEnd(e) {\n    stopEvent(e);\n    const unit = this.getCurrentUnit();\n    const size = unit === TimeUnit.hour ? 24 : 60;\n    this.changeSelectedDate(this.getCloneDate().set(unit, size - 1));\n  }\n\n  handleKeyDownLeft(e) {\n    stopEvent(e);\n    if (e.altKey) {\n      if (this.props.mode !== ViewMode.time) {\n        this.changeViewMode(ViewMode.dateTime);\n      }\n    } else {\n      this.changeUnit(this.getPrevUnit());\n    }\n  }\n\n  handleKeyDownRight(e) {\n    stopEvent(e);\n    if (!e.altKey) {\n      this.changeUnit(this.getNextUnit());\n    }\n  }\n\n  handleKeyDownUp(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().subtract(1, this.getCurrentUnit()));\n  }\n\n  handleKeyDownDown(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().add(1, this.getCurrentUnit()));\n  }\n\n  handleKeyDownPageUp(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().set(this.getCurrentUnit(), 0));\n  }\n\n  handleKeyDownPageDown(e) {\n    stopEvent(e);\n    const unit = this.getCurrentUnit();\n    const size = unit === TimeUnit.hour ? 24 : 60;\n    this.changeSelectedDate(this.getCloneDate().set(unit, size - 1));\n  }\n\n  handleTimeCellClick(date: Moment, unit: unitOfTime.Base) {\n    this.changeUnit(unit);\n    this.changeSelectedDate(date);\n  }\n\n  @autobind\n  async handleWheel(e) {\n    e.preventDefault();\n    if (e.deltaY > 0) {\n      await this.changeSelectedDate(this.getCloneDate().add(1, this.getCurrentUnit()));\n    } else if (e.deltaY < 0) {\n      await this.changeSelectedDate(this.getCloneDate().subtract(1, this.getCurrentUnit()));\n    }\n  }\n\n  renderHeader(): ReactNode {\n    const {\n      prefixCls,\n      props: { date, mode },\n    } = this;\n    if (mode === ViewMode.time) {\n      return (\n        <div className={`${prefixCls}-header`}>\n          <span className={`${prefixCls}-view-select`}>\n            {date.format(getDateFormatByFieldType(TimesView.type))}\n          </span>\n        </div>\n      );\n    }\n    return (\n      <div className={`${prefixCls}-header`}>\n        <a className={`${prefixCls}-view-select`} onClick={this.handleMonthSelect}>\n          {date.localeData().monthsShort(date)}\n        </a>\n        <a className={`${prefixCls}-view-select`} onClick={this.handleDateTimeSelect}>\n          {date.date()}\n        </a>\n        <a className={`${prefixCls}-view-select`} onClick={this.handleYearSelect}>\n          {date.year()}\n        </a>\n      </div>\n    );\n  }\n\n  renderFooter(): ReactNode {\n    const { prefixCls } = this;\n    return (\n      <div className={`${prefixCls}-footer`}>\n        <a className={`${prefixCls}-footer-now-btn`} onClick={this.choose.bind(this, moment())}>\n          {$l('DatePicker', 'now')}\n        </a>\n        <a\n          className={`${prefixCls}-footer-view-select`}\n          onClick={this.choose.bind(this, this.props.date)}\n        >\n          {$l('DatePicker', 'ok')}\n        </a>\n      </div>\n    );\n  }\n\n  renderPanel() {\n    const className = this.getPanelClass();\n    return (\n      <div\n        className={`${className} ${this.prefixCls}-${this.getCurrentUnit()}`}\n        onWheel={this.handleWheel}\n      >\n        <div className={`${className}-inner`}>{this.renderPanelBody()}</div>\n      </div>\n    );\n  }\n\n  renderPanelBody(): ReactNode {\n    return [\n      this.getTimeBar(TimeUnit.hour),\n      this.getTimeBar(TimeUnit.minute),\n      this.getTimeBar(TimeUnit.second),\n      <div key=\"active\" className={`${this.prefixCls}-time-focus-active`} />,\n    ];\n  }\n\n  @autobind\n  renderCell(props: object): ReactNode {\n    return <li {...props} />;\n  }\n\n  getTimeBar(unit: unitOfTime.Base): ReactNode {\n    const {\n      prefixCls,\n      props: { date, renderer = this.renderCell, isValidDate = alwaysValidDate },\n    } = this;\n    const size = unit === TimeUnit.hour ? 24 : 60;\n    const selected = date.clone();\n    const pre = date.clone().set(unit, 0);\n    const last = pre.clone().add(size, unit);\n    const items: ReactNode[] = [];\n    while (pre.isBefore(last)) {\n      const current = pre.clone();\n      const isDisabled = !isValidDate(current, selected);\n      const text = String(pre.get(unit));\n      const className = classNames(`${prefixCls}-cell`, {\n        [`${prefixCls}-selected`]: pre.isSame(selected, unit),\n        [`${prefixCls}-disabled`]: isDisabled,\n      });\n      const props: any = {\n        key: text,\n        className,\n        children: <div className={`${prefixCls}-cell-inner`}>{text}</div>,\n      };\n      if (!isDisabled) {\n        props.onClick = this.handleTimeCellClick.bind(this, current, unit);\n      }\n      items.push(renderer(props, text, current, selected));\n      pre.add(1, unit);\n    }\n    return (\n      <div\n        key={unit}\n        className={`${prefixCls}-time-list`}\n        onMouseEnter={this.changeUnit.bind(this, unit)}\n      >\n        <ul style={{ top: `${(-selected.get(unit) + 4.5) * 100}%` }}>{items}</ul>\n        <div className={`${prefixCls}-time-focus`} />\n      </div>\n    );\n  }\n\n  getPanelClass(): string {\n    return `${this.prefixCls}-time-panel`;\n  }\n\n  getCurrentUnit(): unitOfTime.Base {\n    const { currentUnit = TimeUnit.hour } = this;\n    return currentUnit;\n  }\n\n  getPrevUnit(): unitOfTime.Base {\n    return TimeUnitQueue[TimeUnitQueue.indexOf(this.getCurrentUnit()) - 1];\n  }\n\n  getNextUnit(): unitOfTime.Base {\n    return TimeUnitQueue[TimeUnitQueue.indexOf(this.getCurrentUnit()) + 1];\n  }\n\n  @action\n  changeUnit(unit) {\n    if (unit !== undefined && unit !== this.currentUnit) {\n      this.currentUnit = unit;\n    }\n  }\n\n  choose(date: Moment) {\n    const { mode } = this.props;\n    if (mode !== ViewMode.time) {\n      this.changeSelectedDate(date);\n      this.changeViewMode(mode);\n    }\n    super.choose(date);\n  }\n}\n"]}