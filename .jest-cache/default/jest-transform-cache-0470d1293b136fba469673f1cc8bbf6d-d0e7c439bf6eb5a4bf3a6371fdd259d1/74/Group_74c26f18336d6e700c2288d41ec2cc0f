bfada066ad5599881b8a3b052eb5ff2c
"use strict";

/* istanbul ignore next */
var cov_pjmt7rg4l = function () {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components/input/Group.tsx";
  var hash = "8172f152a1951e9544177b565f61d7da78d15b08";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components/input/Group.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 95
        }
      },
      "4": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 53
        }
      },
      "5": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 63
        }
      },
      "6": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "7": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "8": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 42
        }
      },
      "9": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 22,
          column: 40
        }
      },
      "10": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 69
        }
      },
      "11": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 23
        }
      },
      "12": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "13": {
        start: {
          line: 26,
          column: 14
        },
        end: {
          line: 26,
          column: 25
        }
      },
      "14": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 31
        }
      },
      "15": {
        start: {
          line: 28,
          column: 18
        },
        end: {
          line: 28,
          column: 81
        }
      },
      "16": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 372
        }
      },
      "17": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "18": {
        start: {
          line: 36,
          column: 15
        },
        end: {
          line: 36,
          column: 20
        }
      },
      "19": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 37,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "Group",
        decl: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 26
          }
        },
        loc: {
          start: {
            line: 18,
            column: 34
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 23,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 23,
            column: 50
          }
        }, {
          start: {
            line: 23,
            column: 53
          },
          end: {
            line: 23,
            column: 69
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "8172f152a1951e9544177b565f61d7da78d15b08"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_pjmt7rg4l.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_pjmt7rg4l.s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_pjmt7rg4l.s[2]++;
exports["default"] = void 0;

var _defineProperty2 =
/* istanbul ignore next */
(cov_pjmt7rg4l.s[3]++, _interopRequireDefault(require("@babel/runtime/helpers/defineProperty")));

var _react =
/* istanbul ignore next */
(cov_pjmt7rg4l.s[4]++, _interopRequireDefault(require("react")));

var _classnames =
/* istanbul ignore next */
(cov_pjmt7rg4l.s[5]++, _interopRequireDefault(require("classnames")));

var _configure =
/* istanbul ignore next */
(cov_pjmt7rg4l.s[6]++, require("../configure"));

/* istanbul ignore next */
cov_pjmt7rg4l.s[7]++;

var Group = function Group(props) {
  /* istanbul ignore next */
  cov_pjmt7rg4l.f[0]++;

  var _classNames;

  var customizePrefixCls =
  /* istanbul ignore next */
  (cov_pjmt7rg4l.s[8]++, props.prefixCls),
      _props$className =
  /* istanbul ignore next */
  (cov_pjmt7rg4l.s[9]++, props.className),
      className =
  /* istanbul ignore next */
  (cov_pjmt7rg4l.s[10]++, _props$className === void 0 ?
  /* istanbul ignore next */
  (cov_pjmt7rg4l.b[0][0]++, '') :
  /* istanbul ignore next */
  (cov_pjmt7rg4l.b[0][1]++, _props$className)),
      size =
  /* istanbul ignore next */
  (cov_pjmt7rg4l.s[11]++, props.size),
      compact =
  /* istanbul ignore next */
  (cov_pjmt7rg4l.s[12]++, props.compact),
      style =
  /* istanbul ignore next */
  (cov_pjmt7rg4l.s[13]++, props.style),
      children =
  /* istanbul ignore next */
  (cov_pjmt7rg4l.s[14]++, props.children);

  var prefixCls =
  /* istanbul ignore next */
  (cov_pjmt7rg4l.s[15]++, (0, _configure.getPrefixCls)('input-group', customizePrefixCls));
  var cls =
  /* istanbul ignore next */
  (cov_pjmt7rg4l.s[16]++, (0, _classnames["default"])(prefixCls, (_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-lg"), size === "large"), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-sm"), size === "small"), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-compact"), compact), _classNames), className));

  /* istanbul ignore next */
  cov_pjmt7rg4l.s[17]++;
  return _react["default"].createElement("span", {
    className: cls,
    style: style
  }, children);
};

var _default =
/* istanbul ignore next */
(cov_pjmt7rg4l.s[18]++, Group);

/* istanbul ignore next */
cov_pjmt7rg4l.s[19]++;
exports["default"] = _default;