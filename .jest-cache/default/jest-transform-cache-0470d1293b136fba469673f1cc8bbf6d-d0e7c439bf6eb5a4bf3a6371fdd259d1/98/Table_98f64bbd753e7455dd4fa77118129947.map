{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/table/Table.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, ReactChildren, ReactNode, SyntheticEvent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport Pagination from '../pagination';\nimport Icon from '../icon';\nimport Spin, { SpinProps } from '../spin';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport warning from '../_util/warning';\nimport FilterDropdown from './filterDropdown';\nimport createStore, { Store } from './createStore';\nimport SelectionBox from './SelectionBox';\nimport SelectionCheckboxAll from './SelectionCheckboxAll';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport createBodyRow from './createBodyRow';\nimport {\n  findColumnByFilterValue,\n  flatArray,\n  flatFilter,\n  getColumnKey,\n  getLeafColumns,\n  normalizeColumns,\n  removeHiddenColumns,\n  treeMap,\n} from './util';\nimport {\n  ColumnProps,\n  CompareFn,\n  RowSelectionType,\n  SelectionItemSelectFn,\n  TableComponents,\n  TableLocale,\n  TablePaginationConfig,\n  TableProps,\n  TableState,\n  TableStateFilters,\n} from './interface';\nimport { RadioChangeEvent } from '../radio';\nimport { CheckboxChangeEvent } from '../checkbox';\nimport FilterBar from './FilterBar';\nimport { VALUE_OR } from './FilterSelect';\nimport RcTable from '../rc-components/table';\nimport { Size } from '../_util/enum';\nimport { getPrefixCls } from '../configure';\n\nfunction findBodyDom(dom: Element | HTMLDivElement, reg: RegExp): any {\n  if (dom.childElementCount > 0) {\n    for (let i = 0; i < dom.childElementCount; i += 1) {\n      if (reg.test(dom.children[i].className)) {\n        return dom.children[i];\n      }\n      if (dom.childElementCount > 0) {\n        const childFound = findBodyDom(dom.children[i], reg);\n        if (childFound !== null) {\n          return childFound;\n        }\n      }\n    }\n  }\n  return null;\n}\n\nfunction stopPropagation(e: SyntheticEvent<any>) {\n  e.stopPropagation();\n  if (e.nativeEvent.stopImmediatePropagation) {\n    e.nativeEvent.stopImmediatePropagation();\n  }\n}\n\nconst defaultPagination = {\n  onChange: noop,\n  onShowSizeChange: noop,\n};\n\n/**\n * Avoid creating new object, so that parent component's shouldComponentUpdate\n * can works appropriately。\n */\nconst emptyObject = {};\n\nexport default class Table<T> extends Component<TableProps<T>, TableState<T>> {\n  static displayName = 'Table';\n\n  static Column = Column;\n\n  static ColumnGroup = ColumnGroup;\n\n  static propTypes = {\n    dataSource: PropTypes.array,\n    empty: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    onColumnFilterChange: PropTypes.func,\n    columns: PropTypes.array,\n    prefixCls: PropTypes.string,\n    useFixedHeader: PropTypes.bool,\n    rowSelection: PropTypes.object,\n    className: PropTypes.string,\n    size: PropTypes.oneOf([Size.large, Size.default, Size.small]),\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    bordered: PropTypes.bool,\n    onChange: PropTypes.func,\n    locale: PropTypes.object,\n    dropdownPrefixCls: PropTypes.string,\n    filterBar: PropTypes.bool,\n    filters: PropTypes.array,\n    filterBarPlaceholder: PropTypes.string,\n    onFilterSelectChange: PropTypes.func,\n    noFilter: PropTypes.bool,\n    autoScroll: PropTypes.bool,\n    indentSize: PropTypes.number,\n    rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    showHeader: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    dataSource: [],\n    empty: null,\n    useFixedHeader: false,\n    rowSelection: null,\n    className: '',\n    size: Size.default,\n    loading: false,\n    bordered: false,\n    indentSize: 20,\n    locale: {},\n    rowKey: 'key',\n    showHeader: true,\n    filterBar: true,\n    noFilter: false,\n    autoScroll: true,\n  };\n\n  CheckboxPropsCache: {\n    [key: string]: any;\n  };\n\n  store: Store;\n\n  columns: ColumnProps<T>[];\n\n  components: TableComponents;\n\n  private refTable: HTMLDivElement | null;\n\n  constructor(props: TableProps<T>) {\n    super(props);\n\n    warning(\n      !('columnsPageRange' in props || 'columnsPageSize' in props),\n      '`columnsPageRange` and `columnsPageSize` are removed, please use fixed columns instead',\n    );\n\n    this.columns = props.columns || normalizeColumns(props.children as ReactChildren);\n\n    this.createComponents(props.components);\n\n    this.state = {\n      ...this.getDefaultSortOrder(this.columns),\n      // 减少状态\n      filters: this.getFiltersFromColumns(),\n      barFilters: props.filters || [],\n      pagination: this.getDefaultPagination(props),\n    };\n\n    this.CheckboxPropsCache = {};\n\n    this.store = createStore({\n      selectedRowKeys: (props.rowSelection || {}).selectedRowKeys || [],\n      selectionDirty: false,\n    });\n  }\n\n  saveRef = ref => {\n    this.refTable = ref;\n  };\n\n  getCheckboxPropsByItem = (item: T, index: number) => {\n    const { rowSelection = {} } = this.props;\n    if (!rowSelection.getCheckboxProps) {\n      return {};\n    }\n    const key = this.getRecordKey(item, index);\n    // Cache checkboxProps\n    if (!this.CheckboxPropsCache[key]) {\n      this.CheckboxPropsCache[key] = rowSelection.getCheckboxProps(item);\n    }\n    return this.CheckboxPropsCache[key];\n  };\n\n  getPrefixCls() {\n    const { prefixCls } = this.props;\n    return getPrefixCls('table', prefixCls);\n  }\n\n  getDefaultSelection() {\n    const { rowSelection = {} } = this.props;\n    if (!rowSelection.getCheckboxProps) {\n      return [];\n    }\n    return this.getFlatData()\n      .filter((item: T, rowIndex) => this.getCheckboxPropsByItem(item, rowIndex).defaultChecked)\n      .map((record, rowIndex) => this.getRecordKey(record, rowIndex));\n  }\n\n  getDefaultPagination(props: TableProps<T>) {\n    const pagination: TablePaginationConfig = props.pagination || {};\n    return this.hasPagination(props)\n      ? {\n          ...defaultPagination,\n          size: props.size,\n          ...pagination,\n          current: pagination.defaultCurrent || pagination.current || 1,\n          pageSize: pagination.defaultPageSize || pagination.pageSize || 10,\n        }\n      : {};\n  }\n\n  componentWillReceiveProps(nextProps: TableProps<T>) {\n    this.columns = nextProps.columns || normalizeColumns(nextProps.children as ReactChildren);\n    if ('pagination' in nextProps || 'pagination' in this.props) {\n      this.setState(previousState => {\n        const newPagination = {\n          ...defaultPagination,\n          size: nextProps.size,\n          ...previousState.pagination,\n          ...nextProps.pagination,\n        };\n        newPagination.current = newPagination.current || 1;\n        newPagination.pageSize = newPagination.pageSize || 10;\n        return { pagination: nextProps.pagination !== false ? newPagination : emptyObject };\n      });\n    }\n    const { rowSelection, dataSource, components } = this.props;\n    const { filters, sortColumn, sortOrder } = this.state;\n    if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {\n      this.store.setState({\n        selectedRowKeys: nextProps.rowSelection.selectedRowKeys || [],\n      });\n      if (\n        rowSelection &&\n        nextProps.rowSelection.getCheckboxProps !== rowSelection.getCheckboxProps\n      ) {\n        this.CheckboxPropsCache = {};\n      }\n    }\n    if ('dataSource' in nextProps && nextProps.dataSource !== dataSource) {\n      this.store.setState({\n        selectionDirty: false,\n      });\n      this.CheckboxPropsCache = {};\n    }\n\n    if (this.getSortOrderColumns(this.columns).length > 0) {\n      const sortState = this.getSortStateFromColumns(this.columns);\n      if (sortState.sortColumn !== sortColumn || sortState.sortOrder !== sortOrder) {\n        this.setState(sortState);\n      }\n    }\n\n    const filteredValueColumns = this.getFilteredValueColumns(this.columns);\n    if (filteredValueColumns.length > 0) {\n      const filtersFromColumns = this.getFiltersFromColumns(this.columns);\n      const newFilters = { ...filters };\n      Object.keys(filtersFromColumns).forEach(key => {\n        newFilters[key] = filtersFromColumns[key];\n      });\n      if (this.isFiltersChanged(newFilters)) {\n        this.setState({ filters: newFilters });\n      }\n    }\n\n    if ('filters' in nextProps) {\n      this.setState({\n        barFilters: nextProps.filters || [],\n      });\n    }\n\n    this.createComponents(nextProps.components, components);\n  }\n\n  onRow = (record: T, index: number) => {\n    const { onRow } = this.props;\n    const prefixCls = this.getPrefixCls();\n    const custom = onRow ? onRow(record, index) : {};\n    return {\n      ...custom,\n      prefixCls,\n      store: this.store,\n      rowKey: this.getRecordKey(record, index),\n    };\n  };\n\n  setSelectedRowKeys(\n    selectedRowKeys: string[],\n    { selectWay, record, checked, changeRowKeys, nativeEvent }: any,\n  ) {\n    const { rowSelection = {} as any } = this.props;\n    if (rowSelection && !('selectedRowKeys' in rowSelection)) {\n      this.store.setState({ selectedRowKeys });\n    }\n    const data = this.getFlatData();\n    if (!rowSelection.onChange && !rowSelection[selectWay]) {\n      return;\n    }\n    const selectedRows = data.filter(\n      (row, i) => selectedRowKeys.indexOf(this.getRecordKey(row, i)) >= 0,\n    );\n    if (rowSelection.onChange) {\n      rowSelection.onChange(selectedRowKeys, selectedRows);\n    }\n    if (selectWay === 'onSelect' && rowSelection.onSelect) {\n      rowSelection.onSelect(record, checked, selectedRows, nativeEvent);\n    } else if (selectWay === 'onSelectAll' && rowSelection.onSelectAll) {\n      const changeRows = data.filter(\n        (row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0,\n      );\n      rowSelection.onSelectAll(checked, selectedRows, changeRows);\n    } else if (selectWay === 'onSelectInvert' && rowSelection.onSelectInvert) {\n      rowSelection.onSelectInvert(selectedRowKeys);\n    }\n  }\n\n  hasPagination(props?: any) {\n    return (props || this.props).pagination !== false;\n  }\n\n  isFiltersChanged(filters: TableStateFilters) {\n    let filtersChanged = false;\n    const { filters: stateFilters } = this.state;\n    if (Object.keys(filters).length !== Object.keys(stateFilters).length) {\n      filtersChanged = true;\n    } else {\n      Object.keys(filters).forEach(columnKey => {\n        if (filters[columnKey] !== stateFilters[columnKey]) {\n          filtersChanged = true;\n        }\n      });\n    }\n    return filtersChanged;\n  }\n\n  getSortOrderColumns(columns?: ColumnProps<T>[]) {\n    return flatFilter(\n      columns || this.columns || [],\n      (column: ColumnProps<T>) => 'sortOrder' in column,\n    );\n  }\n\n  getFilteredValueColumns(columns?: ColumnProps<T>[]) {\n    return flatFilter(\n      columns || this.columns || [],\n      (column: ColumnProps<T>) => typeof column.filteredValue !== 'undefined',\n    );\n  }\n\n  getFiltersFromColumns(columns?: ColumnProps<T>[]) {\n    const filters: any = {};\n    this.getFilteredValueColumns(columns).forEach((col: ColumnProps<T>) => {\n      const colKey = this.getColumnKey(col) as string;\n      filters[colKey] = col.filteredValue;\n    });\n    return filters;\n  }\n\n  getDefaultSortOrder(columns?: ColumnProps<T>[]) {\n    const definedSortState = this.getSortStateFromColumns(columns);\n\n    const defaultSortedColumn = flatFilter(\n      columns || [],\n      (column: ColumnProps<T>) => column.defaultSortOrder != null,\n    )[0];\n\n    if (defaultSortedColumn && !definedSortState.sortColumn) {\n      return {\n        sortColumn: defaultSortedColumn,\n        sortOrder: defaultSortedColumn.defaultSortOrder,\n      };\n    }\n\n    return definedSortState;\n  }\n\n  getSortStateFromColumns(columns?: ColumnProps<T>[]) {\n    // return first column which sortOrder is not falsy\n    const sortedColumn = this.getSortOrderColumns(columns).filter(\n      (col: ColumnProps<T>) => col.sortOrder,\n    )[0];\n\n    if (sortedColumn) {\n      return {\n        sortColumn: sortedColumn,\n        sortOrder: sortedColumn.sortOrder,\n      };\n    }\n\n    return {\n      sortColumn: null,\n      sortOrder: null,\n    };\n  }\n\n  getSorterFn() {\n    const { sortOrder, sortColumn } = this.state;\n    if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== 'function') {\n      return;\n    }\n\n    return (a: T, b: T) => {\n      const result = (sortColumn!.sorter as CompareFn<T>)(a, b);\n      if (result !== 0) {\n        return sortOrder === 'descend' ? -result : result;\n      }\n      return 0;\n    };\n  }\n\n  setSortOrder(order: string, column: ColumnProps<T>) {\n    const newState = {\n      sortOrder: order,\n      sortColumn: column,\n    };\n\n    // Controlled\n    if (this.getSortOrderColumns().length === 0) {\n      this.setState(newState);\n    }\n\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(\n        ...this.prepareParamsArguments({\n          ...this.state,\n          ...newState,\n        }),\n      );\n    }\n  }\n\n  toggleSortOrder(order: string, column: ColumnProps<T>) {\n    let { sortColumn, sortOrder } = this.state;\n    // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题\n    const isSortColumn = this.isSortColumn(column);\n    if (!isSortColumn) {\n      // 当前列未排序\n      sortOrder = order;\n      sortColumn = column;\n    } else if (sortOrder === order) {\n      // 切换为未排序状态\n      sortOrder = '';\n      sortColumn = null;\n    } else {\n      // 切换为排序状态\n      sortOrder = order;\n    }\n    const newState = {\n      sortOrder,\n      sortColumn,\n    };\n\n    // Controlled\n    if (this.getSortOrderColumns().length === 0) {\n      this.setState(newState);\n    }\n\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(\n        ...this.prepareParamsArguments({\n          ...this.state,\n          ...newState,\n        }),\n      );\n    }\n  }\n\n  setNewFilterState(newState: any) {\n    const { pagination: propsPagination, onChange } = this.props;\n    const { pagination: statePagination } = this.state;\n    const pagination = { ...statePagination };\n\n    if (propsPagination) {\n      // Reset current prop\n      pagination.current = 1;\n      pagination.onChange!(pagination.current);\n    }\n\n    // Controlled current prop will not respond user interaction\n    if (propsPagination && typeof propsPagination === 'object' && 'current' in propsPagination) {\n      newState.pagination = {\n        ...pagination,\n        current: statePagination.current,\n      };\n    }\n    this.setState(newState, () => {\n      this.store.setState({\n        selectionDirty: false,\n      });\n      if (onChange) {\n        onChange(\n          ...this.prepareParamsArguments({\n            ...this.state,\n            selectionDirty: false,\n            pagination,\n          }),\n        );\n      }\n    });\n  }\n\n  handleFilterSelectClear = () => {\n    const { filters } = this.state;\n    Object.keys(filters).map(key => (filters[key] = []));\n    this.setNewFilterState({\n      barFilters: [],\n      filters,\n    });\n  };\n\n  handleFilterSelectChange = (barFilters: any[]) => {\n    const { onFilterSelectChange } = this.props;\n    if (onFilterSelectChange) {\n      onFilterSelectChange(barFilters);\n    }\n    this.setNewFilterState({\n      barFilters,\n    });\n  };\n\n  handleColumnFilterChange = (e?: any) => {\n    const { onColumnFilterChange } = this.props;\n    if (onColumnFilterChange) {\n      onColumnFilterChange(e);\n    }\n    this.forceUpdate();\n  };\n\n  handleFilter = (column: ColumnProps<T>, nextFilters: string[]) => {\n    const { filters: stateFilters } = this.state;\n    const filters = {\n      ...stateFilters,\n      [this.getColumnKey(column) as string]: nextFilters,\n    };\n    // Remove filters not in current columns\n    const currentColumnKeys: string[] = [];\n    treeMap(this.columns, c => {\n      if (!c.children) {\n        currentColumnKeys.push(this.getColumnKey(c) as string);\n      }\n    });\n    Object.keys(filters).forEach(columnKey => {\n      if (currentColumnKeys.indexOf(columnKey) < 0) {\n        delete filters[columnKey];\n      }\n    });\n\n    this.setNewFilterState({\n      filters,\n    });\n  };\n\n  handleSelect = (record: T, rowIndex: number, e: CheckboxChangeEvent) => {\n    const checked = e.target.checked;\n    const nativeEvent = e.nativeEvent;\n    const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n    let selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n    const key = this.getRecordKey(record, rowIndex);\n    if (checked) {\n      selectedRowKeys.push(this.getRecordKey(record, rowIndex));\n    } else {\n      selectedRowKeys = selectedRowKeys.filter((i: string) => key !== i);\n    }\n    this.store.setState({\n      selectionDirty: true,\n    });\n    this.setSelectedRowKeys(selectedRowKeys, {\n      selectWay: 'onSelect',\n      record,\n      checked,\n      changeRowKeys: undefined,\n      nativeEvent,\n    });\n  };\n\n  handleRadioSelect = (record: T, rowIndex: number, e: RadioChangeEvent) => {\n    const checked = e.target.checked;\n    const nativeEvent = e.nativeEvent;\n    const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n    let selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n    const key = this.getRecordKey(record, rowIndex);\n    selectedRowKeys = [key];\n    this.store.setState({\n      selectionDirty: true,\n    });\n    this.setSelectedRowKeys(selectedRowKeys, {\n      selectWay: 'onSelect',\n      record,\n      checked,\n      changeRowKeys: undefined,\n      nativeEvent,\n    });\n  };\n\n  handleSelectRow = (selectionKey: string, index: number, onSelectFunc: SelectionItemSelectFn) => {\n    const data = this.getFlatCurrentPageData();\n    const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n    const selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n    const changeableRowKeys = data\n      .filter((item, i) => !this.getCheckboxPropsByItem(item, i).disabled)\n      .map((item, i) => this.getRecordKey(item, i));\n\n    const changeRowKeys: string[] = [];\n    let selectWay = '';\n    let checked;\n    // handle default selection\n    switch (selectionKey) {\n      case 'all':\n        changeableRowKeys.forEach(key => {\n          if (selectedRowKeys.indexOf(key) < 0) {\n            selectedRowKeys.push(key);\n            changeRowKeys.push(key);\n          }\n        });\n        selectWay = 'onSelectAll';\n        checked = true;\n        break;\n      case 'removeAll':\n        changeableRowKeys.forEach(key => {\n          if (selectedRowKeys.indexOf(key) >= 0) {\n            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n            changeRowKeys.push(key);\n          }\n        });\n        selectWay = 'onSelectAll';\n        checked = false;\n        break;\n      case 'invert':\n        changeableRowKeys.forEach(key => {\n          if (selectedRowKeys.indexOf(key) < 0) {\n            selectedRowKeys.push(key);\n          } else {\n            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n          }\n          changeRowKeys.push(key);\n          selectWay = 'onSelectInvert';\n        });\n        break;\n      default:\n        break;\n    }\n\n    this.store.setState({\n      selectionDirty: true,\n    });\n    // when select custom selection, callback selections[n].onSelect\n    const { rowSelection } = this.props;\n    let customSelectionStartIndex = 2;\n    if (rowSelection && rowSelection.hideDefaultSelections) {\n      customSelectionStartIndex = 0;\n    }\n    if (index >= customSelectionStartIndex && typeof onSelectFunc === 'function') {\n      return onSelectFunc(changeableRowKeys);\n    }\n    this.setSelectedRowKeys(selectedRowKeys, {\n      selectWay,\n      checked,\n      changeRowKeys,\n    });\n  };\n\n  handlePageChange = (current: number, ...otherArguments: any[]) => {\n    const { onChange, autoScroll, pagination: propsPagination } = this.props;\n    const { pagination: statePagination } = this.state;\n    const pagination = { ...statePagination };\n    if (autoScroll) {\n      setTimeout(() => {\n        if (this.refTable && this.refTable.clientHeight > document.body.clientHeight) {\n          this.refTable.scrollIntoView({\n            block: 'start',\n          });\n        } else if (this.refTable) {\n          // @ts-ignore\n          this.refTable.scrollIntoViewIfNeeded({\n            block: 'start',\n          });\n        }\n      }, 10);\n      if (this.refTable) {\n        const dom = findBodyDom(this.refTable, new RegExp(`${this.getPrefixCls()}-body`));\n        if (dom !== null && dom.scroll) {\n          dom.scrollTop = 0;\n        }\n      }\n    }\n    if (current) {\n      pagination.current = current;\n    } else {\n      pagination.current = pagination.current || 1;\n    }\n    pagination.onChange!(pagination.current, ...otherArguments);\n\n    const newState = {\n      pagination,\n    };\n    // Controlled current prop will not respond user interaction\n    if (propsPagination && typeof propsPagination === 'object' && 'current' in propsPagination) {\n      newState.pagination = {\n        ...pagination,\n        current: statePagination.current,\n      };\n    }\n    this.setState(newState);\n\n    this.store.setState({\n      selectionDirty: false,\n    });\n\n    if (onChange) {\n      onChange(\n        ...this.prepareParamsArguments({\n          ...this.state,\n          selectionDirty: false,\n          pagination,\n        }),\n      );\n    }\n  };\n\n  renderSelectionBox = (type: RowSelectionType | undefined) => {\n    return (_: any, record: T, index: number) => {\n      const rowIndex = this.getRecordKey(record, index); // 从 1 开始\n      const props = this.getCheckboxPropsByItem(record, index);\n      const handleChange = (e: RadioChangeEvent | CheckboxChangeEvent) => {\n        if (type === 'radio') {\n          this.handleRadioSelect(record, rowIndex, e);\n        } else {\n          this.handleSelect(record, rowIndex, e);\n        }\n      };\n\n      return (\n        <span onClick={stopPropagation}>\n          <SelectionBox\n            type={type}\n            store={this.store}\n            rowIndex={rowIndex}\n            onChange={handleChange}\n            defaultSelection={this.getDefaultSelection()}\n            {...props}\n          />\n        </span>\n      );\n    };\n  };\n\n  getRecordKey = (record: T, index: number) => {\n    const { rowKey } = this.props;\n    const recordKey =\n      typeof rowKey === 'function' ? rowKey(record, index) : (record as any)[rowKey as string];\n    warning(\n      recordKey !== undefined,\n      'Each record in dataSource of table should have a unique `key` prop, or set `rowKey` to an unique primary key',\n    );\n    return recordKey === undefined ? index : recordKey;\n  };\n\n  getPopupContainer = () => {\n    return findDOMNode(this) as HTMLElement;\n  };\n\n  renderRowSelection(locale: TableLocale) {\n    const { rowSelection } = this.props;\n    const prefixCls = this.getPrefixCls();\n    const columns = this.columns.concat();\n    if (rowSelection) {\n      const data = this.getFlatCurrentPageData().filter((item, index) => {\n        if (rowSelection.getCheckboxProps) {\n          return !this.getCheckboxPropsByItem(item, index).disabled;\n        }\n        return true;\n      });\n      const selectionColumnClass = classNames(`${prefixCls}-selection-column`, {\n        [`${prefixCls}-selection-column-custom`]: rowSelection.selections,\n      });\n      const selectionColumn: ColumnProps<any> = {\n        key: 'selection-column',\n        render: this.renderSelectionBox(rowSelection.type),\n        className: selectionColumnClass,\n        fixed: rowSelection.fixed,\n        width: rowSelection.columnWidth,\n      };\n      if (rowSelection.type !== 'radio') {\n        const checkboxAllDisabled = data.every(\n          (item, index) => this.getCheckboxPropsByItem(item, index).disabled,\n        );\n        selectionColumn.title = (\n          <SelectionCheckboxAll\n            store={this.store}\n            locale={locale}\n            data={data}\n            getCheckboxPropsByItem={this.getCheckboxPropsByItem}\n            getRecordKey={this.getRecordKey}\n            disabled={checkboxAllDisabled}\n            prefixCls={prefixCls}\n            onSelect={this.handleSelectRow}\n            selections={rowSelection.selections}\n            hideDefaultSelections={rowSelection.hideDefaultSelections}\n            getPopupContainer={this.getPopupContainer}\n          />\n        );\n      }\n      if ('fixed' in rowSelection) {\n        selectionColumn.fixed = rowSelection.fixed;\n      } else if (columns.some(column => column.fixed === 'left' || column.fixed === true)) {\n        selectionColumn.fixed = 'left';\n      }\n      if (columns[0] && columns[0].key === 'selection-column') {\n        columns[0] = selectionColumn;\n      } else {\n        columns.unshift(selectionColumn);\n      }\n    }\n    return columns;\n  }\n\n  getColumnKey(column: ColumnProps<T>, index?: number) {\n    return getColumnKey(column, index);\n  }\n\n  getMaxCurrent(total: number) {\n    const {\n      pagination: { current, pageSize },\n    } = this.state;\n    if ((current! - 1) * pageSize! >= total) {\n      return Math.floor((total - 1) / pageSize!) + 1;\n    }\n    return current;\n  }\n\n  isSortColumn(column: ColumnProps<T>) {\n    const { sortColumn } = this.state;\n    if (!column || !sortColumn) {\n      return false;\n    }\n    return this.getColumnKey(sortColumn) === this.getColumnKey(column);\n  }\n\n  renderColumnsDropdown(columns: ColumnProps<T>[], locale: TableLocale) {\n    const { dropdownPrefixCls: customizeDropdownPrefixCls, filterBar } = this.props;\n    const prefixCls = this.getPrefixCls();\n    const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n    const { sortOrder, filters } = this.state;\n    return treeMap(columns, (originColumn, i) => {\n      const column = { ...originColumn };\n      const key = this.getColumnKey(column, i) as string;\n      let filterDropdown;\n      let sortButton;\n      if ((!filterBar && (column.filters && column.filters.length > 0)) || column.filterDropdown) {\n        const colFilters = filters[key] || [];\n        filterDropdown = (\n          <FilterDropdown\n            locale={locale}\n            column={column}\n            selectedKeys={colFilters}\n            confirmFilter={this.handleFilter}\n            prefixCls={`${prefixCls}-filter`}\n            dropdownPrefixCls={dropdownPrefixCls}\n            getPopupContainer={this.getPopupContainer}\n          />\n        );\n      }\n      if (column.sorter) {\n        const isSortColumn = this.isSortColumn(column);\n        const isAscend = isSortColumn && sortOrder === 'ascend';\n        // const isDescend = isSortColumn && sortOrder === 'descend';\n        column.className = classNames(column.className, {\n          [`${prefixCls}-sort-${sortOrder}`]: isSortColumn,\n        });\n        const { onHeaderCell } = column;\n        column.onHeaderCell = col => {\n          const customProps = (onHeaderCell && onHeaderCell(col)) || {};\n          const { onClick } = customProps;\n          return {\n            ...customProps,\n            onClick: (e: SyntheticEvent<any>) => {\n              if (!e.isDefaultPrevented()) {\n                if (typeof onClick === 'function') {\n                  onClick(e);\n                }\n                if (!e.isDefaultPrevented()) {\n                  this.setSortOrder(isAscend ? 'descend' : 'ascend', column);\n                }\n              }\n            },\n          };\n        };\n        sortButton = <Icon type=\"arrow_upward\" className={`${prefixCls}-sort-icon`} />;\n      }\n      column.title = (\n        <span key={key}>\n          {column.title}\n          {sortButton}\n          {filterDropdown}\n        </span>\n      );\n\n      if (sortButton || filterDropdown) {\n        column.className = classNames(`${prefixCls}-column-has-filters`, column.className);\n      }\n\n      return column;\n    });\n  }\n\n  handleShowSizeChange = (current: number, pageSize: number) => {\n    const { pagination } = this.state;\n    pagination.onShowSizeChange!(current, pageSize);\n    const nextPagination = {\n      ...pagination,\n      pageSize,\n      current,\n    };\n    this.setState({ pagination: nextPagination });\n\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(\n        ...this.prepareParamsArguments({\n          ...this.state,\n          pagination: nextPagination,\n        }),\n      );\n    }\n  };\n\n  renderPagination(paginationPosition: string) {\n    // 强制不需要分页\n    if (!this.hasPagination()) {\n      return null;\n    }\n    const { pagination } = this.state;\n    const { size } = this.props;\n    const prefixCls = this.getPrefixCls();\n    const position = pagination.position || 'bottom';\n    const total = pagination.total || this.getLocalData().length;\n    return total > 0 && (position === paginationPosition || position === 'both') ? (\n      <Pagination\n        key={`pagination-${paginationPosition}`}\n        {...pagination}\n        className={classNames(pagination.className, `${prefixCls}-pagination`)}\n        onChange={this.handlePageChange}\n        total={total}\n        size={pagination.size || size}\n        current={this.getMaxCurrent(total)}\n        onShowSizeChange={this.handleShowSizeChange}\n      />\n    ) : null;\n  }\n\n  // Get pagination, filters, sorter\n  prepareParamsArguments(state: any): [TablePaginationConfig | boolean, string[], Object, any[]] {\n    const pagination = { ...state.pagination };\n    // remove useless handle function in Table.onChange\n    delete pagination.onChange;\n    delete pagination.onShowSizeChange;\n    delete pagination.showTotal;\n    delete pagination.sizeChangerOptionText;\n    const filters = state.filters;\n    const barFilters = state.barFilters;\n    const sorter: any = {};\n    if (state.sortColumn && state.sortOrder) {\n      sorter.column = state.sortColumn;\n      sorter.order = state.sortOrder;\n      sorter.field = state.sortColumn.dataIndex;\n      sorter.columnKey = this.getColumnKey(state.sortColumn);\n    }\n    return [pagination, filters, sorter, barFilters];\n  }\n\n  findColumn(myKey: string | number): ColumnProps<T> | undefined {\n    let column;\n    treeMap(this.columns, c => {\n      if (this.getColumnKey(c) === myKey) {\n        column = c;\n      }\n    });\n    return column;\n  }\n\n  getCurrentPageData() {\n    let data = this.getLocalData();\n    let current: number;\n    let pageSize: number;\n    const { state } = this;\n    // 如果没有分页的话，默认全部展示\n    if (!this.hasPagination()) {\n      pageSize = Number.MAX_VALUE;\n      current = 1;\n    } else {\n      pageSize = state.pagination.pageSize as number;\n      current = this.getMaxCurrent(state.pagination.total || data.length) as number;\n    }\n\n    // 分页\n    // ---\n    // 当数据量少于等于每页数量时，直接设置数据\n    // 否则进行读取分页数据\n    if (data.length > pageSize || pageSize === Number.MAX_VALUE) {\n      data = data.filter((_, i) => {\n        return i >= (current - 1) * pageSize && i < current * pageSize;\n      });\n    }\n    return data;\n  }\n\n  getFlatData() {\n    const { childrenColumnName } = this.props;\n    return flatArray(this.getLocalData(), childrenColumnName);\n  }\n\n  getFlatCurrentPageData() {\n    const { childrenColumnName } = this.props;\n    return flatArray(this.getCurrentPageData(), childrenColumnName);\n  }\n\n  recursiveSort(data: T[], sorterFn: (a: any, b: any) => number): T[] {\n    const { childrenColumnName = 'children' } = this.props;\n    return data.sort(sorterFn).map((item: any) =>\n      item[childrenColumnName]\n        ? {\n            ...item,\n            [childrenColumnName]: this.recursiveSort(item[childrenColumnName], sorterFn),\n          }\n        : item,\n    );\n  }\n\n  getLocalData() {\n    const { dataSource, noFilter } = this.props;\n    if (dataSource) {\n      const state = this.state;\n      const { filters, barFilters } = state;\n      let data = dataSource;\n      // 优化本地排序\n      data = data.slice(0);\n      const sorterFn = this.getSorterFn();\n      if (sorterFn) {\n        data = this.recursiveSort(data, sorterFn);\n      }\n      let filteredData = data;\n      // 筛选\n      if (filters) {\n        Object.keys(filters).forEach(columnKey => {\n          const col = this.findColumn(columnKey) as any;\n          if (!col) {\n            return;\n          }\n          const values = filters[columnKey] || [];\n          if (values.length === 0) {\n            return;\n          }\n          const { onFilter, filters: columnFilters } = col;\n          filteredData = onFilter\n            ? filteredData.filter(record => {\n                return values.some(v => onFilter(v, record, columnFilters));\n              })\n            : filteredData;\n        });\n      }\n      if (barFilters.length) {\n        let isOr = false;\n        barFilters.forEach(filter => {\n          if (filter === VALUE_OR) {\n            isOr = true;\n          } else {\n            filteredData = data.filter(record =>\n              isOr\n                ? filteredData.indexOf(record) !== -1 || this.doBarFilter(filter, record)\n                : filteredData.indexOf(record) !== -1 && this.doBarFilter(filter, record),\n            );\n            isOr = false;\n          }\n        });\n      }\n      if (noFilter) {\n        return data;\n      }\n      return filteredData;\n    }\n    return [];\n  }\n\n  doBarFilter(filter: any, record: T): boolean {\n    if (typeof filter === 'string') {\n      return !!findColumnByFilterValue<T>(record, getLeafColumns<T>(this.columns), filter);\n    }\n    const columnKey = Object.keys(filter)[0];\n    const col = this.findColumn(columnKey);\n    if (!col) {\n      return true;\n    }\n    const { onFilter, filters } = col;\n    return !onFilter || onFilter(filter[columnKey], record, filters);\n  }\n\n  createComponents(components: TableComponents = {}, prevComponents?: TableComponents) {\n    const bodyRow = components && components.body && components.body.row;\n    const preBodyRow = prevComponents && prevComponents.body && prevComponents.body.row;\n    if (!this.components || bodyRow !== preBodyRow) {\n      this.components = { ...components };\n      this.components.body = {\n        ...components.body,\n        row: createBodyRow(bodyRow),\n      };\n    }\n  }\n\n  renderTable = (contextLocale: TableLocale, loading: SpinProps): ReactNode => {\n    const { props } = this;\n    const locale = { ...contextLocale, ...props.locale };\n    const {\n      filterBarMultiple,\n      filterBarPlaceholder,\n      showHeader,\n      filterBar,\n      dataSource,\n      filters,\n      empty,\n      ...restProps\n    } = props;\n    const { filters: columnFilters } = this.state;\n    const prefixCls = this.getPrefixCls();\n    const data = this.getCurrentPageData();\n    const expandIconAsCell = props.expandedRowRender && props.expandIconAsCell !== false;\n\n    const classString = classNames({\n      [`${prefixCls}-${props.size}`]: true,\n      [`${prefixCls}-bordered`]: props.bordered,\n      [`${prefixCls}-empty`]: !data.length,\n      [`${prefixCls}-without-column-header`]: !showHeader,\n    });\n\n    let columns = this.renderRowSelection(locale);\n    columns = this.renderColumnsDropdown(columns, locale);\n    columns = columns.map((column, i) => {\n      const newColumn = { ...column };\n      newColumn.key = this.getColumnKey(newColumn, i);\n      return newColumn;\n    });\n    columns = removeHiddenColumns(columns);\n\n    let expandIconColumnIndex = columns[0] && columns[0].key === 'selection-column' ? 1 : 0;\n    if ('expandIconColumnIndex' in restProps) {\n      expandIconColumnIndex = restProps.expandIconColumnIndex as number;\n    }\n\n    const table = (\n      <RcTable\n        key=\"table\"\n        {...restProps}\n        onRow={this.onRow}\n        components={this.components}\n        prefixCls={prefixCls}\n        data={data}\n        columns={columns}\n        showHeader={showHeader}\n        className={classString}\n        expandIconColumnIndex={expandIconColumnIndex}\n        expandIconAsCell={expandIconAsCell}\n        emptyText={!loading.spinning && (empty || locale.emptyText)}\n      />\n    );\n    if (filterBar) {\n      const bar = (\n        <FilterBar\n          key=\"filter-bar\"\n          prefixCls={prefixCls}\n          placeholder={filterBarPlaceholder}\n          columns={getLeafColumns(this.columns)}\n          onFilterSelectChange={this.handleFilterSelectChange}\n          onFilterSelectClear={this.handleFilterSelectClear}\n          onColumnFilterChange={this.handleColumnFilterChange}\n          onFilter={this.handleFilter}\n          dataSource={dataSource}\n          filters={filters}\n          columnFilters={columnFilters}\n          multiple={filterBarMultiple}\n          getPopupContainer={this.getPopupContainer}\n        />\n      );\n      return [bar, table];\n    }\n    return table;\n  };\n\n  render() {\n    const { props } = this;\n    const { style, className } = props;\n    const prefixCls = this.getPrefixCls();\n    const data = this.getCurrentPageData();\n\n    let loading = props.loading as SpinProps;\n    if (typeof loading === 'boolean') {\n      loading = {\n        spinning: loading,\n      };\n    }\n\n    const table = (\n      <LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n        {locale => this.renderTable(locale, loading)}\n      </LocaleReceiver>\n    );\n\n    // if there is no pagination or no data,\n    // the height of spin should decrease by half of pagination\n    const paginationPatchClass =\n      this.hasPagination() && data && data.length !== 0\n        ? `${prefixCls}-with-pagination`\n        : `${prefixCls}-without-pagination`;\n\n    return (\n      <div\n        className={classNames(`${prefixCls}-wrapper`, className)}\n        style={style}\n        ref={this.saveRef}\n      >\n        <Spin\n          {...loading}\n          className={loading.spinning ? `${paginationPatchClass} ${prefixCls}-spin-holder` : ''}\n        >\n          {this.renderPagination('top')}\n          {table}\n          {this.renderPagination('bottom')}\n        </Spin>\n      </div>\n    );\n  }\n}\n"]}