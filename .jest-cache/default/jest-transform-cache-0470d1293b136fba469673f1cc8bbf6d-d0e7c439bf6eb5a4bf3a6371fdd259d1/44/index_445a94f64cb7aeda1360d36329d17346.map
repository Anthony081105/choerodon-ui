{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/tabs/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {\n  Children,\n  ClassicComponentClass,\n  cloneElement,\n  Component,\n  CSSProperties,\n  MouseEventHandler,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport { findDOMNode } from 'react-dom';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport warning from '../_util/warning';\nimport isFlexSupported from '../_util/isFlexSupported';\nimport RcTabs, { TabContent, TabPane } from '../rc-components/tabs';\nimport ScrollableInkTabBar from '../rc-components/tabs/ScrollableInkTabBar';\nimport { generateKey } from '../rc-components/tabs/utils';\nimport { Size } from '../_util/enum';\nimport { TabsPosition, TabsType } from './enum';\nimport { getPrefixCls } from '../configure';\n\nexport interface TabsProps {\n  activeKey?: string;\n  defaultActiveKey?: string;\n  hideAdd?: boolean;\n  onChange?: (activeKey: string) => void;\n  onTabClick?: Function;\n  onPrevClick?: MouseEventHandler<any>;\n  onNextClick?: MouseEventHandler<any>;\n  tabBarExtraContent?: ReactNode | null;\n  tabBarStyle?: CSSProperties;\n  type?: TabsType;\n  tabPosition?: TabsPosition;\n  onEdit?: (targetKey: string | React.MouseEvent<HTMLElement>, action: any) => void;\n  size?: Size;\n  style?: CSSProperties;\n  prefixCls?: string;\n  className?: string;\n  animated?: boolean | { inkBar: boolean; tabPane: boolean };\n  tabBarGutter?: number;\n}\n\n// Tabs\nexport interface TabPaneProps {\n  /** 选项卡头显示文字 */\n  tab?: ReactNode | string;\n  style?: CSSProperties;\n  closable?: boolean;\n  className?: string;\n  disabled?: boolean;\n  forceRender?: boolean;\n}\n\nexport default class Tabs extends Component<TabsProps, any> {\n  static displayName = 'Tabs';\n\n  static TabPane = TabPane as ClassicComponentClass<TabPaneProps>;\n\n  static defaultProps = {\n    hideAdd: false,\n  };\n\n  createNewTab: MouseEventHandler<HTMLElement> = targetKey => {\n    const { onEdit } = this.props;\n    if (onEdit) {\n      onEdit(targetKey, 'add');\n    }\n  };\n\n  removeTab = (targetKey: string, e: React.MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    if (!targetKey) {\n      return;\n    }\n\n    const { onEdit } = this.props;\n    if (onEdit) {\n      onEdit(targetKey, 'remove');\n    }\n  };\n\n  handleChange = (activeKey: string) => {\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(activeKey);\n    }\n  };\n\n  componentDidMount() {\n    const NO_FLEX = ' no-flex';\n    const tabNode = findDOMNode(this) as HTMLElement;\n    if (tabNode && !isFlexSupported() && tabNode.className.indexOf(NO_FLEX) === -1) {\n      tabNode.className += NO_FLEX;\n    }\n  }\n\n  render() {\n    const {\n      prefixCls: customizePrefixCls,\n      className = '',\n      size,\n      type = TabsType.line,\n      tabPosition,\n      children,\n      tabBarStyle,\n      hideAdd,\n      onTabClick,\n      onPrevClick,\n      onNextClick,\n      animated = true,\n      tabBarGutter,\n    } = this.props;\n    let { tabBarExtraContent } = this.props;\n    const prefixCls = getPrefixCls('tabs', customizePrefixCls);\n    const inkBarAnimated = typeof animated === 'object' ? animated.inkBar : animated;\n    let tabPaneAnimated = typeof animated === 'object' ? animated.tabPane : animated;\n\n    // card tabs should not have animation\n    if (type !== TabsType.line) {\n      tabPaneAnimated = 'animated' in this.props ? tabPaneAnimated : false;\n    }\n\n    const isCard = type === TabsType.card || type === TabsType['editable-card'];\n\n    warning(\n      !(isCard && (size === Size.small || size === Size.large)),\n      \"Tabs[type=card|editable-card] doesn't have small or large size, it's by designed.\",\n    );\n    const cls = classNames(className, `${prefixCls}-${type}`, {\n      [`${prefixCls}-vertical`]:\n        tabPosition === TabsPosition.left || tabPosition === TabsPosition.right,\n      [`${prefixCls}-${size}`]: !!size,\n      [`${prefixCls}-card`]: isCard,\n      [`${prefixCls}-no-animation`]: !tabPaneAnimated,\n    });\n    // only card type tabs can be added and closed\n    let childrenWithClose: ReactElement<any>[] = [];\n    if (type === TabsType['editable-card']) {\n      childrenWithClose = [];\n      Children.forEach(children as ReactNode, (child: ReactElement<any>, index) => {\n        let closable = child.props.closable;\n        closable = typeof closable === 'undefined' ? true : closable;\n        const closeIcon = closable ? (\n          <Icon type=\"close\" onClick={e => this.removeTab(child.key as string, e)} />\n        ) : null;\n        childrenWithClose.push(\n          cloneElement(child, {\n            tab: (\n              <div className={closable ? undefined : `${prefixCls}-tab-unclosable`}>\n                {child.props.tab}\n                {closeIcon}\n              </div>\n            ),\n            key: generateKey(child.key, index),\n          }),\n        );\n      });\n      // Add new tab handler\n      if (!hideAdd) {\n        tabBarExtraContent = (\n          <span>\n            <Icon type=\"plus\" className={`${prefixCls}-new-tab`} onClick={this.createNewTab} />\n            {tabBarExtraContent}\n          </span>\n        );\n      }\n    }\n\n    tabBarExtraContent = tabBarExtraContent ? (\n      <div className={`${prefixCls}-extra-content`}>{tabBarExtraContent}</div>\n    ) : null;\n\n    const renderTabBar = () => (\n      <ScrollableInkTabBar\n        inkBarAnimated={inkBarAnimated}\n        extraContent={tabBarExtraContent}\n        onTabClick={onTabClick}\n        onPrevClick={onPrevClick}\n        onNextClick={onNextClick}\n        style={tabBarStyle}\n        tabBarGutter={tabBarGutter}\n      />\n    );\n\n    return (\n      <RcTabs\n        {...this.props}\n        prefixCls={prefixCls}\n        className={cls}\n        tabBarPosition={tabPosition}\n        renderTabBar={renderTabBar}\n        renderTabContent={() => <TabContent animated={tabPaneAnimated} animatedWithMargin />}\n        onChange={this.handleChange}\n      >\n        {childrenWithClose.length > 0 ? childrenWithClose : children}\n      </RcTabs>\n    );\n  }\n}\n"]}