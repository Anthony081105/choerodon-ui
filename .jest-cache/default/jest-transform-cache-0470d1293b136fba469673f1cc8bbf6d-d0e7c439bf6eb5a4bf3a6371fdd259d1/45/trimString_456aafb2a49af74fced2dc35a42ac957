f232b57138f5ec37769116d760710380
"use strict";

/* istanbul ignore next */
var cov_1ve0dxg772 = function () {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/_util/trimString.tsx";
  var hash = "d3eb3ecaa0366d610fc3df0158a0ef9258215391";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/_util/trimString.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "2": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "3": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 32
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "7": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 30,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "trimString",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 19
          }
        },
        loc: {
          start: {
            line: 8,
            column: 38
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 8
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 28,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 28,
            column: 3
          }
        }, {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 28,
            column: 3
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 11,
            column: 6
          },
          end: {
            line: 14,
            column: 28
          }
        }, {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 19,
            column: 32
          }
        }, {
          start: {
            line: 21,
            column: 6
          },
          end: {
            line: 24,
            column: 33
          }
        }, {
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 26,
            column: 14
          }
        }],
        line: 10
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "d3eb3ecaa0366d610fc3df0158a0ef9258215391"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_1ve0dxg772.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1ve0dxg772.s[1]++;
exports["default"] = trimString;

function trimString(value, fieldTrim) {
  /* istanbul ignore next */
  cov_1ve0dxg772.f[0]++;
  cov_1ve0dxg772.s[2]++;

  if (fieldTrim) {
    /* istanbul ignore next */
    cov_1ve0dxg772.b[0][0]++;
    cov_1ve0dxg772.s[3]++;

    switch (fieldTrim) {
      case "both"
      /* both */
      :
        /* istanbul ignore next */
        cov_1ve0dxg772.b[1][0]++;
        cov_1ve0dxg772.s[4]++;
        return value.trim();

      case "left"
      /* left */
      :
        /* istanbul ignore next */
        cov_1ve0dxg772.b[1][1]++;
        cov_1ve0dxg772.s[5]++;
        return value.trimLeft();

      case "right"
      /* right */
      :
        /* istanbul ignore next */
        cov_1ve0dxg772.b[1][2]++;
        cov_1ve0dxg772.s[6]++;
        return value.trimRight();

      default:
        /* istanbul ignore next */
        cov_1ve0dxg772.b[1][3]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1ve0dxg772.b[0][1]++;
  }

  cov_1ve0dxg772.s[7]++;
  return value;
}