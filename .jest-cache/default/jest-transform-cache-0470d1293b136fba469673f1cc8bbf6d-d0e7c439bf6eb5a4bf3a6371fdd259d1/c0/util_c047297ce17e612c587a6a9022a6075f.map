{"version":3,"sources":["message/util.jsx"],"names":["top","defaultTop","bottom","defaultBottom","target","left","right","style","transitionName"],"mappings":";;;;;;;;;;;;AAAO,SAAA,iBAAA,CAAA,SAAA,EAAA,UAAA,EAAA,aAAA,EAAiE;AACpE,MAAMA,GAAG,GAAGC,UAAU,GAAA,GAAA,MAAA,CAAA,UAAA,EAAA,IAAA,CAAA,GAAtB,CAAA;AACA,MAAMC,MAAM,GAAGC,aAAa,GAAA,GAAA,MAAA,CAAA,aAAA,EAAA,IAAA,CAAA,GAA5B,CAAA;AACA,MAAMC,MAAM,GAAG;AACXC,IAAAA,IAAI,EADO,MAAA;AAEXC,IAAAA,KAAK,EAFM,MAAA;AAGXN,IAAAA,GAAG,EAHQ,GAAA;AAIXE,IAAAA,MAAM,EAANA;AAJW,GAAf;AAMA,MAAIK,KAAK,GAAT,EAAA;;AACA,UAAA,SAAA;AACI,SAAA,KAAA;AACIA,MAAAA,KAAK,GAAG;AACJL,QAAAA,MAAM,EAAE;AADJ,OAARK;AAGA;;AACJ,SAAA,OAAA;AACIA,MAAAA,KAAK,GAAG;AACJF,QAAAA,IAAI,EADA,MAAA;AAEJL,QAAAA,GAAG,EAFC,KAAA;AAGJE,QAAAA,MAAM,EAAE;AAHJ,OAARK;AAKA;;AACJ,SAAA,QAAA;AACIA,MAAAA,KAAK,GAAG;AACJP,QAAAA,GAAG,EAAE;AADD,OAARO;AAGA;;AACJ,SAAA,MAAA;AACIA,MAAAA,KAAK,GAAG;AACJD,QAAAA,KAAK,EADD,MAAA;AAEJN,QAAAA,GAAG,EAFC,KAAA;AAGJE,QAAAA,MAAM,EAAE;AAHJ,OAARK;AAKA;;AACJ,SAAA,SAAA;AACA,SAAA,SAAA;AACIA,MAAAA,KAAK,GAAG;AACJD,QAAAA,KAAK,EADD,MAAA;AAEJJ,QAAAA,MAAM,EAAE;AAFJ,OAARK;AAIA;;AACJ,SAAA,UAAA;AACA,SAAA,UAAA;AACIA,MAAAA,KAAK,GAAG;AACJF,QAAAA,IAAI,EADA,MAAA;AAEJH,QAAAA,MAAM,EAAE;AAFJ,OAARK;AAIA;;AACJ,SAAA,YAAA;AACA,SAAA,YAAA;AACIA,MAAAA,KAAK,GAAG;AACJD,QAAAA,KAAK,EADD,MAAA;AAEJN,QAAAA,GAAG,EAAE;AAFD,OAARO;AAIA;;AACJ,SAAA,aAAA;AACA,SAAA,aAAA;AACIA,MAAAA,KAAK,GAAG;AACJF,QAAAA,IAAI,EADA,MAAA;AAEJL,QAAAA,GAAG,EAAE;AAFD,OAARO;AAIA;;AACJ;AACI;AAtDR;;AAwDA,GAAA,GAAA,SAAA,CAAA,SAAA,CAAA,EAAA,MAAA,EAAA,KAAA;AACA,SAAA,MAAA;AACH;;AACM,SAAA,0BAAA,CAAA,SAAA,EAAA,qBAAA,EAAsE;AACzE,MAAIC,cAAc,GAAlB,qBAAA;;AACA,UAAA,SAAA;AACI,SAAA,KAAA;AACA,SAAA,SAAA;AACA,SAAA,UAAA;AACIA,MAAAA,cAAc,GAAdA,SAAAA;AACA;;AACJ,SAAA,MAAA;AACA,SAAA,SAAA;AACA,SAAA,YAAA;AACIA,MAAAA,cAAc,GAAdA,WAAAA;AACA;;AACJ,SAAA,QAAA;AACA,SAAA,YAAA;AACA,SAAA,aAAA;AACIA,MAAAA,cAAc,GAAdA,WAAAA;AACA;;AACJ,SAAA,OAAA;AACA,SAAA,UAAA;AACA,SAAA,aAAA;AACIA,MAAAA,cAAc,GAAdA,YAAAA;AACA;;AACJ;AACI;AAtBR;;AAwBA,SAAA,cAAA;AACH","sourcesContent":["export function getPlacementStyle(placement, defaultTop, defaultBottom) {\n    const top = defaultTop ? `${defaultTop}px` : 0;\n    const bottom = defaultBottom ? `${defaultBottom}px` : 0;\n    const target = {\n        left: '24px',\n        right: '24px',\n        top,\n        bottom,\n    };\n    let style = {};\n    switch (placement) {\n        case 'top':\n            style = {\n                bottom: 'auto',\n            };\n            break;\n        case 'right':\n            style = {\n                left: 'auto',\n                top: '50%',\n                bottom: 'auto',\n            };\n            break;\n        case 'bottom':\n            style = {\n                top: 'auto',\n            };\n            break;\n        case 'left':\n            style = {\n                right: 'auto',\n                top: '50%',\n                bottom: 'auto',\n            };\n            break;\n        case 'topLeft':\n        case 'leftTop':\n            style = {\n                right: 'auto',\n                bottom: 'auto',\n            };\n            break;\n        case 'topRight':\n        case 'rightTop':\n            style = {\n                left: 'auto',\n                bottom: 'auto',\n            };\n            break;\n        case 'bottomLeft':\n        case 'leftBottom':\n            style = {\n                right: 'auto',\n                top: 'auto',\n            };\n            break;\n        case 'bottomRight':\n        case 'rightBottom':\n            style = {\n                left: 'auto',\n                top: 'auto',\n            };\n            break;\n        default:\n            break;\n    }\n    Object.assign(target, style);\n    return target;\n}\nexport function getPlacementTransitionName(placement, defaultTransitionName) {\n    let transitionName = defaultTransitionName;\n    switch (placement) {\n        case 'top':\n        case 'topLeft':\n        case 'topRight':\n            transitionName = 'move-up';\n            break;\n        case 'left':\n        case 'leftTop':\n        case 'leftBottom':\n            transitionName = 'move-left';\n            break;\n        case 'bottom':\n        case 'bottomLeft':\n        case 'bottomRight':\n            transitionName = 'move-down';\n            break;\n        case 'right':\n        case 'rightTop':\n        case 'rightBottom':\n            transitionName = 'move-right';\n            break;\n        default:\n            break;\n    }\n    return transitionName;\n}\n"]}