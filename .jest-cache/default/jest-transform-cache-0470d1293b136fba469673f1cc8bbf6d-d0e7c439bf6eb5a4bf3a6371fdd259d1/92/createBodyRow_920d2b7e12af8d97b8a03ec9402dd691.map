{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/table/createBodyRow.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAgBc,SAAU,cAAV,GAAmC;AAAA,MAAV,GAAU,uEAAJ,IAAI;;AAAA,MACzC,OADyC;AAAA;AAAA;AAAA;;AAM7C,qBAAY,KAAZ,EAA+B;AAAA;;AAAA;AAC7B,qHAAM,KAAN;AAEA,YAAK,KAAL,GAAa,KAAK,CAAC,KAAnB;;AAH6B,iCAID,MAAK,KAAL,CAAW,QAAX,EAJC;AAAA,UAIrB,eAJqB,wBAIrB,eAJqB;;AAM7B,YAAK,KAAL,GAAa;AACX,QAAA,QAAQ,EAAE,eAAe,CAAC,OAAhB,CAAwB,KAAK,CAAC,MAA9B,KAAyC;AADxC,OAAb;AAN6B;AAS9B;;AAf4C;AAAA;AAAA,0CAiB5B;AACf,aAAK,SAAL;AACD;AAnB4C;AAAA;AAAA,6CAqBzB;AAClB,YAAI,KAAK,WAAT,EAAsB;AACpB,eAAK,WAAL;AACD;AACF;AAzB4C;AAAA;AAAA,kCA2BpC;AAAA;;AAAA,YACC,KADD,GACW,IADX,CACC,KADD;AAAA,0BAEmB,KAAK,KAFxB;AAAA,YAEC,KAFD,eAEC,KAFD;AAAA,YAEQ,MAFR,eAEQ,MAFR;AAGP,aAAK,WAAL,GAAmB,KAAK,CAAC,SAAN,CAAgB,YAAK;AAAA,sCACV,MAAI,CAAC,KAAL,CAAW,QAAX,EADU;AAAA,cAC9B,eAD8B,yBAC9B,eAD8B;;AAEtC,cAAM,QAAQ,GAAG,eAAe,CAAC,OAAhB,CAAwB,MAAxB,KAAmC,CAApD;;AACA,cAAI,QAAQ,KAAK,KAAK,CAAC,QAAvB,EAAiC;AAC/B,YAAA,MAAI,CAAC,QAAL,CAAc;AAAE,cAAA,QAAQ,EAAR;AAAF,aAAd;AACD;AACF,SANkB,CAAnB;AAOD;AArC4C;AAAA;AAAA,+BAuCvC;AAAA,YACI,KADJ,GACc,IADd,CACI,KADJ;AAAA,YAEI,QAFJ,GAEiB,KAAK,KAFtB,CAEI,QAFJ;AAAA,YAGI,SAHJ,GAGuC,KAHvC,CAGI,SAHJ;AAAA,YAGe,SAHf,GAGuC,KAHvC,CAGe,SAHf;AAAA,YAG0B,QAH1B,GAGuC,KAHvC,CAG0B,QAH1B;AAIJ,YAAM,UAAU,GAAQ,sBAAK,KAAL,EAAY,CAAC,WAAD,EAAc,QAAd,EAAwB,OAAxB,EAAiC,UAAjC,CAAZ,CAAxB;AACA,YAAM,WAAW,GAAG,6BAAW,SAAX,iDACd,SADc,oBACa,QADb,EAApB;AAIA,eACE,gCAAC,GAAD,gCAAS,UAAT;AAAqB,UAAA,SAAS,EAAE;AAAhC,YACG,QADH,CADF;AAKD;AArD4C;AAAA;AAAA,IACzB,gBADyB;;AAwD/C,SAAO,OAAP;AACD","sourcesContent":["import React, { Component, ComponentClass } from 'react';\nimport classnames from 'classnames';\nimport omit from 'lodash/omit';\nimport { Store } from './createStore';\n\ninterface BodyRowProps {\n  store: Store;\n  className?: string;\n  rowKey: string;\n  prefixCls: string;\n}\n\ninterface BodyRowState {\n  selected: boolean;\n}\n\nexport interface BodyRowClass extends ComponentClass {}\n\nexport default function createTableRow(Cmp = 'tr') {\n  class BodyRow extends Component<BodyRowProps, BodyRowState> {\n    private store: Store;\n\n    private unsubscribe: () => void;\n\n    constructor(props: BodyRowProps) {\n      super(props);\n\n      this.store = props.store;\n      const { selectedRowKeys } = this.store.getState();\n\n      this.state = {\n        selected: selectedRowKeys.indexOf(props.rowKey) >= 0,\n      };\n    }\n\n    componentDidMount() {\n      this.subscribe();\n    }\n\n    componentWillUnmount() {\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n    }\n\n    subscribe() {\n      const { state } = this;\n      const { store, rowKey } = this.props;\n      this.unsubscribe = store.subscribe(() => {\n        const { selectedRowKeys } = this.store.getState();\n        const selected = selectedRowKeys.indexOf(rowKey) >= 0;\n        if (selected !== state.selected) {\n          this.setState({ selected });\n        }\n      });\n    }\n\n    render() {\n      const { props } = this;\n      const { selected } = this.state;\n      const { className, prefixCls, children } = props;\n      const otherProps: any = omit(props, ['prefixCls', 'rowKey', 'store', 'children']);\n      const classString = classnames(className, {\n        [`${prefixCls}-row-selected`]: selected,\n      });\n\n      return (\n        <Cmp {...otherProps} className={classString}>\n          {children}\n        </Cmp>\n      );\n    }\n  }\n\n  return BodyRow as BodyRowClass;\n}\n"]}