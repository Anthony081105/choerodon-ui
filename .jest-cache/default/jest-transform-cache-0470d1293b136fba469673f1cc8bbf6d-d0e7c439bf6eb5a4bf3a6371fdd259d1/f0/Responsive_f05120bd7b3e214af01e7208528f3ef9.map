{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/responsive/Responsive.tsx"],"names":[],"mappings":"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","sourcesContent":["import { PureComponent, ReactNode } from 'react';\nimport isObject from 'lodash/isObject';\nimport { isArrayLike } from 'mobx';\nimport { matchMediaPolifill } from '../_util/mediaQueryListPolyfill';\nimport { Breakpoint } from './enum';\n\nlet enquire: any;\nif (typeof window !== 'undefined') {\n  window.matchMedia = window.matchMedia || matchMediaPolifill;\n  // eslint-disable-next-line global-require\n  enquire = require('enquire.js');\n}\n\nexport type BreakpointMap = {\n  [Breakpoint.xxl]?: string;\n  [Breakpoint.xl]?: string;\n  [Breakpoint.lg]?: string;\n  [Breakpoint.md]?: string;\n  [Breakpoint.sm]?: string;\n  [Breakpoint.xs]?: string;\n};\n\nconst responsiveMap: BreakpointMap = {\n  [Breakpoint.xxl]: '(min-width: 1600px)',\n  [Breakpoint.xl]: '(min-width: 1200px)',\n  [Breakpoint.lg]: '(min-width: 992px)',\n  [Breakpoint.md]: '(min-width: 768px)',\n  [Breakpoint.sm]: '(min-width: 576px)',\n  [Breakpoint.xs]: '(max-width: 575px)',\n};\n\nconst responsiveArray: Breakpoint[] = Object.keys(responsiveMap) as Breakpoint[];\n\nexport type ChildrenFunction = (items: any[]) => ReactNode;\n\nexport interface ResponsiveProps {\n  disabled?: boolean;\n  items?: (any | BreakpointMap)[];\n  children?: ReactNode | ChildrenFunction;\n  onChange?: (items: any[]) => void;\n}\n\nexport interface ResponsiveState {\n  breakpoints: BreakpointMap;\n}\n\nexport default class Responsive extends PureComponent<ResponsiveProps, ResponsiveState> {\n  static displayName = 'Responsive';\n\n  state = { breakpoints: {} };\n\n  isDisabled(props) {\n    const { disabled, items } = props;\n    if (!disabled && items) {\n      return !items.some(isObject);\n    }\n    return true;\n  }\n\n  componentDidMount() {\n    if (!this.isDisabled(this.props)) {\n      this.register();\n    }\n  }\n\n  componentDidUpdate() {\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(this.getValues());\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.isDisabled(this.props) && !this.isDisabled(nextProps)) {\n      this.register();\n    }\n    if (!this.isDisabled(this.props) && this.isDisabled(nextProps)) {\n      this.unregister();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.isDisabled(this.props)) {\n      this.unregister();\n    }\n  }\n\n  register() {\n    if (enquire) {\n      responsiveArray.map((breakpoint: Breakpoint) =>\n        enquire.register(responsiveMap[breakpoint], {\n          match: () => {\n            this.setState(prevState => ({\n              breakpoints: {\n                ...prevState.breakpoints,\n                [breakpoint]: true,\n              },\n            }));\n          },\n          unmatch: () => {\n            this.setState(prevState => ({\n              breakpoints: {\n                ...prevState.breakpoints,\n                [breakpoint]: false,\n              },\n            }));\n          },\n          // Keep a empty destory to avoid triggering unmatch when unregister\n          destroy() {},\n        }),\n      );\n    }\n  }\n\n  unregister() {\n    Object.keys(responsiveMap).map((breakpoint: Breakpoint) =>\n      enquire.unregister(responsiveMap[breakpoint]),\n    );\n  }\n\n  processValue(value) {\n    const { breakpoints } = this.state;\n    if (isArrayLike(value)) {\n      return value.map(this.processValue, this);\n    }\n    if (isObject(value)) {\n      for (let i = 0; i < responsiveArray.length; i++) {\n        const breakpoint: Breakpoint = responsiveArray[i];\n        if (breakpoints[breakpoint] && value[breakpoint] !== undefined) {\n          return value[breakpoint];\n        }\n      }\n      return undefined;\n    }\n    return value;\n  }\n\n  getValues(): any[] {\n    const { items } = this.props;\n    if (items) {\n      return items.map(this.processValue, this);\n    }\n    return [];\n  }\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      return (children as ChildrenFunction)(this.getValues());\n    }\n    return children;\n  }\n}\n"]}