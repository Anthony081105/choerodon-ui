6d6bf014969231b614757d93d9b4f866
"use strict";

/* istanbul ignore next */
var cov_24c02h0uoh = function () {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/formatter/formatNumber.tsx";
  var hash = "8d9644c958e2a311589388a24051d46310d5db13";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/formatter/formatNumber.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 34
        }
      },
      "3": {
        start: {
          line: 10,
          column: 21
        },
        end: {
          line: 10,
          column: 92
        }
      },
      "4": {
        start: {
          line: 12,
          column: 25
        },
        end: {
          line: 12,
          column: 86
        }
      },
      "5": {
        start: {
          line: 14,
          column: 13
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "6": {
        start: {
          line: 17,
          column: 10
        },
        end: {
          line: 17,
          column: 27
        }
      },
      "7": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "8": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "9": {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "10": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 15
        }
      },
      "11": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 31,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "formatNumber",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 21
          }
        },
        loc: {
          start: {
            line: 16,
            column: 44
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        }, {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }],
        line: 20
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "8d9644c958e2a311589388a24051d46310d5db13"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_24c02h0uoh.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_24c02h0uoh.s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_24c02h0uoh.s[2]++;
exports["default"] = formatNumber;

var _objectSpread2 =
/* istanbul ignore next */
(cov_24c02h0uoh.s[3]++, _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2")));

var _normalizeLanguage =
/* istanbul ignore next */
(cov_24c02h0uoh.s[4]++, _interopRequireDefault(require("../_util/normalizeLanguage")));

var _utils =
/* istanbul ignore next */
(cov_24c02h0uoh.s[5]++, require("./utils"));

function formatNumber(value, lang, options) {
  /* istanbul ignore next */
  cov_24c02h0uoh.f[0]++;
  var v =
  /* istanbul ignore next */
  (cov_24c02h0uoh.s[6]++, parseFloat(value));

  /* istanbul ignore next */
  cov_24c02h0uoh.s[7]++;

  if (!isNaN(v)) {
    /* istanbul ignore next */
    cov_24c02h0uoh.b[0][0]++;
    cov_24c02h0uoh.s[8]++;

    if ((0, _utils.toLocaleStringSupportsLocales)()) {
      /* istanbul ignore next */
      cov_24c02h0uoh.b[1][0]++;
      cov_24c02h0uoh.s[9]++;
      return v.toLocaleString((0, _normalizeLanguage["default"])(lang), (0, _objectSpread2["default"])({}, (0, _utils.getNumberFormatOptions)("number"
      /* number */
      , options), {}, options));
    } else
    /* istanbul ignore next */
    {
      cov_24c02h0uoh.b[1][1]++;
    }

    cov_24c02h0uoh.s[10]++;
    return (0, _utils.toLocaleStringPolyfill)(v, "number"
    /* number */
    , options);
  } else
  /* istanbul ignore next */
  {
    cov_24c02h0uoh.b[0][1]++;
  }

  cov_24c02h0uoh.s[11]++;
  return value;
}