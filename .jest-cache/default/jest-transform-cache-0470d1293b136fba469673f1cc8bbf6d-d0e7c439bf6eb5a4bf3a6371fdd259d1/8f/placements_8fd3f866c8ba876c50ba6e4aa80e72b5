f4c388075e8c25df5a19f025f79e2233
"use strict";

/* istanbul ignore next */
var cov_104z13lhm0 = function () {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/tooltip/placements.tsx";
  var hash = "0f058ea5d6749717a1750cdaa8244c37fa464da7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/tooltip/placements.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 48
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 35
        }
      },
      "4": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "5": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 92
        }
      },
      "6": {
        start: {
          line: 14,
          column: 27
        },
        end: {
          line: 17,
          column: 1
        }
      },
      "7": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 25
        }
      },
      "8": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "9": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "10": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 94,
          column: 36
        }
      },
      "11": {
        start: {
          line: 95,
          column: 32
        },
        end: {
          line: 98,
          column: 1
        }
      },
      "12": {
        start: {
          line: 99,
          column: 33
        },
        end: {
          line: 102,
          column: 1
        }
      },
      "13": {
        start: {
          line: 105,
          column: 2
        },
        end: {
          line: 107,
          column: 3
        }
      },
      "14": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 87
        }
      },
      "15": {
        start: {
          line: 109,
          column: 2
        },
        end: {
          line: 109,
          column: 96
        }
      },
      "16": {
        start: {
          line: 113,
          column: 15
        },
        end: {
          line: 113,
          column: 85
        }
      },
      "17": {
        start: {
          line: 114,
          column: 27
        },
        end: {
          line: 114,
          column: 44
        }
      },
      "18": {
        start: {
          line: 115,
          column: 19
        },
        end: {
          line: 115,
          column: 73
        }
      },
      "19": {
        start: {
          line: 116,
          column: 30
        },
        end: {
          line: 116,
          column: 57
        }
      },
      "20": {
        start: {
          line: 117,
          column: 29
        },
        end: {
          line: 117,
          column: 90
        }
      },
      "21": {
        start: {
          line: 118,
          column: 30
        },
        end: {
          line: 118,
          column: 55
        }
      },
      "22": {
        start: {
          line: 119,
          column: 27
        },
        end: {
          line: 119,
          column: 88
        }
      },
      "23": {
        start: {
          line: 120,
          column: 30
        },
        end: {
          line: 120,
          column: 55
        }
      },
      "24": {
        start: {
          line: 121,
          column: 27
        },
        end: {
          line: 121,
          column: 90
        }
      },
      "25": {
        start: {
          line: 122,
          column: 21
        },
        end: {
          line: 171,
          column: 3
        }
      },
      "26": {
        start: {
          line: 172,
          column: 2
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "27": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 178,
          column: 7
        }
      },
      "28": {
        start: {
          line: 180,
          column: 2
        },
        end: {
          line: 180,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "getOverflowOptions",
        decl: {
          start: {
            line: 104,
            column: 9
          },
          end: {
            line: 104,
            column: 27
          }
        },
        loc: {
          start: {
            line: 104,
            column: 48
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 104
      },
      "1": {
        name: "getPlacements",
        decl: {
          start: {
            line: 112,
            column: 9
          },
          end: {
            line: 112,
            column: 22
          }
        },
        loc: {
          start: {
            line: 112,
            column: 25
          },
          end: {
            line: 181,
            column: 1
          }
        },
        line: 112
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 172,
            column: 36
          },
          end: {
            line: 172,
            column: 37
          }
        },
        loc: {
          start: {
            line: 172,
            column: 51
          },
          end: {
            line: 179,
            column: 3
          }
        },
        line: 172
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        }, {
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        }],
        line: 105
      },
      "1": {
        loc: {
          start: {
            line: 106,
            column: 11
          },
          end: {
            line: 106,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 32
          },
          end: {
            line: 106,
            column: 57
          }
        }, {
          start: {
            line: 106,
            column: 60
          },
          end: {
            line: 106,
            column: 86
          }
        }],
        line: 106
      },
      "2": {
        loc: {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 68
          },
          end: {
            line: 113,
            column: 80
          }
        }, {
          start: {
            line: 113,
            column: 83
          },
          end: {
            line: 113,
            column: 85
          }
        }],
        line: 113
      },
      "3": {
        loc: {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 35
          }
        }, {
          start: {
            line: 113,
            column: 39
          },
          end: {
            line: 113,
            column: 65
          }
        }],
        line: 113
      },
      "4": {
        loc: {
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 115,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 51
          },
          end: {
            line: 115,
            column: 52
          }
        }, {
          start: {
            line: 115,
            column: 55
          },
          end: {
            line: 115,
            column: 73
          }
        }],
        line: 115
      },
      "5": {
        loc: {
          start: {
            line: 117,
            column: 29
          },
          end: {
            line: 117,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 64
          },
          end: {
            line: 117,
            column: 66
          }
        }, {
          start: {
            line: 117,
            column: 69
          },
          end: {
            line: 117,
            column: 90
          }
        }],
        line: 117
      },
      "6": {
        loc: {
          start: {
            line: 119,
            column: 27
          },
          end: {
            line: 119,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 62
          },
          end: {
            line: 119,
            column: 64
          }
        }, {
          start: {
            line: 119,
            column: 67
          },
          end: {
            line: 119,
            column: 88
          }
        }],
        line: 119
      },
      "7": {
        loc: {
          start: {
            line: 121,
            column: 27
          },
          end: {
            line: 121,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 62
          },
          end: {
            line: 121,
            column: 66
          }
        }, {
          start: {
            line: 121,
            column: 69
          },
          end: {
            line: 121,
            column: 90
          }
        }],
        line: 121
      },
      "8": {
        loc: {
          start: {
            line: 173,
            column: 24
          },
          end: {
            line: 178,
            column: 6
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 52
          },
          end: {
            line: 176,
            column: 6
          }
        }, {
          start: {
            line: 176,
            column: 9
          },
          end: {
            line: 178,
            column: 6
          }
        }],
        line: 173
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "0f058ea5d6749717a1750cdaa8244c37fa464da7"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_104z13lhm0.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_104z13lhm0.s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_104z13lhm0.s[2]++;
exports.getOverflowOptions = getOverflowOptions;

/* istanbul ignore next */
cov_104z13lhm0.s[3]++;
exports["default"] = getPlacements;

/* istanbul ignore next */
cov_104z13lhm0.s[4]++;
exports.rcPlacements = void 0;

var _objectSpread2 =
/* istanbul ignore next */
(cov_104z13lhm0.s[5]++, _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2")));

var rcAutoAdjustOverflow =
/* istanbul ignore next */
(cov_104z13lhm0.s[6]++, {
  adjustX: 1,
  adjustY: 1
});
var targetOffset =
/* istanbul ignore next */
(cov_104z13lhm0.s[7]++, [0, 0]);
var OFFSET_UNIT =
/* istanbul ignore next */
(cov_104z13lhm0.s[8]++, 10);
var rcPlacements =
/* istanbul ignore next */
(cov_104z13lhm0.s[9]++, {
  left: {
    points: ['cr', 'cl'],
    overflow: rcAutoAdjustOverflow,
    offset: [-OFFSET_UNIT, 0],
    targetOffset: targetOffset
  },
  right: {
    points: ['cl', 'cr'],
    overflow: rcAutoAdjustOverflow,
    offset: [OFFSET_UNIT, 0],
    targetOffset: targetOffset
  },
  top: {
    points: ['bc', 'tc'],
    overflow: rcAutoAdjustOverflow,
    offset: [0, -OFFSET_UNIT],
    targetOffset: targetOffset
  },
  bottom: {
    points: ['tc', 'bc'],
    overflow: rcAutoAdjustOverflow,
    offset: [0, OFFSET_UNIT],
    targetOffset: targetOffset
  },
  topLeft: {
    points: ['bl', 'tl'],
    overflow: rcAutoAdjustOverflow,
    offset: [0, -OFFSET_UNIT],
    targetOffset: targetOffset
  },
  leftTop: {
    points: ['tr', 'tl'],
    overflow: rcAutoAdjustOverflow,
    offset: [-OFFSET_UNIT, 0],
    targetOffset: targetOffset
  },
  topRight: {
    points: ['br', 'tr'],
    overflow: rcAutoAdjustOverflow,
    offset: [0, -OFFSET_UNIT],
    targetOffset: targetOffset
  },
  rightTop: {
    points: ['tl', 'tr'],
    overflow: rcAutoAdjustOverflow,
    offset: [OFFSET_UNIT, 0],
    targetOffset: targetOffset
  },
  bottomRight: {
    points: ['tr', 'br'],
    overflow: rcAutoAdjustOverflow,
    offset: [0, OFFSET_UNIT],
    targetOffset: targetOffset
  },
  rightBottom: {
    points: ['bl', 'br'],
    overflow: rcAutoAdjustOverflow,
    offset: [OFFSET_UNIT, 0],
    targetOffset: targetOffset
  },
  bottomLeft: {
    points: ['tl', 'bl'],
    overflow: rcAutoAdjustOverflow,
    offset: [0, OFFSET_UNIT],
    targetOffset: targetOffset
  },
  leftBottom: {
    points: ['br', 'bl'],
    overflow: rcAutoAdjustOverflow,
    offset: [-OFFSET_UNIT, 0],
    targetOffset: targetOffset
  }
});

/* istanbul ignore next */
cov_104z13lhm0.s[10]++;
exports.rcPlacements = rcPlacements;
var autoAdjustOverflowEnabled =
/* istanbul ignore next */
(cov_104z13lhm0.s[11]++, {
  adjustX: 1,
  adjustY: 1
});
var autoAdjustOverflowDisabled =
/* istanbul ignore next */
(cov_104z13lhm0.s[12]++, {
  adjustX: 0,
  adjustY: 0
});

function getOverflowOptions(autoAdjustOverflow) {
  /* istanbul ignore next */
  cov_104z13lhm0.f[0]++;
  cov_104z13lhm0.s[13]++;

  if (typeof autoAdjustOverflow === 'boolean') {
    /* istanbul ignore next */
    cov_104z13lhm0.b[0][0]++;
    cov_104z13lhm0.s[14]++;
    return autoAdjustOverflow ?
    /* istanbul ignore next */
    (cov_104z13lhm0.b[1][0]++, autoAdjustOverflowEnabled) :
    /* istanbul ignore next */
    (cov_104z13lhm0.b[1][1]++, autoAdjustOverflowDisabled);
  } else
  /* istanbul ignore next */
  {
    cov_104z13lhm0.b[0][1]++;
  }

  cov_104z13lhm0.s[15]++;
  return (0, _objectSpread2["default"])({}, autoAdjustOverflowDisabled, {}, autoAdjustOverflow);
}

function getPlacements() {
  /* istanbul ignore next */
  cov_104z13lhm0.f[1]++;
  var config =
  /* istanbul ignore next */
  (cov_104z13lhm0.s[16]++,
  /* istanbul ignore next */
  (cov_104z13lhm0.b[3][0]++, arguments.length > 0) &&
  /* istanbul ignore next */
  (cov_104z13lhm0.b[3][1]++, arguments[0] !== undefined) ?
  /* istanbul ignore next */
  (cov_104z13lhm0.b[2][0]++, arguments[0]) :
  /* istanbul ignore next */
  (cov_104z13lhm0.b[2][1]++, {}));

  var _config$arrowWidth =
  /* istanbul ignore next */
  (cov_104z13lhm0.s[17]++, config.arrowWidth),
      arrowWidth =
  /* istanbul ignore next */
  (cov_104z13lhm0.s[18]++, _config$arrowWidth === void 0 ?
  /* istanbul ignore next */
  (cov_104z13lhm0.b[4][0]++, 5) :
  /* istanbul ignore next */
  (cov_104z13lhm0.b[4][1]++, _config$arrowWidth)),
      _config$horizontalArr =
  /* istanbul ignore next */
  (cov_104z13lhm0.s[19]++, config.horizontalArrowShift),
      horizontalArrowShift =
  /* istanbul ignore next */
  (cov_104z13lhm0.s[20]++, _config$horizontalArr === void 0 ?
  /* istanbul ignore next */
  (cov_104z13lhm0.b[5][0]++, 16) :
  /* istanbul ignore next */
  (cov_104z13lhm0.b[5][1]++, _config$horizontalArr)),
      _config$verticalArrow =
  /* istanbul ignore next */
  (cov_104z13lhm0.s[21]++, config.verticalArrowShift),
      verticalArrowShift =
  /* istanbul ignore next */
  (cov_104z13lhm0.s[22]++, _config$verticalArrow === void 0 ?
  /* istanbul ignore next */
  (cov_104z13lhm0.b[6][0]++, 12) :
  /* istanbul ignore next */
  (cov_104z13lhm0.b[6][1]++, _config$verticalArrow)),
      _config$autoAdjustOve =
  /* istanbul ignore next */
  (cov_104z13lhm0.s[23]++, config.autoAdjustOverflow),
      autoAdjustOverflow =
  /* istanbul ignore next */
  (cov_104z13lhm0.s[24]++, _config$autoAdjustOve === void 0 ?
  /* istanbul ignore next */
  (cov_104z13lhm0.b[7][0]++, true) :
  /* istanbul ignore next */
  (cov_104z13lhm0.b[7][1]++, _config$autoAdjustOve));

  var placementMap =
  /* istanbul ignore next */
  (cov_104z13lhm0.s[25]++, {
    left: {
      points: ['cr', 'cl'],
      offset: [-4, 0]
    },
    right: {
      points: ['cl', 'cr'],
      offset: [4, 0]
    },
    top: {
      points: ['bc', 'tc'],
      offset: [0, -4]
    },
    bottom: {
      points: ['tc', 'bc'],
      offset: [0, 4]
    },
    topLeft: {
      points: ['bl', 'tc'],
      offset: [-(horizontalArrowShift + arrowWidth), -4]
    },
    leftTop: {
      points: ['tr', 'cl'],
      offset: [-4, -(verticalArrowShift + arrowWidth)]
    },
    topRight: {
      points: ['br', 'tc'],
      offset: [horizontalArrowShift + arrowWidth, -4]
    },
    rightTop: {
      points: ['tl', 'cr'],
      offset: [4, -(verticalArrowShift + arrowWidth)]
    },
    bottomRight: {
      points: ['tr', 'bc'],
      offset: [horizontalArrowShift + arrowWidth, 4]
    },
    rightBottom: {
      points: ['bl', 'cr'],
      offset: [4, verticalArrowShift + arrowWidth]
    },
    bottomLeft: {
      points: ['tl', 'bc'],
      offset: [-(horizontalArrowShift + arrowWidth), 4]
    },
    leftBottom: {
      points: ['br', 'cl'],
      offset: [-4, verticalArrowShift + arrowWidth]
    }
  });

  /* istanbul ignore next */
  cov_104z13lhm0.s[26]++;
  Object.keys(placementMap).forEach(function (key) {
    /* istanbul ignore next */
    cov_104z13lhm0.f[2]++;
    cov_104z13lhm0.s[27]++;
    placementMap[key] = config.arrowPointAtCenter ?
    /* istanbul ignore next */
    (cov_104z13lhm0.b[8][0]++, (0, _objectSpread2["default"])({}, placementMap[key], {
      overflow: getOverflowOptions(autoAdjustOverflow),
      targetOffset: targetOffset
    })) :
    /* istanbul ignore next */
    (cov_104z13lhm0.b[8][1]++, (0, _objectSpread2["default"])({}, rcPlacements[key], {
      overflow: getOverflowOptions(autoAdjustOverflow)
    }));
  });

  /* istanbul ignore next */
  cov_104z13lhm0.s[28]++;
  return placementMap;
}