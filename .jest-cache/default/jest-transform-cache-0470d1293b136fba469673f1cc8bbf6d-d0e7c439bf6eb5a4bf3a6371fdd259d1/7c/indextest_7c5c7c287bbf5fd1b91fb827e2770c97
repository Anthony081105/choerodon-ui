4af3917995b43fd974a65358650df200
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _ = _interopRequireDefault(require(".."));

var _form = _interopRequireDefault(require("../../form"));

var _focusTest = _interopRequireDefault(require("../../../tests/shared/focusTest"));

var TextArea = _["default"].TextArea;
describe('Input', function () {
  (0, _focusTest["default"])(_["default"]);
  it('should support maxLength', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], {
      maxLength: "3"
    }));
    expect(wrapper).toMatchSnapshot();
  });
});
(0, _focusTest["default"])(TextArea);
describe('TextArea', function () {
  beforeAll(function () {
    jest.useFakeTimers();
  });
  afterAll(function () {
    jest.useRealTimers();
  });
  it('should auto calculate height according to content length', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(TextArea, {
      value: "",
      readOnly: true,
      autosize: true
    }));
    var mockFunc = jest.spyOn(wrapper.instance(), 'resizeTextarea');
    wrapper.setProps({
      value: '1111\n2222\n3333'
    });
    jest.runAllTimers();
    expect(mockFunc).toHaveBeenCalledTimes(1);
    wrapper.setProps({
      value: '1111'
    });
    jest.runAllTimers();
    expect(mockFunc).toHaveBeenCalledTimes(2);
  });
  it('should support disabled', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(TextArea, {
      disabled: true
    }));
    expect(wrapper).toMatchSnapshot();
  });
  it('should support maxLength', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(TextArea, {
      maxLength: "10"
    }));
    expect(wrapper).toMatchSnapshot();
  });
});
describe('As Form Control', function () {
  it('should be reset when wrapped in form.getFieldDecorator without initialValue', function () {
    var Demo =
    /*#__PURE__*/
    function (_React$Component) {
      (0, _inherits2["default"])(Demo, _React$Component);

      function Demo() {
        var _getPrototypeOf2;

        var _this;

        (0, _classCallCheck2["default"])(this, Demo);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Demo)).call.apply(_getPrototypeOf2, [this].concat(args)));
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "reset", function () {
          var form = _this.props.form;
          form.resetFields();
        });
        return _this;
      }

      (0, _createClass2["default"])(Demo, [{
        key: "render",
        value: function render() {
          var getFieldDecorator = this.props.form.getFieldDecorator;
          return _react["default"].createElement(_form["default"], null, _react["default"].createElement(_form["default"].Item, null, getFieldDecorator('input')(_react["default"].createElement(_["default"], null))), _react["default"].createElement(_form["default"].Item, null, getFieldDecorator('textarea')(_react["default"].createElement(_["default"].TextArea, null))), _react["default"].createElement("button", {
            type: "button",
            onClick: this.reset
          }, "reset"));
        }
      }]);
      return Demo;
    }(_react["default"].Component);

    var DemoForm = _form["default"].create()(Demo);

    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(DemoForm, null));
    wrapper.find('input').simulate('change', {
      target: {
        value: '111'
      }
    });
    wrapper.find('textarea').simulate('change', {
      target: {
        value: '222'
      }
    });
    expect(wrapper.find('input').prop('value')).toBe('111');
    expect(wrapper.find('textarea').prop('value')).toBe('222');
    wrapper.find('button').simulate('click');
    expect(wrapper.find('input').prop('value')).toBe('');
    expect(wrapper.find('textarea').prop('value')).toBe('');
  });
});
describe('Input.Search', function () {
  it('should support suffix', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"].Search, {
      suffix: "suffix"
    }));
    expect(wrapper).toMatchSnapshot();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,