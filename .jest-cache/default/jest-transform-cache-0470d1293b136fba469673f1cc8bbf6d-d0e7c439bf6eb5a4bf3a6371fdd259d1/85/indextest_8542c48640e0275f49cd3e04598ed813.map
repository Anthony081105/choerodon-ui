{"version":3,"sources":["index.test.js"],"names":["describe","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","it","wrapper","expect","toMatchSnapshot","props","value","toEqual","pageSize","find","simulate","runAllTimers","at","prop","toBe","name"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAChCC,EAAAA,UAAU,CAAC,YAAM;AACfC,IAAAA,IAAI,CAACC,aAAL;AACD,GAFS,CAAV;AAIAC,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,IAAI,CAACG,aAAL;AACD,GAFQ,CAAT;AAIAC,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvC,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD,OAAN,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,eAAhB;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,wDAAD,EAA2D,YAAM;AACjE,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD;AAAY,MAAA,KAAK,EAAC;AAAlB,MAAN,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAO,CAACG,KAAR,GAAgBC,KAAjB,CAAN,CAA8BC,OAA9B,CAAsC,KAAtC;AACAJ,IAAAA,MAAM,CAACD,OAAO,CAACG,KAAR,GAAgBG,QAAjB,CAAN,CAAiCD,OAAjC,CAAyC,GAAzC;AACD,GAJC,CAAF;AAMAN,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7C,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD,OAAN,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAO,CAACG,KAAR,GAAgBG,QAAjB,CAAN,CAAiCD,OAAjC,CAAyC,GAAzC;AACD,GAHC,CAAF;AAKAN,EAAAA,EAAE,CAAC,2CAAD,EAA8C,YAAM;AACpD,QAAMC,OAAO,GAAG,mBAAM,gCAAC,YAAD,OAAN,CAAhB;AACAA,IAAAA,OAAO,CAACO,IAAR,CAAa,8BAAb,EAA6CC,QAA7C,CAAsD,OAAtD;AACAb,IAAAA,IAAI,CAACc,YAAL;AACAR,IAAAA,MAAM,CACJD,OAAO,CACJO,IADH,CACQ,OADR,EAEGG,EAFH,CAEM,CAFN,EAGGC,IAHH,CAGQ,OAHR,CADI,CAAN,CAKEC,IALF,CAKO,EALP;AAMD,GAVC,CAAF;AAYAb,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3C,QAAMC,OAAO,GAAG,mBAAM,gCAAC,sBAAD,OAAN,CAAhB;AACAC,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,eAAhB;AACAD,IAAAA,MAAM,CAACD,OAAO,CAACO,IAAR,CAAa,YAAb,EAA2BJ,KAA3B,GAAmCU,IAApC,CAAN,CAAgDR,OAAhD,CAAwD,MAAxD;AACAJ,IAAAA,MAAM,CACJD,OAAO,CACJO,IADH,CACQ,OADR,EAEGG,EAFH,CAEM,CAFN,EAGGC,IAHH,CAGQ,OAHR,CADI,CAAN,CAKEC,IALF,CAKO,QALP;AAMD,GAVC,CAAF;AAWD,CAhDO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport IconPicker from '..';\nimport IconPickerTest from './IconPicker';\n\ndescribe('Icon-Picker-pro', () => {\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  it('renders IconPicker correctly', () => {\n    const wrapper = mount(<IconPicker />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  it('should show {value} when the property value is existed', () => {\n    const wrapper = mount(<IconPicker value=\"add\" />);\n    expect(wrapper.props().value).toEqual('add');\n    expect(wrapper.props().pageSize).toEqual(100);\n  });\n\n  it('the property pageSize will be 100 ', () => {\n    const wrapper = mount(<IconPicker />);\n    expect(wrapper.props().pageSize).toEqual(100);\n  });\n\n  it('input should nothing when click firstly  ', () => {\n    const wrapper = mount(<IconPicker />);\n    wrapper.find('.c7n-pro-icon-picker-wrapper').simulate('click');\n    jest.runAllTimers();\n    expect(\n      wrapper\n        .find('input')\n        .at(0)\n        .prop('value'),\n    ).toBe('');\n  });\n\n  it('should renders dataset correctly', () => {\n    const wrapper = mount(<IconPickerTest />);\n    expect(wrapper).toMatchSnapshot();\n    expect(wrapper.find('IconPicker').props().name).toEqual('icon');\n    expect(\n      wrapper\n        .find('input')\n        .at(0)\n        .prop('value'),\n    ).toBe('cancel');\n  });\n});\n"]}