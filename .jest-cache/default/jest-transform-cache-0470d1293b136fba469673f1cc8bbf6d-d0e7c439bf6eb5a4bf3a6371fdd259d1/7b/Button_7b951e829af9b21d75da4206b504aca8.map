{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/button/Button.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {\n  Children,\n  Component,\n  CSSProperties,\n  FormEventHandler,\n  KeyboardEventHandler,\n  ButtonHTMLAttributes,\n  MouseEventHandler,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport Icon from '../icon';\nimport Group from './ButtonGroup';\nimport Ripple from '../ripple';\nimport { Size } from '../_util/enum';\nimport { getPrefixCls } from '../configure';\nimport { ProgressType } from '../progress/enum';\nimport Progress from '../progress';\n\nexport type ButtonType = 'primary' | 'ghost' | 'dashed' | 'danger';\nexport type ButtonShape = 'circle' | 'circle-outline';\nexport type ButtonFuncType = 'raised' | 'flat';\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  htmlType?: string;\n  icon?: string;\n  shape?: ButtonShape;\n  size?: Size;\n  onClick?: FormEventHandler<any>;\n  onMouseUp?: FormEventHandler<any>;\n  onMouseDown?: FormEventHandler<any>;\n  onKeyPress?: KeyboardEventHandler<any>;\n  onKeyDown?: KeyboardEventHandler<any>;\n  tabIndex?: number;\n  loading?: boolean | { delay?: number };\n  disabled?: boolean;\n  style?: CSSProperties;\n  prefixCls?: string;\n  className?: string;\n  ghost?: boolean;\n  target?: string;\n  href?: string;\n  download?: string;\n  funcType?: ButtonFuncType;\n}\n\nexport default class Button extends Component<ButtonProps, any> {\n  static displayName = 'Button';\n\n  static Group: typeof Group;\n\n  static __ANT_BUTTON = true;\n\n  static defaultProps = {\n    loading: false,\n    ghost: false,\n    funcType: 'flat',\n  };\n\n  static propTypes = {\n    type: PropTypes.string,\n    shape: PropTypes.oneOf(['circle', 'circle-outline']),\n    size: PropTypes.oneOf([Size.large, Size.default, Size.small]),\n    htmlType: PropTypes.oneOf(['submit', 'button', 'reset']),\n    onClick: PropTypes.func,\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    className: PropTypes.string,\n    icon: PropTypes.string,\n    ghost: PropTypes.bool,\n    funcType: PropTypes.oneOf(['raised', 'flat']),\n  };\n\n  timeout: number;\n\n  delayTimeout: number;\n\n  constructor(props: ButtonProps) {\n    super(props);\n    this.state = {\n      loading: props.loading,\n      clicked: false,\n    };\n  }\n\n  componentWillReceiveProps(nextProps: ButtonProps) {\n    const { loading: currentLoading } = this.props;\n    const { loading } = nextProps;\n\n    if (currentLoading) {\n      clearTimeout(this.delayTimeout);\n    }\n\n    if (typeof loading !== 'boolean' && loading && loading.delay) {\n      this.delayTimeout = window.setTimeout(() => this.setState({ loading }), loading.delay);\n    } else {\n      this.setState({ loading });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    if (this.delayTimeout) {\n      clearTimeout(this.delayTimeout);\n    }\n  }\n\n  handleClick: MouseEventHandler<HTMLButtonElement | HTMLAnchorElement> = e => {\n    clearTimeout(this.timeout);\n    this.timeout = window.setTimeout(() => this.setState({ clicked: false }), 500);\n\n    const { onClick } = this.props;\n    if (onClick) {\n      onClick(e);\n    }\n  };\n\n  render() {\n    const {\n      prefixCls: customizePrefixCls,\n      type,\n      shape,\n      size,\n      className,\n      htmlType,\n      children,\n      icon,\n      ghost,\n      funcType,\n      ...others\n    } = this.props;\n\n    const { loading, clicked } = this.state;\n\n    const prefixCls = getPrefixCls('btn', customizePrefixCls);\n\n    // large => lg\n    // small => sm\n    let sizeCls = '';\n    switch (size) {\n      case Size.large:\n        sizeCls = 'lg';\n        break;\n      case Size.small:\n        sizeCls = 'sm';\n        break;\n      default:\n    }\n\n    const ComponentProp = others.href ? 'a' : 'button';\n\n    const classes = classNames(prefixCls, className, {\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-${shape}`]: shape,\n      [`${prefixCls}-${sizeCls}`]: sizeCls,\n      [`${prefixCls}-icon-only`]: !children && icon,\n      [`${prefixCls}-loading`]: loading,\n      [`${prefixCls}-clicked`]: clicked,\n      [`${prefixCls}-background-ghost`]: ghost,\n      [`${prefixCls}-${funcType}`]: funcType,\n    });\n\n    let iconNode: any = icon ? <Icon type={icon} /> : null;\n    iconNode = loading ? (\n      <Progress key=\"loading\" type={ProgressType.loading} size={Size.small} />\n    ) : (\n      iconNode\n    );\n    const kids =\n      children || children === 0\n        ? Children.map(children, child => {\n            if (typeof child === 'string') {\n              return <span>{child}</span>;\n            }\n            return child;\n          })\n        : null;\n\n    return (\n      <Ripple disabled={others.disabled}>\n        <ComponentProp\n          {...omit(others, ['loading'])}\n          // 如果没有href属性，则表示组件使用button标签，type为'submit' | 'reset' | 'button'\n          type={\n            others.href ? undefined : (htmlType as ButtonHTMLAttributes<any>['type']) || 'button'\n          }\n          className={classes}\n          onClick={this.handleClick}\n        >\n          {iconNode}\n          {kids}\n        </ComponentProp>\n      </Ripple>\n    );\n  }\n}\n"]}