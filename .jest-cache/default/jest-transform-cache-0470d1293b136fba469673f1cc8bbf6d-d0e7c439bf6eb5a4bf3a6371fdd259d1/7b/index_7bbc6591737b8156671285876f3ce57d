4ae0f6846eda661fad2da2cf365421db
"use strict";

/* istanbul ignore next */
var cov_1ytrvwnt0v = function () {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/rules/index.tsx";
  var hash = "5e7edcc205473c21dc9b681afe2bfb31b6bb5524";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/rules/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 61
        }
      },
      "4": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 75
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 71
        }
      },
      "6": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 73
        }
      },
      "7": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 18,
          column: 69
        }
      },
      "8": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 59
        }
      },
      "9": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 61
        }
      },
      "10": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 69
        }
      },
      "11": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 67
        }
      },
      "12": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 28,
          column: 67
        }
      },
      "13": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 30,
          column: 273
        }
      },
      "14": {
        start: {
          line: 31,
          column: 15
        },
        end: {
          line: 31,
          column: 30
        }
      },
      "15": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 30
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {},
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "5e7edcc205473c21dc9b681afe2bfb31b6bb5524"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1ytrvwnt0v.s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1ytrvwnt0v.s[2]++;
exports["default"] = void 0;

var _badInput =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[3]++, _interopRequireDefault(require("./badInput")));

var _patternMismatch =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[4]++, _interopRequireDefault(require("./patternMismatch")));

var _rangeOverflow =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[5]++, _interopRequireDefault(require("./rangeOverflow")));

var _rangeUnderflow =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[6]++, _interopRequireDefault(require("./rangeUnderflow")));

var _stepMismatch =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[7]++, _interopRequireDefault(require("./stepMismatch")));

var _tooLong =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[8]++, _interopRequireDefault(require("./tooLong")));

var _tooShort =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[9]++, _interopRequireDefault(require("./tooShort")));

var _typeMismatch =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[10]++, _interopRequireDefault(require("./typeMismatch")));

var _customError =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[11]++, _interopRequireDefault(require("./customError")));

var _uniqueError =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[12]++, _interopRequireDefault(require("./uniqueError")));

var validationRules =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[13]++, [_badInput["default"], _patternMismatch["default"], _rangeOverflow["default"], _rangeUnderflow["default"], _stepMismatch["default"], _tooLong["default"], _tooShort["default"], _typeMismatch["default"], _customError["default"], _uniqueError["default"]]);

var _default =
/* istanbul ignore next */
(cov_1ytrvwnt0v.s[14]++, validationRules);

/* istanbul ignore next */
cov_1ytrvwnt0v.s[15]++;
exports["default"] = _default;