{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/query-bar/ColumnFilter.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, Key, ReactElement, ReactNode } from 'react';\nimport { action, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Menu, { Item } from 'choerodon-ui/lib/rc-components/menu/index';\nimport Button from '../../button/Button';\nimport Dropdown from '../../dropdown/Dropdown';\nimport { Size } from '../../core/enum';\nimport { FuncType } from '../../button/enum';\nimport TableContext from '../TableContext';\nimport { getColumnKey, getHeader } from '../utils';\nimport { Placements } from '../../dropdown/enum';\nimport { ColumnProps } from '../Column';\nimport { stopEvent, stopPropagation } from '../../_util/EventManager';\nimport autobind from '../../_util/autobind';\n\nfunction handleMenuClick({ domEvent }) {\n  domEvent.preventDefault();\n}\n\nexport interface ColumnFilterProps {\n  prefixCls?: string;\n  onColumnFilterChange?: (item?: any) => void;\n  getPopupContainer?: (triggerNode?: Element) => HTMLElement;\n}\n\n@observer\nexport default class ColumnFilter extends Component<ColumnFilterProps> {\n  static displayName = 'ColumnFilter';\n\n  static contextType = TableContext;\n\n  @observable hidden;\n\n  menu?: Menu | null;\n\n  constructor(props, context) {\n    super(props, context);\n    this.setDropDownHidden(true);\n  }\n\n  @autobind\n  saveMenu(node) {\n    this.menu = node;\n  }\n\n  @autobind\n  handleHiddenChange(hidden) {\n    this.setDropDownHidden(hidden);\n  }\n\n  @autobind\n  handleKeyDown(e) {\n    if (this.menu && this.menu.onKeyDown(e)) {\n      stopEvent(e);\n    }\n  }\n\n  @action\n  setDropDownHidden(hidden) {\n    this.hidden = hidden;\n  }\n\n  render() {\n    const { prefixCls: rootPrefixCls } = this.props;\n    const prefixCls = `${rootPrefixCls}-columns-chooser`;\n    return (\n      <div\n        className={prefixCls}\n        onFocus={stopPropagation}\n        onMouseDown={stopPropagation}\n        tabIndex={-1}\n      >\n        <Dropdown\n          placement={Placements.bottomRight}\n          overlay={this.getMenu(prefixCls)}\n          hidden={this.hidden}\n          onHiddenChange={this.handleHiddenChange}\n        >\n          <Button\n            funcType={FuncType.flat}\n            icon=\"view_column\"\n            size={Size.small}\n            onKeyDown={this.handleKeyDown}\n          />\n        </Dropdown>\n      </div>\n    );\n  }\n\n  @action\n  handleMenuSelect({\n    item: {\n      props: { value },\n    },\n  }) {\n    value.hidden = false;\n  }\n\n  @action\n  handleMenuUnSelect({\n    item: {\n      props: { value },\n    },\n  }) {\n    value.hidden = true;\n  }\n\n  getMenu(prefixCls) {\n    const {\n      tableStore: { leafColumns, dataSet },\n    } = this.context;\n    const selectedKeys: Key[] = [];\n    const columns: [ColumnProps, ReactNode, Key][] = [];\n    leafColumns.forEach(column => {\n      if (column.hideable) {\n        const header = getHeader(column, dataSet);\n        if (header) {\n          const key: Key = getColumnKey(column);\n          if (!column.hidden) {\n            selectedKeys.push(key);\n          }\n          columns.push([column, header, key]);\n        }\n      }\n    });\n    return (\n      <Menu\n        ref={this.saveMenu}\n        multiple\n        defaultActiveFirst\n        prefixCls={`${prefixCls}-dropdown-menu`}\n        selectedKeys={selectedKeys}\n        onSelect={this.handleMenuSelect}\n        onDeselect={this.handleMenuUnSelect}\n        onClick={handleMenuClick}\n      >\n        {this.getOptions(columns)}\n      </Menu>\n    );\n  }\n\n  getOptions(columns: [ColumnProps, ReactNode, Key][]): ReactElement<any>[] {\n    return columns.map(([column, header, key]) => (\n      <Item key={key} value={column}>\n        <span>{header}</span>\n      </Item>\n    ));\n  }\n}\n"]}