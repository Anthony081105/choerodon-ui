{"version":3,"sources":["Menus.jsx"],"names":["Menus","props","index","node","menuItems","scrollActiveItemToView","prevProps","visible","option","menuIndex","prefixCls","expandTrigger","onSelect","bind","expandProps","onClick","menuItemCls","hasChildren","children","length","isLeaf","onMouseEnter","delayOnSelect","onMouseLeave","isActiveOption","ref","saveMenuItem","disabled","loading","title","label","value","values","activeValue","options","o","level","result","getActiveOptions","map","activeOption","filter","unshift","args","delayTimer","clearTimeout","setTimeout","optionsLength","getShowOptions","i","itemComponent","target","parentNode","scrollTop","offsetTop","dropdownMenuColumnStyle","getOption","Component","PropTypes","array","isRequired","string","func","bool","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayTreeFilter from 'array-tree-filter';\nimport { findDOMNode } from 'react-dom';\n\nexport default class Menus extends Component {\n  static defaultProps = {\n    options: [],\n    value: [],\n    activeValue: [],\n    onSelect() {\n    },\n    prefixCls: 'rc-cascader-menus',\n    visible: false,\n    expandTrigger: 'click',\n  };\n\n  static propTypes = {\n    value: PropTypes.array,\n    activeValue: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    prefixCls: PropTypes.string,\n    expandTrigger: PropTypes.string,\n    onSelect: PropTypes.func,\n    visible: PropTypes.bool,\n    dropdownMenuColumnStyle: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.menuItems = {};\n  }\n\n  componentDidMount() {\n    this.scrollActiveItemToView();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.visible && this.props.visible) {\n      this.scrollActiveItemToView();\n    }\n  }\n\n  getOption(option, menuIndex) {\n    const { prefixCls, expandTrigger } = this.props;\n    const onSelect = this.props.onSelect.bind(this, option, menuIndex);\n    let expandProps = {\n      onClick: onSelect,\n    };\n    let menuItemCls = `${prefixCls}-menu-item`;\n    const hasChildren = option.children && option.children.length > 0;\n    if (hasChildren || option.isLeaf === false) {\n      menuItemCls += ` ${prefixCls}-menu-item-expand`;\n    }\n    if (expandTrigger === 'hover' && hasChildren) {\n      expandProps = {\n        onMouseEnter: this.delayOnSelect.bind(this, onSelect),\n        onMouseLeave: this.delayOnSelect.bind(this),\n        onClick: onSelect,\n      };\n    }\n    if (this.isActiveOption(option, menuIndex)) {\n      menuItemCls += ` ${prefixCls}-menu-item-active`;\n      expandProps.ref = this.saveMenuItem(menuIndex);\n    }\n    if (option.disabled) {\n      menuItemCls += ` ${prefixCls}-menu-item-disabled`;\n    }\n    if (option.loading) {\n      menuItemCls += ` ${prefixCls}-menu-item-loading`;\n    }\n    let title = '';\n    if (option.title) {\n      title = option.title;\n    } else if (typeof option.label === 'string') {\n      title = option.label;\n    }\n    return (\n      <li\n        key={option.value}\n        className={menuItemCls}\n        title={title}\n        {...expandProps}\n      >\n        {option.label}\n      </li>\n    );\n  }\n\n  getActiveOptions(values) {\n    const activeValue = values || this.props.activeValue;\n    const options = this.props.options;\n    return arrayTreeFilter(options, (o, level) => o.value === activeValue[level]);\n  }\n\n  getShowOptions() {\n    const { options } = this.props;\n    const result = this.getActiveOptions()\n      .map(activeOption => activeOption.children)\n      .filter(activeOption => !!activeOption);\n    result.unshift(options);\n    return result;\n  }\n\n  delayOnSelect(onSelect, ...args) {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n    if (typeof onSelect === 'function') {\n      this.delayTimer = setTimeout(() => {\n        onSelect(args);\n        this.delayTimer = null;\n      }, 150);\n    }\n  }\n\n  scrollActiveItemToView() {\n    // scroll into view\n    const optionsLength = this.getShowOptions().length;\n    for (let i = 0; i < optionsLength; i++) {\n      const itemComponent = this.menuItems[i];\n      if (itemComponent) {\n        const target = findDOMNode(itemComponent);\n        target.parentNode.scrollTop = target.offsetTop;\n      }\n    }\n  }\n\n  isActiveOption(option, menuIndex) {\n    const { activeValue = [] } = this.props;\n    return activeValue[menuIndex] === option.value;\n  }\n\n  saveMenuItem = (index) => (node) => {\n    this.menuItems[index] = node;\n  };\n\n  render() {\n    const { prefixCls, dropdownMenuColumnStyle } = this.props;\n    return (\n      <div>\n        {this.getShowOptions().map((options, menuIndex) =>\n          <ul className={`${prefixCls}-menu`} key={menuIndex} style={dropdownMenuColumnStyle}>\n            {options.map(option => this.getOption(option, menuIndex))}\n          </ul>,\n        )}\n      </div>\n    );\n  }\n}\n"]}