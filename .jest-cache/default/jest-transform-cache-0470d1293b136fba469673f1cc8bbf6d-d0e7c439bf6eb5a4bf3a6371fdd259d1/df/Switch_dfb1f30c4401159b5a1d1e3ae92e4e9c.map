{"version":3,"sources":["Switch.jsx"],"names":["Switch","props","onClick","checked","state","setChecked","e","keyCode","toggle","node","blur","onMouseUp","defaultChecked","autoFocus","disabled","focus","nextProps","setState","onChange","className","prefixCls","checkedChildren","tabIndex","unCheckedChildren","restProps","switchTabIndex","switchClassName","saveNode","handleKeyDown","handleMouseUp","Component","PropTypes","string","bool","any","func","number","noop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAEqBA,M;;;;;AA0BnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,kHAAMA,KAAN;AADiB,+FAuCV,YAAM;AAAA,UACLC,OADK,GACO,MAAKD,KADZ,CACLC,OADK;AAEb,UAAMC,OAAO,GAAG,CAAC,MAAKC,KAAL,CAAWD,OAA5B;;AACA,YAAKE,UAAL,CAAgBF,OAAhB;;AACAD,MAAAA,OAAO,CAACC,OAAD,CAAP;AACD,KA5CkB;AAAA,sGA8CH,UAACG,CAAD,EAAO;AACrB,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AAAE;AACtB,cAAKF,UAAL,CAAgB,KAAhB;AACD,OAFD,MAEO,IAAIC,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AAAE;AAC7B,cAAKF,UAAL,CAAgB,IAAhB;AACD,OAFM,MAEA,IAAIC,CAAC,CAACC,OAAF,KAAc,EAAd,IAAoBD,CAAC,CAACC,OAAF,KAAc,EAAtC,EAA0C;AAAE;AACjD,cAAKC,MAAL;AACD;AACF,KAtDkB;AAAA,sGAyDH,UAACF,CAAD,EAAO;AACrB,UAAI,MAAKG,IAAT,EAAe;AACb,cAAKA,IAAL,CAAUC,IAAV;AACD;;AACD,UAAI,MAAKT,KAAL,CAAWU,SAAf,EAA0B;AACxB,cAAKV,KAAL,CAAWU,SAAX,CAAqBL,CAArB;AACD;AACF,KAhEkB;AAAA,iGA0ER,UAACG,IAAD,EAAU;AACnB,YAAKA,IAAL,GAAYA,IAAZ;AACD,KA5EkB;AAGjB,QAAIN,QAAO,GAAG,KAAd;;AACA,QAAI,aAAaF,KAAjB,EAAwB;AACtBE,MAAAA,QAAO,GAAG,CAAC,CAACF,KAAK,CAACE,OAAlB;AACD,KAFD,MAEO;AACLA,MAAAA,QAAO,GAAG,CAAC,CAACF,KAAK,CAACW,cAAlB;AACD;;AACD,UAAKR,KAAL,GAAa;AAAED,MAAAA,OAAO,EAAPA;AAAF,KAAb;AATiB;AAUlB;;;;wCAEmB;AAAA,wBACc,KAAKF,KADnB;AAAA,UACVY,SADU,eACVA,SADU;AAAA,UACCC,QADD,eACCA,QADD;;AAElB,UAAID,SAAS,IAAI,CAACC,QAAlB,EAA4B;AAC1B,aAAKC,KAAL;AACD;AACF;;;8CAEyBC,S,EAAW;AACnC,UAAI,aAAaA,SAAjB,EAA4B;AAC1B,aAAKC,QAAL,CAAc;AACZd,UAAAA,OAAO,EAAE,CAAC,CAACa,SAAS,CAACb;AADT,SAAd;AAGD;AACF;;;+BAEUA,O,EAAS;AAClB,UAAI,KAAKF,KAAL,CAAWa,QAAf,EAAyB;AACvB;AACD;;AACD,UAAI,EAAE,aAAa,KAAKb,KAApB,CAAJ,EAAgC;AAC9B,aAAKgB,QAAL,CAAc;AACZd,UAAAA,OAAO,EAAPA;AADY,SAAd;AAGD;;AACD,WAAKF,KAAL,CAAWiB,QAAX,CAAoBf,OAApB;AACD;;;4BA6BO;AACN,WAAKM,IAAL,CAAUM,KAAV;AACD;;;2BAEM;AACL,WAAKN,IAAL,CAAUC,IAAV;AACD;;;6BAMQ;AAAA;;AAAA,yBAIH,KAAKT,KAJF;AAAA,UAELkB,SAFK,gBAELA,SAFK;AAAA,UAEMC,SAFN,gBAEMA,SAFN;AAAA,UAEiBN,QAFjB,gBAEiBA,QAFjB;AAAA,UAGLO,eAHK,gBAGLA,eAHK;AAAA,UAGYC,QAHZ,gBAGYA,QAHZ;AAAA,UAGsBC,iBAHtB,gBAGsBA,iBAHtB;AAAA,UAG4CC,SAH5C;AAKP,UAAMrB,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AACA,UAAMsB,cAAc,GAAGX,QAAQ,GAAG,CAAC,CAAJ,GAASQ,QAAQ,IAAI,CAApD;AACA,UAAMI,eAAe,GAAG,6FACrBP,SADqB,EACT,CAAC,CAACA,SADO,iDAErBC,SAFqB,EAET,IAFS,2DAGlBA,SAHkB,eAGIjB,OAHJ,2DAIlBiB,SAJkB,gBAIKN,QAJL,gBAAxB;AAMA,aACE,sEACMU,SADN;AAEE,QAAA,SAAS,EAAEE,eAFb;AAGE,QAAA,QAAQ,EAAED,cAHZ;AAIE,QAAA,GAAG,EAAE,KAAKE,QAJZ;AAKE,QAAA,SAAS,EAAE,KAAKC,aALlB;AAME,QAAA,OAAO,EAAE,KAAKpB,MANhB;AAOE,QAAA,SAAS,EAAE,KAAKqB;AAPlB,UASE;AAAM,QAAA,SAAS,YAAKT,SAAL;AAAf,SACGjB,OAAO,GAAGkB,eAAH,GAAqBE,iBAD/B,CATF,CADF;AAeD;;;EApIiCO,gB;;;iCAAf9B,M,eACA;AACjBmB,EAAAA,SAAS,EAAEY,sBAAUC,MADJ;AAEjBZ,EAAAA,SAAS,EAAEW,sBAAUC,MAFJ;AAGjBlB,EAAAA,QAAQ,EAAEiB,sBAAUE,IAHH;AAIjBZ,EAAAA,eAAe,EAAEU,sBAAUG,GAJV;AAKjBX,EAAAA,iBAAiB,EAAEQ,sBAAUG,GALZ;AAMjBhB,EAAAA,QAAQ,EAAEa,sBAAUI,IANH;AAOjBxB,EAAAA,SAAS,EAAEoB,sBAAUI,IAPJ;AAQjBjC,EAAAA,OAAO,EAAE6B,sBAAUI,IARF;AASjBb,EAAAA,QAAQ,EAAES,sBAAUK,MATH;AAUjBjC,EAAAA,OAAO,EAAE4B,sBAAUE,IAVF;AAWjBrB,EAAAA,cAAc,EAAEmB,sBAAUE,IAXT;AAYjBpB,EAAAA,SAAS,EAAEkB,sBAAUE;AAZJ,C;iCADAjC,M,kBAgBG;AACpBoB,EAAAA,SAAS,EAAE,WADS;AAEpBC,EAAAA,eAAe,EAAE,IAFG;AAGpBE,EAAAA,iBAAiB,EAAE,IAHC;AAIpBJ,EAAAA,SAAS,EAAE,EAJS;AAKpBP,EAAAA,cAAc,EAAE,KALI;AAMpBM,EAAAA,QAAQ,EAAEmB,gBANU;AAOpBnC,EAAAA,OAAO,EAAEmC;AAPW,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from 'lodash/noop';\nimport classNames from 'classnames';\n\nexport default class Switch extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    prefixCls: PropTypes.string,\n    disabled: PropTypes.bool,\n    checkedChildren: PropTypes.any,\n    unCheckedChildren: PropTypes.any,\n    onChange: PropTypes.func,\n    onMouseUp: PropTypes.func,\n    onClick: PropTypes.func,\n    tabIndex: PropTypes.number,\n    checked: PropTypes.bool,\n    defaultChecked: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    prefixCls: 'rc-switch',\n    checkedChildren: null,\n    unCheckedChildren: null,\n    className: '',\n    defaultChecked: false,\n    onChange: noop,\n    onClick: noop,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let checked = false;\n    if ('checked' in props) {\n      checked = !!props.checked;\n    } else {\n      checked = !!props.defaultChecked;\n    }\n    this.state = { checked };\n  }\n\n  componentDidMount() {\n    const { autoFocus, disabled } = this.props;\n    if (autoFocus && !disabled) {\n      this.focus();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ('checked' in nextProps) {\n      this.setState({\n        checked: !!nextProps.checked,\n      });\n    }\n  }\n\n  setChecked(checked) {\n    if (this.props.disabled) {\n      return;\n    }\n    if (!('checked' in this.props)) {\n      this.setState({\n        checked,\n      });\n    }\n    this.props.onChange(checked);\n  }\n\n  toggle = () => {\n    const { onClick } = this.props;\n    const checked = !this.state.checked;\n    this.setChecked(checked);\n    onClick(checked);\n  };\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 37) { // Left\n      this.setChecked(false);\n    } else if (e.keyCode === 39) { // Right\n      this.setChecked(true);\n    } else if (e.keyCode === 32 || e.keyCode === 13) { // Space, Enter\n      this.toggle();\n    }\n  };\n\n  // Handle auto focus when click switch in Chrome\n  handleMouseUp = (e) => {\n    if (this.node) {\n      this.node.blur();\n    }\n    if (this.props.onMouseUp) {\n      this.props.onMouseUp(e);\n    }\n  };\n\n  focus() {\n    this.node.focus();\n  }\n\n  blur() {\n    this.node.blur();\n  }\n\n  saveNode = (node) => {\n    this.node = node;\n  };\n\n  render() {\n    const {\n      className, prefixCls, disabled,\n      checkedChildren, tabIndex, unCheckedChildren, ...restProps\n    } = this.props;\n    const checked = this.state.checked;\n    const switchTabIndex = disabled ? -1 : (tabIndex || 0);\n    const switchClassName = classNames({\n      [className]: !!className,\n      [prefixCls]: true,\n      [`${prefixCls}-checked`]: checked,\n      [`${prefixCls}-disabled`]: disabled,\n    });\n    return (\n      <span\n        {...restProps}\n        className={switchClassName}\n        tabIndex={switchTabIndex}\n        ref={this.saveNode}\n        onKeyDown={this.handleKeyDown}\n        onClick={this.toggle}\n        onMouseUp={this.handleMouseUp}\n      >\n        <span className={`${prefixCls}-inner`}>\n          {checked ? checkedChildren : unCheckedChildren}\n        </span>\n      </span>\n    );\n  }\n}\n"]}