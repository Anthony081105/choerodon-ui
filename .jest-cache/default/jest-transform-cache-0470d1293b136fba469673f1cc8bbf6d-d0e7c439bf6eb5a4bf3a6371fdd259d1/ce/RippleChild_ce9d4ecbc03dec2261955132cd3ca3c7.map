{"version":3,"sources":["ripple/RippleChild.jsx"],"names":["RippleChild","PureComponent","prefixCls","children","style","child","componentProps","className","x","y","width","height","size","maxWidth","Math","maxHeight","max","left","top","newProps","currentCircleStyle","position","Children"],"mappings":"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","sourcesContent":["import React, { Children, cloneElement, isValidElement, PureComponent, } from 'react';\nimport Animate from '../animate';\nimport MouseDown from './MouseDown';\nexport default class RippleChild extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.handleMouseDown = (child, size) => {\n            const { prefixCls } = this.props;\n            const { children, style } = child.props;\n            const componentProps = {\n                className: `${prefixCls}-wrapper`,\n            };\n            if (size) {\n                const { x, y, width, height } = size;\n                const maxWidth = Math.max(width - x, x);\n                const maxHeight = Math.max(height - y, y);\n                const max = Math.sqrt(maxWidth * maxWidth + maxHeight * maxHeight);\n                this.currentCircleStyle = {\n                    width: max + max,\n                    height: max + max,\n                    left: x - max,\n                    top: y - max,\n                };\n            }\n            const newProps = {\n                children: [\n                    children,\n                    <Animate key=\"ripple\" component=\"div\" componentProps={componentProps} transitionName={size ? 'zoom-small-slow' : 'fade'} hiddenProp=\"hidden\">\n          {this.currentCircleStyle && (<div hidden={!size} className={prefixCls} key=\"circle\" style={this.currentCircleStyle}/>)}\n        </Animate>,\n                ],\n                style: this.currentStyle || style,\n            };\n            if (size && size.position === 'static') {\n                newProps.style = { ...style, position: 'relative' };\n                this.currentStyle = newProps.style;\n            }\n            return cloneElement(child, newProps);\n        };\n        this.ripple = (child) => {\n            if (isValidElement(child)) {\n                return <MouseDown rippleChild={child}>{this.handleMouseDown}</MouseDown>;\n            }\n            return child;\n        };\n    }\n    render() {\n        const { children } = this.props;\n        return this.ripple(Children.only(children));\n    }\n}\nRippleChild.displayName = 'RippleChild';\n"]}