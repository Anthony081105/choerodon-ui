{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/rc-components/dialog/DialogWrap.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEA,IAAM,WAAW,GAAG,kBAAkB,oBAAtC;;IAEM,U;;;;;AAAN,wBAAA;AAAA;;AAAA;;;AAgCE,UAAA,UAAA,GAAa,UAAC,IAAD,EAAc;AACzB,YAAK,UAAL,GAAkB,IAAlB;AACD,KAFD;;AAIA,UAAA,YAAA,GAAe,YAAe;AAAA,UAAd,KAAc,uEAAN,EAAM;AAC5B,aAAO,gCAAC,kBAAD;AAAQ,QAAA,GAAG,EAAE,MAAK;AAAlB,SAAkC,MAAK,KAAvC,EAAkD,KAAlD;AAAyD,QAAA,GAAG,EAAC;AAA7D,SAAP;AACD,KAFD;;AAIA,UAAA,YAAA,GAAe,YAAK;AAAA,UACV,YADU,GACO,MAAK,KADZ,CACV,YADU;;AAElB,UAAI,YAAJ,EAAkB;AAChB,eAAO,YAAY,gDAAnB;AACD;;AACD,UAAM,SAAS,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAlB;AACA,MAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,SAA1B;AACA,aAAO,SAAP;AACD,KARD;;AAxCF;AAsFC;;;;gDA3EwD;AAAA,UAA/B,OAA+B,QAA/B,OAA+B;AAAA,UAC7C,KAD6C,GACnC,IADmC,CAC7C,KAD6C;AAErD,aAAO,CAAC,EAAE,KAAK,CAAC,OAAN,IAAiB,OAAnB,CAAR;AACD;;;2CAEmB;AAClB,UAAI,WAAJ,EAAiB;AACf;AACD;;AAHiB,UAIV,OAJU,GAIE,KAAK,KAJP,CAIV,OAJU;;AAKlB,UAAI,OAAJ,EAAa;AACX,aAAK,eAAL,CAAqB;AACnB,UAAA,UAAU,EAAE,KAAK,eADE;AAEnB,UAAA,OAFmB,qBAEZ,CAAK,CAFO;AAGnB,UAAA,OAAO,EAAE;AAHU,SAArB;AAKD,OAND,MAMO;AACL,aAAK,eAAL;AACD;AACF;;;6BAoBK;AAAA;;AAAA,UACI,OADJ,GACgB,KAAK,KADrB,CACI,OADJ;AAGJ,UAAI,MAAM,GAAQ,IAAlB;;AAEA,UAAI,CAAC,WAAL,EAAkB;AAChB,YAAM,SAAS,GAAG,SAAZ,SAAY,QAMb;AAAA,cALH,eAKG,SALH,eAKG;AAAA,cAJH,eAIG,SAJH,eAIG;AACH,UAAA,MAAI,CAAC,eAAL,GAAuB,eAAvB;AACA,UAAA,MAAI,CAAC,eAAL,GAAuB,eAAvB;AACA,iBAAO,IAAP;AACD,SAVD;;AAWA,eACE,gCAAC,2BAAD;AACE,UAAA,MAAM,EAAE,IADV;AAEE,UAAA,OAAO,EAAE,OAFX;AAGE,UAAA,WAAW,EAAE,KAHf;AAIE,UAAA,YAAY,EAAE,KAAK,YAJrB;AAKE,UAAA,YAAY,EAAE,KAAK;AALrB,WAOG,SAPH,CADF;AAWD;;AAED,UAAI,OAAO,IAAI,KAAK,UAApB,EAAgC;AAC9B,QAAA,MAAM,GAAG,gCAAC,kBAAD;AAAQ,UAAA,YAAY,EAAE,KAAK;AAA3B,WAA0C,KAAK,YAAL,EAA1C,CAAT;AACD;;AAED,aAAO,MAAP;AACD;;;EArFsB,gB;;AAChB,UAAA,CAAA,YAAA,GAAe;AACpB,EAAA,OAAO,EAAE;AADW,CAAf;eAuFM,U","sourcesContent":["import React, { Component, ReactElement } from 'react';\nimport ReactDOM from 'react-dom';\nimport Dialog from './Dialog';\nimport IDialogPropTypes from './IDialogPropTypes';\nimport ContainerRender from '../util/ContainerRender';\nimport Portal from '../util/Portal';\n\nconst IS_REACT_16 = 'createPortal' in ReactDOM;\n\nclass DialogWrap extends Component<IDialogPropTypes, any> {\n  static defaultProps = {\n    visible: false,\n  };\n\n  _component: ReactElement<any>;\n\n  renderComponent: (props: any) => void;\n\n  removeContainer: () => void;\n\n  shouldComponentUpdate({ visible }: { visible: boolean }) {\n    const { props } = this;\n    return !!(props.visible || visible);\n  }\n\n  componentWillUnmount() {\n    if (IS_REACT_16) {\n      return;\n    }\n    const { visible } = this.props;\n    if (visible) {\n      this.renderComponent({\n        afterClose: this.removeContainer,\n        onClose() {},\n        visible: false,\n      });\n    } else {\n      this.removeContainer();\n    }\n  }\n\n  saveDialog = (node: any) => {\n    this._component = node;\n  };\n\n  getComponent = (extra = {}) => {\n    return <Dialog ref={this.saveDialog} {...this.props} {...extra} key=\"dialog\" />;\n  };\n\n  getContainer = () => {\n    const { getContainer } = this.props;\n    if (getContainer) {\n      return getContainer(this);\n    }\n    const container = document.createElement('div');\n    document.body.appendChild(container);\n    return container;\n  };\n\n  render() {\n    const { visible } = this.props;\n\n    let portal: any = null;\n\n    if (!IS_REACT_16) {\n      const container = ({\n        renderComponent,\n        removeContainer,\n      }: {\n        renderComponent: any;\n        removeContainer: any;\n      }) => {\n        this.renderComponent = renderComponent;\n        this.removeContainer = removeContainer;\n        return null;\n      };\n      return (\n        <ContainerRender\n          parent={this}\n          visible={visible}\n          autoDestroy={false}\n          getComponent={this.getComponent}\n          getContainer={this.getContainer}\n        >\n          {container}\n        </ContainerRender>\n      );\n    }\n\n    if (visible || this._component) {\n      portal = <Portal getContainer={this.getContainer}>{this.getComponent()}</Portal>;\n    }\n\n    return portal;\n  }\n}\n\nexport default DialogWrap;\n"]}