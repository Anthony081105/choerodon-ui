dc11ec4a07b3fd7c9149103ba20e1fa3
"use strict";

/* istanbul ignore next */
var cov_29hxr7mv1r = function () {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/_util/measureTextWidth.tsx";
  var hash = "233cbc4975391c7a798bee7929f28bb0f1ac4a9d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/_util/measureTextWidth.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 38
        }
      },
      "2": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "3": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 45
        }
      },
      "4": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 60
        }
      },
      "5": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 51
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "7": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "9": {
        start: {
          line: 17,
          column: 10
        },
        end: {
          line: 17,
          column: 49
        }
      },
      "10": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "11": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 36
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 17
        }
      },
      "14": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 28,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "measureTextWidth",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 25
          }
        },
        loc: {
          start: {
            line: 8,
            column: 39
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 15,
            column: 42
          }
        },
        loc: {
          start: {
            line: 15,
            column: 61
          },
          end: {
            line: 19,
            column: 7
          }
        },
        line: 15
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 26,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 26,
            column: 3
          }
        }, {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 26,
            column: 3
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }],
        line: 16
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "233cbc4975391c7a798bee7929f28bb0f1ac4a9d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_29hxr7mv1r.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_29hxr7mv1r.s[1]++;
exports["default"] = measureTextWidth;

function measureTextWidth(text, style) {
  /* istanbul ignore next */
  cov_29hxr7mv1r.f[0]++;
  cov_29hxr7mv1r.s[2]++;

  if (typeof window !== 'undefined') {
    /* istanbul ignore next */
    cov_29hxr7mv1r.b[0][0]++;
    var span =
    /* istanbul ignore next */
    (cov_29hxr7mv1r.s[3]++, document.createElement('span'));

    /* istanbul ignore next */
    cov_29hxr7mv1r.s[4]++;
    span.style.cssText = 'position: absolute;top: -9999px;';

    /* istanbul ignore next */
    cov_29hxr7mv1r.s[5]++;
    span.innerHTML = text.replace(/\s/g, '&nbsp;');

    /* istanbul ignore next */
    cov_29hxr7mv1r.s[6]++;

    if (style) {
      /* istanbul ignore next */
      cov_29hxr7mv1r.b[1][0]++;
      cov_29hxr7mv1r.s[7]++;
      ['fontSize', 'fontFamily'].forEach(function (property) {
        /* istanbul ignore next */
        cov_29hxr7mv1r.f[1]++;
        cov_29hxr7mv1r.s[8]++;

        if (property in style) {
          /* istanbul ignore next */
          cov_29hxr7mv1r.b[2][0]++;
          cov_29hxr7mv1r.s[9]++;
          span.style[property] = style[property];
        } else
        /* istanbul ignore next */
        {
          cov_29hxr7mv1r.b[2][1]++;
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_29hxr7mv1r.b[1][1]++;
    }

    cov_29hxr7mv1r.s[10]++;
    document.body.appendChild(span);
    var width =
    /* istanbul ignore next */
    (cov_29hxr7mv1r.s[11]++, span.offsetWidth);

    /* istanbul ignore next */
    cov_29hxr7mv1r.s[12]++;
    document.body.removeChild(span);

    /* istanbul ignore next */
    cov_29hxr7mv1r.s[13]++;
    return width;
  } else
  /* istanbul ignore next */
  {
    cov_29hxr7mv1r.b[0][1]++;
  }

  cov_29hxr7mv1r.s[14]++;
  return 0;
}