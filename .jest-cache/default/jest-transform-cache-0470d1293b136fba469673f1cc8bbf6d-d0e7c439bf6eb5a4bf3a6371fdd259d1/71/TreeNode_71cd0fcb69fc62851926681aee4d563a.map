{"version":3,"sources":["TreeNode.jsx"],"names":["ICON_OPEN","ICON_CLOSE","LOAD_STATUS_NONE","LOAD_STATUS_LOADING","LOAD_STATUS_LOADED","LOAD_STATUS_FAILED","defaultTitle","onlyTreeNodeWarned","nodeContextTypes","contextTypes","rcTreeNode","PropTypes","shape","onUpCheckConduct","func","TreeNode","props","treeNode","nodeChecked","nodeHalfChecked","nodePos","pos","eventKey","checked","halfChecked","context","rcTree","checkStrictly","isKeyChecked","onBatchNodeCheck","onCheckConductFinished","children","getNodeChildren","checkedCount","forEach","node","index","childPos","key","enabledChildrenCount","filter","length","nextChecked","nextHalfChecked","e","isSelectable","onSelect","onCheck","isDisabled","onNodeSelect","preventDefault","disableCheckbox","checkable","targetChecked","onDownCheckConduct","onNodeMouseEnter","onNodeMouseLeave","onNodeContextMenu","onNodeDragStart","stopPropagation","setState","dragNodeHighlight","dataTransfer","setData","error","onNodeDragEnter","onNodeDragOver","onNodeDragLeave","onNodeDragEnd","onNodeDrop","onNodeExpand","callbackPromise","then","loadStatus","selectHandle","expanded","isLeaf","state","hasChildren","loadData","disabled","treeDisabled","switcherIconFromProps","switcherIcon","prefixCls","switcherIconFromCtx","switcherCls","onExpand","$custom","getNodeState","title","selected","icon","showIcon","draggable","wrapClass","$icon","renderIcon","$title","setSelectHandle","undefined","onMouseEnter","onMouseLeave","onContextMenu","onSelectorClick","onDragStart","wrapper","openTransitionName","openAnimation","renderTreeNode","renderFirst","transitionAppear","animProps","transitionName","animation","appear","nodeList","$children","treeNodes","Children","map","syncLoadData","nextProps","originList","targetList","selectable","treeSelectable","className","dragOver","dragOverGapTop","dragOverGapBottom","filterTreeNode","onDragEnter","onDragOver","onDragLeave","onDrop","onDragEnd","renderSwitcher","renderCheckbox","renderSelector","renderChildren","Component","string","root","object","bool","oneOfType"],"mappings":"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","sourcesContent":["import React, { Children, Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport warning from '../../_util/warning';\nimport Animate from '../../animate';\nimport toArray from '../util/Children/toArray';\nimport { contextTypes } from './Tree';\nimport Progress from '../../progress';\nimport { getNodeChildren, getPosition, isCheckDisabled, traverseTreeNodes } from './util';\n\nconst ICON_OPEN = 'open';\nconst ICON_CLOSE = 'close';\n\nconst LOAD_STATUS_NONE = 0;\nconst LOAD_STATUS_LOADING = 1;\nconst LOAD_STATUS_LOADED = 2;\nconst LOAD_STATUS_FAILED = 0; // Action align, let's make failed same as init.\n\nconst defaultTitle = '---';\n\nlet onlyTreeNodeWarned = false; // Only accept TreeNode\n\nexport const nodeContextTypes = {\n  ...contextTypes,\n  rcTreeNode: PropTypes.shape({\n    onUpCheckConduct: PropTypes.func,\n  }),\n};\n\nexport default class TreeNode extends Component {\n  static propTypes = {\n    eventKey: PropTypes.string, // Pass by parent `cloneElement`\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    root: PropTypes.object,\n    onSelect: PropTypes.func,\n    wrapper: PropTypes.func,\n\n    // By parent\n    expanded: PropTypes.bool,\n    selected: PropTypes.bool,\n    checked: PropTypes.bool,\n    halfChecked: PropTypes.bool,\n    children: PropTypes.node,\n    title: PropTypes.node,\n    pos: PropTypes.string,\n    dragOver: PropTypes.bool,\n    dragOverGapTop: PropTypes.bool,\n    dragOverGapBottom: PropTypes.bool,\n\n    // By user\n    isLeaf: PropTypes.bool,\n    selectable: PropTypes.bool,\n    disabled: PropTypes.bool,\n    disableCheckbox: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  };\n\n  static contextTypes = nodeContextTypes;\n\n  static childContextTypes = nodeContextTypes;\n\n  static defaultProps = {\n    title: defaultTitle,\n  };\n\n  static isTreeNode = 1;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loadStatus: LOAD_STATUS_NONE,\n      dragNodeHighlight: false,\n    };\n  }\n\n  getChildContext() {\n    return {\n      ...this.context,\n      rcTreeNode: {\n        onUpCheckConduct: this.onUpCheckConduct,\n      },\n    };\n  }\n\n  // Isomorphic needn't load data in server side\n  componentDidMount() {\n    this.syncLoadData(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.syncLoadData(nextProps);\n  }\n\n  onUpCheckConduct = (treeNode, nodeChecked, nodeHalfChecked) => {\n    const { pos: nodePos } = treeNode.props;\n    const { eventKey, pos, checked, halfChecked } = this.props;\n    const {\n      rcTree: { checkStrictly, isKeyChecked, onBatchNodeCheck, onCheckConductFinished },\n      rcTreeNode: { onUpCheckConduct } = {},\n    } = this.context;\n\n    // Stop conduct when current node is disabled\n    if (isCheckDisabled(this)) {\n      onCheckConductFinished();\n      return;\n    }\n\n    const children = this.getNodeChildren();\n\n    let checkedCount = nodeChecked ? 1 : 0;\n\n    // Statistic checked count\n    children.forEach((node, index) => {\n      const childPos = getPosition(pos, index);\n\n      if (nodePos === childPos || isCheckDisabled(node)) {\n        return;\n      }\n\n      if (isKeyChecked(node.key || childPos)) {\n        checkedCount += 1;\n      }\n    });\n\n    // Static enabled children count\n    const enabledChildrenCount = children\n      .filter(node => !isCheckDisabled(node))\n      .length;\n\n    // checkStrictly will not conduct check status\n    const nextChecked = checkStrictly ? checked : enabledChildrenCount === checkedCount;\n    const nextHalfChecked = checkStrictly ? // propagated or child checked\n      halfChecked : (nodeHalfChecked || (checkedCount > 0 && !nextChecked));\n\n    // Add into batch update\n    if (checked !== nextChecked || halfChecked !== nextHalfChecked) {\n      onBatchNodeCheck(eventKey, nextChecked, nextHalfChecked);\n\n      if (onUpCheckConduct) {\n        onUpCheckConduct(this, nextChecked, nextHalfChecked);\n      } else {\n        // Flush all the update\n        onCheckConductFinished();\n      }\n    } else {\n      // Flush all the update\n      onCheckConductFinished();\n    }\n  };\n\n  onDownCheckConduct = (nodeChecked) => {\n    const { children } = this.props;\n    const { rcTree: { checkStrictly, isKeyChecked, onBatchNodeCheck } } = this.context;\n    if (checkStrictly) return;\n\n    traverseTreeNodes(children, ({ node, key }) => {\n      if (isCheckDisabled(node)) return false;\n\n      if (nodeChecked !== isKeyChecked(key)) {\n        onBatchNodeCheck(key, nodeChecked, false);\n      }\n    });\n  };\n\n  onSelectorClick = (e) => {\n    if (this.isSelectable()) {\n      this.onSelect(e);\n    } else {\n      this.onCheck(e);\n    }\n  };\n\n  onSelect = (e) => {\n    if (this.isDisabled()) return;\n\n    const { rcTree: { onNodeSelect } } = this.context;\n    e.preventDefault();\n    onNodeSelect(e, this);\n  };\n\n  onCheck = (e) => {\n    if (this.isDisabled()) return;\n\n    const { disableCheckbox, checked, eventKey } = this.props;\n    const {\n      rcTree: { checkable, onBatchNodeCheck, onCheckConductFinished },\n      rcTreeNode: { onUpCheckConduct } = {},\n    } = this.context;\n\n    if (!checkable || disableCheckbox) return;\n\n    e.preventDefault();\n    const targetChecked = !checked;\n    onBatchNodeCheck(eventKey, targetChecked, false, this);\n\n    // Children conduct\n    this.onDownCheckConduct(targetChecked);\n\n    // Parent conduct\n    if (onUpCheckConduct) {\n      onUpCheckConduct(this, targetChecked, false);\n    } else {\n      onCheckConductFinished();\n    }\n  };\n\n  onMouseEnter = (e) => {\n    const { rcTree: { onNodeMouseEnter } } = this.context;\n    onNodeMouseEnter(e, this);\n  };\n\n  onMouseLeave = (e) => {\n    const { rcTree: { onNodeMouseLeave } } = this.context;\n    onNodeMouseLeave(e, this);\n  };\n\n  onContextMenu = (e) => {\n    const { rcTree: { onNodeContextMenu } } = this.context;\n    onNodeContextMenu(e, this);\n  };\n\n  onDragStart = (e) => {\n    const { rcTree: { onNodeDragStart } } = this.context;\n\n    e.stopPropagation();\n    this.setState({\n      dragNodeHighlight: true,\n    });\n    onNodeDragStart(e, this);\n\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer.setData('text/plain', '');\n    } catch (error) {\n      // empty\n    }\n  };\n\n  onDragEnter = (e) => {\n    const { rcTree: { onNodeDragEnter } } = this.context;\n\n    e.preventDefault();\n    e.stopPropagation();\n    onNodeDragEnter(e, this);\n  };\n\n  onDragOver = (e) => {\n    const { rcTree: { onNodeDragOver } } = this.context;\n\n    e.preventDefault();\n    e.stopPropagation();\n    onNodeDragOver(e, this);\n  };\n\n  onDragLeave = (e) => {\n    const { rcTree: { onNodeDragLeave } } = this.context;\n\n    e.stopPropagation();\n    onNodeDragLeave(e, this);\n  };\n\n  onDragEnd = (e) => {\n    const { rcTree: { onNodeDragEnd } } = this.context;\n\n    e.stopPropagation();\n    this.setState({\n      dragNodeHighlight: false,\n    });\n    onNodeDragEnd(e, this);\n  };\n\n  onDrop = (e) => {\n    const { rcTree: { onNodeDrop } } = this.context;\n\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({\n      dragNodeHighlight: false,\n    });\n    onNodeDrop(e, this);\n  };\n\n  // Disabled item still can be switch\n  onExpand = (e) => {\n    const { rcTree: { onNodeExpand } } = this.context;\n    const callbackPromise = onNodeExpand(e, this);\n\n    // Promise like\n    if (callbackPromise && callbackPromise.then) {\n      this.setState({ loadStatus: LOAD_STATUS_LOADING });\n\n      callbackPromise.then(() => {\n        this.setState({ loadStatus: LOAD_STATUS_LOADED });\n      }).catch(() => {\n        this.setState({ loadStatus: LOAD_STATUS_FAILED });\n      });\n    }\n  };\n\n  // Drag usage\n  setSelectHandle = (node) => {\n    this.selectHandle = node;\n  };\n\n  getNodeChildren() {\n    const { children } = this.props;\n    const originList = toArray(children).filter(node => node);\n    const targetList = getNodeChildren(originList);\n\n    if (originList.length !== targetList.length && !onlyTreeNodeWarned) {\n      onlyTreeNodeWarned = true;\n      warning(false, 'Tree only accept TreeNode as children.');\n    }\n\n    return targetList;\n  }\n\n  getNodeState = () => {\n    const { expanded } = this.props;\n\n    if (this.isLeaf()) {\n      return null;\n    }\n\n    return expanded ? ICON_OPEN : ICON_CLOSE;\n  };\n\n  isLeaf = () => {\n    const { loadStatus } = this.state;\n    const { isLeaf, hasChildren = this.getNodeChildren().length !== 0 } = this.props;\n    const { rcTree: { loadData } } = this.context;\n\n    return (\n      isLeaf ||\n      (!loadData && !hasChildren) ||\n      (loadData && loadStatus === LOAD_STATUS_LOADED && !hasChildren)\n    );\n  };\n\n  isDisabled = () => {\n    const { disabled } = this.props;\n    const { rcTree: { disabled: treeDisabled } } = this.context;\n\n    // Follow the logic of Selectable\n    if (disabled === false) {\n      return false;\n    }\n\n    return !!(treeDisabled || disabled);\n  };\n\n  isSelectable() {\n    const { selectable } = this.props;\n    const { rcTree: { selectable: treeSelectable } } = this.context;\n\n    // Ignore when selectable is undefined or null\n    if (typeof selectable === 'boolean') {\n      return selectable;\n    }\n\n    return treeSelectable;\n  }\n\n  // Load data to avoid default expanded tree without data\n  syncLoadData = (props) => {\n    const { loadStatus } = this.state;\n    const { expanded } = props;\n    const { rcTree: { loadData } } = this.context;\n\n    if (loadData && loadStatus === LOAD_STATUS_NONE && expanded && !this.isLeaf()) {\n      this.setState({ loadStatus: LOAD_STATUS_LOADING });\n\n      loadData(this).then(() => {\n        this.setState({ loadStatus: LOAD_STATUS_LOADED });\n      }).catch(() => {\n        this.setState({ loadStatus: LOAD_STATUS_FAILED });\n      });\n    }\n  };\n\n  // Switcher\n  renderSwitcher = () => {\n    const {\n      expanded,\n      switcherIcon: switcherIconFromProps,\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls,\n        switcherIcon: switcherIconFromCtx,\n      },\n    } = this.context;\n\n    const switcherIcon = switcherIconFromProps || switcherIconFromCtx;\n\n    if (this.isLeaf()) {\n      return (\n        <span className={classNames(`${prefixCls}-switcher`, `${prefixCls}-switcher-noop`)}>\n          {typeof switcherIcon === 'function' ? switcherIcon({ ...this.props, isLeaf: true }) : switcherIcon}\n        </span>\n      );\n    }\n\n    const switcherCls = classNames(`${prefixCls}-switcher`, `${prefixCls}-switcher_${expanded ? ICON_OPEN : ICON_CLOSE}`);\n    return (\n      <span onClick={this.onExpand} className={switcherCls}>\n        {typeof switcherIcon === 'function' ? switcherIcon({ ...this.props, isLeaf: false }) : switcherIcon}\n      </span>\n    );\n  };\n\n  // Checkbox\n  renderCheckbox = () => {\n    const { checked, halfChecked, disableCheckbox } = this.props;\n    const { rcTree: { prefixCls, checkable } } = this.context;\n    const disabled = this.isDisabled();\n\n    if (!checkable) return null;\n\n    // [Legacy] Custom element should be separate with `checkable` in future\n    const $custom = typeof checkable !== 'boolean' ? checkable : null;\n\n    return (\n      <span\n        className={classNames(\n          `${prefixCls}-checkbox`,\n          checked && `${prefixCls}-checkbox-checked`,\n          !checked && halfChecked && `${prefixCls}-checkbox-indeterminate`,\n          (disabled || disableCheckbox) && `${prefixCls}-checkbox-disabled`,\n        )}\n        onClick={this.onCheck}\n      >\n        {$custom}\n      </span>\n    );\n  };\n\n  renderIcon = () => {\n    const { loadStatus } = this.state;\n    const { rcTree: { prefixCls } } = this.context;\n\n    return loadStatus === LOAD_STATUS_LOADING ? (\n      <Progress\n        type=\"loading\"\n        size=\"small\"\n        width={14}\n        className={`${prefixCls}-icon_loading`}\n      />) : (\n      <span\n        className={classNames(\n          `${prefixCls}-iconEle`,\n          `${prefixCls}-icon__${this.getNodeState() || 'docu'}`,\n        )}\n      />\n    );\n  };\n\n  // Icon + Title\n  renderSelector = () => {\n    const { loadStatus, dragNodeHighlight } = this.state;\n    const { title, selected, icon } = this.props;\n    const { rcTree: { prefixCls, showIcon, draggable, loadData } } = this.context;\n    const disabled = this.isDisabled();\n\n    const wrapClass = `${prefixCls}-node-content-wrapper`;\n\n    // Icon - Still show loading icon when loading without showIcon\n    let $icon;\n\n    if (showIcon) {\n      $icon = icon ? (\n        <span\n          className={classNames(\n            `${prefixCls}-iconEle`,\n            `${prefixCls}-icon__customize`,\n          )}\n        >\n          {typeof icon === 'function' ? createElement(icon, this.props) : icon}\n        </span>\n      ) : this.renderIcon();\n    } else if (loadData && loadStatus === LOAD_STATUS_LOADING) {\n      $icon = this.renderIcon();\n    }\n\n    // Title\n    const $title = <span className={`${prefixCls}-title`}>{title}</span>;\n\n    return (\n      <span\n        ref={this.setSelectHandle}\n        title={typeof title === 'string' ? title : ''}\n        className={classNames(\n          `${wrapClass}`,\n          `${wrapClass}-${this.getNodeState() || 'normal'}`,\n          (!disabled && (selected || dragNodeHighlight)) && `${prefixCls}-node-selected`,\n          (!disabled && draggable) && 'draggable',\n        )}\n        draggable={(!disabled && draggable) || undefined}\n        aria-grabbed={(!disabled && draggable) || undefined}\n\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onContextMenu={this.onContextMenu}\n        onClick={this.onSelectorClick}\n        onDragStart={this.onDragStart}\n      >\n          {$icon}{$title}\n        </span>\n    );\n  };\n\n  // Children list wrapped with `Animation`\n  renderChildren = () => {\n    const { expanded, pos, wrapper } = this.props;\n    const {\n      rcTree: {\n        prefixCls,\n        openTransitionName, openAnimation,\n        renderTreeNode,\n      },\n    } = this.context;\n\n    // [Legacy] Animation control\n    const renderFirst = this.renderFirst;\n    this.renderFirst = 1;\n    let transitionAppear = true;\n    if (!renderFirst && expanded) {\n      transitionAppear = false;\n    }\n\n    const animProps = {};\n    if (openTransitionName) {\n      animProps.transitionName = openTransitionName;\n    } else if (typeof openAnimation === 'object') {\n      animProps.animation = { ...openAnimation };\n      if (!transitionAppear) {\n        delete animProps.animation.appear;\n      }\n    }\n\n    // Children TreeNode\n    const nodeList = this.getNodeChildren();\n\n    if (nodeList.length === 0) {\n      return null;\n    }\n\n    let $children;\n    if (expanded) {\n      let treeNodes = Children.map(nodeList, (node, index) => (\n        renderTreeNode(node, index, pos)\n      ));\n      if (wrapper) {\n        treeNodes = wrapper(treeNodes);\n      }\n      $children = (\n        <ul hidden={!expanded}>\n          {treeNodes}\n        </ul>\n      );\n    }\n\n    return (\n      <Animate\n        {...animProps}\n        hiddenProp=\"hidden\"\n        transitionAppear={transitionAppear}\n        component=\"\"\n      >\n        {$children}\n      </Animate>\n    );\n  };\n\n  render() {\n    const {\n      className,\n      dragOver, dragOverGapTop, dragOverGapBottom,\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls,\n        filterTreeNode,\n      },\n    } = this.context;\n    const disabled = this.isDisabled();\n\n    return (\n      <li\n        className={classNames(className, {\n          [`${prefixCls}-treenode-disabled`]: disabled,\n          'drag-over': !disabled && dragOver,\n          'drag-over-gap-top': !disabled && dragOverGapTop,\n          'drag-over-gap-bottom': !disabled && dragOverGapBottom,\n          'filter-node': filterTreeNode && filterTreeNode(this),\n        })}\n\n        onDragEnter={this.onDragEnter}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        onDrop={this.onDrop}\n        onDragEnd={this.onDragEnd}\n      >\n        {this.renderSwitcher()}\n        {this.renderCheckbox()}\n        {this.renderSelector()}\n        {this.renderChildren()}\n      </li>\n    );\n  }\n}\n"]}