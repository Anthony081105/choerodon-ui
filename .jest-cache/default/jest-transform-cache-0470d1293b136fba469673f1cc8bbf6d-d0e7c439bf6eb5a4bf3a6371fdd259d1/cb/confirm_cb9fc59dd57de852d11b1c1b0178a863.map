{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/modal/confirm.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEc,SAAU,OAAV,CAAkB,KAAlB,EAA8D;AAAA,wBAWtE,2BAAe,KAAf,CAXsE;AAAA,MAExE,QAFwE,mBAExE,QAFwE;AAAA,6CAGxE,IAHwE;AAAA,MAGxE,IAHwE,qCAGjE,SAHiE;AAAA,6CAIxE,IAJwE;AAAA,MAIxE,KAJwE,qCAIjE,gBAJiE;AAAA,8CAKxE,QALwE;AAAA,MAKxE,SALwE,sCAK7D,gBAL6D;AAAA,MAMxE,QANwE,mBAMxE,QANwE;AAAA,8CAOxE,MAPwE;AAAA,MAOxE,MAPwE,sCAO/D,KAP+D;AAAA,8CAQxE,QARwE;AAAA,MAQxE,QARwE,sCAQ7D,IAR6D;AAAA,MASxE,KATwE,mBASxE,KATwE;AAAA,MAUrE,UAVqE;;AAY1E,MAAM,SAAS,GAAG,gCAAgB,SAAhB,CAAlB;;AACA,MAAM,SAAS,GAAG,KAAK,IAAI;AAAK,IAAA,SAAS,YAAK,SAAL;AAAd,KAAuC,KAAvC,CAA3B;;AACA,MAAM,WAAW,GAAG,QAAQ,IAAI;AAAK,IAAA,SAAS,YAAK,SAAL;AAAd,KAAyC,QAAzC,CAAhC;;AACA,MAAM,QAAQ,GAAG,QAAQ,IACvB;AAAI,IAAA,SAAS,YAAK,SAAL,mBAAuB,SAAvB,cAAoC,IAApC;AAAb,KACE,gCAAC,gBAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,IADF,CADF;;AAKA,SAAO,IAAI,OAAJ,CAAY,UAAA,OAAO,EAAG;AAC3B;AACE,MAAA,GAAG,EAAE,6BADP;AAEE,MAAA,MAAM,EAAN,MAFF;AAGE,MAAA,cAAc,EAAE,IAHlB;AAIE,MAAA,QAAQ,EAAR,QAJF;AAKE,MAAA,QAAQ,EAAE,KALZ;AAME,MAAA,OAAO,EAAE,KANX;AAOE,MAAA,KAAK,EAAE;AAAE,QAAA,KAAK,EAAE;AAAT,OAPT;AAQE,MAAA,QAAQ,EACN;AAAO,QAAA,SAAS,EAAE;AAAlB,SACE,+CACE,4CACG,QADH,EAEE,4CACG,SADH,EAEG,WAFH,CAFF,CADF,CADF,CATJ;AAqBE,MAAA,IAAI;AAAA;AAAA;AAAA,qCAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACiB,KAAI,EADrB;;AAAA;AACE,kBAAA,MADF;;AAEJ,sBAAI,MAAM,KAAK,KAAf,EAAsB;AACpB,oBAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAJG,mDAKG,MALH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SArBN;AA4BE,MAAA,QAAQ;AAAA;AAAA;AAAA,qCAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACa,SAAQ,EADrB;;AAAA;AACF,kBAAA,MADE;;AAER,sBAAI,MAAM,KAAK,KAAf,EAAsB;AACpB,oBAAA,OAAO,CAAC,QAAD,CAAP;AACD;;AAJO,oDAKD,MALC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA5BV,OAmCK,UAnCL;AAqCD,GAtCM,CAAP;AAuCD","sourcesContent":["import React, { ReactNode } from 'react';\nimport noop from 'lodash/noop';\nimport { getProPrefixCls } from 'choerodon-ui/lib/configure';\nimport { ModalProps } from './Modal';\nimport { getKey, open } from '../modal-container/ModalContainer';\nimport Icon from '../icon';\nimport { confirmProps, normalizeProps } from './utils';\n\nexport default function confirm(props: ModalProps & confirmProps | ReactNode) {\n  const {\n    children,\n    type = 'confirm',\n    onOk = noop,\n    onCancel = noop,\n    iconType,\n    border = false,\n    okCancel = true,\n    title,\n    ...otherProps\n  } = normalizeProps(props);\n  const prefixCls = getProPrefixCls('confirm');\n  const titleNode = title && <div className={`${prefixCls}-title`}>{title}</div>;\n  const contentNode = children && <div className={`${prefixCls}-content`}>{children}</div>;\n  const iconNode = iconType && (\n    <td className={`${prefixCls}-icon ${prefixCls}-${type}`}>\n      <Icon type={iconType} />\n    </td>\n  );\n  return new Promise(resolve => {\n    open({\n      key: getKey(),\n      border,\n      destroyOnClose: true,\n      okCancel,\n      closable: false,\n      movable: false,\n      style: { width: '4.16rem' },\n      children: (\n        <table className={prefixCls}>\n          <tbody>\n            <tr>\n              {iconNode}\n              <td>\n                {titleNode}\n                {contentNode}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      ),\n      onOk: async () => {\n        const result = await onOk();\n        if (result !== false) {\n          resolve('ok');\n        }\n        return result;\n      },\n      onCancel: async () => {\n        const result = await onCancel();\n        if (result !== false) {\n          resolve('cancel');\n        }\n        return result;\n      },\n      ...otherProps,\n    });\n  });\n}\n"]}