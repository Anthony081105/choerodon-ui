{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/date-picker/DaysView.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport moment, { Moment } from 'moment';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport ViewComponent, { ViewComponentProps } from '../core/ViewComponent';\nimport autobind from '../_util/autobind';\nimport Icon from '../icon';\nimport { DatePickerKeyboardEvent, RenderFunction } from './DatePicker';\nimport { ViewMode } from './enum';\nimport { FieldType } from '../data-set/enum';\nimport { $l } from '../locale-context';\nimport { stopEvent } from '../_util/EventManager';\n\nexport function alwaysValidDate() {\n  return true;\n}\n\nexport interface DateViewProps extends ViewComponentProps {\n  date: Moment;\n  min?: Moment;\n  max?: Moment;\n  mode: ViewMode;\n  renderer?: RenderFunction;\n  isValidDate?: (currentDate: Moment, selected: Moment) => boolean;\n  onSelect?: (selectedDate: Moment) => void;\n  onSelectedDateChange?: (selectedDate: Moment, mode?: ViewMode) => void;\n  onViewModeChange?: (mode: ViewMode) => void;\n}\n\nexport default class DaysView extends ViewComponent<DateViewProps>\n  implements DatePickerKeyboardEvent {\n  static displayName = 'DaysView';\n\n  static propTypes = {\n    date: PropTypes.object,\n    renderer: PropTypes.func,\n    isValidDate: PropTypes.func,\n    onSelect: PropTypes.func,\n    onSelectedDateChange: PropTypes.func,\n    onViewModeChange: PropTypes.func,\n    ...ViewComponent.propTypes,\n  };\n\n  static defaultProps = {\n    suffixCls: 'calendar',\n  };\n\n  static type = FieldType.date;\n\n  render() {\n    const {\n      prefixCls,\n      props: { className },\n    } = this;\n    const classString = classNames(`${prefixCls}-view`, className);\n    return (\n      <div className={classString}>\n        {this.renderHeader()}\n        {this.renderBody()}\n        {this.renderFooter()}\n      </div>\n    );\n  }\n\n  @autobind\n  handlePrevYearClick() {\n    this.changeSelectedDate(this.getCloneDate().subtract(1, 'y'), ViewMode.year);\n  }\n\n  @autobind\n  handlePrevMonthClick() {\n    this.changeSelectedDate(this.getCloneDate().subtract(1, 'M'), ViewMode.month);\n  }\n\n  @autobind\n  handleMonthSelect() {\n    this.changeViewMode(ViewMode.month);\n  }\n\n  @autobind\n  handleYearSelect() {\n    this.changeViewMode(ViewMode.year);\n  }\n\n  @autobind\n  handleNextYearClick() {\n    this.changeSelectedDate(this.getCloneDate().add(1, 'y'), ViewMode.year);\n  }\n\n  @autobind\n  handleNextMonthClick() {\n    this.changeSelectedDate(this.getCloneDate().add(1, 'M'), ViewMode.month);\n  }\n\n  handleKeyDownHome(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().startOf('M'));\n  }\n\n  handleKeyDownEnd(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().endOf('M'));\n  }\n\n  handleKeyDownLeft(e) {\n    stopEvent(e);\n    if (e.altKey) {\n      this.changeViewMode(ViewMode.month);\n    } else {\n      this.changeSelectedDate(this.getCloneDate().subtract(1, 'd'));\n    }\n  }\n\n  handleKeyDownRight(e) {\n    stopEvent(e);\n    if (!e.altKey) {\n      this.changeSelectedDate(this.getCloneDate().add(1, 'd'));\n    }\n  }\n\n  handleKeyDownUp(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().subtract(1, 'w'));\n  }\n\n  handleKeyDownDown(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().add(1, 'w'));\n  }\n\n  handleKeyDownPageUp(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().subtract(1, e.altKey ? 'y' : 'M'));\n  }\n\n  handleKeyDownPageDown(e) {\n    stopEvent(e);\n    this.changeSelectedDate(this.getCloneDate().add(1, e.altKey ? 'y' : 'M'));\n  }\n\n  handleKeyDownEnter(e) {\n    e.preventDefault();\n    this.choose(this.props.date);\n  }\n\n  handleCellClick(date: Moment): void {\n    this.choose(date);\n  }\n\n  choose(date: Moment) {\n    const { onSelect = noop } = this.props;\n    onSelect(date);\n  }\n\n  changeSelectedDate(selectedDate: Moment, mode?: ViewMode) {\n    const { onSelectedDateChange = noop } = this.props;\n    onSelectedDateChange(selectedDate, mode);\n  }\n\n  changeViewMode(mode: ViewMode) {\n    const { onViewModeChange = noop } = this.props;\n    onViewModeChange(mode);\n  }\n\n  renderHeader(): ReactNode {\n    const {\n      prefixCls,\n      props: { date },\n    } = this;\n    return (\n      <div className={`${prefixCls}-header`}>\n        <a className={`${prefixCls}-prev-year`} onClick={this.handlePrevYearClick}>\n          <Icon type=\"first_page\" />\n        </a>\n        <a className={`${prefixCls}-prev-month`} onClick={this.handlePrevMonthClick}>\n          <Icon type=\"navigate_before\" />\n        </a>\n        <a className={`${prefixCls}-view-select`} onClick={this.handleMonthSelect}>\n          {date.localeData().monthsShort(date)}\n        </a>\n        <a className={`${prefixCls}-view-select`} onClick={this.handleYearSelect}>\n          {date.year()}\n        </a>\n        <a className={`${prefixCls}-next-year`}>\n          <Icon type=\"last_page\" onClick={this.handleNextYearClick} />\n        </a>\n        <a className={`${prefixCls}-next-month`} onClick={this.handleNextMonthClick}>\n          <Icon type=\"navigate_next\" />\n        </a>\n      </div>\n    );\n  }\n\n  renderBody() {\n    return <div className={`${this.prefixCls}-body`}>{this.renderPanel()}</div>;\n  }\n\n  renderPanel() {\n    return (\n      <table className={this.getPanelClass()} cellSpacing={0}>\n        {this.renderPanelHead()}\n        <tbody>{this.renderPanelBody()}</tbody>\n      </table>\n    );\n  }\n\n  renderPanelHead(): ReactNode {\n    return (\n      <thead>\n        <tr>{this.getDaysOfWeek()}</tr>\n      </thead>\n    );\n  }\n\n  renderFooter(): ReactNode {\n    const { prefixCls } = this;\n    return (\n      <div className={`${prefixCls}-footer`}>\n        <a onClick={this.choose.bind(this, moment().startOf('d'))}>{$l('DatePicker', 'today')}</a>\n      </div>\n    );\n  }\n\n  @autobind\n  renderCell(props: object): ReactNode {\n    return <td {...props} />;\n  }\n\n  renderInner(text) {\n    const { prefixCls } = this;\n    return <div className={`${prefixCls}-cell-inner`}>{text}</div>;\n  }\n\n  getFirstDay(date) {\n    const firstDay = date.clone().subtract(1, 'M');\n    return firstDay.date(firstDay.daysInMonth()).startOf('w');\n  }\n\n  renderPanelBody(): ReactNode {\n    const {\n      prefixCls,\n      props: { date, renderer = this.renderCell, isValidDate = alwaysValidDate },\n    } = this;\n    const selected = date.clone();\n    const prevMonth = this.getFirstDay(date);\n    const currentYear = date.year();\n    const currentMonth = date.month();\n    const lastDay = prevMonth.clone().add(42, 'd');\n    const rows: ReactNode[] = [];\n    let cells: ReactNode[] = [];\n\n    while (prevMonth.isBefore(lastDay)) {\n      const currentDate = prevMonth.clone();\n      const isDisabled = !isValidDate(currentDate, selected);\n      const className = classNames(`${prefixCls}-cell`, {\n        [`${prefixCls}-old`]:\n          prevMonth.year() < currentYear ||\n          (prevMonth.year() === currentYear && prevMonth.month() < currentMonth),\n        [`${prefixCls}-new`]:\n          prevMonth.year() > currentYear ||\n          (prevMonth.year() === currentYear && prevMonth.month() > currentMonth),\n        [`${prefixCls}-selected`]: prevMonth.isSame(selected, 'd'),\n        [`${prefixCls}-today`]: prevMonth.isSame(moment(), 'd'),\n        [`${prefixCls}-disabled`]: isDisabled,\n      });\n      const text = String(currentDate.date());\n      const dayProps: any = {\n        key: prevMonth.format('M_D'),\n        className,\n        children: this.renderInner(text),\n      };\n\n      if (!isDisabled) {\n        dayProps.onClick = this.handleCellClick.bind(this, currentDate);\n      }\n\n      cells.push(renderer(dayProps, text, currentDate, selected));\n\n      if (cells.length === 7) {\n        rows.push(<tr key={prevMonth.format('M_D')}>{cells}</tr>);\n        cells = [];\n      }\n\n      prevMonth.add(1, 'd');\n    }\n\n    return rows;\n  }\n\n  getPanelClass(): string {\n    return `${this.prefixCls}-day-panel`;\n  }\n\n  getDaysOfWeek(): ReactNode[] {\n    const locale = this.props.date.localeData();\n    const days = locale.weekdaysMin();\n    const first = locale.firstDayOfWeek();\n    const dow: ReactNode[] = [];\n    let i = 0;\n    days.forEach(day => {\n      dow[(7 + i++ - first) % 7] = (\n        <th key={day} title={day}>\n          {day}\n        </th>\n      );\n    });\n\n    return dow;\n  }\n\n  getCloneDate(): Moment {\n    return this.props.date.clone();\n  }\n}\n"]}