{"version":3,"sources":["menu/Menu.jsx"],"names":["Menu","Component","defaultSelectedKeys","PropTypes","selectedKeys","defaultOpenKeys","openKeys","mode","getPopupContainer","onClick","onSelect","onDeselect","onDestroy","openTransitionName","openAnimation","subMenuOpenDelay","subMenuCloseDelay","forceSubMenuRender","triggerSubMenuAction","level","selectable","multiple","children","focusable","style","defaultActiveFirst","visible","activeKey","string","prefixCls","className","inlineIndent","noop","onOpenChange","props","selectedKey","selectInfo","direction","changed","processSingle","oneChanged","e","index","Array","event","store","transitionName","animationName","lastOpen","c","i","subIndex","subMenuKey","state","extraProps","parentMenu","setInnerMenu"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { create, Provider } from 'mini-store';\nimport noop from 'lodash/noop';\nimport SubPopupMenu, { getActiveKey } from './SubPopupMenu';\n\nexport default class Menu extends Component {\n  static displayName = 'Menu';\n\n  static propTypes = {\n    defaultSelectedKeys: PropTypes.arrayOf(PropTypes.string),\n    selectedKeys: PropTypes.arrayOf(PropTypes.string),\n    defaultOpenKeys: PropTypes.arrayOf(PropTypes.string),\n    openKeys: PropTypes.arrayOf(PropTypes.string),\n    mode: PropTypes.oneOf(['horizontal', 'vertical', 'vertical-left', 'vertical-right', 'inline']),\n    getPopupContainer: PropTypes.func,\n    onClick: PropTypes.func,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onDestroy: PropTypes.func,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    subMenuOpenDelay: PropTypes.number,\n    subMenuCloseDelay: PropTypes.number,\n    forceSubMenuRender: PropTypes.bool,\n    triggerSubMenuAction: PropTypes.string,\n    level: PropTypes.number,\n    selectable: PropTypes.bool,\n    multiple: PropTypes.bool,\n    children: PropTypes.any,\n    focusable: PropTypes.bool,\n    style: PropTypes.object,\n    defaultActiveFirst: PropTypes.bool,\n    visible: PropTypes.bool,\n    activeKey: PropTypes.string,\n  };\n\n  static defaultProps = {\n    prefixCls: 'rc-menu',\n    className: '',\n    mode: 'vertical',\n    level: 1,\n    inlineIndent: 24,\n    visible: true,\n    focusable: true,\n    style: {},\n    selectable: true,\n    onClick: noop,\n    onSelect: noop,\n    onOpenChange: noop,\n    onDeselect: noop,\n    defaultSelectedKeys: [],\n    defaultOpenKeys: [],\n    subMenuOpenDelay: 0.1,\n    subMenuCloseDelay: 0.1,\n    triggerSubMenuAction: 'hover',\n  };\n\n  isRootMenu = true;\n\n  constructor(props) {\n    super(props);\n    let selectedKeys = props.defaultSelectedKeys;\n    let openKeys = props.defaultOpenKeys;\n    if ('selectedKeys' in props) {\n      selectedKeys = props.selectedKeys || [];\n    }\n    if ('openKeys' in props) {\n      openKeys = props.openKeys || [];\n    }\n\n    this.store = create({\n      selectedKeys,\n      openKeys,\n      activeKey: { '0-menu-': getActiveKey(props, props.activeKey) },\n    });\n  }\n\n  updateMiniStore() {\n    if ('selectedKeys' in this.props) {\n      this.store.setState({\n        selectedKeys: this.props.selectedKeys || [],\n      });\n    }\n    if ('openKeys' in this.props) {\n      this.store.setState({\n        openKeys: this.props.openKeys || [],\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.updateMiniStore();\n  }\n\n  componentDidUpdate() {\n    this.updateMiniStore();\n  }\n\n  onSelect = selectInfo => {\n    const props = this.props;\n    if (props.selectable) {\n      // root menu\n      let selectedKeys = this.store.getState().selectedKeys;\n      const selectedKey = selectInfo.key;\n      if (props.multiple) {\n        selectedKeys = selectedKeys.concat([selectedKey]);\n      } else {\n        selectedKeys = [selectedKey];\n      }\n      if (!('selectedKeys' in props)) {\n        this.store.setState({\n          selectedKeys,\n        });\n      }\n      props.onSelect({\n        ...selectInfo,\n        selectedKeys,\n      });\n    }\n  };\n\n  step(direction) {\n    return this.innerMenu.getWrappedInstance().step(direction);\n  }\n\n  onClick = e => {\n    this.props.onClick(e);\n  };\n\n  onKeyDown = (e, callback) => {\n    return this.innerMenu.getWrappedInstance().onKeyDown(e, callback);\n  };\n\n  onOpenChange = event => {\n    const props = this.props;\n    const openKeys = this.store.getState().openKeys.concat();\n    let changed = false;\n    const processSingle = e => {\n      let oneChanged = false;\n      if (e.open) {\n        oneChanged = openKeys.indexOf(e.key) === -1;\n        if (oneChanged) {\n          openKeys.push(e.key);\n        }\n      } else {\n        const index = openKeys.indexOf(e.key);\n        oneChanged = index !== -1;\n        if (oneChanged) {\n          openKeys.splice(index, 1);\n        }\n      }\n      changed = changed || oneChanged;\n    };\n    if (Array.isArray(event)) {\n      // batch change call\n      event.forEach(processSingle);\n    } else {\n      processSingle(event);\n    }\n    if (changed) {\n      if (!('openKeys' in this.props)) {\n        this.store.setState({ openKeys });\n      }\n      props.onOpenChange(openKeys);\n    }\n  };\n\n  onDeselect = selectInfo => {\n    const props = this.props;\n    if (props.selectable) {\n      const selectedKeys = this.store.getState().selectedKeys.concat();\n      const selectedKey = selectInfo.key;\n      const index = selectedKeys.indexOf(selectedKey);\n      if (index !== -1) {\n        selectedKeys.splice(index, 1);\n      }\n      if (!('selectedKeys' in props)) {\n        this.store.setState({\n          selectedKeys,\n        });\n      }\n      props.onDeselect({\n        ...selectInfo,\n        selectedKeys,\n      });\n    }\n  };\n\n  setInnerMenu = node => {\n    this.innerMenu = node;\n  };\n\n  getStore() {\n    const store = this.store || this.props.store;\n\n    return store;\n  }\n\n  getEventKey() {\n    return this.props.eventKey || '0-menu-';\n  }\n\n  getOpenTransitionName() {\n    const props = this.props;\n    let transitionName = props.openTransitionName;\n    const animationName = props.openAnimation;\n    if (!transitionName && typeof animationName === 'string') {\n      transitionName = `${props.prefixCls}-open-${animationName}`;\n    }\n    return transitionName;\n  }\n\n  isInlineMode() {\n    return this.props.mode === 'inline';\n  }\n\n  lastOpenSubMenu() {\n    let lastOpen = [];\n    const { openKeys } = this.store.getState();\n    if (openKeys.length) {\n      lastOpen = this.getFlatInstanceArray().filter(c => {\n        return c && openKeys.indexOf(c.props.eventKey) !== -1;\n      });\n    }\n    return lastOpen[0];\n  }\n\n  renderMenuItem(c, i, subIndex, subMenuKey) {\n    if (!c) {\n      return null;\n    }\n    const state = this.store.getState();\n    const extraProps = {\n      openKeys: state.openKeys,\n      selectedKeys: state.selectedKeys,\n      triggerSubMenuAction: this.props.triggerSubMenuAction,\n      subMenuKey,\n    };\n    return this.renderCommonMenuItem(c, i, subIndex, extraProps);\n  }\n\n  render() {\n    let props = { ...this.props };\n    props.className += ` ${props.prefixCls}-root`;\n    props = {\n      ...props,\n      onClick: this.onClick,\n      onOpenChange: this.onOpenChange,\n      onDeselect: this.onDeselect,\n      onSelect: this.onSelect,\n      parentMenu: this,\n    };\n\n    // delete props.openAnimation;\n    // delete props.openTransitionName;\n    return (\n      <Provider store={this.store}>\n        <SubPopupMenu {...props} ref={this.setInnerMenu}>\n          {this.props.children}\n        </SubPopupMenu>\n      </Provider>\n    );\n  }\n}\n"]}