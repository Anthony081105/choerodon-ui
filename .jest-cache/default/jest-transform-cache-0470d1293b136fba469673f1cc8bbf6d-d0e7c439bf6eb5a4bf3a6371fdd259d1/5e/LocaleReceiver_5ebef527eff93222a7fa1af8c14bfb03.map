{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/locale-provider/LocaleReceiver.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;IAYqB,c;;;;;;;;;;;;gCAOV;AAAA,wBACkC,KAAK,KADvC;AAAA,UACC,aADD,eACC,aADD;AAAA,UACgB,aADhB,eACgB,aADhB;AAAA,UAEC,SAFD,GAEe,KAAK,OAFpB,CAEC,SAFD;AAGP,UAAM,iBAAiB,GAAG,SAAS,IAAI,SAAS,CAAC,aAAD,CAAhD;AACA,gDACM,OAAO,aAAP,KAAyB,UAAzB,GAAsC,aAAa,EAAnD,GAAwD,aAD9D,MAEM,iBAAiB,IAAI,EAF3B;AAID;;;oCAEY;AAAA,UACH,SADG,GACW,KAAK,OADhB,CACH,SADG;AAEX,UAAM,UAAU,GAAG,SAAS,IAAI,SAAS,CAAC,MAA1C,CAFW,CAGX;;AACA,UAAI,SAAS,IAAI,SAAS,CAAC,KAAvB,IAAgC,CAAC,UAArC,EAAiD;AAC/C,eAAO,OAAP;AACD;;AACD,aAAO,UAAP;AACD;;;6BAEK;AAAA,UACI,QADJ,GACiB,KAAK,KADtB,CACI,QADJ;AAEJ,aAAO,QAAQ,CAAC,KAAK,SAAL,EAAD,EAAmB,KAAK,aAAL,EAAnB,CAAf;AACD;;;EA9ByC,gB;;;AACnC,cAAA,CAAA,YAAA,GAAe;AACpB,EAAA,SAAS,EAAE,sBAAU;AADD,CAAf","sourcesContent":["import { Component, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\n\nexport interface LocaleReceiverProps {\n  componentName: string;\n  defaultLocale: object | Function;\n  children: (locale: object, localeCode?: string) => ReactNode;\n}\n\nexport interface LocaleReceiverContext {\n  c7nLocale?: { [key: string]: any };\n}\n\nexport default class LocaleReceiver extends Component<LocaleReceiverProps> {\n  static contextTypes = {\n    c7nLocale: PropTypes.object,\n  };\n\n  context: LocaleReceiverContext;\n\n  getLocale() {\n    const { componentName, defaultLocale } = this.props;\n    const { c7nLocale } = this.context;\n    const localeFromContext = c7nLocale && c7nLocale[componentName];\n    return {\n      ...(typeof defaultLocale === 'function' ? defaultLocale() : defaultLocale),\n      ...(localeFromContext || {}),\n    };\n  }\n\n  getLocaleCode() {\n    const { c7nLocale } = this.context;\n    const localeCode = c7nLocale && c7nLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if (c7nLocale && c7nLocale.exist && !localeCode) {\n      return 'en-us';\n    }\n    return localeCode;\n  }\n\n  render() {\n    const { children } = this.props;\n    return children(this.getLocale(), this.getLocaleCode());\n  }\n}\n"]}