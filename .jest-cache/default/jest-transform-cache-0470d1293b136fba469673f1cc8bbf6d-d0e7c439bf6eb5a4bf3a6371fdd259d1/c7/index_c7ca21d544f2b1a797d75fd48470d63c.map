{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/popover/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAOqB,O;;;;;AAArB,qBAAA;AAAA;;AAAA;;;AAiCE,UAAA,WAAA,GAAc,UAAC,IAAD,EAAc;AAC1B,YAAK,OAAL,GAAe,IAAf;AACD,KAFD;;AAjCF;AAsDC;;;;sCAxCgB;AACb,aAAO,KAAK,OAAL,CAAa,eAAb,EAAP;AACD;;;iCAES;AAAA,wBACmB,KAAK,KADxB;AAAA,UACA,KADA,eACA,KADA;AAAA,UACO,OADP,eACO,OADP;AAER,UAAM,SAAS,GAAG,KAAK,YAAL,EAAlB;AACA,+BACE,EAAE,aAAa,KAAK,KAApB,CADF,EAEE,kEAFF;AAIA,aACE,6CACG,KAAK,IAAI;AAAK,QAAA,SAAS,YAAK,SAAL;AAAd,SAAuC,KAAvC,CADZ,EAEE;AAAK,QAAA,SAAS,YAAK,SAAL;AAAd,SAA+C,OAA/C,CAFF,CADF;AAMD;;;mCAMW;AAAA,UACF,SADE,GACY,KAAK,KADjB,CACF,SADE;AAEV,aAAO,6BAAa,SAAb,EAAwB,SAAxB,CAAP;AACD;;;6BAEK;AACJ,UAAM,KAAK,sCAAQ,KAAK,KAAb,CAAX;AACA,aAAO,KAAK,CAAC,KAAb;AACA,aACE,gCAAC,mBAAD,gCACM,KADN;AAEE,QAAA,SAAS,EAAE,KAAK,YAAL,EAFb;AAGE,QAAA,GAAG,EAAE,KAAK,WAHZ;AAIE,QAAA,OAAO,EAAE,KAAK,UAAL;AAJX,SADF;AAQD;;;EArDkC,gB;;;AAC5B,OAAA,CAAA,WAAA,GAAc,SAAd;AAEA,OAAA,CAAA,YAAA,GAAe;AACpB,EAAA,SAAS,EAAE,KADS;AAEpB,EAAA,cAAc,EAAE,UAFI;AAGpB,EAAA,OAAO,EAAE,OAHW;AAIpB,EAAA,eAAe,EAAE,GAJG;AAKpB,EAAA,eAAe,EAAE,GALG;AAMpB,EAAA,YAAY,EAAE;AANM,CAAf","sourcesContent":["import React, { Component, ReactNode } from 'react';\nimport Tooltip, { AbstractTooltipProps } from '../tooltip';\nimport warning from '../_util/warning';\nimport { getPrefixCls } from '../configure';\n\nexport interface PopoverProps extends AbstractTooltipProps {\n  title?: ReactNode;\n  content?: ReactNode;\n}\n\nexport default class Popover extends Component<PopoverProps, {}> {\n  static displayName = 'Popover';\n\n  static defaultProps = {\n    placement: 'top',\n    transitionName: 'zoom-big',\n    trigger: 'hover',\n    mouseEnterDelay: 0.1,\n    mouseLeaveDelay: 0.1,\n    overlayStyle: {},\n  };\n\n  private tooltip: Tooltip;\n\n  getPopupDomNode() {\n    return this.tooltip.getPopupDomNode();\n  }\n\n  getOverlay() {\n    const { title, content } = this.props;\n    const prefixCls = this.getPrefixCls();\n    warning(\n      !('overlay' in this.props),\n      'Popover[overlay] is removed, please use Popover[content] instead',\n    );\n    return (\n      <div>\n        {title && <div className={`${prefixCls}-title`}>{title}</div>}\n        <div className={`${prefixCls}-inner-content`}>{content}</div>\n      </div>\n    );\n  }\n\n  saveTooltip = (node: any) => {\n    this.tooltip = node;\n  };\n\n  getPrefixCls() {\n    const { prefixCls } = this.props;\n    return getPrefixCls('popover', prefixCls);\n  }\n\n  render() {\n    const props = { ...this.props };\n    delete props.title;\n    return (\n      <Tooltip\n        {...props}\n        prefixCls={this.getPrefixCls()}\n        ref={this.saveTooltip}\n        overlay={this.getOverlay()}\n      />\n    );\n  }\n}\n"]}