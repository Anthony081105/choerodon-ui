04815d0ebb61bfb7054523e56626ec2b
"use strict";

/* istanbul ignore next */
var cov_1frnuvxjcb = function () {
  var path = "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/rules/stepMismatch.tsx";
  var hash = "af2ff4eebbeaf20df62de2c8a2fcc9b42d5ec232";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/validator/rules/stepMismatch.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 34
        }
      },
      "3": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 69
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 78
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "6": {
        start: {
          line: 16,
          column: 13
        },
        end: {
          line: 16,
          column: 48
        }
      },
      "7": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 97
        }
      },
      "8": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "9": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "11": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 28,
          column: 7
        }
      },
      "12": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 85
        }
      },
      "13": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 29
        }
      },
      "14": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 26
        }
      },
      "15": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "16": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 72
        }
      },
      "17": {
        start: {
          line: 41,
          column: 13
        },
        end: {
          line: 41,
          column: 23
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 21
        }
      },
      "19": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 21
        }
      },
      "20": {
        start: {
          line: 44,
          column: 34
        },
        end: {
          line: 44,
          column: 65
        }
      },
      "21": {
        start: {
          line: 45,
          column: 14
        },
        end: {
          line: 45,
          column: 25
        }
      },
      "22": {
        start: {
          line: 47,
          column: 2
        },
        end: {
          line: 66,
          column: 3
        }
      },
      "23": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 48,
          column: 69
        }
      },
      "24": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "25": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 54,
          column: 7
        }
      },
      "26": {
        start: {
          line: 55,
          column: 21
        },
        end: {
          line: 55,
          column: 89
        }
      },
      "27": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 87
        }
      },
      "28": {
        start: {
          line: 57,
          column: 34
        },
        end: {
          line: 57,
          column: 69
        }
      },
      "29": {
        start: {
          line: 58,
          column: 30
        },
        end: {
          line: 58,
          column: 129
        }
      },
      "30": {
        start: {
          line: 59,
          column: 6
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "31": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 68,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "isStepMismatch",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 23
          }
        },
        loc: {
          start: {
            line: 22,
            column: 54
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 50
          },
          end: {
            line: 25,
            column: 51
          }
        },
        loc: {
          start: {
            line: 25,
            column: 66
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 25
      },
      "2": {
        name: "stepMismatch",
        decl: {
          start: {
            line: 40,
            column: 9
          },
          end: {
            line: 40,
            column: 21
          }
        },
        loc: {
          start: {
            line: 40,
            column: 36
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 40
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        }, {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 28,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 28,
            column: 7
          }
        }, {
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 28,
            column: 7
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 37,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 37,
            column: 3
          }
        }, {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 37,
            column: 3
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        }, {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 21
          },
          end: {
            line: 55,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 51
          },
          end: {
            line: 55,
            column: 72
          }
        }, {
          start: {
            line: 55,
            column: 75
          },
          end: {
            line: 55,
            column: 89
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 56,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 46
          },
          end: {
            line: 56,
            column: 69
          }
        }, {
          start: {
            line: 56,
            column: 72
          },
          end: {
            line: 56,
            column: 87
          }
        }],
        line: 56
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 58,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 65
          },
          end: {
            line: 58,
            column: 105
          }
        }, {
          start: {
            line: 58,
            column: 108
          },
          end: {
            line: 58,
            column: 129
          }
        }],
        line: 58
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "af2ff4eebbeaf20df62de2c8a2fcc9b42d5ec232"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1frnuvxjcb.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1frnuvxjcb.s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1frnuvxjcb.s[2]++;
exports["default"] = stepMismatch;

var _isEmpty =
/* istanbul ignore next */
(cov_1frnuvxjcb.s[3]++, _interopRequireDefault(require("../../_util/isEmpty")));

var _ValidationResult =
/* istanbul ignore next */
(cov_1frnuvxjcb.s[4]++, _interopRequireDefault(require("../ValidationResult")));

var _localeContext =
/* istanbul ignore next */
(cov_1frnuvxjcb.s[5]++, require("../../locale-context"));

var _utils =
/* istanbul ignore next */
(cov_1frnuvxjcb.s[6]++, require("../../number-field/utils"));

var _formatReactTemplate =
/* istanbul ignore next */
(cov_1frnuvxjcb.s[7]++, _interopRequireDefault(require("../../formatter/formatReactTemplate")));

var _utils2 =
/* istanbul ignore next */
(cov_1frnuvxjcb.s[8]++, require("../../field/utils"));

function isStepMismatch(value, step, min, max, range) {
  /* istanbul ignore next */
  cov_1frnuvxjcb.f[0]++;
  cov_1frnuvxjcb.s[9]++;

  if (range) {
    /* istanbul ignore next */
    cov_1frnuvxjcb.b[0][0]++;
    var nearStepValues;

    /* istanbul ignore next */
    cov_1frnuvxjcb.s[10]++;
    (0, _utils2.toRangeValue)(value, range).every(function (item) {
      /* istanbul ignore next */
      cov_1frnuvxjcb.f[1]++;
      cov_1frnuvxjcb.s[11]++;

      if (!(0, _isEmpty["default"])(item)) {
        /* istanbul ignore next */
        cov_1frnuvxjcb.b[1][0]++;
        cov_1frnuvxjcb.s[12]++;
        nearStepValues = (0, _utils.getNearStepValues)(Number(item), step, min, max);
      } else
      /* istanbul ignore next */
      {
        cov_1frnuvxjcb.b[1][1]++;
      }

      cov_1frnuvxjcb.s[13]++;
      return !nearStepValues;
    });

    /* istanbul ignore next */
    cov_1frnuvxjcb.s[14]++;
    return nearStepValues;
  } else
  /* istanbul ignore next */
  {
    cov_1frnuvxjcb.b[0][1]++;
  }

  cov_1frnuvxjcb.s[15]++;

  if (!(0, _isEmpty["default"])(value)) {
    /* istanbul ignore next */
    cov_1frnuvxjcb.b[2][0]++;
    cov_1frnuvxjcb.s[16]++;
    return (0, _utils.getNearStepValues)(Number(value), step, min, max);
  } else
  /* istanbul ignore next */
  {
    cov_1frnuvxjcb.b[2][1]++;
  }
}

function stepMismatch(value, props) {
  /* istanbul ignore next */
  cov_1frnuvxjcb.f[2]++;
  var step =
  /* istanbul ignore next */
  (cov_1frnuvxjcb.s[17]++, props.step),
      min =
  /* istanbul ignore next */
  (cov_1frnuvxjcb.s[18]++, props.min),
      max =
  /* istanbul ignore next */
  (cov_1frnuvxjcb.s[19]++, props.max),
      defaultValidationMessages =
  /* istanbul ignore next */
  (cov_1frnuvxjcb.s[20]++, props.defaultValidationMessages),
      range =
  /* istanbul ignore next */
  (cov_1frnuvxjcb.s[21]++, props.range);

  /* istanbul ignore next */
  cov_1frnuvxjcb.s[22]++;

  if (step !== undefined) {
    /* istanbul ignore next */
    cov_1frnuvxjcb.b[3][0]++;
    var nearStepValues =
    /* istanbul ignore next */
    (cov_1frnuvxjcb.s[23]++, isStepMismatch(value, step, min, max, range));

    /* istanbul ignore next */
    cov_1frnuvxjcb.s[24]++;

    if (nearStepValues !== undefined) {
      /* istanbul ignore next */
      cov_1frnuvxjcb.b[4][0]++;
      var injectionOptions =
      /* istanbul ignore next */
      (cov_1frnuvxjcb.s[25]++, {
        0: nearStepValues[0],
        1: nearStepValues[1]
      });
      var ruleName =
      /* istanbul ignore next */
      (cov_1frnuvxjcb.s[26]++, nearStepValues.length === 2 ?
      /* istanbul ignore next */
      (cov_1frnuvxjcb.b[5][0]++, 'stepMismatchBetween') :
      /* istanbul ignore next */
      (cov_1frnuvxjcb.b[5][1]++, 'stepMismatch'));
      var key =
      /* istanbul ignore next */
      (cov_1frnuvxjcb.s[27]++, nearStepValues.length === 2 ?
      /* istanbul ignore next */
      (cov_1frnuvxjcb.b[6][0]++, 'step_mismatch_between') :
      /* istanbul ignore next */
      (cov_1frnuvxjcb.b[6][1]++, 'step_mismatch'));

      var _defaultValidationMes =
      /* istanbul ignore next */
      (cov_1frnuvxjcb.s[28]++, defaultValidationMessages[ruleName]),
          validationMessage =
      /* istanbul ignore next */
      (cov_1frnuvxjcb.s[29]++, _defaultValidationMes === void 0 ?
      /* istanbul ignore next */
      (cov_1frnuvxjcb.b[7][0]++, (0, _localeContext.$l)('Validator', key)) :
      /* istanbul ignore next */
      (cov_1frnuvxjcb.b[7][1]++, _defaultValidationMes));

      /* istanbul ignore next */
      cov_1frnuvxjcb.s[30]++;
      return new _ValidationResult["default"]({
        validationMessage: (0, _formatReactTemplate["default"])(validationMessage, injectionOptions),
        injectionOptions: injectionOptions,
        value: value,
        ruleName: ruleName
      });
    } else
    /* istanbul ignore next */
    {
      cov_1frnuvxjcb.b[4][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1frnuvxjcb.b[3][1]++;
  }

  cov_1frnuvxjcb.s[31]++;
  return true;
}