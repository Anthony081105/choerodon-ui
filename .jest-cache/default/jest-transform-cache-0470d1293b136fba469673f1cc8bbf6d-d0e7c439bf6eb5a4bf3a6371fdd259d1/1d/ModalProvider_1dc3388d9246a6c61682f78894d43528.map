{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/modal-provider/ModalProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react';\nimport noop from 'lodash/noop';\nimport ModalContainer, { ModalContainerProps } from '../modal-container/ModalContainer';\nimport Modal, { ModalProps } from '../modal/Modal';\n\nexport interface ModalProviderProps extends ModalContainerProps {\n  children?: ReactNode;\n}\n\nconst ModalContext = createContext({ open: noop });\n\nconst ModalProvider = (props: ModalProviderProps) => {\n  const { location, children } = props;\n  const ref = useRef<ModalContainer>(null);\n  const prepareToOpen = useMemo<(ModalProps & { children })[]>(\n    () => [] as (ModalProps & { children })[],\n    [],\n  );\n\n  const open = useCallback((modalProps: ModalProps & { children }) => {\n    const container = ref.current;\n    if (container) {\n      const close = async (destroy?: boolean) => {\n        const { onClose = noop } = modalProps;\n        if ((await onClose()) !== false) {\n          if (destroy) {\n            container.close({ ...modalProps, destroyOnClose: true });\n          } else {\n            container.close(modalProps);\n          }\n        }\n      };\n\n      const show = () => {\n        container.top().open(modalProps);\n      };\n\n      const update = newProps => {\n        container.top().update({ ...modalProps, ...newProps });\n      };\n\n      modalProps = {\n        close,\n        update,\n        ...Modal.defaultProps,\n        ...modalProps,\n      };\n      container.top().open(modalProps);\n\n      return {\n        close,\n        open: show,\n        update,\n      };\n    }\n    prepareToOpen.push(modalProps);\n  }, []);\n\n  useEffect(() => {\n    if (ref.current) {\n      prepareToOpen.forEach(prepare => open(prepare));\n    }\n  }, [ref, open]);\n\n  const context = { open };\n\n  return (\n    <ModalContext.Provider value={context}>\n      <ModalContainer ref={ref} location={location} />\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nconst useModal = () => {\n  return useContext(ModalContext);\n};\n\nconst injectModal = Target => {\n  const Hoc = props => {\n    const modal = useModal();\n    return <Target {...props} Modal={modal} />;\n  };\n\n  Hoc.displayName = `${Target.displayName || 'Anonymous'}-with-inject-modal`;\n\n  return Hoc;\n};\n\nModalProvider.displayName = 'ModalProvider';\n\nModalProvider.useModal = useModal;\n\nModalProvider.injectModal = injectModal;\n\nexport default ModalProvider;\n"]}