c08f76b3a5bf35bbd72d04286e3e9566
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _input = _interopRequireDefault(require("../../../components/input"));

var _tree = _interopRequireDefault(require("../../../components/tree"));

var _react = _interopRequireDefault(require("react"));

var TreeNode = _tree["default"].TreeNode;
var Search = _input["default"].Search;
var x = 3;
var y = 2;
var z = 1;
var gData = [];

var generateData = function generateData(_level, _preKey, _tns) {
  var preKey = _preKey || '0';
  var tns = _tns || gData;
  var children = [];

  for (var i = 0; i < x; i++) {
    var key = "".concat(preKey, "-").concat(i);
    tns.push({
      title: key,
      key: key
    });

    if (i < y) {
      children.push(key);
    }
  }

  if (_level < 0) {
    return tns;
  }

  var level = _level - 1;
  children.forEach(function (key, index) {
    tns[index].children = [];
    return generateData(level, key, tns[index].children);
  });
};

generateData(z);
var dataList = [];

var generateList = function generateList(data) {
  for (var i = 0; i < data.length; i++) {
    var node = data[i];
    var key = node.key;
    dataList.push({
      key: key,
      title: key
    });

    if (node.children) {
      generateList(node.children, node.key);
    }
  }
};

generateList(gData);

var getParentKey = function getParentKey(key, tree) {
  var parentKey;

  for (var i = 0; i < tree.length; i++) {
    var node = tree[i];

    if (node.children) {
      if (node.children.some(function (item) {
        return item.key === key;
      })) {
        parentKey = node.key;
      } else if (getParentKey(key, node.children)) {
        parentKey = getParentKey(key, node.children);
      }
    }
  }

  return parentKey;
};

var SearchTree =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(SearchTree, _React$Component);

  function SearchTree() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, SearchTree);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(SearchTree)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      expandedKeys: [],
      searchValue: '',
      autoExpandParent: true
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onExpand", function (expandedKeys) {
      _this.setState({
        expandedKeys: expandedKeys,
        autoExpandParent: false
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onChange", function (e) {
      var value = e.target.value;
      var expandedKeys = dataList.map(function (item) {
        if (item.key.indexOf(value) > -1) {
          return getParentKey(item.key, gData);
        }

        return null;
      }).filter(function (item, i, self) {
        return item && self.indexOf(item) === i;
      });

      _this.setState({
        expandedKeys: expandedKeys,
        searchValue: value,
        autoExpandParent: true
      });
    });
    return _this;
  }

  (0, _createClass2["default"])(SearchTree, [{
    key: "render",
    value: function render() {
      var _this$state = this.state,
          searchValue = _this$state.searchValue,
          expandedKeys = _this$state.expandedKeys,
          autoExpandParent = _this$state.autoExpandParent;

      var loop = function loop(data) {
        return data.map(function (item) {
          var index = item.key.indexOf(searchValue);
          var beforeStr = item.key.substr(0, index);
          var afterStr = item.key.substr(index + searchValue.length);
          var title = index > -1 ? _react["default"].createElement("span", null, beforeStr, _react["default"].createElement("span", {
            style: {
              color: '#f50'
            }
          }, searchValue), afterStr) : _react["default"].createElement("span", null, item.key);

          if (item.children) {
            return _react["default"].createElement(TreeNode, {
              key: item.key,
              title: title
            }, loop(item.children));
          }

          return _react["default"].createElement(TreeNode, {
            key: item.key,
            title: title
          });
        });
      };

      return _react["default"].createElement("div", null, _react["default"].createElement(Search, {
        style: {
          marginBottom: 8
        },
        placeholder: "Search",
        onChange: this.onChange
      }), _react["default"].createElement(_tree["default"], {
        onExpand: this.onExpand,
        expandedKeys: expandedKeys,
        autoExpandParent: autoExpandParent
      }, loop(gData)));
    }
  }]);
  return SearchTree;
}(_react["default"].Component);

var __Demo = _react["default"].createElement(SearchTree, null);

var _default = __Demo;
exports["default"] = _default;