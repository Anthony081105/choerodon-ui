{"version":3,"sources":["tooltip/placements.jsx"],"names":["autoAdjustOverflowEnabled","adjustX","adjustY","autoAdjustOverflowDisabled","targetOffset","autoAdjustOverflow","config","arrowWidth","horizontalArrowShift","verticalArrowShift","placementMap","left","points","offset","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","Object","overflow","getOverflowOptions","rcPlacements"],"mappings":"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","sourcesContent":["import rcPlacements from '../rc-components/tooltip/placements';\nconst autoAdjustOverflowEnabled = {\n    adjustX: 1,\n    adjustY: 1,\n};\nconst autoAdjustOverflowDisabled = {\n    adjustX: 0,\n    adjustY: 0,\n};\nconst targetOffset = [0, 0];\nexport function getOverflowOptions(autoAdjustOverflow) {\n    if (typeof autoAdjustOverflow === 'boolean') {\n        return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n    }\n    return {\n        ...autoAdjustOverflowDisabled,\n        ...autoAdjustOverflow,\n    };\n}\nexport default function getPlacements(config = {}) {\n    const { arrowWidth = 5, horizontalArrowShift = 16, verticalArrowShift = 12, autoAdjustOverflow = true } = config;\n    const placementMap = {\n        left: {\n            points: ['cr', 'cl'],\n            offset: [-4, 0],\n        },\n        right: {\n            points: ['cl', 'cr'],\n            offset: [4, 0],\n        },\n        top: {\n            points: ['bc', 'tc'],\n            offset: [0, -4],\n        },\n        bottom: {\n            points: ['tc', 'bc'],\n            offset: [0, 4],\n        },\n        topLeft: {\n            points: ['bl', 'tc'],\n            offset: [-(horizontalArrowShift + arrowWidth), -4],\n        },\n        leftTop: {\n            points: ['tr', 'cl'],\n            offset: [-4, -(verticalArrowShift + arrowWidth)],\n        },\n        topRight: {\n            points: ['br', 'tc'],\n            offset: [horizontalArrowShift + arrowWidth, -4],\n        },\n        rightTop: {\n            points: ['tl', 'cr'],\n            offset: [4, -(verticalArrowShift + arrowWidth)],\n        },\n        bottomRight: {\n            points: ['tr', 'bc'],\n            offset: [horizontalArrowShift + arrowWidth, 4],\n        },\n        rightBottom: {\n            points: ['bl', 'cr'],\n            offset: [4, verticalArrowShift + arrowWidth],\n        },\n        bottomLeft: {\n            points: ['tl', 'bc'],\n            offset: [-(horizontalArrowShift + arrowWidth), 4],\n        },\n        leftBottom: {\n            points: ['br', 'cl'],\n            offset: [-4, verticalArrowShift + arrowWidth],\n        },\n    };\n    Object.keys(placementMap).forEach(key => {\n        placementMap[key] = config.arrowPointAtCenter ? {\n            ...placementMap[key],\n            overflow: getOverflowOptions(autoAdjustOverflow),\n            targetOffset,\n        } : {\n            ...rcPlacements[key],\n            overflow: getOverflowOptions(autoAdjustOverflow),\n        };\n    });\n    return placementMap;\n}\n"]}