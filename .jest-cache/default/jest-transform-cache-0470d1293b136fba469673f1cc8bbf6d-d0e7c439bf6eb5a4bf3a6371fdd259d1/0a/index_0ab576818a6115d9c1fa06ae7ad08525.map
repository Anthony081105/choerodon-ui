{"version":3,"sources":["message/index.jsx"],"names":["defaultDuration","defaultTop","defaultBottom","key","transitionName","defaultPlacement","callback","Notification","prefixCls","getCustomizePrefixCls","style","getContainer","messageInstance","duration","type","onClose","placement","iconType","info","success","error","warning","loading","noop","target","getMessageInstance","instance","content","notice","warn","config","options","customizePrefixCls","destroy"],"mappings":"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","sourcesContent":["import React from 'react';\nimport noop from 'lodash/noop';\nimport isString from 'lodash/isString';\nimport Icon from '../icon';\nimport Notification from '../rc-components/notification';\nimport { getPlacementStyle, getPlacementTransitionName } from './util';\nimport { getPrefixCls } from '../configure';\nlet defaultDuration = 3;\nlet defaultTop = 24;\nlet defaultBottom = 24;\nlet messageInstance;\nlet key = 1;\nlet customizePrefixCls;\nlet transitionName = 'move-up';\nlet defaultPlacement = 'leftBottom';\nlet getContainer;\nfunction getCustomizePrefixCls() {\n    return getPrefixCls('message', customizePrefixCls);\n}\nfunction getMessageInstance(placement, callback) {\n    if (messageInstance) {\n        callback(messageInstance);\n        return;\n    }\n    Notification.newInstance({\n        prefixCls: getCustomizePrefixCls(),\n        style: getPlacementStyle(placement, defaultTop, defaultBottom),\n        transitionName: getPlacementTransitionName(placement, transitionName),\n        getContainer,\n    }, (instance) => {\n        if (messageInstance) {\n            callback(messageInstance);\n            return;\n        }\n        messageInstance = instance;\n        callback(instance);\n    });\n}\nfunction notice(content, duration = defaultDuration, type, onClose, placement) {\n    const iconType = {\n        info: 'info',\n        success: 'check_circle',\n        error: 'error',\n        warning: 'warning',\n        loading: 'loading',\n    }[type];\n    if (isString(onClose)) {\n        placement = onClose;\n        onClose = noop;\n    }\n    if (typeof duration === 'function') {\n        onClose = duration;\n        duration = defaultDuration;\n    }\n    else if (isString(duration)) {\n        placement = duration;\n    }\n    const target = key++;\n    const prefixCls = getCustomizePrefixCls();\n    getMessageInstance(placement || defaultPlacement, instance => {\n        instance.notice({\n            key: target,\n            duration,\n            style: {},\n            content: (<div className={`${prefixCls}-custom-content ${prefixCls}-${type}`}>\n          <Icon type={iconType}/>\n          <span>{content}</span>\n        </div>),\n            onClose,\n        });\n    });\n    return () => {\n        if (messageInstance) {\n            messageInstance.removeNotice(target);\n        }\n    };\n}\nexport default {\n    info(content, duration, onClose, placement) {\n        return notice(content, duration, 'info', onClose, placement);\n    },\n    success(content, duration, onClose, placement) {\n        return notice(content, duration, 'success', onClose, placement);\n    },\n    error(content, duration, onClose, placement) {\n        return notice(content, duration, 'error', onClose, placement);\n    },\n    // Departed usage, please use warning()\n    warn(content, duration, onClose, placement) {\n        return notice(content, duration, 'warning', onClose, placement);\n    },\n    warning(content, duration, onClose, placement) {\n        return notice(content, duration, 'warning', onClose, placement);\n    },\n    loading(content, duration, onClose, placement) {\n        return notice(content, duration, 'loading', onClose, placement);\n    },\n    config(options) {\n        if (options.top !== undefined) {\n            defaultTop = options.top;\n            messageInstance = null; // delete messageInstance for new defaultTop\n        }\n        if (options.bottom !== undefined) {\n            defaultBottom = options.bottom;\n            messageInstance = null; // delete messageInstance for new defaultBottom\n        }\n        if (options.duration !== undefined) {\n            defaultDuration = options.duration;\n        }\n        if (options.prefixCls !== undefined) {\n            customizePrefixCls = options.prefixCls;\n        }\n        if (options.getContainer !== undefined) {\n            getContainer = options.getContainer;\n        }\n        if (options.transitionName !== undefined) {\n            transitionName = options.transitionName;\n            messageInstance = null; // delete messageInstance for new transitionName\n        }\n        if (options.placement !== undefined) {\n            defaultPlacement = options.placement;\n        }\n    },\n    destroy() {\n        if (messageInstance) {\n            messageInstance.destroy();\n            messageInstance = null;\n        }\n    },\n};\n"]}