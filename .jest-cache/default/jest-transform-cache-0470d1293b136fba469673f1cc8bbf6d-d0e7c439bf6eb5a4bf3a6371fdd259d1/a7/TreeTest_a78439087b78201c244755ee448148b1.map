{"version":3,"sources":["TreeTest.js"],"names":["nodeRenderer","record","get","dataSet","expand","functionCode","icon","id","ischecked","score","shortcutId","text","url","symbol","parentId","TreeTest","count","DataSet","primaryKey","data","parentField","expandField","idField","fields","name","type","events","select","dataSetValue","setCount","unSelect","setState","selected","length","state","ds","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Tree from '..';\nimport DataSet from '../../data-set';\nimport NumberField from '../../number-field';\n\nfunction nodeRenderer({ record }) {\n  return record.get('text');\n}\nconst dataSet = [\n  {\n    expand: false,\n    functionCode: 'HR',\n    icon: 'fa fa-cubes',\n    id: 2,\n    ischecked: null,\n    score: 10,\n    shortcutId: null,\n    text: '组织架构',\n    url: null,\n    symbol: '0',\n  },\n  {\n    expand: false,\n    functionCode: 'EMPLOYEE_REACT',\n    icon: 'record_test',\n    id: 7,\n    ischecked: true,\n    score: 10,\n    shortcutId: null,\n    text: '员工管理(react)',\n    url: 'hap-core/hr/employee',\n    symbol: '1',\n    parentId: 2,\n  },\n  {\n    expand: false,\n    functionCode: 'HR_UNIT',\n    icon: 'fa fa-cube',\n    id: 73,\n    ischecked: true,\n    score: 10,\n    shortcutId: null,\n    text: '组织管理',\n    url: 'hr/org_unit.html',\n    symbol: '0',\n    parentId: 2,\n  },\n  {\n    expand: false,\n    functionCode: 'COMPANY_REACT',\n    icon: 'mail_set',\n    id: 12,\n    ischecked: true,\n    score: 10,\n    shortcutId: null,\n    text: '公司管理(react)',\n    url: 'hap-core/hr/company',\n    symbol: '1',\n    parentId: 2,\n  },\n];\n\nexport default class TreeTest extends React.Component {\n  state = {\n    count: 0,\n  };\n\n  ds = new DataSet({\n    primaryKey: 'id',\n    data: dataSet,\n    parentField: 'parentId',\n    expandField: 'expand',\n    idField: 'id',\n    fields: [\n      { name: 'id', type: 'number' },\n      { name: 'expand', type: 'boolean' },\n      { name: 'parentId', type: 'number' },\n    ],\n    events: {\n      select: ({ dataSetValue }) => {\n        this.setCount(dataSetValue);\n      },\n      unSelect: ({ dataSetValue }) => {\n        this.setCount(dataSetValue);\n      },\n    },\n  });\n\n  setCount(dataSetValue) {\n    this.setState({ count: dataSetValue.selected.length });\n  }\n\n  render() {\n    const { count } = this.state;\n    return (\n      <>\n        <NumberField value={count} />\n        <Tree dataSet={this.ds} checkable renderer={nodeRenderer} />\n      </>\n    );\n  }\n}\n"]}