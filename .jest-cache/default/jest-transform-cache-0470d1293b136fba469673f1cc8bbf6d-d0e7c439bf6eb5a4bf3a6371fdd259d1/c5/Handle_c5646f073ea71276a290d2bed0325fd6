4fcd9368957f1216b16d1fd9ef7db8e7
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _addEventListener = _interopRequireDefault(require("../../_util/addEventListener"));

var Handle =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(Handle, _Component);

  function Handle() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, Handle);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Handle)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      clickFocused: false
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleMouseUp", function () {
      if (document.activeElement === _this.handle) {
        _this.setClickFocus(true);
      }
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleBlur", function () {
      _this.setClickFocus(false);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleKeyDown", function () {
      _this.setClickFocus(false);
    });
    return _this;
  }

  (0, _createClass2["default"])(Handle, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // mouseup won't trigger if mouse moved out of handle,
      // so we listen on document here.
      this.onMouseUpListener = (0, _addEventListener["default"])(document, 'mouseup', this.handleMouseUp);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.onMouseUpListener) {
        this.onMouseUpListener.remove();
      }
    }
  }, {
    key: "setClickFocus",
    value: function setClickFocus(focused) {
      this.setState({
        clickFocused: focused
      });
    }
  }, {
    key: "clickFocus",
    value: function clickFocus() {
      this.setClickFocus(true);
      this.focus();
    }
  }, {
    key: "focus",
    value: function focus() {
      this.handle.focus();
    }
  }, {
    key: "blur",
    value: function blur() {
      this.handle.blur();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          vertical = _this$props.vertical,
          offset = _this$props.offset,
          style = _this$props.style,
          disabled = _this$props.disabled,
          min = _this$props.min,
          max = _this$props.max,
          value = _this$props.value,
          tabIndex = _this$props.tabIndex,
          restProps = (0, _objectWithoutProperties2["default"])(_this$props, ["prefixCls", "vertical", "offset", "style", "disabled", "min", "max", "value", "tabIndex"]);
      var className = (0, _classnames["default"])(this.props.className, (0, _defineProperty2["default"])({}, "".concat(prefixCls, "-handle-click-focused"), this.state.clickFocused));
      var postionStyle = vertical ? {
        bottom: "".concat(offset, "%")
      } : {
        left: "".concat(offset, "%")
      };
      var elStyle = (0, _objectSpread2["default"])({}, style, {}, postionStyle);
      var ariaProps = {};

      if (value !== undefined) {
        ariaProps = (0, _objectSpread2["default"])({}, ariaProps, {
          'aria-valuemin': min,
          'aria-valuemax': max,
          'aria-valuenow': value,
          'aria-disabled': !!disabled
        });
      }

      return _react["default"].createElement("div", (0, _extends2["default"])({
        ref: function ref(node) {
          return _this2.handle = node;
        },
        role: "slider",
        tabIndex: disabled ? null : tabIndex || 0
      }, ariaProps, restProps, {
        className: className,
        style: elStyle,
        onBlur: this.handleBlur,
        onKeyDown: this.handleKeyDown
      }));
    }
  }]);
  return Handle;
}(_react.Component);

exports["default"] = Handle;
(0, _defineProperty2["default"])(Handle, "propTypes", {
  prefixCls: _propTypes["default"].string,
  className: _propTypes["default"].string,
  vertical: _propTypes["default"].bool,
  offset: _propTypes["default"].number,
  style: _propTypes["default"].object,
  disabled: _propTypes["default"].bool,
  min: _propTypes["default"].number,
  max: _propTypes["default"].number,
  value: _propTypes["default"].number,
  tabIndex: _propTypes["default"].number
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhhbmRsZS5qc3giXSwibmFtZXMiOlsiSGFuZGxlIiwiY2xpY2tGb2N1c2VkIiwiZG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiaGFuZGxlIiwic2V0Q2xpY2tGb2N1cyIsIm9uTW91c2VVcExpc3RlbmVyIiwiaGFuZGxlTW91c2VVcCIsInJlbW92ZSIsImZvY3VzZWQiLCJzZXRTdGF0ZSIsImZvY3VzIiwiYmx1ciIsInByb3BzIiwicHJlZml4Q2xzIiwidmVydGljYWwiLCJvZmZzZXQiLCJzdHlsZSIsImRpc2FibGVkIiwibWluIiwibWF4IiwidmFsdWUiLCJ0YWJJbmRleCIsInJlc3RQcm9wcyIsImNsYXNzTmFtZSIsInN0YXRlIiwicG9zdGlvblN0eWxlIiwiYm90dG9tIiwibGVmdCIsImVsU3R5bGUiLCJhcmlhUHJvcHMiLCJ1bmRlZmluZWQiLCJub2RlIiwiaGFuZGxlQmx1ciIsImhhbmRsZUtleURvd24iLCJDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJib29sIiwibnVtYmVyIiwib2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0lBRXFCQSxNOzs7Ozs7Ozs7Ozs7Ozs7Ozs4RkFjWDtBQUNOQyxNQUFBQSxZQUFZLEVBQUU7QUFEUixLO3NHQW9CUSxZQUFNO0FBQ3BCLFVBQUlDLFFBQVEsQ0FBQ0MsYUFBVCxLQUEyQixNQUFLQyxNQUFwQyxFQUE0QztBQUMxQyxjQUFLQyxhQUFMLENBQW1CLElBQW5CO0FBQ0Q7QUFDRixLO21HQUVZLFlBQU07QUFDakIsWUFBS0EsYUFBTCxDQUFtQixLQUFuQjtBQUNELEs7c0dBRWUsWUFBTTtBQUNwQixZQUFLQSxhQUFMLENBQW1CLEtBQW5CO0FBQ0QsSzs7Ozs7O3dDQTVCbUI7QUFDbEI7QUFDQTtBQUNBLFdBQUtDLGlCQUFMLEdBQXlCLGtDQUFpQkosUUFBakIsRUFBMkIsU0FBM0IsRUFBc0MsS0FBS0ssYUFB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dCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgYWRkRXZlbnRMaXN0ZW5lciBmcm9tICcuLi8uLi9fdXRpbC9hZGRFdmVudExpc3RlbmVyJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGFuZGxlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBwcmVmaXhDbHM6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHZlcnRpY2FsOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBvZmZzZXQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIG1pbjogUHJvcFR5cGVzLm51bWJlcixcbiAgICBtYXg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgdmFsdWU6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgdGFiSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gIH07XG5cbiAgc3RhdGUgPSB7XG4gICAgY2xpY2tGb2N1c2VkOiBmYWxzZSxcbiAgfTtcblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAvLyBtb3VzZXVwIHdvbid0IHRyaWdnZXIgaWYgbW91c2UgbW92ZWQgb3V0IG9mIGhhbmRsZSxcbiAgICAvLyBzbyB3ZSBsaXN0ZW4gb24gZG9jdW1lbnQgaGVyZS5cbiAgICB0aGlzLm9uTW91c2VVcExpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcihkb2N1bWVudCwgJ21vdXNldXAnLCB0aGlzLmhhbmRsZU1vdXNlVXApO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMub25Nb3VzZVVwTGlzdGVuZXIpIHtcbiAgICAgIHRoaXMub25Nb3VzZVVwTGlzdGVuZXIucmVtb3ZlKCk7XG4gICAgfVxuICB9XG5cbiAgc2V0Q2xpY2tGb2N1cyhmb2N1c2VkKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGNsaWNrRm9jdXNlZDogZm9jdXNlZCB9KTtcbiAgfVxuXG4gIGhhbmRsZU1vdXNlVXAgPSAoKSA9PiB7XG4gICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IHRoaXMuaGFuZGxlKSB7XG4gICAgICB0aGlzLnNldENsaWNrRm9jdXModHJ1ZSk7XG4gICAgfVxuICB9O1xuXG4gIGhhbmRsZUJsdXIgPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRDbGlja0ZvY3VzKGZhbHNlKTtcbiAgfTtcblxuICBoYW5kbGVLZXlEb3duID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0Q2xpY2tGb2N1cyhmYWxzZSk7XG4gIH07XG5cbiAgY2xpY2tGb2N1cygpIHtcbiAgICB0aGlzLnNldENsaWNrRm9jdXModHJ1ZSk7XG4gICAgdGhpcy5mb2N1cygpO1xuICB9XG5cbiAgZm9jdXMoKSB7XG4gICAgdGhpcy5oYW5kbGUuZm9jdXMoKTtcbiAgfVxuXG4gIGJsdXIoKSB7XG4gICAgdGhpcy5oYW5kbGUuYmx1cigpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHByZWZpeENscyxcbiAgICAgIHZlcnRpY2FsLFxuICAgICAgb2Zmc2V0LFxuICAgICAgc3R5bGUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIG1pbixcbiAgICAgIG1heCxcbiAgICAgIHZhbHVlLFxuICAgICAgdGFiSW5kZXgsXG4gICAgICAuLi5yZXN0UHJvcHNcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IGNsYXNzTmFtZSA9IGNsYXNzTmFtZXModGhpcy5wcm9wcy5jbGFzc05hbWUsIHtcbiAgICAgIFtgJHtwcmVmaXhDbHN9LWhhbmRsZS1jbGljay1mb2N1c2VkYF06IHRoaXMuc3RhdGUuY2xpY2tGb2N1c2VkLFxuICAgIH0pO1xuXG4gICAgY29uc3QgcG9zdGlvblN0eWxlID0gdmVydGljYWwgPyB7IGJvdHRvbTogYCR7b2Zmc2V0fSVgIH0gOiB7IGxlZnQ6IGAke29mZnNldH0lYCB9O1xuICAgIGNvbnN0IGVsU3R5bGUgPSB7XG4gICAgICAuLi5zdHlsZSxcbiAgICAgIC4uLnBvc3Rpb25TdHlsZSxcbiAgICB9O1xuICAgIGxldCBhcmlhUHJvcHMgPSB7fTtcbiAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgYXJpYVByb3BzID0ge1xuICAgICAgICAuLi5hcmlhUHJvcHMsXG4gICAgICAgICdhcmlhLXZhbHVlbWluJzogbWluLFxuICAgICAgICAnYXJpYS12YWx1ZW1heCc6IG1heCxcbiAgICAgICAgJ2FyaWEtdmFsdWVub3cnOiB2YWx1ZSxcbiAgICAgICAgJ2FyaWEtZGlzYWJsZWQnOiAhIWRpc2FibGVkLFxuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICByZWY9e25vZGUgPT4gKHRoaXMuaGFuZGxlID0gbm9kZSl9XG4gICAgICAgIHJvbGU9XCJzbGlkZXJcIlxuICAgICAgICB0YWJJbmRleD17ZGlzYWJsZWQgPyBudWxsIDogdGFiSW5kZXggfHwgMH1cbiAgICAgICAgey4uLmFyaWFQcm9wc31cbiAgICAgICAgey4uLnJlc3RQcm9wc31cbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWV9XG4gICAgICAgIHN0eWxlPXtlbFN0eWxlfVxuICAgICAgICBvbkJsdXI9e3RoaXMuaGFuZGxlQmx1cn1cbiAgICAgICAgb25LZXlEb3duPXt0aGlzLmhhbmRsZUtleURvd259XG4gICAgICAvPlxuICAgICk7XG4gIH1cbn1cbiJdfQ==