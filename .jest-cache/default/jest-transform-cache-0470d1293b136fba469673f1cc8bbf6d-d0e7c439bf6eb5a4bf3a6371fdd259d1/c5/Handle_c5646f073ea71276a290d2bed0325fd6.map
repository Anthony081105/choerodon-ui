{"version":3,"sources":["Handle.jsx"],"names":["Handle","clickFocused","document","activeElement","handle","setClickFocus","onMouseUpListener","handleMouseUp","remove","focused","setState","focus","blur","props","prefixCls","vertical","offset","style","disabled","min","max","value","tabIndex","restProps","className","state","postionStyle","bottom","left","elStyle","ariaProps","undefined","node","handleBlur","handleKeyDown","Component","PropTypes","string","bool","number","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport addEventListener from '../../_util/addEventListener';\n\nexport default class Handle extends Component {\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    vertical: PropTypes.bool,\n    offset: PropTypes.number,\n    style: PropTypes.object,\n    disabled: PropTypes.bool,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    value: PropTypes.number,\n    tabIndex: PropTypes.number,\n  };\n\n  state = {\n    clickFocused: false,\n  };\n\n  componentDidMount() {\n    // mouseup won't trigger if mouse moved out of handle,\n    // so we listen on document here.\n    this.onMouseUpListener = addEventListener(document, 'mouseup', this.handleMouseUp);\n  }\n\n  componentWillUnmount() {\n    if (this.onMouseUpListener) {\n      this.onMouseUpListener.remove();\n    }\n  }\n\n  setClickFocus(focused) {\n    this.setState({ clickFocused: focused });\n  }\n\n  handleMouseUp = () => {\n    if (document.activeElement === this.handle) {\n      this.setClickFocus(true);\n    }\n  };\n\n  handleBlur = () => {\n    this.setClickFocus(false);\n  };\n\n  handleKeyDown = () => {\n    this.setClickFocus(false);\n  };\n\n  clickFocus() {\n    this.setClickFocus(true);\n    this.focus();\n  }\n\n  focus() {\n    this.handle.focus();\n  }\n\n  blur() {\n    this.handle.blur();\n  }\n\n  render() {\n    const {\n      prefixCls,\n      vertical,\n      offset,\n      style,\n      disabled,\n      min,\n      max,\n      value,\n      tabIndex,\n      ...restProps\n    } = this.props;\n\n    const className = classNames(this.props.className, {\n      [`${prefixCls}-handle-click-focused`]: this.state.clickFocused,\n    });\n\n    const postionStyle = vertical ? { bottom: `${offset}%` } : { left: `${offset}%` };\n    const elStyle = {\n      ...style,\n      ...postionStyle,\n    };\n    let ariaProps = {};\n    if (value !== undefined) {\n      ariaProps = {\n        ...ariaProps,\n        'aria-valuemin': min,\n        'aria-valuemax': max,\n        'aria-valuenow': value,\n        'aria-disabled': !!disabled,\n      };\n    }\n\n    return (\n      <div\n        ref={node => (this.handle = node)}\n        role=\"slider\"\n        tabIndex={disabled ? null : tabIndex || 0}\n        {...ariaProps}\n        {...restProps}\n        className={className}\n        style={elStyle}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n      />\n    );\n  }\n}\n"]}