ea078b9a17b5b6227e55d4c9f5583e66
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _TreeTest = _interopRequireDefault(require("./TreeTest"));

var setupByMount = function setupByMount() {
  var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_TreeTest["default"], null));
  return {
    wrapper: wrapper
  };
};

describe('Tree-pro', function () {
  beforeEach(function () {
    jest.useFakeTimers();
  });
  afterEach(function () {
    jest.useRealTimers();
  });
  it('should have a input', function () {
    var _setupByMount = setupByMount(),
        wrapper = _setupByMount.wrapper;

    expect(wrapper.find('input').length).toBe(1);
  });
  it('should input value is equal to one', function () {
    var _setupByMount2 = setupByMount(),
        wrapper = _setupByMount2.wrapper;

    wrapper.find('.c7n-tree-node-content-wrapper').simulate('click');
    jest.runAllTimers();
    expect(wrapper.find('NumberField').prop('value')).toBe(1);
    expect(wrapper).toMatchSnapshot();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRlc3QuanMiXSwibmFtZXMiOlsic2V0dXBCeU1vdW50Iiwid3JhcHBlciIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsImplc3QiLCJ1c2VGYWtlVGltZXJzIiwiYWZ0ZXJFYWNoIiwidXNlUmVhbFRpbWVycyIsIml0IiwiZXhwZWN0IiwiZmluZCIsImxlbmd0aCIsInRvQmUiLCJzaW11bGF0ZSIsInJ1bkFsbFRpbWVycyIsInByb3AiLCJ0b01hdGNoU25hcHNob3QiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxZQUFZLEdBQUcsU0FBZkEsWUFBZSxHQUFNO0FBQ3pCLE1BQU1DLE9BQU8sR0FBRyxtQkFBTSxnQ0FBQyxvQkFBRCxPQUFOLENBQWhCO0FBQ0EsU0FBTztBQUNMQSxJQUFBQSxPQUFPLEVBQVBBO0FBREssR0FBUDtBQUdELENBTEQ7O0FBT0FDLFFBQVEsQ0FBQyxVQUFELEVBQWEsWUFBTTtBQUN6QkMsRUFBQUEsVUFBVSxDQUFDLFlBQU07QUFDZkMsSUFBQUEsSUFBSSxDQUFDQyxhQUFMO0FBQ0QsR0FGUyxDQUFWO0FBSUFDLEVBQUFBLFNBQVMsQ0FBQyxZQUFNO0FBQ2RGLElBQUFBLElBQUksQ0FBQ0csYUFBTDtBQUNELEdBRlEsQ0FBVDtBQUlBQyxFQUFBQSxFQUFFLENBQUMscUJBQUQsRUFBd0IsWUFBTTtBQUFBLHdCQUNWUixZQUFZLEVBREY7QUFBQSxRQUN0QkMsT0FEc0IsaUJBQ3RCQSxPQURzQjs7QUFFOUJRLElBQUFBLE1BQU0sQ0FBQ1IsT0FBTyxDQUFDUyxJQUFSLENBQWEsT0FBYixFQUFzQkMsTUFBdkIsQ0FBTixDQUFxQ0MsSUFBckMsQ0FBMEMsQ0FBMUM7QUFDRCxHQUhDLENBQUY7QUFLQUosRUFBQUEsRUFBRSxDQUFDLG9DQUFELEVBQXVDLFlBQU07QUFBQSx5QkFDekJSLFlBQVksRUFEYTtBQUFBLFFBQ3JDQyxPQURxQyxrQkFDckNBLE9BRHFDOztBQUU3Q0EsSUFBQUEsT0FBTyxDQUFDUyxJQUFSLENBQWEsZ0NBQWIsRUFBK0NHLFFBQS9DLENBQXdELE9BQXhEO0FBQ0FULElBQUFBLElBQUksQ0FBQ1UsWUFBTDtBQUNBTCxJQUFBQSxNQUFNLENBQUNSLE9BQU8sQ0FBQ1MsSUFBUixDQUFhLGFBQWIsRUFBNEJLLElBQTVCLENBQWlDLE9BQWpDLENBQUQsQ0FBTixDQUFrREgsSUFBbEQsQ0FBdUQsQ0FBdkQ7QUFDQUgsSUFBQUEsTUFBTSxDQUFDUixPQUFELENBQU4sQ0FBZ0JlLGVBQWhCO0FBQ0QsR0FOQyxDQUFGO0FBT0QsQ0FyQk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtb3VudCB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgVHJlZVRlc3QgZnJvbSAnLi9UcmVlVGVzdCc7XG5cbmNvbnN0IHNldHVwQnlNb3VudCA9ICgpID0+IHtcbiAgY29uc3Qgd3JhcHBlciA9IG1vdW50KDxUcmVlVGVzdCAvPik7XG4gIHJldHVybiB7XG4gICAgd3JhcHBlcixcbiAgfTtcbn07XG5cbmRlc2NyaWJlKCdUcmVlLXBybycsICgpID0+IHtcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgamVzdC51c2VGYWtlVGltZXJzKCk7XG4gIH0pO1xuXG4gIGFmdGVyRWFjaCgoKSA9PiB7XG4gICAgamVzdC51c2VSZWFsVGltZXJzKCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgaGF2ZSBhIGlucHV0JywgKCkgPT4ge1xuICAgIGNvbnN0IHsgd3JhcHBlciB9ID0gc2V0dXBCeU1vdW50KCk7XG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnaW5wdXQnKS5sZW5ndGgpLnRvQmUoMSk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgaW5wdXQgdmFsdWUgaXMgZXF1YWwgdG8gb25lJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgd3JhcHBlciB9ID0gc2V0dXBCeU1vdW50KCk7XG4gICAgd3JhcHBlci5maW5kKCcuYzduLXRyZWUtbm9kZS1jb250ZW50LXdyYXBwZXInKS5zaW11bGF0ZSgnY2xpY2snKTtcbiAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJ051bWJlckZpZWxkJykucHJvcCgndmFsdWUnKSkudG9CZSgxKTtcbiAgICBleHBlY3Qod3JhcHBlcikudG9NYXRjaFNuYXBzaG90KCk7XG4gIH0pO1xufSk7XG4iXX0=