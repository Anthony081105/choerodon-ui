{"version":3,"sources":["index.test.js"],"names":["setupByMount","wrapper","describe","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","it","expect","find","length","toBe","simulate","runAllTimers","prop","toMatchSnapshot"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,OAAO,GAAG,mBAAM,gCAAC,oBAAD,OAAN,CAAhB;AACA,SAAO;AACLA,IAAAA,OAAO,EAAPA;AADK,GAAP;AAGD,CALD;;AAOAC,QAAQ,CAAC,UAAD,EAAa,YAAM;AACzBC,EAAAA,UAAU,CAAC,YAAM;AACfC,IAAAA,IAAI,CAACC,aAAL;AACD,GAFS,CAAV;AAIAC,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,IAAI,CAACG,aAAL;AACD,GAFQ,CAAT;AAIAC,EAAAA,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAAA,wBACVR,YAAY,EADF;AAAA,QACtBC,OADsB,iBACtBA,OADsB;;AAE9BQ,IAAAA,MAAM,CAACR,OAAO,CAACS,IAAR,CAAa,OAAb,EAAsBC,MAAvB,CAAN,CAAqCC,IAArC,CAA0C,CAA1C;AACD,GAHC,CAAF;AAKAJ,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAAA,yBACzBR,YAAY,EADa;AAAA,QACrCC,OADqC,kBACrCA,OADqC;;AAE7CA,IAAAA,OAAO,CAACS,IAAR,CAAa,gCAAb,EAA+CG,QAA/C,CAAwD,OAAxD;AACAT,IAAAA,IAAI,CAACU,YAAL;AACAL,IAAAA,MAAM,CAACR,OAAO,CAACS,IAAR,CAAa,aAAb,EAA4BK,IAA5B,CAAiC,OAAjC,CAAD,CAAN,CAAkDH,IAAlD,CAAuD,CAAvD;AACAH,IAAAA,MAAM,CAACR,OAAD,CAAN,CAAgBe,eAAhB;AACD,GANC,CAAF;AAOD,CArBO,CAAR","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport TreeTest from './TreeTest';\n\nconst setupByMount = () => {\n  const wrapper = mount(<TreeTest />);\n  return {\n    wrapper,\n  };\n};\n\ndescribe('Tree-pro', () => {\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  it('should have a input', () => {\n    const { wrapper } = setupByMount();\n    expect(wrapper.find('input').length).toBe(1);\n  });\n\n  it('should input value is equal to one', () => {\n    const { wrapper } = setupByMount();\n    wrapper.find('.c7n-tree-node-content-wrapper').simulate('click');\n    jest.runAllTimers();\n    expect(wrapper.find('NumberField').prop('value')).toBe(1);\n    expect(wrapper).toMatchSnapshot();\n  });\n});\n"]}