{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/alert/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, CSSProperties, MouseEventHandler, ReactNode } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport Animate from '../animate';\nimport { getPrefixCls } from '../configure';\n\nexport interface AlertProps {\n  /**\n   * Type of Alert styles, options:`success`, `info`, `warning`, `error`\n   */\n  type?: 'success' | 'info' | 'warning' | 'error';\n  /** Whether Alert can be closed */\n  closable?: boolean;\n  /** Close text to show */\n  closeText?: ReactNode;\n  /** Content of Alert */\n  message: ReactNode;\n  /** Additional content of Alert */\n  description?: ReactNode;\n  /** Callback when close Alert */\n  onClose?: MouseEventHandler<HTMLAnchorElement>;\n  /** Trigger when animation ending of Alert */\n  afterClose?: () => void;\n  /** Whether to show icon */\n  showIcon?: boolean;\n  iconType?: string;\n  style?: CSSProperties;\n  prefixCls?: string;\n  className?: string;\n  banner?: boolean;\n}\n\nexport default class Alert extends Component<AlertProps, any> {\n  static displayName = 'Alert';\n\n  state = {\n    closing: true,\n    closed: false,\n  };\n\n  handleClose = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    const dom = findDOMNode(this) as HTMLElement;\n    dom.style.height = `${dom.offsetHeight}px`;\n    // Magic code\n    // 重复一次后才能正确设置 height\n    dom.style.height = `${dom.offsetHeight}px`;\n\n    this.setState({\n      closing: false,\n    });\n    const { onClose } = this.props;\n    if (onClose) {\n      onClose(e);\n    }\n  };\n\n  animationEnd = () => {\n    this.setState({\n      closed: true,\n      closing: true,\n    });\n    const { afterClose } = this.props;\n    if (afterClose) {\n      afterClose();\n    }\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      description,\n      prefixCls: customizePrefixCls,\n      message,\n      closeText,\n      banner,\n      className = '',\n      style,\n    } = props;\n    let { closable, showIcon, type, iconType } = props;\n    const { closing, closed } = this.state;\n    const prefixCls = getPrefixCls('alert', customizePrefixCls);\n\n    // banner模式默认有 Icon\n    showIcon = banner && showIcon === undefined ? true : showIcon;\n    // banner模式默认为警告\n    type = banner && type === undefined ? 'warning' : type || 'info';\n\n    if (!iconType) {\n      switch (type) {\n        case 'success':\n          iconType = 'check_circle';\n          break;\n        case 'info':\n          iconType = 'info';\n          break;\n        case 'error':\n          iconType = 'error';\n          break;\n        case 'warning':\n          iconType = 'warning';\n          break;\n        default:\n          iconType = 'default';\n      }\n    }\n\n    const alertCls = classNames(\n      prefixCls,\n      {\n        [`${prefixCls}-${type}`]: true,\n        [`${prefixCls}-close`]: !closing,\n        [`${prefixCls}-with-description`]: !!description,\n        [`${prefixCls}-no-icon`]: !showIcon,\n        [`${prefixCls}-banner`]: !!banner,\n      },\n      className,\n    );\n\n    // closeable when closeText is assigned\n    if (closeText) {\n      closable = true;\n    }\n\n    const closeIcon = closable ? (\n      <a onClick={this.handleClose} className={`${prefixCls}-close-icon`}>\n        {closeText || <Icon type=\"close\" />}\n      </a>\n    ) : null;\n\n    return closed ? null : (\n      <Animate\n        component=\"\"\n        hiddenProp=\"hidden\"\n        transitionName={`${prefixCls}-slide-up`}\n        onEnd={this.animationEnd}\n      >\n        <div hidden={!closing} className={alertCls} style={style}>\n          {showIcon ? <Icon className={`${prefixCls}-icon`} type={iconType} /> : null}\n          <span className={`${prefixCls}-message`}>{message}</span>\n          <span className={`${prefixCls}-description`}>{description}</span>\n          {closeIcon}\n        </div>\n      </Animate>\n    );\n  }\n}\n"]}