{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/align/domAlign.tsx"],"names":[],"mappings":"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","sourcesContent":["import { pxToRem } from '../_util/UnitConvertor';\n\ntype overflowType = { adjustX?: boolean; adjustY?: boolean };\ntype regionType = { left: number; top: number; width: number; height: number };\ntype positionType = { left: number; top: number };\n\nfunction isFailX(elFuturePos, elRegion, visibleRect) {\n  return (\n    elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right\n  );\n}\n\nfunction isFailY(elFuturePos, elRegion, visibleRect) {\n  return (\n    elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom\n  );\n}\n\nfunction isCompleteFailX(elFuturePos, elRegion, visibleRect) {\n  return (\n    elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left\n  );\n}\n\nfunction isCompleteFailY(elFuturePos, elRegion, visibleRect) {\n  return (\n    elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top\n  );\n}\n\nfunction getVisibleRectForElement() {\n  const body = document.body;\n  return {\n    top: 0,\n    right: body.clientWidth,\n    bottom: body.clientHeight,\n    left: 0,\n  };\n}\n\nfunction getRegion(node): regionType {\n  const rect = node.getBoundingClientRect();\n  return {\n    top: rect.top,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n\nfunction isOutOfVisibleRect(target) {\n  const visibleRect = getVisibleRectForElement();\n  const targetRegion = getRegion(target);\n\n  return (\n    !visibleRect ||\n    targetRegion.left + targetRegion.width <= visibleRect.left ||\n    targetRegion.top + targetRegion.height <= visibleRect.top ||\n    targetRegion.left >= visibleRect.right ||\n    targetRegion.top >= visibleRect.bottom\n  );\n}\n\nfunction flip(points, reg, map) {\n  return points.map(p => p.replace(reg, m => map[m]));\n}\n\nfunction flipOffset(offset, index) {\n  offset[index] = -offset[index];\n  return offset;\n}\n\nfunction getAlignOffset(region, align) {\n  const V = align.charAt(0);\n  const H = align.charAt(1);\n  const w = region.width;\n  const h = region.height;\n\n  let x = region.left;\n  let y = region.top;\n\n  if (V === 'c') {\n    y += h / 2;\n  } else if (V === 'b') {\n    y += h;\n  }\n\n  if (H === 'c') {\n    x += w / 2;\n  } else if (H === 'r') {\n    x += w;\n  }\n\n  return {\n    left: x,\n    top: y,\n  };\n}\n\nfunction getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset): positionType {\n  const p1 = getAlignOffset(refNodeRegion, points[1]);\n  const p2 = getAlignOffset(elRegion, points[0]);\n  const diff = [p2.left - p1.left, p2.top - p1.top];\n\n  return {\n    left: elRegion.left - diff[0] + offset[0] - targetOffset[0],\n    top: elRegion.top - diff[1] + offset[1] - targetOffset[1],\n  };\n}\n\nfunction adjustForViewport(\n  elFuturePos: positionType,\n  elRegion: regionType,\n  visibleRect,\n  overflow,\n): regionType {\n  const pos = { ...elFuturePos };\n  const size = {\n    width: elRegion.width,\n    height: elRegion.height,\n  };\n\n  if (overflow.adjustX && pos.left < visibleRect.left) {\n    pos.left = visibleRect.left;\n  }\n\n  // Left edge inside and right edge outside viewport, try to resize it.\n  if (\n    overflow.resizeWidth &&\n    pos.left >= visibleRect.left &&\n    pos.left + size.width > visibleRect.right\n  ) {\n    size.width -= pos.left + size.width - visibleRect.right;\n  }\n\n  // Right edge outside viewport, try to move it.\n  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {\n    // 保证左边界和可视区域左边界对齐\n    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);\n  }\n\n  // Top edge outside viewport, try to move it.\n  if (overflow.adjustY && pos.top < visibleRect.top) {\n    pos.top = visibleRect.top;\n  }\n\n  // Top edge inside and bottom edge outside viewport, try to resize it.\n  if (\n    overflow.resizeHeight &&\n    pos.top >= visibleRect.top &&\n    pos.top + size.height > visibleRect.bottom\n  ) {\n    size.height -= pos.top + size.height - visibleRect.bottom;\n  }\n\n  // Bottom edge outside viewport, try to move it.\n  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {\n    // 保证上边界和可视区域上边界对齐\n    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);\n  }\n\n  return Object.assign(pos, size);\n}\n\nfunction isFixedPosition(node) {\n  const { offsetParent } = node;\n  if (\n    offsetParent === document.body &&\n    document.defaultView &&\n    document.defaultView.getComputedStyle(node).position !== 'fixed'\n  ) {\n    return false;\n  }\n  if (offsetParent === null) {\n    return true;\n  }\n  return isFixedPosition(offsetParent);\n}\n\nexport default function(el, refNode, align) {\n  let points = align.points;\n  let offset = (align.offset || [0, 0]).slice();\n  let targetOffset = (align.targetOffset || [0, 0]).slice();\n  const overflow: overflowType = align.overflow || {};\n  const target = align.target || refNode;\n  const source = align.source || el;\n  const newOverflowCfg: overflowType = {};\n  let fail = 0;\n  const visibleRect = getVisibleRectForElement();\n  const elRegion = getRegion(source);\n  const refNodeRegion = getRegion(target);\n  let elFuturePos = getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset);\n  let newElRegion = Object.assign(elRegion, elFuturePos);\n\n  const isTargetNotOutOfVisible = !isOutOfVisibleRect(target);\n\n  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTargetNotOutOfVisible) {\n    if (overflow.adjustX) {\n      if (isFailX(elFuturePos, elRegion, visibleRect)) {\n        const newPoints = flip(points, /[lr]/gi, {\n          l: 'r',\n          r: 'l',\n        });\n        const newOffset = flipOffset(offset, 0);\n        const newTargetOffset = flipOffset(targetOffset, 0);\n        const newElFuturePos = getElFuturePos(\n          elRegion,\n          refNodeRegion,\n          newPoints,\n          newOffset,\n          newTargetOffset,\n        );\n\n        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = newPoints;\n          offset = newOffset;\n          targetOffset = newTargetOffset;\n        }\n      }\n    }\n\n    if (overflow.adjustY) {\n      if (isFailY(elFuturePos, elRegion, visibleRect)) {\n        const _newPoints = flip(points, /[tb]/gi, {\n          t: 'b',\n          b: 't',\n        });\n        const _newOffset = flipOffset(offset, 1);\n        const _newTargetOffset = flipOffset(targetOffset, 1);\n        const _newElFuturePos = getElFuturePos(\n          elRegion,\n          refNodeRegion,\n          _newPoints,\n          _newOffset,\n          _newTargetOffset,\n        );\n\n        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = _newPoints;\n          offset = _newOffset;\n          targetOffset = _newTargetOffset;\n        }\n      }\n    }\n\n    if (fail) {\n      elFuturePos = getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset);\n      Object.assign(newElRegion, elFuturePos);\n    }\n\n    newOverflowCfg.adjustX = overflow.adjustX && isFailX(elFuturePos, elRegion, visibleRect);\n\n    newOverflowCfg.adjustY = overflow.adjustY && isFailY(elFuturePos, elRegion, visibleRect);\n\n    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {\n      newElRegion = adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);\n    }\n  }\n\n  if (newElRegion.width !== elRegion.width) {\n    source.style.width = newElRegion.width;\n  }\n\n  if (newElRegion.height !== elRegion.height) {\n    source.style.height = newElRegion.height;\n  }\n\n  const isTargetFixed = isFixedPosition(target);\n  const scrollTop = isTargetFixed\n    ? 0\n    : document.documentElement.scrollTop || document.body.scrollTop;\n  const scrollLeft = isTargetFixed\n    ? 0\n    : document.documentElement.scrollLeft || document.body.scrollLeft;\n\n  Object.assign(source.style, {\n    left: pxToRem(newElRegion.left + scrollLeft),\n    top: pxToRem(newElRegion.top + scrollTop),\n  });\n\n  if (isTargetFixed) {\n    source.style.position = 'fixed';\n  } else {\n    source.style.position = '';\n  }\n\n  return {\n    points,\n    offset,\n    targetOffset,\n    overflow: newOverflowCfg,\n  };\n}\n"]}