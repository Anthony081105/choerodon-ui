2822b55f7962e35c29c59fd0118a73b9
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _ = _interopRequireDefault(require(".."));

var RangePicker = _["default"].RangePicker;
describe('DatePicker with showTime', function () {
  it('should trigger onChange when select value', function () {
    var onChangeFn = jest.fn();
    var onOpenChangeFn = jest.fn();
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], {
      showTime: true,
      open: true,
      onChange: onChangeFn,
      onOpenChange: onOpenChangeFn
    }));
    var calendarWrapper = (0, _enzyme.mount)(wrapper.find('Trigger').instance().getComponent());
    calendarWrapper.find('.c7n-calendar-date').at(0).simulate('click');
    expect(onChangeFn).toHaveBeenCalled();
    expect(onOpenChangeFn).not.toHaveBeenCalled();
  });
  it('should trigger onOk when press ok button', function () {
    var onOkFn = jest.fn();
    var onOpenChangeFn = jest.fn();
    var onChangeFn = jest.fn();
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], {
      showTime: true,
      open: true,
      onChange: onChangeFn,
      onOk: onOkFn,
      onOpenChange: onOpenChangeFn
    }));
    var calendarWrapper = (0, _enzyme.mount)(wrapper.find('Trigger').instance().getComponent());
    calendarWrapper.find('.c7n-calendar-ok-btn').simulate('click');
    expect(onOkFn).toHaveBeenCalled();
    expect(onOpenChangeFn).toHaveBeenCalledWith(false);
    expect(onChangeFn).not.toHaveBeenCalled();
  });
  it('should trigger onChange when click Now link', function () {
    var onOpenChangeFn = jest.fn();
    var onChangeFn = jest.fn();
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], {
      showTime: true,
      open: true,
      onChange: onChangeFn,
      onOpenChange: onOpenChangeFn
    }));
    var calendarWrapper = (0, _enzyme.mount)(wrapper.find('Trigger').instance().getComponent());
    calendarWrapper.find('.c7n-calendar-today-btn').simulate('click');
    expect(onOpenChangeFn).toHaveBeenCalledWith(false);
    expect(onChangeFn).toHaveBeenCalled();
  });
  it('should have correct className when use12Hours is true', function () {
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(_["default"], {
      showTime: {
        use12Hours: true
      },
      open: true
    }));
    var calendarWrapper = (0, _enzyme.mount)(wrapper.find('Trigger').instance().getComponent());
    expect(calendarWrapper.find('.c7n-calendar-time-picker-column-4').length).toBe(0);
    calendarWrapper.find('.c7n-calendar-time-picker-btn').at(0).simulate('click');
    expect(calendarWrapper.find('.c7n-calendar-time-picker-column-4').hostNodes().length).toBe(1);
  });
});
describe('RangePicker with showTime', function () {
  it('should trigger onChange when select value', function () {
    var onChangeFn = jest.fn();
    var onOpenChangeFn = jest.fn();
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(RangePicker, {
      showTime: true,
      open: true,
      onChange: onChangeFn,
      onOpenChange: onOpenChangeFn
    }));
    var calendarWrapper = (0, _enzyme.mount)(wrapper.find('Trigger').instance().getComponent());
    expect(calendarWrapper.find('.c7n-calendar-time-picker-btn').hasClass('c7n-calendar-time-picker-btn-disabled')).toBe(true);
    expect(calendarWrapper.find('.c7n-calendar-ok-btn').hasClass('c7n-calendar-ok-btn-disabled')).toBe(true);
    calendarWrapper.find('.c7n-calendar-date').at(10).simulate('click');
    calendarWrapper.find('.c7n-calendar-date').at(11).simulate('click');
    expect(calendarWrapper.find('.c7n-calendar-time-picker-btn').hasClass('c7n-calendar-time-picker-btn-disabled')).toBe(false);
    expect(calendarWrapper.find('.c7n-calendar-ok-btn').hasClass('c7n-calendar-ok-btn-disabled')).toBe(false);
    expect(onChangeFn).toHaveBeenCalled();
    expect(onOpenChangeFn).not.toHaveBeenCalled();
  });
  it('hould trigger onOk when press ok button', function () {
    var onOkFn = jest.fn();
    var onChangeFn = jest.fn();
    var onOpenChangeFn = jest.fn();
    var wrapper = (0, _enzyme.mount)(_react["default"].createElement(RangePicker, {
      showTime: true,
      open: true,
      onOk: onOkFn,
      onChange: onChangeFn,
      onOpenChange: onOpenChangeFn
    }));
    var calendarWrapper = (0, _enzyme.mount)(wrapper.find('Trigger').instance().getComponent());
    calendarWrapper.find('.c7n-calendar-date').at(10).simulate('click');
    calendarWrapper.find('.c7n-calendar-date').at(11).simulate('click');
    onChangeFn.mockClear();
    calendarWrapper.find('.c7n-calendar-ok-btn').simulate('click');
    expect(onOkFn).toHaveBeenCalled();
    expect(onOpenChangeFn).toHaveBeenCalledWith(false);
    expect(onChangeFn).not.toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,