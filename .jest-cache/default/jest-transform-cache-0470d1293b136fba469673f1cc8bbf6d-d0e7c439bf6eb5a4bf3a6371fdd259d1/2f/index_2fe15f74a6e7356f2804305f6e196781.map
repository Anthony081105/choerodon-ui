{"version":3,"sources":["tabs/index.jsx"],"names":["Tabs","Component","onEdit","e","onChange","NO_FLEX","tabNode","customizePrefixCls","className","size","type","tabPosition","children","tabBarStyle","hideAdd","onTabClick","onPrevClick","onNextClick","animated","tabBarGutter","tabBarExtraContent","prefixCls","inkBarAnimated","tabPaneAnimated","isCard","cls","childrenWithClose","Children","closable","child","closeIcon","tab","key","createNewTab","renderTabBar","handleChange","TabPane"],"mappings":"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","sourcesContent":["import React, { Children, cloneElement, Component, } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport warning from '../_util/warning';\nimport isFlexSupported from '../_util/isFlexSupported';\nimport RcTabs, { TabContent, TabPane } from '../rc-components/tabs';\nimport ScrollableInkTabBar from '../rc-components/tabs/ScrollableInkTabBar';\nimport { generateKey } from '../rc-components/tabs/utils';\nimport { getPrefixCls } from '../configure';\nexport default class Tabs extends Component {\n    constructor() {\n        super(...arguments);\n        this.createNewTab = targetKey => {\n            const { onEdit } = this.props;\n            if (onEdit) {\n                onEdit(targetKey, 'add');\n            }\n        };\n        this.removeTab = (targetKey, e) => {\n            e.stopPropagation();\n            if (!targetKey) {\n                return;\n            }\n            const { onEdit } = this.props;\n            if (onEdit) {\n                onEdit(targetKey, 'remove');\n            }\n        };\n        this.handleChange = (activeKey) => {\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(activeKey);\n            }\n        };\n    }\n    componentDidMount() {\n        const NO_FLEX = ' no-flex';\n        const tabNode = findDOMNode(this);\n        if (tabNode && !isFlexSupported() && tabNode.className.indexOf(NO_FLEX) === -1) {\n            tabNode.className += NO_FLEX;\n        }\n    }\n    render() {\n        const { prefixCls: customizePrefixCls, className = '', size, type = \"line\" /* line */, tabPosition, children, tabBarStyle, hideAdd, onTabClick, onPrevClick, onNextClick, animated = true, tabBarGutter, } = this.props;\n        let { tabBarExtraContent } = this.props;\n        const prefixCls = getPrefixCls('tabs', customizePrefixCls);\n        const inkBarAnimated = typeof animated === 'object' ? animated.inkBar : animated;\n        let tabPaneAnimated = typeof animated === 'object' ? animated.tabPane : animated;\n        // card tabs should not have animation\n        if (type !== \"line\" /* line */) {\n            tabPaneAnimated = 'animated' in this.props ? tabPaneAnimated : false;\n        }\n        const isCard = type === \"card\" /* card */ || type === \"editable-card\" /* 'editable-card' */;\n        warning(!(isCard && (size === \"small\" /* small */ || size === \"large\" /* large */)), \"Tabs[type=card|editable-card] doesn't have small or large size, it's by designed.\");\n        const cls = classNames(className, `${prefixCls}-${type}`, {\n            [`${prefixCls}-vertical`]: tabPosition === \"left\" /* left */ || tabPosition === \"right\" /* right */,\n            [`${prefixCls}-${size}`]: !!size,\n            [`${prefixCls}-card`]: isCard,\n            [`${prefixCls}-no-animation`]: !tabPaneAnimated,\n        });\n        // only card type tabs can be added and closed\n        let childrenWithClose = [];\n        if (type === \"editable-card\" /* 'editable-card' */) {\n            childrenWithClose = [];\n            Children.forEach(children, (child, index) => {\n                let closable = child.props.closable;\n                closable = typeof closable === 'undefined' ? true : closable;\n                const closeIcon = closable ? (<Icon type=\"close\" onClick={e => this.removeTab(child.key, e)}/>) : null;\n                childrenWithClose.push(cloneElement(child, {\n                    tab: (<div className={closable ? undefined : `${prefixCls}-tab-unclosable`}>\n                {child.props.tab}\n                {closeIcon}\n              </div>),\n                    key: generateKey(child.key, index),\n                }));\n            });\n            // Add new tab handler\n            if (!hideAdd) {\n                tabBarExtraContent = (<span>\n            <Icon type=\"plus\" className={`${prefixCls}-new-tab`} onClick={this.createNewTab}/>\n            {tabBarExtraContent}\n          </span>);\n            }\n        }\n        tabBarExtraContent = tabBarExtraContent ? (<div className={`${prefixCls}-extra-content`}>{tabBarExtraContent}</div>) : null;\n        const renderTabBar = () => (<ScrollableInkTabBar inkBarAnimated={inkBarAnimated} extraContent={tabBarExtraContent} onTabClick={onTabClick} onPrevClick={onPrevClick} onNextClick={onNextClick} style={tabBarStyle} tabBarGutter={tabBarGutter}/>);\n        return (<RcTabs {...this.props} prefixCls={prefixCls} className={cls} tabBarPosition={tabPosition} renderTabBar={renderTabBar} renderTabContent={() => <TabContent animated={tabPaneAnimated} animatedWithMargin/>} onChange={this.handleChange}>\n        {childrenWithClose.length > 0 ? childrenWithClose : children}\n      </RcTabs>);\n    }\n}\nTabs.displayName = 'Tabs';\nTabs.TabPane = TabPane;\nTabs.defaultProps = {\n    hideAdd: false,\n};\n"]}