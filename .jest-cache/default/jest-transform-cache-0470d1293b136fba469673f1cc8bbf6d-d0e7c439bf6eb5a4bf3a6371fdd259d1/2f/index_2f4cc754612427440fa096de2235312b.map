{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components/tag/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, CSSProperties, MouseEventHandler } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport Icon from '../icon';\nimport CheckableTag from './CheckableTag';\nimport Animate from '../animate';\nimport { getPrefixCls } from '../configure';\n\nexport { CheckableTagProps } from './CheckableTag';\n\nexport interface TagProps {\n  prefixCls?: string;\n  className?: string;\n  color?: string;\n  /** 标签是否可以关闭 */\n  closable?: boolean;\n  /** 关闭时的回调 */\n  onClose?: Function;\n  /** 动画关闭后的回调 */\n  afterClose?: Function;\n  style?: CSSProperties;\n}\n\nexport interface TagState {\n  closing: boolean;\n  closed: boolean;\n}\n\nexport default class Tag extends Component<TagProps, TagState> {\n  static displayName = 'Tag';\n\n  static CheckableTag = CheckableTag;\n\n  static defaultProps = {\n    closable: false,\n  };\n\n  state = {\n    closing: false,\n    closed: false,\n  };\n\n  close: MouseEventHandler<HTMLElement> = e => {\n    const { onClose } = this.props;\n    if (onClose) {\n      onClose(e);\n    }\n    if (e.defaultPrevented) {\n      return;\n    }\n    const dom = findDOMNode(this) as HTMLElement;\n    dom.style.width = `${dom.getBoundingClientRect().width}px`;\n    // It's Magic Code, don't know why\n    dom.style.width = `${dom.getBoundingClientRect().width}px`;\n    this.setState({\n      closing: true,\n    });\n  };\n\n  animationEnd = (_: string, existed: boolean) => {\n    const { closed } = this.state;\n    if (!existed && !closed) {\n      this.setState({\n        closed: true,\n        closing: false,\n      });\n      const { afterClose } = this.props;\n\n      if (afterClose) {\n        afterClose();\n      }\n    }\n  };\n\n  isPresetColor(color?: string): boolean {\n    if (!color) {\n      return false;\n    }\n    return /^(pink|red|yellow|orange|cyan|green|blue|purple|geekblue|magenta|volcano|gold|lime)(-inverse)?$/.test(\n      color,\n    );\n  }\n\n  render() {\n    const {\n      prefixCls: customizePrefixCls,\n      closable,\n      color,\n      className,\n      children,\n      style,\n      ...otherProps\n    } = this.props;\n    const prefixCls = getPrefixCls('tag', customizePrefixCls);\n    const { closing, closed } = this.state;\n    const closeIcon = closable ? <Icon type=\"close\" onClick={this.close} /> : '';\n    const isPresetColor = this.isPresetColor(color);\n    const classString = classNames(\n      prefixCls,\n      {\n        [`${prefixCls}-${color}`]: isPresetColor,\n        [`${prefixCls}-has-color`]: color && !isPresetColor,\n        [`${prefixCls}-close`]: closing,\n      },\n      className,\n    );\n    // fix https://fb.me/react-unknown-prop\n    const divProps = omit(otherProps, ['onClose', 'afterClose']);\n    const tagStyle: CSSProperties = {\n      ...style,\n    };\n    if (color && !isPresetColor) {\n      tagStyle.backgroundColor = color;\n    }\n    const tag = closed ? null : (\n      <div hidden={closing} {...divProps} className={classString} style={tagStyle}>\n        {children}\n        {closeIcon}\n      </div>\n    );\n    return (\n      <Animate\n        component=\"\"\n        hiddenProp=\"hidden\"\n        transitionName={`${prefixCls}-zoom`}\n        transitionAppear\n        onEnd={this.animationEnd}\n      >\n        {tag}\n      </Animate>\n    );\n  }\n}\n"]}