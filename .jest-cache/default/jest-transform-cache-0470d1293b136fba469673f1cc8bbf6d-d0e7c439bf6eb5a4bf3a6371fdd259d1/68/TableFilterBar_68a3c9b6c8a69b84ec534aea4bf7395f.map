{"version":3,"sources":["/Users/huihuawk/Documents/opt/choerodon-ui/components-pro/table/query-bar/TableFilterBar.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;IAcqB,c;;;;;;;;;;;;mCAOP;AAAA,UACF,SADE,GACY,KAAK,KADjB,CACF,SADE;AAEV,aAAO,gCAAC,wBAAD;AAAc,QAAA,SAAS,EAAE;AAAzB,QAAP;AACD;;;iCAES;AAAA,wBACuB,KAAK,KAD5B;AAAA,UACA,SADA,eACA,SADA;AAAA,UACW,OADX,eACW,OADX;;AAER,UAAI,OAAO,CAAC,MAAZ,EAAoB;AAClB,eACE;AAAK,UAAA,GAAG,EAAC,SAAT;AAAmB,UAAA,SAAS,YAAK,SAAL;AAA5B,WACE;AAAM,UAAA,SAAS,YAAK,SAAL;AAAf,WAAuD,OAAvD,CADF,CADF;AAKD;AACF;;;6BAEK;AAAA,yBAC6E,KAAK,KADlF;AAAA,UACI,SADJ,gBACI,SADJ;AAAA,UACe,OADf,gBACe,OADf;AAAA,UACwB,YADxB,gBACwB,YADxB;AAAA,UACsC,SADtC,gBACsC,SADtC;AAAA,UACiD,WADjD,gBACiD,WADjD;AAAA,UAC8D,UAD9D,gBAC8D,UAD9D;AAEJ,UAAM,OAAO,GAAG,KAAK,UAAL,EAAhB;AACA,aAAO,CACL,OADK,EAEL,UAFK,EAGL,gCAAC,wBAAD;AACE,QAAA,GAAG,EAAC,QADN;AAEE,QAAA,SAAS,YAAK,SAAL,mBAFX;AAGE,QAAA,aAAa,EAAE,OAHjB;AAIE,QAAA,YAAY,EAAE,YAJhB;AAKE,QAAA,WAAW,EAAE,WALf;AAME,QAAA,MAAM,EAAE,KAAK,YAAL,EANV;AAOE,QAAA,SAAS,EAAE;AAPb,QAHK,CAAP;AAaD;;;EAvCyC,oB;;;AACnC,cAAA,CAAA,YAAA,GAAe;AACpB,EAAA,SAAS,EAAE,gCAAgB,OAAhB,CADS;AAEpB,EAAA,SAAS,EAAE,QAFS;AAGpB,EAAA,WAAW,EAAE,uBAAG,OAAH,EAAY,wBAAZ;AAHO,CAAf","sourcesContent":["import React, { PureComponent, ReactElement, ReactNode } from 'react';\nimport { getProPrefixCls } from 'choerodon-ui/lib/configure';\nimport FilterSelect from './FilterSelect';\nimport ColumnFilter from './ColumnFilter';\nimport DataSet from '../../data-set/DataSet';\nimport { $l } from '../../locale-context';\nimport { ButtonProps } from '../../button/Button';\nimport { PaginationProps } from '../../pagination/Pagination';\n\nexport interface FilterBarProps {\n  prefixCls?: string;\n  placeholder?: string;\n  dataSet: DataSet;\n  queryDataSet?: DataSet;\n  paramName: string;\n  buttons: ReactElement<ButtonProps>[];\n  pagination?: ReactElement<PaginationProps>;\n}\n\nexport default class TableFilterBar extends PureComponent<FilterBarProps, any> {\n  static defaultProps = {\n    prefixCls: getProPrefixCls('table'),\n    paramName: 'params',\n    placeholder: $l('Table', 'filter_bar_placeholder'),\n  };\n\n  renderSuffix() {\n    const { prefixCls } = this.props;\n    return <ColumnFilter prefixCls={prefixCls} />;\n  }\n\n  getButtons(): ReactNode {\n    const { prefixCls, buttons } = this.props;\n    if (buttons.length) {\n      return (\n        <div key=\"toolbar\" className={`${prefixCls}-toolbar`}>\n          <span className={`${prefixCls}-toolbar-button-group`}>{buttons}</span>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { prefixCls, dataSet, queryDataSet, paramName, placeholder, pagination } = this.props;\n    const buttons = this.getButtons();\n    return [\n      buttons,\n      pagination,\n      <FilterSelect\n        key=\"filter\"\n        prefixCls={`${prefixCls}-filter-select`}\n        optionDataSet={dataSet}\n        queryDataSet={queryDataSet}\n        placeholder={placeholder}\n        suffix={this.renderSuffix()}\n        paramName={paramName}\n      />,\n    ];\n  }\n}\n"]}