import buildURL from 'axios/lib/helpers/buildURL';
export function buildSortedURL(...args) {
    const builtURL = buildURL(...args);
    const [urlPath, queryString] = builtURL.split('?');
    if (queryString) {
        const paramsPair = queryString.split('&');
        return `${urlPath}?${paramsPair.sort().join('&')}`;
    }
    return builtURL;
}
export function buildURLWithAxiosConfig(config) {
    const { data, url, params, paramsSerializer } = config;
    const builtURL = buildSortedURL(url, params, paramsSerializer);
    if (data) {
        return `${builtURL}|${JSON.stringify(data)}`;
    }
    return builtURL;
}
export function isCacheLike(cache) {
    return !!(cache.set &&
        cache.get &&
        cache.del &&
        typeof cache.get === 'function' &&
        typeof cache.set === 'function' &&
        typeof cache.del === 'function');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2h1aWh1YXdrL0RvY3VtZW50cy9vcHQvY2hvZXJvZG9uLXVpL2NvbXBvbmVudHMtcHJvL2F4aW9zL3V0aWxzLnRzeCIsIm1hcHBpbmdzIjoiQUFBQSxPQUFPLFFBQVEsTUFBTSw0QkFBNEIsQ0FBQztBQUdsRCxNQUFNLFVBQVUsY0FBYyxDQUFDLEdBQUcsSUFBVztJQUMzQyxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztJQUVuQyxNQUFNLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFbkQsSUFBSSxXQUFXLEVBQUU7UUFDZixNQUFNLFVBQVUsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzFDLE9BQU8sR0FBRyxPQUFPLElBQUksVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO0tBQ3BEO0lBRUQsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUVELE1BQU0sVUFBVSx1QkFBdUIsQ0FBQyxNQUEwQjtJQUNoRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsR0FBRyxNQUFNLENBQUM7SUFDdkQsTUFBTSxRQUFRLEdBQUcsY0FBYyxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztJQUMvRCxJQUFJLElBQUksRUFBRTtRQUNSLE9BQU8sR0FBRyxRQUFRLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO0tBQzlDO0lBQ0QsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUVELE1BQU0sVUFBVSxXQUFXLENBQUMsS0FBVTtJQUNwQyxPQUFPLENBQUMsQ0FBQyxDQUNQLEtBQUssQ0FBQyxHQUFHO1FBQ1QsS0FBSyxDQUFDLEdBQUc7UUFDVCxLQUFLLENBQUMsR0FBRztRQUNULE9BQU8sS0FBSyxDQUFDLEdBQUcsS0FBSyxVQUFVO1FBQy9CLE9BQU8sS0FBSyxDQUFDLEdBQUcsS0FBSyxVQUFVO1FBQy9CLE9BQU8sS0FBSyxDQUFDLEdBQUcsS0FBSyxVQUFVLENBQ2hDLENBQUM7QUFDSixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9odWlodWF3ay9Eb2N1bWVudHMvb3B0L2Nob2Vyb2Rvbi11aS9jb21wb25lbnRzLXByby9heGlvcy91dGlscy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJ1aWxkVVJMIGZyb20gJ2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMJztcbmltcG9ydCB7IEF4aW9zUmVxdWVzdENvbmZpZyB9IGZyb20gJ2F4aW9zJztcblxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkU29ydGVkVVJMKC4uLmFyZ3M6IGFueVtdKSB7XG4gIGNvbnN0IGJ1aWx0VVJMID0gYnVpbGRVUkwoLi4uYXJncyk7XG5cbiAgY29uc3QgW3VybFBhdGgsIHF1ZXJ5U3RyaW5nXSA9IGJ1aWx0VVJMLnNwbGl0KCc/Jyk7XG5cbiAgaWYgKHF1ZXJ5U3RyaW5nKSB7XG4gICAgY29uc3QgcGFyYW1zUGFpciA9IHF1ZXJ5U3RyaW5nLnNwbGl0KCcmJyk7XG4gICAgcmV0dXJuIGAke3VybFBhdGh9PyR7cGFyYW1zUGFpci5zb3J0KCkuam9pbignJicpfWA7XG4gIH1cblxuICByZXR1cm4gYnVpbHRVUkw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBidWlsZFVSTFdpdGhBeGlvc0NvbmZpZyhjb25maWc6IEF4aW9zUmVxdWVzdENvbmZpZykge1xuICBjb25zdCB7IGRhdGEsIHVybCwgcGFyYW1zLCBwYXJhbXNTZXJpYWxpemVyIH0gPSBjb25maWc7XG4gIGNvbnN0IGJ1aWx0VVJMID0gYnVpbGRTb3J0ZWRVUkwodXJsLCBwYXJhbXMsIHBhcmFtc1NlcmlhbGl6ZXIpO1xuICBpZiAoZGF0YSkge1xuICAgIHJldHVybiBgJHtidWlsdFVSTH18JHtKU09OLnN0cmluZ2lmeShkYXRhKX1gO1xuICB9XG4gIHJldHVybiBidWlsdFVSTDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQ2FjaGVMaWtlKGNhY2hlOiBhbnkpIHtcbiAgcmV0dXJuICEhKFxuICAgIGNhY2hlLnNldCAmJlxuICAgIGNhY2hlLmdldCAmJlxuICAgIGNhY2hlLmRlbCAmJlxuICAgIHR5cGVvZiBjYWNoZS5nZXQgPT09ICdmdW5jdGlvbicgJiZcbiAgICB0eXBlb2YgY2FjaGUuc2V0ID09PSAnZnVuY3Rpb24nICYmXG4gICAgdHlwZW9mIGNhY2hlLmRlbCA9PT0gJ2Z1bmN0aW9uJ1xuICApO1xufVxuIl0sInZlcnNpb24iOjN9