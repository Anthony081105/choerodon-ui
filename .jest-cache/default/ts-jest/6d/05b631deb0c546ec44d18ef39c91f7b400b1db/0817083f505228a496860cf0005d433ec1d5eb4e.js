import { isMoment } from 'moment';
import isEmpty from '../../_util/isEmpty';
import ValidationResult from '../ValidationResult';
import { $l } from '../../locale-context';
import { toRangeValue } from '../../field/utils';
/* eslint-disable */
const emailReg = /^([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x22([^\x0d\x22\x5c\x80-\xff]|\x5c[\x00-\x7f])*\x22)(\x2e([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x22([^\x0d\x22\x5c\x80-\xff]|\x5c[\x00-\x7f])*\x22))*\x40([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x5b([^\x0d\x5b-\x5d\x80-\xff]|\x5c[\x00-\x7f])*\x5d)(\x2e([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x5b([^\x0d\x5b-\x5d\x80-\xff]|\x5c[\x00-\x7f])*\x5d))*$/;
const urlReg = /^(?:(?:https?|HTTPS?|ftp|FTP):\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-zA-Z\u00a1-\uffff0-9]-*)*[a-zA-Z\u00a1-\uffff0-9]+)(?:\.(?:[a-zA-Z\u00a1-\uffff0-9]-*)*[a-zA-Z\u00a1-\uffff0-9]+)*)(?::\d{2,5})?(?:[\/?#]\S*)?$/;
const colorRgbaReg = /^[rR][gG][Bb][Aa]?\((\s*(2[0-4][0-9]|25[0-5]|[01]?[0-9][0-9]?)\s*,){2}\s*(2[0-4][0-9]|25[0-5]|[01]?[0-9][0-9]?)\s*,?\s*(0?\.\d{1,2}|1|0)?\s*\){1}$/;
const colorHexReg = /^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$/;
/* eslint-enable */
const isNotDate = (value, range) => {
    if (range) {
        return toRangeValue(value, range).some(item => !isEmpty(item) && (!isMoment(item) || !item.isValid()));
    }
    return !isMoment(value) || !value.isValid();
};
const types = {
    ["email" /* email */]: [value => !emailReg.test(value), 'EmailField'],
    ["url" /* url */]: [value => !urlReg.test(value), 'UrlField'],
    ["color" /* color */]: [
        value => !(colorRgbaReg.test(value) || colorHexReg.test(value)),
        'ColorPicker',
    ],
    ["date" /* date */]: [isNotDate, 'DatePicker'],
    ["dateTime" /* dateTime */]: [isNotDate, 'DatePicker'],
    ["week" /* week */]: [isNotDate, 'DatePicker'],
    ["month" /* month */]: [isNotDate, 'DatePicker'],
    ["year" /* year */]: [isNotDate, 'DatePicker'],
    ["time" /* time */]: [isNotDate, 'DatePicker'],
};
export default function typeMismatch(value, props) {
    const { type, defaultValidationMessages, range } = props;
    if (!isEmpty(value) && type) {
        const validateType = types[type];
        if (validateType) {
            const [validate, component] = validateType;
            if (validate(value, range)) {
                const ruleName = 'typeMismatch';
                const { [ruleName]: validationMessage = $l(component, 'type_mismatch'), } = defaultValidationMessages;
                return new ValidationResult({
                    validationMessage,
                    value,
                    ruleName,
                });
            }
        }
    }
    return true;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2h1aWh1YXdrL0RvY3VtZW50cy9vcHQvY2hvZXJvZG9uLXVpL2NvbXBvbmVudHMtcHJvL3ZhbGlkYXRvci9ydWxlcy90eXBlTWlzbWF0Y2gudHN4IiwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDbEMsT0FBTyxPQUFPLE1BQU0scUJBQXFCLENBQUM7QUFDMUMsT0FBTyxnQkFBZ0IsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFHMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWpELG9CQUFvQjtBQUNwQixNQUFNLFFBQVEsR0FBRyxnZ0JBQWdnQixDQUFDO0FBQ2xoQixNQUFNLE1BQU0sR0FBRywwYkFBMGIsQ0FBQztBQUMxYyxNQUFNLFlBQVksR0FBRyxvSkFBb0osQ0FBQztBQUMxSyxNQUFNLFdBQVcsR0FBRyxvQ0FBb0MsQ0FBQztBQUN6RCxtQkFBbUI7QUFFbkIsTUFBTSxTQUFTLEdBQUcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEVBQUU7SUFDakMsSUFBSSxLQUFLLEVBQUU7UUFDVCxPQUFPLFlBQVksQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUNwQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FDL0QsQ0FBQztLQUNIO0lBQ0QsT0FBTyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUM5QyxDQUFDLENBQUM7QUFFRixNQUFNLEtBQUssR0FFUDtJQUNGLHFCQUFpQixFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsWUFBWSxDQUFDO0lBQ2pFLGlCQUFlLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxVQUFVLENBQUM7SUFDM0QscUJBQWlCLEVBQUU7UUFDakIsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQy9ELGFBQWE7S0FDZDtJQUNELG1CQUFnQixFQUFFLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQztJQUMzQywyQkFBb0IsRUFBRSxDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUM7SUFDL0MsbUJBQWdCLEVBQUUsQ0FBQyxTQUFTLEVBQUUsWUFBWSxDQUFDO0lBQzNDLHFCQUFpQixFQUFFLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQztJQUM1QyxtQkFBZ0IsRUFBRSxDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUM7SUFDM0MsbUJBQWdCLEVBQUUsQ0FBQyxTQUFTLEVBQUUsWUFBWSxDQUFDO0NBQzVDLENBQUM7QUFFRixNQUFNLENBQUMsT0FBTyxVQUFVLFlBQVksQ0FBQyxLQUFVLEVBQUUsS0FBcUI7SUFDcEUsTUFBTSxFQUFFLElBQUksRUFBRSx5QkFBeUIsRUFBRSxLQUFLLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFDekQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLEVBQUU7UUFDM0IsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2pDLElBQUksWUFBWSxFQUFFO1lBQ2hCLE1BQU0sQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLEdBQUcsWUFBWSxDQUFDO1lBQzNDLElBQUksUUFBUSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsRUFBRTtnQkFDMUIsTUFBTSxRQUFRLEdBQUcsY0FBYyxDQUFDO2dCQUNoQyxNQUFNLEVBQ0osQ0FBQyxRQUFRLENBQUMsRUFBRSxpQkFBaUIsR0FBRyxFQUFFLENBQUMsU0FBUyxFQUFFLGVBQWUsQ0FBQyxHQUMvRCxHQUFHLHlCQUF5QixDQUFDO2dCQUM5QixPQUFPLElBQUksZ0JBQWdCLENBQUM7b0JBQzFCLGlCQUFpQjtvQkFDakIsS0FBSztvQkFDTCxRQUFRO2lCQUNULENBQUMsQ0FBQzthQUNKO1NBQ0Y7S0FDRjtJQUNELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvaHVpaHVhd2svRG9jdW1lbnRzL29wdC9jaG9lcm9kb24tdWkvY29tcG9uZW50cy1wcm8vdmFsaWRhdG9yL3J1bGVzL3R5cGVNaXNtYXRjaC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNNb21lbnQgfSBmcm9tICdtb21lbnQnO1xuaW1wb3J0IGlzRW1wdHkgZnJvbSAnLi4vLi4vX3V0aWwvaXNFbXB0eSc7XG5pbXBvcnQgVmFsaWRhdGlvblJlc3VsdCBmcm9tICcuLi9WYWxpZGF0aW9uUmVzdWx0JztcbmltcG9ydCB7ICRsIH0gZnJvbSAnLi4vLi4vbG9jYWxlLWNvbnRleHQnO1xuaW1wb3J0IHsgRmllbGRUeXBlIH0gZnJvbSAnLi4vLi4vZGF0YS1zZXQvZW51bSc7XG5pbXBvcnQgeyBtZXRob2RSZXR1cm4sIFZhbGlkYXRvclByb3BzIH0gZnJvbSAnLic7XG5pbXBvcnQgeyB0b1JhbmdlVmFsdWUgfSBmcm9tICcuLi8uLi9maWVsZC91dGlscyc7XG5cbi8qIGVzbGludC1kaXNhYmxlICovXG5jb25zdCBlbWFpbFJlZyA9IC9eKFteXFx4MDAtXFx4MjBcXHgyMlxceDI4XFx4MjlcXHgyY1xceDJlXFx4M2EtXFx4M2NcXHgzZVxceDQwXFx4NWItXFx4NWRcXHg3Zi1cXHhmZl0rfFxceDIyKFteXFx4MGRcXHgyMlxceDVjXFx4ODAtXFx4ZmZdfFxceDVjW1xceDAwLVxceDdmXSkqXFx4MjIpKFxceDJlKFteXFx4MDAtXFx4MjBcXHgyMlxceDI4XFx4MjlcXHgyY1xceDJlXFx4M2EtXFx4M2NcXHgzZVxceDQwXFx4NWItXFx4NWRcXHg3Zi1cXHhmZl0rfFxceDIyKFteXFx4MGRcXHgyMlxceDVjXFx4ODAtXFx4ZmZdfFxceDVjW1xceDAwLVxceDdmXSkqXFx4MjIpKSpcXHg0MChbXlxceDAwLVxceDIwXFx4MjJcXHgyOFxceDI5XFx4MmNcXHgyZVxceDNhLVxceDNjXFx4M2VcXHg0MFxceDViLVxceDVkXFx4N2YtXFx4ZmZdK3xcXHg1YihbXlxceDBkXFx4NWItXFx4NWRcXHg4MC1cXHhmZl18XFx4NWNbXFx4MDAtXFx4N2ZdKSpcXHg1ZCkoXFx4MmUoW15cXHgwMC1cXHgyMFxceDIyXFx4MjhcXHgyOVxceDJjXFx4MmVcXHgzYS1cXHgzY1xceDNlXFx4NDBcXHg1Yi1cXHg1ZFxceDdmLVxceGZmXSt8XFx4NWIoW15cXHgwZFxceDViLVxceDVkXFx4ODAtXFx4ZmZdfFxceDVjW1xceDAwLVxceDdmXSkqXFx4NWQpKSokLztcbmNvbnN0IHVybFJlZyA9IC9eKD86KD86aHR0cHM/fEhUVFBTP3xmdHB8RlRQKTpcXC9cXC8pKD86XFxTKyg/OjpcXFMqKT9AKT8oPzooPyEoPzoxMHwxMjcpKD86XFwuXFxkezEsM30pezN9KSg/ISg/OjE2OVxcLjI1NHwxOTJcXC4xNjgpKD86XFwuXFxkezEsM30pezJ9KSg/ITE3MlxcLig/OjFbNi05XXwyXFxkfDNbMC0xXSkoPzpcXC5cXGR7MSwzfSl7Mn0pKD86WzEtOV1cXGQ/fDFcXGRcXGR8MlswMV1cXGR8MjJbMC0zXSkoPzpcXC4oPzoxP1xcZHsxLDJ9fDJbMC00XVxcZHwyNVswLTVdKSl7Mn0oPzpcXC4oPzpbMS05XVxcZD98MVxcZFxcZHwyWzAtNF1cXGR8MjVbMC00XSkpfCg/Oig/OlthLXpBLVpcXHUwMGExLVxcdWZmZmYwLTldLSopKlthLXpBLVpcXHUwMGExLVxcdWZmZmYwLTldKykoPzpcXC4oPzpbYS16QS1aXFx1MDBhMS1cXHVmZmZmMC05XS0qKSpbYS16QS1aXFx1MDBhMS1cXHVmZmZmMC05XSspKikoPzo6XFxkezIsNX0pPyg/OltcXC8/I11cXFMqKT8kLztcbmNvbnN0IGNvbG9yUmdiYVJlZyA9IC9eW3JSXVtnR11bQmJdW0FhXT9cXCgoXFxzKigyWzAtNF1bMC05XXwyNVswLTVdfFswMV0/WzAtOV1bMC05XT8pXFxzKiwpezJ9XFxzKigyWzAtNF1bMC05XXwyNVswLTVdfFswMV0/WzAtOV1bMC05XT8pXFxzKiw/XFxzKigwP1xcLlxcZHsxLDJ9fDF8MCk/XFxzKlxcKXsxfSQvO1xuY29uc3QgY29sb3JIZXhSZWcgPSAvXiMoWzAtOWEtZkEtRl17Nn18WzAtOWEtZkEtRl17M30pJC87XG4vKiBlc2xpbnQtZW5hYmxlICovXG5cbmNvbnN0IGlzTm90RGF0ZSA9ICh2YWx1ZSwgcmFuZ2UpID0+IHtcbiAgaWYgKHJhbmdlKSB7XG4gICAgcmV0dXJuIHRvUmFuZ2VWYWx1ZSh2YWx1ZSwgcmFuZ2UpLnNvbWUoXG4gICAgICBpdGVtID0+ICFpc0VtcHR5KGl0ZW0pICYmICghaXNNb21lbnQoaXRlbSkgfHwgIWl0ZW0uaXNWYWxpZCgpKSxcbiAgICApO1xuICB9XG4gIHJldHVybiAhaXNNb21lbnQodmFsdWUpIHx8ICF2YWx1ZS5pc1ZhbGlkKCk7XG59O1xuXG5jb25zdCB0eXBlczoge1xuICBba2V5OiBzdHJpbmddOiBbKCh2YWx1ZTogYW55LCByYW5nZT86IGJvb2xlYW4gfCBbc3RyaW5nLCBzdHJpbmddKSA9PiBib29sZWFuKSwgc3RyaW5nXTtcbn0gPSB7XG4gIFtGaWVsZFR5cGUuZW1haWxdOiBbdmFsdWUgPT4gIWVtYWlsUmVnLnRlc3QodmFsdWUpLCAnRW1haWxGaWVsZCddLFxuICBbRmllbGRUeXBlLnVybF06IFt2YWx1ZSA9PiAhdXJsUmVnLnRlc3QodmFsdWUpLCAnVXJsRmllbGQnXSxcbiAgW0ZpZWxkVHlwZS5jb2xvcl06IFtcbiAgICB2YWx1ZSA9PiAhKGNvbG9yUmdiYVJlZy50ZXN0KHZhbHVlKSB8fCBjb2xvckhleFJlZy50ZXN0KHZhbHVlKSksXG4gICAgJ0NvbG9yUGlja2VyJyxcbiAgXSxcbiAgW0ZpZWxkVHlwZS5kYXRlXTogW2lzTm90RGF0ZSwgJ0RhdGVQaWNrZXInXSxcbiAgW0ZpZWxkVHlwZS5kYXRlVGltZV06IFtpc05vdERhdGUsICdEYXRlUGlja2VyJ10sXG4gIFtGaWVsZFR5cGUud2Vla106IFtpc05vdERhdGUsICdEYXRlUGlja2VyJ10sXG4gIFtGaWVsZFR5cGUubW9udGhdOiBbaXNOb3REYXRlLCAnRGF0ZVBpY2tlciddLFxuICBbRmllbGRUeXBlLnllYXJdOiBbaXNOb3REYXRlLCAnRGF0ZVBpY2tlciddLFxuICBbRmllbGRUeXBlLnRpbWVdOiBbaXNOb3REYXRlLCAnRGF0ZVBpY2tlciddLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHlwZU1pc21hdGNoKHZhbHVlOiBhbnksIHByb3BzOiBWYWxpZGF0b3JQcm9wcyk6IG1ldGhvZFJldHVybiB7XG4gIGNvbnN0IHsgdHlwZSwgZGVmYXVsdFZhbGlkYXRpb25NZXNzYWdlcywgcmFuZ2UgfSA9IHByb3BzO1xuICBpZiAoIWlzRW1wdHkodmFsdWUpICYmIHR5cGUpIHtcbiAgICBjb25zdCB2YWxpZGF0ZVR5cGUgPSB0eXBlc1t0eXBlXTtcbiAgICBpZiAodmFsaWRhdGVUeXBlKSB7XG4gICAgICBjb25zdCBbdmFsaWRhdGUsIGNvbXBvbmVudF0gPSB2YWxpZGF0ZVR5cGU7XG4gICAgICBpZiAodmFsaWRhdGUodmFsdWUsIHJhbmdlKSkge1xuICAgICAgICBjb25zdCBydWxlTmFtZSA9ICd0eXBlTWlzbWF0Y2gnO1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgW3J1bGVOYW1lXTogdmFsaWRhdGlvbk1lc3NhZ2UgPSAkbChjb21wb25lbnQsICd0eXBlX21pc21hdGNoJyksXG4gICAgICAgIH0gPSBkZWZhdWx0VmFsaWRhdGlvbk1lc3NhZ2VzO1xuICAgICAgICByZXR1cm4gbmV3IFZhbGlkYXRpb25SZXN1bHQoe1xuICAgICAgICAgIHZhbGlkYXRpb25NZXNzYWdlLFxuICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgIHJ1bGVOYW1lLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG4iXSwidmVyc2lvbiI6M30=