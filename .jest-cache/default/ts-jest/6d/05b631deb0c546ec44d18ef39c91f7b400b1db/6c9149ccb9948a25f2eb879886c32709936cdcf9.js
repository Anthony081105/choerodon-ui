import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import Dialog from './Dialog';
import ContainerRender from '../util/ContainerRender';
import Portal from '../util/Portal';
const IS_REACT_16 = 'createPortal' in ReactDOM;
class DialogWrap extends Component {
    constructor() {
        super(...arguments);
        this.saveDialog = (node) => {
            this._component = node;
        };
        this.getComponent = (extra = {}) => {
            return React.createElement(Dialog, Object.assign({ ref: this.saveDialog }, this.props, extra, { key: "dialog" }));
        };
        this.getContainer = () => {
            const { getContainer } = this.props;
            if (getContainer) {
                return getContainer(this);
            }
            const container = document.createElement('div');
            document.body.appendChild(container);
            return container;
        };
    }
    shouldComponentUpdate({ visible }) {
        const { props } = this;
        return !!(props.visible || visible);
    }
    componentWillUnmount() {
        if (IS_REACT_16) {
            return;
        }
        const { visible } = this.props;
        if (visible) {
            this.renderComponent({
                afterClose: this.removeContainer,
                onClose() { },
                visible: false,
            });
        }
        else {
            this.removeContainer();
        }
    }
    render() {
        const { visible } = this.props;
        let portal = null;
        if (!IS_REACT_16) {
            const container = ({ renderComponent, removeContainer, }) => {
                this.renderComponent = renderComponent;
                this.removeContainer = removeContainer;
                return null;
            };
            return (React.createElement(ContainerRender, { parent: this, visible: visible, autoDestroy: false, getComponent: this.getComponent, getContainer: this.getContainer }, container));
        }
        if (visible || this._component) {
            portal = React.createElement(Portal, { getContainer: this.getContainer }, this.getComponent());
        }
        return portal;
    }
}
DialogWrap.defaultProps = {
    visible: false,
};
export default DialogWrap;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2h1aWh1YXdrL0RvY3VtZW50cy9vcHQvY2hvZXJvZG9uLXVpL2NvbXBvbmVudHMvcmMtY29tcG9uZW50cy9kaWFsb2cvRGlhbG9nV3JhcC50c3giLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLEVBQUUsRUFBRSxTQUFTLEVBQWdCLE1BQU0sT0FBTyxDQUFDO0FBQ3ZELE9BQU8sUUFBUSxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLE1BQU0sTUFBTSxVQUFVLENBQUM7QUFFOUIsT0FBTyxlQUFlLE1BQU0seUJBQXlCLENBQUM7QUFDdEQsT0FBTyxNQUFNLE1BQU0sZ0JBQWdCLENBQUM7QUFFcEMsTUFBTSxXQUFXLEdBQUcsY0FBYyxJQUFJLFFBQVEsQ0FBQztBQUUvQyxNQUFNLFVBQVcsU0FBUSxTQUFnQztJQUF6RDs7UUFnQ0UsZUFBVSxHQUFHLENBQUMsSUFBUyxFQUFFLEVBQUU7WUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDekIsQ0FBQyxDQUFDO1FBRUYsaUJBQVksR0FBRyxDQUFDLEtBQUssR0FBRyxFQUFFLEVBQUUsRUFBRTtZQUM1QixPQUFPLG9CQUFDLE1BQU0sa0JBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxVQUFVLElBQU0sSUFBSSxDQUFDLEtBQUssRUFBTSxLQUFLLElBQUUsR0FBRyxFQUFDLFFBQVEsSUFBRyxDQUFDO1FBQ2xGLENBQUMsQ0FBQztRQUVGLGlCQUFZLEdBQUcsR0FBRyxFQUFFO1lBQ2xCLE1BQU0sRUFBRSxZQUFZLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1lBQ3BDLElBQUksWUFBWSxFQUFFO2dCQUNoQixPQUFPLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUMzQjtZQUNELE1BQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDaEQsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDckMsT0FBTyxTQUFTLENBQUM7UUFDbkIsQ0FBQyxDQUFDO0lBc0NKLENBQUM7SUEzRUMscUJBQXFCLENBQUMsRUFBRSxPQUFPLEVBQXdCO1FBQ3JELE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDdkIsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFRCxvQkFBb0I7UUFDbEIsSUFBSSxXQUFXLEVBQUU7WUFDZixPQUFPO1NBQ1I7UUFDRCxNQUFNLEVBQUUsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUMvQixJQUFJLE9BQU8sRUFBRTtZQUNYLElBQUksQ0FBQyxlQUFlLENBQUM7Z0JBQ25CLFVBQVUsRUFBRSxJQUFJLENBQUMsZUFBZTtnQkFDaEMsT0FBTyxLQUFJLENBQUM7Z0JBQ1osT0FBTyxFQUFFLEtBQUs7YUFDZixDQUFDLENBQUM7U0FDSjthQUFNO1lBQ0wsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1NBQ3hCO0lBQ0gsQ0FBQztJQW9CRCxNQUFNO1FBQ0osTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFFL0IsSUFBSSxNQUFNLEdBQVEsSUFBSSxDQUFDO1FBRXZCLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDaEIsTUFBTSxTQUFTLEdBQUcsQ0FBQyxFQUNqQixlQUFlLEVBQ2YsZUFBZSxHQUloQixFQUFFLEVBQUU7Z0JBQ0gsSUFBSSxDQUFDLGVBQWUsR0FBRyxlQUFlLENBQUM7Z0JBQ3ZDLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO2dCQUN2QyxPQUFPLElBQUksQ0FBQztZQUNkLENBQUMsQ0FBQztZQUNGLE9BQU8sQ0FDTCxvQkFBQyxlQUFlLElBQ2QsTUFBTSxFQUFFLElBQUksRUFDWixPQUFPLEVBQUUsT0FBTyxFQUNoQixXQUFXLEVBQUUsS0FBSyxFQUNsQixZQUFZLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFDL0IsWUFBWSxFQUFFLElBQUksQ0FBQyxZQUFZLElBRTlCLFNBQVMsQ0FDTSxDQUNuQixDQUFDO1NBQ0g7UUFFRCxJQUFJLE9BQU8sSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQzlCLE1BQU0sR0FBRyxvQkFBQyxNQUFNLElBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxZQUFZLElBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFVLENBQUM7U0FDbEY7UUFFRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDOztBQXBGTSx1QkFBWSxHQUFHO0lBQ3BCLE9BQU8sRUFBRSxLQUFLO0NBQ2YsQ0FBQztBQXFGSixlQUFlLFVBQVUsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvaHVpaHVhd2svRG9jdW1lbnRzL29wdC9jaG9lcm9kb24tdWkvY29tcG9uZW50cy9yYy1jb21wb25lbnRzL2RpYWxvZy9EaWFsb2dXcmFwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50LCBSZWFjdEVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBEaWFsb2cgZnJvbSAnLi9EaWFsb2cnO1xuaW1wb3J0IElEaWFsb2dQcm9wVHlwZXMgZnJvbSAnLi9JRGlhbG9nUHJvcFR5cGVzJztcbmltcG9ydCBDb250YWluZXJSZW5kZXIgZnJvbSAnLi4vdXRpbC9Db250YWluZXJSZW5kZXInO1xuaW1wb3J0IFBvcnRhbCBmcm9tICcuLi91dGlsL1BvcnRhbCc7XG5cbmNvbnN0IElTX1JFQUNUXzE2ID0gJ2NyZWF0ZVBvcnRhbCcgaW4gUmVhY3RET007XG5cbmNsYXNzIERpYWxvZ1dyYXAgZXh0ZW5kcyBDb21wb25lbnQ8SURpYWxvZ1Byb3BUeXBlcywgYW55PiB7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgdmlzaWJsZTogZmFsc2UsXG4gIH07XG5cbiAgX2NvbXBvbmVudDogUmVhY3RFbGVtZW50PGFueT47XG5cbiAgcmVuZGVyQ29tcG9uZW50OiAocHJvcHM6IGFueSkgPT4gdm9pZDtcblxuICByZW1vdmVDb250YWluZXI6ICgpID0+IHZvaWQ7XG5cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlKHsgdmlzaWJsZSB9OiB7IHZpc2libGU6IGJvb2xlYW4gfSkge1xuICAgIGNvbnN0IHsgcHJvcHMgfSA9IHRoaXM7XG4gICAgcmV0dXJuICEhKHByb3BzLnZpc2libGUgfHwgdmlzaWJsZSk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAoSVNfUkVBQ1RfMTYpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgeyB2aXNpYmxlIH0gPSB0aGlzLnByb3BzO1xuICAgIGlmICh2aXNpYmxlKSB7XG4gICAgICB0aGlzLnJlbmRlckNvbXBvbmVudCh7XG4gICAgICAgIGFmdGVyQ2xvc2U6IHRoaXMucmVtb3ZlQ29udGFpbmVyLFxuICAgICAgICBvbkNsb3NlKCkge30sXG4gICAgICAgIHZpc2libGU6IGZhbHNlLFxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQ29udGFpbmVyKCk7XG4gICAgfVxuICB9XG5cbiAgc2F2ZURpYWxvZyA9IChub2RlOiBhbnkpID0+IHtcbiAgICB0aGlzLl9jb21wb25lbnQgPSBub2RlO1xuICB9O1xuXG4gIGdldENvbXBvbmVudCA9IChleHRyYSA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIDxEaWFsb2cgcmVmPXt0aGlzLnNhdmVEaWFsb2d9IHsuLi50aGlzLnByb3BzfSB7Li4uZXh0cmF9IGtleT1cImRpYWxvZ1wiIC8+O1xuICB9O1xuXG4gIGdldENvbnRhaW5lciA9ICgpID0+IHtcbiAgICBjb25zdCB7IGdldENvbnRhaW5lciB9ID0gdGhpcy5wcm9wcztcbiAgICBpZiAoZ2V0Q29udGFpbmVyKSB7XG4gICAgICByZXR1cm4gZ2V0Q29udGFpbmVyKHRoaXMpO1xuICAgIH1cbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyB2aXNpYmxlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgbGV0IHBvcnRhbDogYW55ID0gbnVsbDtcblxuICAgIGlmICghSVNfUkVBQ1RfMTYpIHtcbiAgICAgIGNvbnN0IGNvbnRhaW5lciA9ICh7XG4gICAgICAgIHJlbmRlckNvbXBvbmVudCxcbiAgICAgICAgcmVtb3ZlQ29udGFpbmVyLFxuICAgICAgfToge1xuICAgICAgICByZW5kZXJDb21wb25lbnQ6IGFueTtcbiAgICAgICAgcmVtb3ZlQ29udGFpbmVyOiBhbnk7XG4gICAgICB9KSA9PiB7XG4gICAgICAgIHRoaXMucmVuZGVyQ29tcG9uZW50ID0gcmVuZGVyQ29tcG9uZW50O1xuICAgICAgICB0aGlzLnJlbW92ZUNvbnRhaW5lciA9IHJlbW92ZUNvbnRhaW5lcjtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPENvbnRhaW5lclJlbmRlclxuICAgICAgICAgIHBhcmVudD17dGhpc31cbiAgICAgICAgICB2aXNpYmxlPXt2aXNpYmxlfVxuICAgICAgICAgIGF1dG9EZXN0cm95PXtmYWxzZX1cbiAgICAgICAgICBnZXRDb21wb25lbnQ9e3RoaXMuZ2V0Q29tcG9uZW50fVxuICAgICAgICAgIGdldENvbnRhaW5lcj17dGhpcy5nZXRDb250YWluZXJ9XG4gICAgICAgID5cbiAgICAgICAgICB7Y29udGFpbmVyfVxuICAgICAgICA8L0NvbnRhaW5lclJlbmRlcj5cbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKHZpc2libGUgfHwgdGhpcy5fY29tcG9uZW50KSB7XG4gICAgICBwb3J0YWwgPSA8UG9ydGFsIGdldENvbnRhaW5lcj17dGhpcy5nZXRDb250YWluZXJ9Pnt0aGlzLmdldENvbXBvbmVudCgpfTwvUG9ydGFsPjtcbiAgICB9XG5cbiAgICByZXR1cm4gcG9ydGFsO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERpYWxvZ1dyYXA7XG4iXSwidmVyc2lvbiI6M30=