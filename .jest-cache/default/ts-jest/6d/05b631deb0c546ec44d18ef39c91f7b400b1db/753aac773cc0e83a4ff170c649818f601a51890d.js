import React, { Component } from 'react';
import classNames from 'classnames';
import RcInputNumber from '../rc-components/input-number';
import { getPrefixCls } from '../configure';
export default class InputNumber extends Component {
    render() {
        const { className, size, prefixCls: customizePrefixCls, ...others } = this.props;
        const prefixCls = getPrefixCls('input-number', customizePrefixCls);
        const inputNumberClass = classNames({
            [`${prefixCls}-lg`]: size === "large" /* large */,
            [`${prefixCls}-sm`]: size === "small" /* small */,
        }, className);
        return (React.createElement(RcInputNumber, Object.assign({ ref: (c) => (this.inputNumberRef = c), className: inputNumberClass, prefixCls: prefixCls }, others)));
    }
    focus() {
        this.inputNumberRef.focus();
    }
    blur() {
        this.inputNumberRef.blur();
    }
}
InputNumber.displayName = 'InputNumber';
InputNumber.defaultProps = {
    step: 1,
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2h1aWh1YXdrL0RvY3VtZW50cy9vcHQvY2hvZXJvZG9uLXVpL2NvbXBvbmVudHMvaW5wdXQtbnVtYmVyL2luZGV4LnRzeCIsIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBbUMsTUFBTSxPQUFPLENBQUM7QUFDMUUsT0FBTyxVQUFVLE1BQU0sWUFBWSxDQUFDO0FBQ3BDLE9BQU8sYUFBYSxNQUFNLCtCQUErQixDQUFDO0FBRzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxjQUFjLENBQUM7QUF3QjVDLE1BQU0sQ0FBQyxPQUFPLE9BQU8sV0FBWSxTQUFRLFNBQWdDO0lBU3ZFLE1BQU07UUFDSixNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsR0FBRyxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ2pGLE1BQU0sU0FBUyxHQUFHLFlBQVksQ0FBQyxjQUFjLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztRQUNuRSxNQUFNLGdCQUFnQixHQUFHLFVBQVUsQ0FDakM7WUFDRSxDQUFDLEdBQUcsU0FBUyxLQUFLLENBQUMsRUFBRSxJQUFJLHdCQUFlO1lBQ3hDLENBQUMsR0FBRyxTQUFTLEtBQUssQ0FBQyxFQUFFLElBQUksd0JBQWU7U0FDekMsRUFDRCxTQUFTLENBQ1YsQ0FBQztRQUVGLE9BQU8sQ0FDTCxvQkFBQyxhQUFhLGtCQUNaLEdBQUcsRUFBRSxDQUFDLENBQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsQ0FBQyxFQUMxQyxTQUFTLEVBQUUsZ0JBQWdCLEVBQzNCLFNBQVMsRUFBRSxTQUFTLElBQ2hCLE1BQU0sRUFDVixDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVELElBQUk7UUFDRixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzdCLENBQUM7O0FBbkNNLHVCQUFXLEdBQUcsYUFBYSxDQUFDO0FBRTVCLHdCQUFZLEdBQUc7SUFDcEIsSUFBSSxFQUFFLENBQUM7Q0FDUixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9odWlodWF3ay9Eb2N1bWVudHMvb3B0L2Nob2Vyb2Rvbi11aS9jb21wb25lbnRzL2lucHV0LW51bWJlci9pbmRleC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCwgQ1NTUHJvcGVydGllcywgRm9ybUV2ZW50SGFuZGxlciB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFJjSW5wdXROdW1iZXIgZnJvbSAnLi4vcmMtY29tcG9uZW50cy9pbnB1dC1udW1iZXInO1xuaW1wb3J0IHsgQWJzdHJhY3RJbnB1dFByb3BzIH0gZnJvbSAnLi4vaW5wdXQvSW5wdXQnO1xuaW1wb3J0IHsgU2l6ZSB9IGZyb20gJy4uL191dGlsL2VudW0nO1xuaW1wb3J0IHsgZ2V0UHJlZml4Q2xzIH0gZnJvbSAnLi4vY29uZmlndXJlJztcblxuZXhwb3J0IGludGVyZmFjZSBJbnB1dE51bWJlclByb3BzIGV4dGVuZHMgQWJzdHJhY3RJbnB1dFByb3BzIHtcbiAgcHJlZml4Q2xzPzogc3RyaW5nO1xuICBtaW4/OiBudW1iZXI7XG4gIG1heD86IG51bWJlcjtcbiAgdmFsdWU/OiBudW1iZXI7XG4gIHN0ZXA/OiBudW1iZXIgfCBzdHJpbmc7XG4gIGRlZmF1bHRWYWx1ZT86IG51bWJlcjtcbiAgdGFiSW5kZXg/OiBudW1iZXI7XG4gIG9uS2V5RG93bj86IEZvcm1FdmVudEhhbmRsZXI8YW55PjtcbiAgb25DaGFuZ2U/OiAodmFsdWU6IG51bWJlciB8IHN0cmluZyB8IHVuZGVmaW5lZCkgPT4gdm9pZDtcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICBzaXplPzogU2l6ZTtcbiAgZm9ybWF0dGVyPzogKHZhbHVlOiBudW1iZXIgfCBzdHJpbmcgfCB1bmRlZmluZWQpID0+IHN0cmluZztcbiAgcGFyc2VyPzogKGRpc3BsYXlWYWx1ZTogc3RyaW5nIHwgdW5kZWZpbmVkKSA9PiBudW1iZXI7XG4gIHBsYWNlaG9sZGVyPzogc3RyaW5nO1xuICBzdHlsZT86IENTU1Byb3BlcnRpZXM7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgbmFtZT86IHN0cmluZztcbiAgaWQ/OiBzdHJpbmc7XG4gIHByZWNpc2lvbj86IG51bWJlcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5wdXROdW1iZXIgZXh0ZW5kcyBDb21wb25lbnQ8SW5wdXROdW1iZXJQcm9wcywgYW55PiB7XG4gIHN0YXRpYyBkaXNwbGF5TmFtZSA9ICdJbnB1dE51bWJlcic7XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBzdGVwOiAxLFxuICB9O1xuXG4gIHByaXZhdGUgaW5wdXROdW1iZXJSZWY6IGFueTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjbGFzc05hbWUsIHNpemUsIHByZWZpeENsczogY3VzdG9taXplUHJlZml4Q2xzLCAuLi5vdGhlcnMgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgcHJlZml4Q2xzID0gZ2V0UHJlZml4Q2xzKCdpbnB1dC1udW1iZXInLCBjdXN0b21pemVQcmVmaXhDbHMpO1xuICAgIGNvbnN0IGlucHV0TnVtYmVyQ2xhc3MgPSBjbGFzc05hbWVzKFxuICAgICAge1xuICAgICAgICBbYCR7cHJlZml4Q2xzfS1sZ2BdOiBzaXplID09PSBTaXplLmxhcmdlLFxuICAgICAgICBbYCR7cHJlZml4Q2xzfS1zbWBdOiBzaXplID09PSBTaXplLnNtYWxsLFxuICAgICAgfSxcbiAgICAgIGNsYXNzTmFtZSxcbiAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxSY0lucHV0TnVtYmVyXG4gICAgICAgIHJlZj17KGM6IGFueSkgPT4gKHRoaXMuaW5wdXROdW1iZXJSZWYgPSBjKX1cbiAgICAgICAgY2xhc3NOYW1lPXtpbnB1dE51bWJlckNsYXNzfVxuICAgICAgICBwcmVmaXhDbHM9e3ByZWZpeENsc31cbiAgICAgICAgey4uLm90aGVyc31cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxuXG4gIGZvY3VzKCkge1xuICAgIHRoaXMuaW5wdXROdW1iZXJSZWYuZm9jdXMoKTtcbiAgfVxuXG4gIGJsdXIoKSB7XG4gICAgdGhpcy5pbnB1dE51bWJlclJlZi5ibHVyKCk7XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==