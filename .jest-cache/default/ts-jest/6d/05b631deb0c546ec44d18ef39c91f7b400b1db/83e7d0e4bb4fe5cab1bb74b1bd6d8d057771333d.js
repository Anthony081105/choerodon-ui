import React, { Component } from 'react';
import Icon from '../icon';
import Input from '../input';
export default class Search extends Component {
    constructor() {
        super(...arguments);
        this.handleChange = (e) => {
            const { onChange } = this.props;
            if (onChange) {
                onChange(e);
            }
        };
        this.handleClear = e => {
            e.preventDefault();
            const { handleClear } = this.props;
            if (handleClear) {
                handleClear(e);
            }
        };
    }
    render() {
        const { placeholder, value, prefixCls } = this.props;
        const icon = value && value.length > 0 ? (React.createElement("a", { href: "#", className: `${prefixCls}-action`, onClick: this.handleClear },
            React.createElement(Icon, { type: "cross-circle" }))) : (React.createElement("span", { className: `${prefixCls}-action` },
            React.createElement(Icon, { type: "search" })));
        return (React.createElement("div", null,
            React.createElement(Input, { placeholder: placeholder, className: prefixCls, value: value, onChange: this.handleChange }),
            icon));
    }
}
Search.defaultProps = {
    placeholder: '',
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2h1aWh1YXdrL0RvY3VtZW50cy9vcHQvY2hvZXJvZG9uLXVpL2NvbXBvbmVudHMvdHJhbnNmZXIvc2VhcmNoLnRzeCIsIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssRUFBRSxFQUFlLFNBQVMsRUFBZ0MsTUFBTSxPQUFPLENBQUM7QUFDcEYsT0FBTyxJQUFJLE1BQU0sU0FBUyxDQUFDO0FBQzNCLE9BQU8sS0FBSyxNQUFNLFVBQVUsQ0FBQztBQVU3QixNQUFNLENBQUMsT0FBTyxPQUFPLE1BQU8sU0FBUSxTQUFtQztJQUF2RTs7UUFLRSxpQkFBWSxHQUFHLENBQUMsQ0FBZ0MsRUFBRSxFQUFFO1lBQ2xELE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1lBQ2hDLElBQUksUUFBUSxFQUFFO2dCQUNaLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNiO1FBQ0gsQ0FBQyxDQUFDO1FBRUYsZ0JBQVcsR0FBeUMsQ0FBQyxDQUFDLEVBQUU7WUFDdEQsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBRW5CLE1BQU0sRUFBRSxXQUFXLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1lBQ25DLElBQUksV0FBVyxFQUFFO2dCQUNmLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNoQjtRQUNILENBQUMsQ0FBQztJQTJCSixDQUFDO0lBekJDLE1BQU07UUFDSixNQUFNLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3JELE1BQU0sSUFBSSxHQUNSLEtBQUssSUFBSSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDMUIsMkJBQUcsSUFBSSxFQUFDLEdBQUcsRUFBQyxTQUFTLEVBQUUsR0FBRyxTQUFTLFNBQVMsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDckUsb0JBQUMsSUFBSSxJQUFDLElBQUksRUFBQyxjQUFjLEdBQUcsQ0FDMUIsQ0FDTCxDQUFDLENBQUMsQ0FBQyxDQUNGLDhCQUFNLFNBQVMsRUFBRSxHQUFHLFNBQVMsU0FBUztZQUNwQyxvQkFBQyxJQUFJLElBQUMsSUFBSSxFQUFDLFFBQVEsR0FBRyxDQUNqQixDQUNSLENBQUM7UUFFSixPQUFPLENBQ0w7WUFDRSxvQkFBQyxLQUFLLElBQ0osV0FBVyxFQUFFLFdBQVcsRUFDeEIsU0FBUyxFQUFFLFNBQVMsRUFDcEIsS0FBSyxFQUFFLEtBQUssRUFDWixRQUFRLEVBQUUsSUFBSSxDQUFDLFlBQVksR0FDM0I7WUFDRCxJQUFJLENBQ0QsQ0FDUCxDQUFDO0lBQ0osQ0FBQzs7QUE1Q00sbUJBQVksR0FBRztJQUNwQixXQUFXLEVBQUUsRUFBRTtDQUNoQixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9odWlodWF3ay9Eb2N1bWVudHMvb3B0L2Nob2Vyb2Rvbi11aS9jb21wb25lbnRzL3RyYW5zZmVyL3NlYXJjaC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENoYW5nZUV2ZW50LCBDb21wb25lbnQsIEZvcm1FdmVudCwgTW91c2VFdmVudEhhbmRsZXIgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSWNvbiBmcm9tICcuLi9pY29uJztcbmltcG9ydCBJbnB1dCBmcm9tICcuLi9pbnB1dCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHJhbnNmZXJTZWFyY2hQcm9wcyB7XG4gIHByZWZpeENscz86IHN0cmluZztcbiAgcGxhY2Vob2xkZXI/OiBzdHJpbmc7XG4gIG9uQ2hhbmdlPzogKGU6IEZvcm1FdmVudDxhbnk+KSA9PiB2b2lkO1xuICBoYW5kbGVDbGVhcj86IE1vdXNlRXZlbnRIYW5kbGVyPGFueT47XG4gIHZhbHVlPzogYW55O1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZWFyY2ggZXh0ZW5kcyBDb21wb25lbnQ8VHJhbnNmZXJTZWFyY2hQcm9wcywgYW55PiB7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgcGxhY2Vob2xkZXI6ICcnLFxuICB9O1xuXG4gIGhhbmRsZUNoYW5nZSA9IChlOiBDaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKG9uQ2hhbmdlKSB7XG4gICAgICBvbkNoYW5nZShlKTtcbiAgICB9XG4gIH07XG5cbiAgaGFuZGxlQ2xlYXI6IE1vdXNlRXZlbnRIYW5kbGVyPEhUTUxBbmNob3JFbGVtZW50PiA9IGUgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNvbnN0IHsgaGFuZGxlQ2xlYXIgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKGhhbmRsZUNsZWFyKSB7XG4gICAgICBoYW5kbGVDbGVhcihlKTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgcGxhY2Vob2xkZXIsIHZhbHVlLCBwcmVmaXhDbHMgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgaWNvbiA9XG4gICAgICB2YWx1ZSAmJiB2YWx1ZS5sZW5ndGggPiAwID8gKFxuICAgICAgICA8YSBocmVmPVwiI1wiIGNsYXNzTmFtZT17YCR7cHJlZml4Q2xzfS1hY3Rpb25gfSBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsZWFyfT5cbiAgICAgICAgICA8SWNvbiB0eXBlPVwiY3Jvc3MtY2lyY2xlXCIgLz5cbiAgICAgICAgPC9hPlxuICAgICAgKSA6IChcbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtgJHtwcmVmaXhDbHN9LWFjdGlvbmB9PlxuICAgICAgICAgIDxJY29uIHR5cGU9XCJzZWFyY2hcIiAvPlxuICAgICAgICA8L3NwYW4+XG4gICAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxJbnB1dFxuICAgICAgICAgIHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cbiAgICAgICAgICBjbGFzc05hbWU9e3ByZWZpeENsc31cbiAgICAgICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuICAgICAgICAvPlxuICAgICAgICB7aWNvbn1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==