import React from 'react';
import classNames from 'classnames';
import { getPrefixCls } from '../configure';
const Meta = (props) => {
    const { prefixCls: customizePrefixCls, className, avatar, title, description, ...others } = props;
    const prefixCls = getPrefixCls('card', customizePrefixCls);
    const classString = classNames(`${prefixCls}-meta`, className);
    const avatarDom = avatar ? React.createElement("div", { className: `${prefixCls}-meta-avatar` }, avatar) : null;
    const titleDom = title ? React.createElement("div", { className: `${prefixCls}-meta-title` }, title) : null;
    const descriptionDom = description ?
        React.createElement("div", { className: `${prefixCls}-meta-description` }, description) : null;
    const MetaDetail = titleDom || descriptionDom ?
        React.createElement("div", { className: `${prefixCls}-meta-detail` },
            titleDom,
            descriptionDom) : null;
    return (React.createElement("div", Object.assign({}, others, { className: classString }),
        avatarDom,
        MetaDetail));
};
Meta.displayName = 'CardMeta';
export default Meta;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2h1aWh1YXdrL0RvY3VtZW50cy9vcHQvY2hvZXJvZG9uLXVpL2NvbXBvbmVudHMvY2FyZC9NZXRhLnRzeCIsIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQXdDLE1BQU0sT0FBTyxDQUFDO0FBQzdELE9BQU8sVUFBVSxNQUFNLFlBQVksQ0FBQztBQUNwQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBVzVDLE1BQU0sSUFBSSxHQUF1QixDQUFDLEtBQUssRUFBRSxFQUFFO0lBQ3pDLE1BQU0sRUFBRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLEdBQUcsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDO0lBQ2xHLE1BQU0sU0FBUyxHQUFHLFlBQVksQ0FBQyxNQUFNLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztJQUMzRCxNQUFNLFdBQVcsR0FBRyxVQUFVLENBQUMsR0FBRyxTQUFTLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztJQUMvRCxNQUFNLFNBQVMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLDZCQUFLLFNBQVMsRUFBRSxHQUFHLFNBQVMsY0FBYyxJQUFHLE1BQU0sQ0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDN0YsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyw2QkFBSyxTQUFTLEVBQUUsR0FBRyxTQUFTLGFBQWEsSUFBRyxLQUFLLENBQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ3pGLE1BQU0sY0FBYyxHQUFHLFdBQVcsQ0FBQyxDQUFDO1FBQ2xDLDZCQUFLLFNBQVMsRUFBRSxHQUFHLFNBQVMsbUJBQW1CLElBQUcsV0FBVyxDQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUM5RSxNQUFNLFVBQVUsR0FBRyxRQUFRLElBQUksY0FBYyxDQUFDLENBQUM7UUFDN0MsNkJBQUssU0FBUyxFQUFFLEdBQUcsU0FBUyxjQUFjO1lBQ3ZDLFFBQVE7WUFDUixjQUFjLENBQ1gsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ2hCLE9BQU8sQ0FDTCw2Q0FBUyxNQUFNLElBQUUsU0FBUyxFQUFFLFdBQVc7UUFDcEMsU0FBUztRQUNULFVBQVUsQ0FDUCxDQUNQLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztBQUU5QixlQUFlLElBQUksQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvaHVpaHVhd2svRG9jdW1lbnRzL29wdC9jaG9lcm9kb24tdWkvY29tcG9uZW50cy9jYXJkL01ldGEudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDU1NQcm9wZXJ0aWVzLCBSZWFjdE5vZGUsIFNGQyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgZ2V0UHJlZml4Q2xzIH0gZnJvbSAnLi4vY29uZmlndXJlJztcblxuZXhwb3J0IGludGVyZmFjZSBDYXJkTWV0YVByb3BzIHtcbiAgcHJlZml4Q2xzPzogc3RyaW5nO1xuICBzdHlsZT86IENTU1Byb3BlcnRpZXM7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgYXZhdGFyPzogUmVhY3ROb2RlO1xuICB0aXRsZT86IFJlYWN0Tm9kZTtcbiAgZGVzY3JpcHRpb24/OiBSZWFjdE5vZGU7XG59XG5cbmNvbnN0IE1ldGE6IFNGQzxDYXJkTWV0YVByb3BzPiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7IHByZWZpeENsczogY3VzdG9taXplUHJlZml4Q2xzLCBjbGFzc05hbWUsIGF2YXRhciwgdGl0bGUsIGRlc2NyaXB0aW9uLCAuLi5vdGhlcnMgfSA9IHByb3BzO1xuICBjb25zdCBwcmVmaXhDbHMgPSBnZXRQcmVmaXhDbHMoJ2NhcmQnLCBjdXN0b21pemVQcmVmaXhDbHMpO1xuICBjb25zdCBjbGFzc1N0cmluZyA9IGNsYXNzTmFtZXMoYCR7cHJlZml4Q2xzfS1tZXRhYCwgY2xhc3NOYW1lKTtcbiAgY29uc3QgYXZhdGFyRG9tID0gYXZhdGFyID8gPGRpdiBjbGFzc05hbWU9e2Ake3ByZWZpeENsc30tbWV0YS1hdmF0YXJgfT57YXZhdGFyfTwvZGl2PiA6IG51bGw7XG4gIGNvbnN0IHRpdGxlRG9tID0gdGl0bGUgPyA8ZGl2IGNsYXNzTmFtZT17YCR7cHJlZml4Q2xzfS1tZXRhLXRpdGxlYH0+e3RpdGxlfTwvZGl2PiA6IG51bGw7XG4gIGNvbnN0IGRlc2NyaXB0aW9uRG9tID0gZGVzY3JpcHRpb24gP1xuICAgIDxkaXYgY2xhc3NOYW1lPXtgJHtwcmVmaXhDbHN9LW1ldGEtZGVzY3JpcHRpb25gfT57ZGVzY3JpcHRpb259PC9kaXY+IDogbnVsbDtcbiAgY29uc3QgTWV0YURldGFpbCA9IHRpdGxlRG9tIHx8IGRlc2NyaXB0aW9uRG9tID9cbiAgICA8ZGl2IGNsYXNzTmFtZT17YCR7cHJlZml4Q2xzfS1tZXRhLWRldGFpbGB9PlxuICAgICAge3RpdGxlRG9tfVxuICAgICAge2Rlc2NyaXB0aW9uRG9tfVxuICAgIDwvZGl2PiA6IG51bGw7XG4gIHJldHVybiAoXG4gICAgPGRpdiB7Li4ub3RoZXJzfSBjbGFzc05hbWU9e2NsYXNzU3RyaW5nfT5cbiAgICAgIHthdmF0YXJEb219XG4gICAgICB7TWV0YURldGFpbH1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbk1ldGEuZGlzcGxheU5hbWUgPSAnQ2FyZE1ldGEnO1xuXG5leHBvcnQgZGVmYXVsdCBNZXRhO1xuIl0sInZlcnNpb24iOjN9