import isEmpty from '../../_util/isEmpty';
import ValidationResult from '../ValidationResult';
import { $l } from '../../locale-context';
function generatePattern(pattern) {
    if (pattern instanceof RegExp) {
        return pattern;
    }
    const begin = pattern.startsWith('^') ? '' : '^';
    const end = pattern.endsWith('$') ? '' : '$';
    return new RegExp(`${begin}${pattern}${end}`);
}
export default function patternMismatch(value, props) {
    const { pattern, defaultValidationMessages } = props;
    if (!isEmpty(value) && !!pattern && !generatePattern(pattern).test(value)) {
        const ruleName = 'patternMismatch';
        const { [ruleName]: validationMessage = $l('Validator', 'pattern_mismatch'), } = defaultValidationMessages;
        return new ValidationResult({
            validationMessage,
            value,
            ruleName,
        });
    }
    return true;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2h1aWh1YXdrL0RvY3VtZW50cy9vcHQvY2hvZXJvZG9uLXVpL2NvbXBvbmVudHMtcHJvL3ZhbGlkYXRvci9ydWxlcy9wYXR0ZXJuTWlzbWF0Y2gudHN4IiwibWFwcGluZ3MiOiJBQUFBLE9BQU8sT0FBTyxNQUFNLHFCQUFxQixDQUFDO0FBQzFDLE9BQU8sZ0JBQWdCLE1BQU0scUJBQXFCLENBQUM7QUFDbkQsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRzFDLFNBQVMsZUFBZSxDQUFDLE9BQXdCO0lBQy9DLElBQUksT0FBTyxZQUFZLE1BQU0sRUFBRTtRQUM3QixPQUFPLE9BQU8sQ0FBQztLQUNoQjtJQUNELE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQ2pELE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQzdDLE9BQU8sSUFBSSxNQUFNLENBQUMsR0FBRyxLQUFLLEdBQUcsT0FBTyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUM7QUFDaEQsQ0FBQztBQUVELE1BQU0sQ0FBQyxPQUFPLFVBQVUsZUFBZSxDQUFDLEtBQVUsRUFBRSxLQUFxQjtJQUN2RSxNQUFNLEVBQUUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLEdBQUcsS0FBSyxDQUFDO0lBQ3JELElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDekUsTUFBTSxRQUFRLEdBQUcsaUJBQWlCLENBQUM7UUFDbkMsTUFBTSxFQUNKLENBQUMsUUFBUSxDQUFDLEVBQUUsaUJBQWlCLEdBQUcsRUFBRSxDQUFDLFdBQVcsRUFBRSxrQkFBa0IsQ0FBQyxHQUNwRSxHQUFHLHlCQUF5QixDQUFDO1FBQzlCLE9BQU8sSUFBSSxnQkFBZ0IsQ0FBQztZQUMxQixpQkFBaUI7WUFDakIsS0FBSztZQUNMLFFBQVE7U0FDVCxDQUFDLENBQUM7S0FDSjtJQUNELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvaHVpaHVhd2svRG9jdW1lbnRzL29wdC9jaG9lcm9kb24tdWkvY29tcG9uZW50cy1wcm8vdmFsaWRhdG9yL3J1bGVzL3BhdHRlcm5NaXNtYXRjaC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGlzRW1wdHkgZnJvbSAnLi4vLi4vX3V0aWwvaXNFbXB0eSc7XG5pbXBvcnQgVmFsaWRhdGlvblJlc3VsdCBmcm9tICcuLi9WYWxpZGF0aW9uUmVzdWx0JztcbmltcG9ydCB7ICRsIH0gZnJvbSAnLi4vLi4vbG9jYWxlLWNvbnRleHQnO1xuaW1wb3J0IHsgbWV0aG9kUmV0dXJuLCBWYWxpZGF0b3JQcm9wcyB9IGZyb20gJy4nO1xuXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdHRlcm4ocGF0dGVybjogc3RyaW5nIHwgUmVnRXhwKTogUmVnRXhwIHtcbiAgaWYgKHBhdHRlcm4gaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcGF0dGVybjtcbiAgfVxuICBjb25zdCBiZWdpbiA9IHBhdHRlcm4uc3RhcnRzV2l0aCgnXicpID8gJycgOiAnXic7XG4gIGNvbnN0IGVuZCA9IHBhdHRlcm4uZW5kc1dpdGgoJyQnKSA/ICcnIDogJyQnO1xuICByZXR1cm4gbmV3IFJlZ0V4cChgJHtiZWdpbn0ke3BhdHRlcm59JHtlbmR9YCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhdHRlcm5NaXNtYXRjaCh2YWx1ZTogYW55LCBwcm9wczogVmFsaWRhdG9yUHJvcHMpOiBtZXRob2RSZXR1cm4ge1xuICBjb25zdCB7IHBhdHRlcm4sIGRlZmF1bHRWYWxpZGF0aW9uTWVzc2FnZXMgfSA9IHByb3BzO1xuICBpZiAoIWlzRW1wdHkodmFsdWUpICYmICEhcGF0dGVybiAmJiAhZ2VuZXJhdGVQYXR0ZXJuKHBhdHRlcm4pLnRlc3QodmFsdWUpKSB7XG4gICAgY29uc3QgcnVsZU5hbWUgPSAncGF0dGVybk1pc21hdGNoJztcbiAgICBjb25zdCB7XG4gICAgICBbcnVsZU5hbWVdOiB2YWxpZGF0aW9uTWVzc2FnZSA9ICRsKCdWYWxpZGF0b3InLCAncGF0dGVybl9taXNtYXRjaCcpLFxuICAgIH0gPSBkZWZhdWx0VmFsaWRhdGlvbk1lc3NhZ2VzO1xuICAgIHJldHVybiBuZXcgVmFsaWRhdGlvblJlc3VsdCh7XG4gICAgICB2YWxpZGF0aW9uTWVzc2FnZSxcbiAgICAgIHZhbHVlLFxuICAgICAgcnVsZU5hbWUsXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG4iXSwidmVyc2lvbiI6M30=