const QuillDeltaToHtmlConverter = require('quill-delta-to-html');
export function text2Delta(description) {
    if (!description) {
        return undefined;
    }
    // eslint-disable-next-line no-restricted-globals
    if (!isNaN(description)) {
        return String(description);
    }
    let temp = description;
    try {
        temp = JSON.parse(description.replace(/\\n/g, '\\n')
            .replace(/\\'/g, '\\\'')
            .replace(/\\"/g, '\\"')
            .replace(/\\&/g, '\\&')
            .replace(/\\r/g, '\\r')
            .replace(/\\t/g, '\\t')
            .replace(/\\b/g, '\\b')
            .replace(/\\f/g, '\\f'));
    }
    catch (error) {
        temp = description;
    }
    // return temp;
    return temp || '';
}
/**
 * 将quill特有的文本结构转为html
 * @param {*} description
 */
export function delta2Html(description) {
    const delta = text2Delta(description);
    const converter = new QuillDeltaToHtmlConverter(delta, {});
    const text = converter.convert();
    if (text.substring(0, 3) === '<p>') {
        return text.substring(3);
    }
    return text;
}
/**
 * 生成指定长度的随机字符串
 * @param len 字符串长度
 * @returns {string}
 */
export function randomString(len = 32) {
    let code = '';
    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    const maxPos = chars.length;
    for (let i = 0; i < len; i += 1) {
        code += chars.charAt(Math.floor(Math.random() * (maxPos + 1)));
    }
    return code;
}
/**
 * randomWord 产生任意长度随机字母数字组合
 * @param randomFlag 是否任意长度 min-任意长度最小位[固定位数] max-任意长度最大位
 * @param min
 * @param max
 * @returns {string}
 */
export function randomWord(randomFlag, min, max) {
    let str = '';
    let range = min;
    const arr = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
    // 随机产生
    if (randomFlag) {
        range = Math.round(Math.random() * (max - min)) + min;
    }
    for (let i = 0; i < range; i += 1) {
        const pos = Math.round(Math.random() * (arr.length - 1));
        str += arr[pos];
    }
    return str;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2h1aWh1YXdrL0RvY3VtZW50cy9vcHQvY2hvZXJvZG9uLXVpL2NvbXBvbmVudHMtcHJvL3JpY2gtdGV4dC91dGlscy50c3giLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSx5QkFBeUIsR0FBRyxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUVqRSxNQUFNLFVBQVUsVUFBVSxDQUFDLFdBQVc7SUFDcEMsSUFBSSxDQUFDLFdBQVcsRUFBRTtRQUNoQixPQUFPLFNBQVMsQ0FBQztLQUNsQjtJQUNELGlEQUFpRDtJQUNqRCxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxFQUFFO1FBQ3ZCLE9BQU8sTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0tBQzVCO0lBQ0QsSUFBSSxJQUFJLEdBQUcsV0FBVyxDQUFDO0lBQ3ZCLElBQUk7UUFDRixJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUM7YUFDakQsT0FBTyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUM7YUFDdkIsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUM7YUFDdEIsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUM7YUFDdEIsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUM7YUFDdEIsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUM7YUFDdEIsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUM7YUFDdEIsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0tBQzVCO0lBQUMsT0FBTyxLQUFLLEVBQUU7UUFDZCxJQUFJLEdBQUcsV0FBVyxDQUFDO0tBQ3BCO0lBQ0QsZUFBZTtJQUNmLE9BQU8sSUFBSSxJQUFJLEVBQUUsQ0FBQztBQUNwQixDQUFDO0FBRUQ7OztHQUdHO0FBQ0gsTUFBTSxVQUFVLFVBQVUsQ0FBQyxXQUFXO0lBQ3BDLE1BQU0sS0FBSyxHQUFHLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN0QyxNQUFNLFNBQVMsR0FBRyxJQUFJLHlCQUF5QixDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMzRCxNQUFNLElBQUksR0FBRyxTQUFTLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDakMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxLQUFLLEVBQUU7UUFDbEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzFCO0lBQ0QsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQ7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxZQUFZLENBQUMsR0FBRyxHQUFHLEVBQUU7SUFDbkMsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDO0lBQ2QsTUFBTSxLQUFLLEdBQUcsZ0VBQWdFLENBQUM7SUFDL0UsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUM1QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDL0IsSUFBSSxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ2hFO0lBQ0QsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQ7Ozs7OztHQU1HO0FBQ0gsTUFBTSxVQUFVLFVBQVUsQ0FBQyxVQUFVLEVBQUUsR0FBRyxFQUFFLEdBQUc7SUFDN0MsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBQ2IsSUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDO0lBQ2hCLE1BQU0sR0FBRyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFFalIsT0FBTztJQUNQLElBQUksVUFBVSxFQUFFO1FBQ2QsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO0tBQ3ZEO0lBQ0QsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ2pDLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3pELEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDakI7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2h1aWh1YXdrL0RvY3VtZW50cy9vcHQvY2hvZXJvZG9uLXVpL2NvbXBvbmVudHMtcHJvL3JpY2gtdGV4dC91dGlscy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUXVpbGxEZWx0YVRvSHRtbENvbnZlcnRlciA9IHJlcXVpcmUoJ3F1aWxsLWRlbHRhLXRvLWh0bWwnKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHRleHQyRGVsdGEoZGVzY3JpcHRpb24pIHtcbiAgaWYgKCFkZXNjcmlwdGlvbikge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuICBpZiAoIWlzTmFOKGRlc2NyaXB0aW9uKSkge1xuICAgIHJldHVybiBTdHJpbmcoZGVzY3JpcHRpb24pO1xuICB9XG4gIGxldCB0ZW1wID0gZGVzY3JpcHRpb247XG4gIHRyeSB7XG4gICAgdGVtcCA9IEpTT04ucGFyc2UoZGVzY3JpcHRpb24ucmVwbGFjZSgvXFxcXG4vZywgJ1xcXFxuJylcbiAgICAgIC5yZXBsYWNlKC9cXFxcJy9nLCAnXFxcXFxcJycpXG4gICAgICAucmVwbGFjZSgvXFxcXFwiL2csICdcXFxcXCInKVxuICAgICAgLnJlcGxhY2UoL1xcXFwmL2csICdcXFxcJicpXG4gICAgICAucmVwbGFjZSgvXFxcXHIvZywgJ1xcXFxyJylcbiAgICAgIC5yZXBsYWNlKC9cXFxcdC9nLCAnXFxcXHQnKVxuICAgICAgLnJlcGxhY2UoL1xcXFxiL2csICdcXFxcYicpXG4gICAgICAucmVwbGFjZSgvXFxcXGYvZywgJ1xcXFxmJykpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRlbXAgPSBkZXNjcmlwdGlvbjtcbiAgfVxuICAvLyByZXR1cm4gdGVtcDtcbiAgcmV0dXJuIHRlbXAgfHwgJyc7XG59XG5cbi8qKlxuICog5bCGcXVpbGznibnmnInnmoTmlofmnKznu5PmnoTovazkuLpodG1sXG4gKiBAcGFyYW0geyp9IGRlc2NyaXB0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWx0YTJIdG1sKGRlc2NyaXB0aW9uKSB7XG4gIGNvbnN0IGRlbHRhID0gdGV4dDJEZWx0YShkZXNjcmlwdGlvbik7XG4gIGNvbnN0IGNvbnZlcnRlciA9IG5ldyBRdWlsbERlbHRhVG9IdG1sQ29udmVydGVyKGRlbHRhLCB7fSk7XG4gIGNvbnN0IHRleHQgPSBjb252ZXJ0ZXIuY29udmVydCgpO1xuICBpZiAodGV4dC5zdWJzdHJpbmcoMCwgMykgPT09ICc8cD4nKSB7XG4gICAgcmV0dXJuIHRleHQuc3Vic3RyaW5nKDMpO1xuICB9XG4gIHJldHVybiB0ZXh0O1xufVxuXG4vKipcbiAqIOeUn+aIkOaMh+WumumVv+W6pueahOmaj+acuuWtl+espuS4slxuICogQHBhcmFtIGxlbiDlrZfnrKbkuLLplb/luqZcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByYW5kb21TdHJpbmcobGVuID0gMzIpIHtcbiAgbGV0IGNvZGUgPSAnJztcbiAgY29uc3QgY2hhcnMgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODknO1xuICBjb25zdCBtYXhQb3MgPSBjaGFycy5sZW5ndGg7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICBjb2RlICs9IGNoYXJzLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4UG9zICsgMSkpKTtcbiAgfVxuICByZXR1cm4gY29kZTtcbn1cblxuLyoqXG4gKiByYW5kb21Xb3JkIOS6p+eUn+S7u+aEj+mVv+W6pumaj+acuuWtl+avjeaVsOWtl+e7hOWQiFxuICogQHBhcmFtIHJhbmRvbUZsYWcg5piv5ZCm5Lu75oSP6ZW/5bqmIG1pbi3ku7vmhI/plb/luqbmnIDlsI/kvY1b5Zu65a6a5L2N5pWwXSBtYXgt5Lu75oSP6ZW/5bqm5pyA5aSn5L2NXG4gKiBAcGFyYW0gbWluXG4gKiBAcGFyYW0gbWF4XG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmFuZG9tV29yZChyYW5kb21GbGFnLCBtaW4sIG1heCkge1xuICBsZXQgc3RyID0gJyc7XG4gIGxldCByYW5nZSA9IG1pbjtcbiAgY29uc3QgYXJyID0gWydhJywgJ2InLCAnYycsICdkJywgJ2UnLCAnZicsICdnJywgJ2gnLCAnaScsICdqJywgJ2snLCAnbCcsICdtJywgJ24nLCAnbycsICdwJywgJ3EnLCAncicsICdzJywgJ3QnLCAndScsICd2JywgJ3cnLCAneCcsICd5JywgJ3onLCAnQScsICdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ107XG5cbiAgLy8g6ZqP5py65Lqn55SfXG4gIGlmIChyYW5kb21GbGFnKSB7XG4gICAgcmFuZ2UgPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSkgKyBtaW47XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByYW5nZTsgaSArPSAxKSB7XG4gICAgY29uc3QgcG9zID0gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogKGFyci5sZW5ndGggLSAxKSk7XG4gICAgc3RyICs9IGFycltwb3NdO1xuICB9XG4gIHJldHVybiBzdHI7XG59XG4iXSwidmVyc2lvbiI6M30=