import { __decorate } from "tslib";
import C7nSkeleton from 'choerodon-ui/lib/skeleton';
import { observer } from 'mobx-react';
import React from 'react';
import omit from 'lodash/omit';
import DataSetComponent from '../data-set/DataSetComponent';
import SkeletonButton from './Button';
import SkeletonInput from './Input';
import Avatar from './Avatar';
let Skeleton = class Skeleton extends DataSetComponent {
    getOtherProps() {
        const otherProps = omit(super.getOtherProps(), [
            'skeletonTitile',
        ]);
        return otherProps;
    }
    render() {
        const { dataSet, skeletonTitile, ...otherProps } = this.props;
        const props = {
            title: skeletonTitile,
        };
        const omitProps = omit(otherProps, 'title');
        if (dataSet) {
            // @ts-ignore
            props.loading = dataSet.status !== "ready" /* ready */;
        }
        return React.createElement(C7nSkeleton, Object.assign({}, omitProps, props));
    }
};
Skeleton.displayName = 'Skeletions';
Skeleton.Button = SkeletonButton;
Skeleton.Input = SkeletonInput;
Skeleton.Avatar = Avatar;
Skeleton.defaultProps = {
    skeletonTitile: true,
};
Skeleton = __decorate([
    observer
], Skeleton);
export default Skeleton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2h1aWh1YXdrL0RvY3VtZW50cy9vcHQvY2hvZXJvZG9uLXVpL2NvbXBvbmVudHMtcHJvL3NrZWxldG9uL1NrZWxldG9uLnRzeCIsIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxXQUErQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3hGLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQzFCLE9BQU8sSUFBSSxNQUFNLGFBQWEsQ0FBQztBQUUvQixPQUFPLGdCQUEwQyxNQUFNLDhCQUE4QixDQUFDO0FBQ3RGLE9BQU8sY0FBYyxNQUFNLFVBQVUsQ0FBQTtBQUNyQyxPQUFPLGFBQWEsTUFBTSxTQUFTLENBQUM7QUFDcEMsT0FBTyxNQUFNLE1BQU0sVUFBVSxDQUFDO0FBUTlCLElBQXFCLFFBQVEsR0FBN0IsTUFBcUIsUUFBUyxTQUFRLGdCQUErQjtJQWFqRSxhQUFhO1FBQ1QsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUUsRUFBRTtZQUM3QyxnQkFBZ0I7U0FDakIsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxVQUFVLENBQUM7SUFDdEIsQ0FBQztJQUVELE1BQU07UUFDRixNQUFNLEVBQUUsT0FBTyxFQUFDLGNBQWMsRUFBRSxHQUFHLFVBQVUsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDN0QsTUFBTSxLQUFLLEdBQW9CO1lBQzNCLEtBQUssRUFBQyxjQUFjO1NBQ3ZCLENBQUE7UUFDRCxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFDLE9BQU8sQ0FBQyxDQUFBO1FBRTFDLElBQUksT0FBTyxFQUFFO1lBQ1QsYUFBYTtZQUNiLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE1BQU0sd0JBQXdCLENBQUM7U0FDMUQ7UUFFRCxPQUFPLG9CQUFDLFdBQVcsb0JBQUssU0FBUyxFQUFNLEtBQUssRUFBSSxDQUFDO0lBQ3JELENBQUM7Q0FDSixDQUFBO0FBakNVLG9CQUFXLEdBQUcsWUFBWSxDQUFBO0FBRTFCLGVBQU0sR0FBRyxjQUFjLENBQUE7QUFFdkIsY0FBSyxHQUFHLGFBQWEsQ0FBQTtBQUVyQixlQUFNLEdBQUcsTUFBTSxDQUFBO0FBRWYscUJBQVksR0FBMEI7SUFDekMsY0FBYyxFQUFDLElBQUk7Q0FDdEIsQ0FBQTtBQVhnQixRQUFRO0lBRDVCLFFBQVE7R0FDWSxRQUFRLENBa0M1QjtlQWxDb0IsUUFBUSIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvaHVpaHVhd2svRG9jdW1lbnRzL29wdC9jaG9lcm9kb24tdWkvY29tcG9uZW50cy1wcm8vc2tlbGV0b24vU2tlbGV0b24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDN25Ta2VsZXRvbix7U2tlbGV0b25Qcm9wcyBhcyBDN25Ta2VsZXRvblByb3BzfSBmcm9tICdjaG9lcm9kb24tdWkvbGliL3NrZWxldG9uJztcbmltcG9ydCB7IG9ic2VydmVyIH0gZnJvbSAnbW9ieC1yZWFjdCc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IG9taXQgZnJvbSAnbG9kYXNoL29taXQnO1xuaW1wb3J0IHsgRGF0YVNldFN0YXR1cyB9IGZyb20gJy4uL2RhdGEtc2V0L2VudW0nO1xuaW1wb3J0IERhdGFTZXRDb21wb25lbnQseyBEYXRhU2V0Q29tcG9uZW50UHJvcHMgfSBmcm9tICcuLi9kYXRhLXNldC9EYXRhU2V0Q29tcG9uZW50JztcbmltcG9ydCBTa2VsZXRvbkJ1dHRvbiBmcm9tICcuL0J1dHRvbidcbmltcG9ydCBTa2VsZXRvbklucHV0IGZyb20gJy4vSW5wdXQnO1xuaW1wb3J0IEF2YXRhciBmcm9tICcuL0F2YXRhcic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2tlbGV0b25Qcm9wcyBleHRlbmRzIERhdGFTZXRDb21wb25lbnRQcm9wcyxPbWl0PEM3blNrZWxldG9uUHJvcHMsJ3RpdGxlJz57XG4gICAgc2tlbGV0b25UaXRpbGU/OmJvb2xlYW4sXG59XG5cblxuQG9ic2VydmVyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTa2VsZXRvbiBleHRlbmRzIERhdGFTZXRDb21wb25lbnQ8U2tlbGV0b25Qcm9wcz57XG4gICAgc3RhdGljIGRpc3BsYXlOYW1lID0gJ1NrZWxldGlvbnMnXG5cbiAgICBzdGF0aWMgQnV0dG9uID0gU2tlbGV0b25CdXR0b25cblxuICAgIHN0YXRpYyBJbnB1dCA9IFNrZWxldG9uSW5wdXRcblxuICAgIHN0YXRpYyBBdmF0YXIgPSBBdmF0YXJcblxuICAgIHN0YXRpYyBkZWZhdWx0UHJvcHM6UGFydGlhbDxTa2VsZXRvblByb3BzPiA9IHtcbiAgICAgICAgc2tlbGV0b25UaXRpbGU6dHJ1ZSxcbiAgICB9XG5cbiAgICBnZXRPdGhlclByb3BzKCkge1xuICAgICAgICBjb25zdCBvdGhlclByb3BzID0gb21pdChzdXBlci5nZXRPdGhlclByb3BzKCksIFtcbiAgICAgICAgICAnc2tlbGV0b25UaXRpbGUnLFxuICAgICAgICBdKTtcbiAgICAgICAgcmV0dXJuIG90aGVyUHJvcHM7XG4gICAgfVxuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIGNvbnN0IHsgZGF0YVNldCxza2VsZXRvblRpdGlsZSwgLi4ub3RoZXJQcm9wcyB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgcHJvcHM6QzduU2tlbGV0b25Qcm9wcyA9IHtcbiAgICAgICAgICAgIHRpdGxlOnNrZWxldG9uVGl0aWxlLFxuICAgICAgICB9ICBcbiAgICAgICAgY29uc3Qgb21pdFByb3BzID0gb21pdChvdGhlclByb3BzLCd0aXRsZScpXG4gICAgICAgIFxuICAgICAgICBpZiAoZGF0YVNldCkge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgcHJvcHMubG9hZGluZyA9IGRhdGFTZXQuc3RhdHVzICE9PSBEYXRhU2V0U3RhdHVzLnJlYWR5O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gPEM3blNrZWxldG9uIHsuLi5vbWl0UHJvcHN9IHsuLi5wcm9wc30gLz47XG4gICAgfVxufVxuXG5cblxuIl0sInZlcnNpb24iOjN9